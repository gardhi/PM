; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.114 

	TTL	C:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwrButton.cpp
	THUMB

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.data|, DATA
|g_dwPwrBtnSysIntr| DCD 0xffffffff
	EXPORT	|?Deinit@@YAHXZ|			; Deinit
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwrbutton.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Deinit@@YAHXZ| PROC			; Deinit

; 174  :     // Power button driver is never unloaded.  This entry point is only defined
; 175  :     // to meet minum requirements of the stream interface.
; 176  :     return TRUE;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 177  : }

  00002	4770		 bx          lr

			 ENDP  ; |?Deinit@@YAHXZ|, Deinit

	EXPORT	|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|__security_push_cookie|
	IMPORT	|__security_pop_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|WaitForSingleObject|
	IMPORT	|GetTickCount|
	IMPORT	|GetSystemPowerState|
	IMPORT	|Sleep|
	IMPORT	|DDKGpioReadDataPin|
	IMPORT	|PmSetSystemPowerState_I|
	IMPORT	|DDKGpioClearIntrPin|
	IMPORT	|InterruptDone|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?PwrBtnThread@@YAKPAX@Z| DCD imagerel |$LN21@PwrBtnThre|
	DCD	imagerel |$unwind2$?PwrBtnThread@@YAKPAX@Z|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?PwrBtnThread@@YAKPAX@Z| DCD 0x4430005e
	DCD	0x1e885e8
	DCD	0xfff0a8fc
	DCD	0xf0a801e8
	DCD	0xff
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffe5

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| DCB "s", 0x0
	DCB	"u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@| DCB "o", 0x0, "f", 0x0, "f", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwrbutton.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?PwrBtnThread@@YAKPAX@Z| PROC		; PwrBtnThread

; 196  : {

  00000		 |$LN21@PwrBtnThre|
  00000	e92d 48f0	 push        {r4-r7,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d14	 subw        sp,sp,#0x214
  00010		 |$M19|

; 197  :     UINT32 msec, start;
; 198  :     UINT32 pinVal;
; 199  :     WCHAR szState[MAX_PATH];
; 200  :     DWORD dwStateFlags = 0;
; 201  : 
; 202  :     // Remove-W4: Warning C4100 workaround
; 203  :     UNREFERENCED_PARAMETER(lpParam);
; 204  : 
; 205  :     // IST loop for servicing power button interrupts
; 206  :     while (WaitForSingleObject(g_hPwrBtnEvent, INFINITE) != WAIT_FAILED)

  00010	4e2d		 ldr         r6,|$LN27@PwrBtnThre| ; =|g_hPwrBtnEvent|
  00012	2300		 movs        r3,#0
  00014	43d9		 mvns        r1,r3
  00016	6830		 ldr         r0,[r6]
  00018	9301		 str         r3,[sp,#4]
  0001a	f000 f800	 bl          WaitForSingleObject
  0001e	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00022	d044		 beq         |$LN9@PwrBtnThre|
  00024	4f27		 ldr         r7,|$LN26@PwrBtnThre| ; =|g_dwPwrBtnSysIntr|
  00026		 |$LL10@PwrBtnThre|

; 207  :     {
; 208  :         // Capture start time of button press
; 209  :         start = GetTickCount();

  00026	f000 f800	 bl          GetTickCount
  0002a	4605		 mov         r5,r0

; 210  : 
; 211  :         // Query current system power state to determine if we are resuming
; 212  :         // from suspend
; 213  :         GetSystemPowerState(szState, MAX_PATH, &dwStateFlags);

  0002c	a802		 add         r0,sp,#8
  0002e	aa01		 add         r2,sp,#4
  00030	f44f 7182	 mov         r1,#0x104
  00034	f000 f800	 bl          GetSystemPowerState

; 214  : 
; 215  :         // Avoid requesting power state transition if the system is resuming from
; 216  :         // suspend.  In such cases the POWER_STATE_SUSPEND flag will be set.
; 217  :         if (!(POWER_STATE(dwStateFlags) & POWER_STATE_SUSPEND))

  00038	9b01		 ldr         r3,[sp,#4]
  0003a	f413 1f00	 tst         r3,#0x200000
  0003e	d123		 bne         |$LN1@PwrBtnThre|

; 218  :         {
; 219  :             // Keep track of how long button is pressed
; 220  :             msec = 0;

  00040	2400		 movs        r4,#0
  00042		 |$LL7@PwrBtnThre|

; 221  : 
; 222  :             // Loop to sample power button pin
; 223  :             do
; 224  :             {
; 225  :                 // Sleep between samples
; 226  :                 Sleep(BSP_PWRBTN_DEBOUNCE_SAMPLE_MSEC);

  00042	200a		 movs        r0,#0xA
  00044	f000 f800	 bl          Sleep

; 227  : 
; 228  :                 // Read current power button pin
; 229  :                 DDKGpioReadDataPin(BSP_PWRBTN_GPIO_PORT, BSP_PWRBTN_GPIO_PIN, &pinVal);

  00048	466a		 mov         r2,sp
  0004a	211d		 movs        r1,#0x1D
  0004c	2002		 movs        r0,#2
  0004e	f000 f800	 bl          DDKGpioReadDataPin

; 230  : 
; 231  :                 // Check if button is still pressed
; 232  :                 if (pinVal)

  00052	9b00		 ldr         r3,[sp]
  00054	b13b		 cbz         r3,|$LN3@PwrBtnThre|

; 233  :                 {
; 234  :                     // Update how long button is pressed
; 235  :                     msec = GetTickCount() - start;

  00056	f000 f800	 bl          GetTickCount

; 236  :                 }
; 237  : 
; 238  :             // Loop terminates if button is released or time to power off
; 239  :             // system is reached
; 240  :             } while (pinVal && (msec < BSP_PWRBTN_DEBOUNCE_OFF_MSEC));

  0005a	9b00		 ldr         r3,[sp]
  0005c	1b44		 subs        r4,r0,r5
  0005e	b113		 cbz         r3,|$LN3@PwrBtnThre|
  00060	f5b4 6ffa	 cmp         r4,#0x7D0
  00064	d3ed		 bcc         |$LL7@PwrBtnThre|
  00066		 |$LN3@PwrBtnThre|

; 241  : 
; 242  :              /// Edits by Gard----------------------------
; 243  :              /// I am note sure if this is the right way to pass the strings.
; 244  :             // Check if button press indicates user wants to power off the
; 245  :             // system           
; 246  :             if (msec >= BSP_PWRBTN_DEBOUNCE_OFF_MSEC)

  00066	f5b4 6ffa	 cmp         r4,#0x7D0
  0006a	d305		 bcc         |$LN2@PwrBtnThre|

; 247  :             {
; 248  :                 PmSetSystemPowerState_I(STRING_OFF,0,0,TRUE);

  0006c	4814		 ldr         r0,|$LN25@PwrBtnThre| ; =|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@|
  0006e	2301		 movs        r3,#1
  00070	2200		 movs        r2,#0
  00072	2100		 movs        r1,#0
  00074	f000 f800	 bl          PmSetSystemPowerState_I
  00078		 |$LN2@PwrBtnThre|

; 249  :             }
; 250  : 
; 251  : 
; 252  :             // Check if button press indicates user wants to suspend the
; 253  :             // system
; 254  :             if (msec >= BSP_PWRBTN_DEBOUNCE_SUSPEND_MSEC)

  00078	2c64		 cmp         r4,#0x64
  0007a	d305		 bcc         |$LN1@PwrBtnThre|

; 255  :             {
; 256  :                 PmSetSystemPowerState_I(STRING_SUSPEND,0,0,TRUE);

  0007c	480f		 ldr         r0,|$LN24@PwrBtnThre| ; =|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  0007e	2301		 movs        r3,#1
  00080	2200		 movs        r2,#0
  00082	2100		 movs        r1,#0
  00084	f000 f800	 bl          PmSetSystemPowerState_I
  00088		 |$LN1@PwrBtnThre|

; 257  :             }
; 258  :             /// end edits by Gard------------------------
; 259  :         }
; 260  : 
; 261  : 
; 262  :         // After handling the button press, delay before servicing new button
; 263  :         // interrupts to prevent from bouncing into suspend again
; 264  :         Sleep(BSP_PWRBTN_DEBOUNCE_IGNORE_MSEC);

  00088	f44f 70fa	 mov         r0,#0x1F4
  0008c	f000 f800	 bl          Sleep

; 265  : 
; 266  :         // Clear and reenable button interrupts
; 267  :         DDKGpioClearIntrPin(BSP_PWRBTN_GPIO_PORT, BSP_PWRBTN_GPIO_PIN);

  00090	211d		 movs        r1,#0x1D
  00092	2002		 movs        r0,#2
  00094	f000 f800	 bl          DDKGpioClearIntrPin

; 268  :         InterruptDone(g_dwPwrBtnSysIntr);

  00098	6838		 ldr         r0,[r7]
  0009a	f000 f800	 bl          InterruptDone
  0009e	6830		 ldr         r0,[r6]
  000a0	f06f 0100	 mvn         r1,#0
  000a4	f000 f800	 bl          WaitForSingleObject
  000a8	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  000ac	d1bb		 bne         |$LL10@PwrBtnThre|
  000ae		 |$LN9@PwrBtnThre|

; 269  :     }
; 270  : 
; 271  : 
; 272  :     return 0;

  000ae	2000		 movs        r0,#0
  000b0		 |$M22|

; 273  : }

  000b0	f20d 2d14	 addw        sp,sp,#0x214
  000b4	f000 f800	 bl          __security_pop_cookie
  000b8	e8bd 88f0	 pop         {r4-r7,r11,pc}
  000bc		 |$LN23@PwrBtnThre|
  000bc		 |$LN24@PwrBtnThre|
  000bc	0000 0000	 DCD         |??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  000c0		 |$LN25@PwrBtnThre|
  000c0	0000 0000	 DCD         |??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@|
  000c4		 |$LN26@PwrBtnThre|
  000c4	0000 0000	 DCD         |g_dwPwrBtnSysIntr|
  000c8		 |$LN27@PwrBtnThre|
  000c8	0000 0000	 DCD         |g_hPwrBtnEvent|
  000cc		 |$M20|

			 ENDP  ; |?PwrBtnThread@@YAKPAX@Z|, PwrBtnThread

	EXPORT	|??_C@_1EG@CHFCBFON@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAI?$AAS?$AAT?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_19HABNGADD@?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@CBMFLOL@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAi?$AAr?$AAq?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAs?$AAy?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@MFNLECAP@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAs?$AAy?$AAs?$AA?5?$AAi?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@BIOKHGAH@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAa?$AAs?$AA?5?$AAw?$AAa?$AAk?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@BFMKAFKP@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAb?$AAu@| [ DATA ] ; `string'
	EXPORT	|?Init@@YAHXZ|				; Init
	IMPORT	|DDKGpioSetConfig|
	IMPORT	|CreateEventW|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|KernelIoControl|
	IMPORT	|InterruptInitialize|
	IMPORT	|CreateThread|
	IMPORT	|CeSetThreadPriority|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?Init@@YAHXZ| DCD imagerel |$LN29@Init|
	DCD	0xfdf301c1

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@BFMKAFKP@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAb?$AAu@| DCB "C"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "T"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "t", 0x0, "t", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@BIOKHGAH@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAa?$AAs?$AA?5?$AAw?$AAa?$AAk?$AAe@| DCB "%"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "a", 0x0, "s", 0x0, " ", 0x0, "w", 0x0, "a", 0x0, "k"
	DCB	0x0, "e", 0x0, " ", 0x0, "s", 0x0, "o", 0x0, "u", 0x0, "r"
	DCB	0x0, "c", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@MFNLECAP@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAs?$AAy?$AAs?$AA?5?$AAi?$AAn?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "s", 0x0, "y", 0x0, "s", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@CBMFLOL@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAi?$AAr?$AAq?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAs?$AAy?$AAs@| DCB "%"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p"
	DCB	0x0, " ", 0x0, "i", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "s", 0x0, "y"
	DCB	0x0, "s", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@| DCB "c"
	DCB	0x0, ":", 0x0, "\\", 0x0, "w", 0x0, "i", 0x0, "n", 0x0, "c"
	DCB	0x0, "e", 0x0, "8", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "p"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "\\", 0x0, "r", 0x0, "r", 0x0, "m", 0x0, "_"
	DCB	0x0, "p", 0x0, "p", 0x0, "c", 0x0, "_", 0x0, "w", 0x0, "i"
	DCB	0x0, "n", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "s", 0x0, "\\"
	DCB	0x0, "s", 0x0, "r", 0x0, "c", 0x0, "\\", 0x0, "d", 0x0, "r"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, "\\"
	DCB	0x0, "p", 0x0, "m", 0x0, "\\", 0x0, "p", 0x0, "d", 0x0, "d"
	DCB	0x0, "\\", 0x0, "p", 0x0, "w", 0x0, "r", 0x0, "b", 0x0, "u"
	DCB	0x0, "t", 0x0, "t", 0x0, "o", 0x0, "n", 0x0, ".", 0x0, "c"
	DCB	0x0, "p", 0x0, "p", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19HABNGADD@?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| DCB "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@CHFCBFON@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAI?$AAS?$AAT?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "I", 0x0, "S"
	DCB	0x0, "T", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwrbutton.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Init@@YAHXZ| PROC			; Init

; 98   : {

  00000		 |$LN29@Init|
  00000	e92d 48ff	 push        {r0-r7,r11,lr}
  00004	f20d 0b20	 addw        r11,sp,#0x20
  00008		 |$M27|

; 99   :     BOOL rc = FALSE;
; 100  :     DWORD dwIrq;
; 101  : 
; 102  :     // Configure GPIO signal for power button events
; 103  :     DDKGpioSetConfig(BSP_PWRBTN_GPIO_PORT,
; 104  :                      BSP_PWRBTN_GPIO_PIN,
; 105  :                      DDK_GPIO_DIR_IN,
; 106  :                      DDK_GPIO_INTR_HIGH_LEV);

  00008	2301		 movs        r3,#1
  0000a	2200		 movs        r2,#0
  0000c	211d		 movs        r1,#0x1D
  0000e	2002		 movs        r0,#2
  00010	2400		 movs        r4,#0
  00012	f000 f800	 bl          DDKGpioSetConfig

; 107  :     DDKGpioClearIntrPin(BSP_PWRBTN_GPIO_PORT, BSP_PWRBTN_GPIO_PIN);

  00016	211d		 movs        r1,#0x1D
  00018	2002		 movs        r0,#2
  0001a	f000 f800	 bl          DDKGpioClearIntrPin

; 108  : 
; 109  : 
; 110  :     // Create event for IST signaling
; 111  :     g_hPwrBtnEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  0001e	2300		 movs        r3,#0
  00020	2200		 movs        r2,#0
  00022	2100		 movs        r1,#0
  00024	2000		 movs        r0,#0
  00026	f000 f800	 bl          CreateEventW
  0002a	4e39		 ldr         r6,|$LN44@Init|	; =|g_hPwrBtnThread|

; 112  :     if(g_hPwrBtnEvent == NULL)

  0002c	6070		 str         r0,[r6,#4]
  0002e	b930		 cbnz        r0,|$LN11@Init|

; 113  :     {
; 114  :         ERRORMSG(TRUE, (TEXT("%s(): failed to create IST event\r\n"),  __WFUNCTION__));

  00030	492d		 ldr         r1,|$LN34@Init|	; =|??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  00032	482c		 ldr         r0,|$LN33@Init|	; =|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  00034	2272		 movs        r2,#0x72
  00036	f000 f800	 bl          NKDbgPrintfW
  0003a	4834		 ldr         r0,|$LN43@Init|	; =|??_C@_1EG@CHFCBFON@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAI?$AAS?$AAT?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt@|

; 115  :         goto cleanUp;

  0003c	e031		 b           |$LN25@Init|
  0003e		 |$LN11@Init|

; 116  :     }
; 117  : 
; 118  :     // Register the GPIO IRQ
; 119  :     dwIrq = BSP_PWRBTN_GPIO_IRQ;

  0003e	23fd		 movs        r3,#0xFD

; 120  :     if (!KernelIoControl(IOCTL_HAL_REQUEST_SYSINTR, &dwIrq, sizeof(dwIrq), &g_dwPwrBtnSysIntr, sizeof(g_dwPwrBtnSysIntr), NULL))

  00040	4d31		 ldr         r5,|$LN42@Init|	; =|g_dwPwrBtnSysIntr|
  00042	9302		 str         r3,[sp,#8]
  00044	482f		 ldr         r0,|$LN41@Init|	; =0x1010098
  00046	2304		 movs        r3,#4
  00048	9300		 str         r3,[sp]
  0004a	2700		 movs        r7,#0
  0004c	462b		 mov         r3,r5
  0004e	a902		 add         r1,sp,#8
  00050	2204		 movs        r2,#4
  00052	9701		 str         r7,[sp,#4]
  00054	f000 f800	 bl          KernelIoControl
  00058	b930		 cbnz        r0,|$LN9@Init|

; 121  :     {
; 122  :         ERRORMSG(TRUE, (TEXT("%s(): failed to map irq into sys intr\r\n"),  __WFUNCTION__));

  0005a	4923		 ldr         r1,|$LN34@Init|	; =|??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  0005c	4821		 ldr         r0,|$LN33@Init|	; =|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  0005e	227a		 movs        r2,#0x7A
  00060	f000 f800	 bl          NKDbgPrintfW
  00064	4826		 ldr         r0,|$LN40@Init|	; =|??_C@_1FA@CBMFLOL@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAi?$AAr?$AAq?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAs?$AAy?$AAs@|

; 150  : 
; 151  : cleanUp:

  00066	e01c		 b           |$LN25@Init|
  00068		 |$LN9@Init|

; 123  :         goto cleanUp;
; 124  :     }
; 125  : 
; 126  :     if (!InterruptInitialize(g_dwPwrBtnSysIntr, g_hPwrBtnEvent, NULL, 0)) {

  00068	6871		 ldr         r1,[r6,#4]
  0006a	6828		 ldr         r0,[r5]
  0006c	2300		 movs        r3,#0
  0006e	2200		 movs        r2,#0
  00070	f000 f800	 bl          InterruptInitialize
  00074	b930		 cbnz        r0,|$LN7@Init|

; 127  :         ERRORMSG(TRUE, (TEXT("%s(): failed to register sys intr\r\n"),  __WFUNCTION__));

  00076	491c		 ldr         r1,|$LN34@Init|	; =|??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  00078	481a		 ldr         r0,|$LN33@Init|	; =|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  0007a	227f		 movs        r2,#0x7F
  0007c	f000 f800	 bl          NKDbgPrintfW
  00080	481e		 ldr         r0,|$LN39@Init|	; =|??_C@_1EI@MFNLECAP@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAs?$AAy?$AAs?$AA?5?$AAi?$AAn?$AAt@|

; 150  : 
; 151  : cleanUp:

  00082	e00e		 b           |$LN25@Init|
  00084		 |$LN7@Init|

; 128  :         goto cleanUp;
; 129  :     }
; 130  : 
; 131  :     // Configure power button as wake source
; 132  :     if (!KernelIoControl(IOCTL_HAL_ENABLE_WAKE, &g_dwPwrBtnSysIntr, sizeof(g_dwPwrBtnSysIntr), NULL, 0, NULL))

  00084	481c		 ldr         r0,|$LN38@Init|	; =0x10100a0
  00086	2300		 movs        r3,#0
  00088	2204		 movs        r2,#4
  0008a	4629		 mov         r1,r5
  0008c	9701		 str         r7,[sp,#4]
  0008e	9700		 str         r7,[sp]
  00090	f000 f800	 bl          KernelIoControl
  00094	b948		 cbnz        r0,|$LN5@Init|

; 133  :     {
; 134  :         ERRORMSG(TRUE, (TEXT("%s(): failed to register as wake source\r\n"),  __WFUNCTION__));

  00096	4914		 ldr         r1,|$LN34@Init|	; =|??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  00098	4812		 ldr         r0,|$LN33@Init|	; =|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  0009a	2286		 movs        r2,#0x86
  0009c	f000 f800	 bl          NKDbgPrintfW
  000a0	4814		 ldr         r0,|$LN37@Init|	; =|??_C@_1FE@BIOKHGAH@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAa?$AAs?$AA?5?$AAw?$AAa?$AAk?$AAe@|
  000a2		 |$LN25@Init|
  000a2	4913		 ldr         r1,|$LN36@Init|	; =|??_C@_19HABNGADD@?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  000a4	f000 f800	 bl          NKDbgPrintfW

; 150  : 
; 151  : cleanUp:

  000a8	e016		 b           |$cleanUp$45|
  000aa		 |$LN5@Init|

; 135  :         goto cleanUp;
; 136  :     }
; 137  : 
; 138  :     // Create IST for power button interrupts
; 139  :     g_hPwrBtnThread = CreateThread(NULL, 0, PwrBtnThread, NULL, 0, NULL);

  000aa	4a10		 ldr         r2,|$LN35@Init|	; =|?PwrBtnThread@@YAKPAX@Z|
  000ac	2300		 movs        r3,#0
  000ae	2100		 movs        r1,#0
  000b0	2000		 movs        r0,#0
  000b2	9701		 str         r7,[sp,#4]
  000b4	9700		 str         r7,[sp]
  000b6	f000 f800	 bl          CreateThread
  000ba	6030		 str         r0,[r6]

; 140  :     if (!g_hPwrBtnThread)

  000bc	b940		 cbnz        r0,|$LN3@Init|

; 141  :     {
; 142  :         ERRORMSG(TRUE, (_T("CreateThread failed for power button driver!\r\n")));

  000be	490a		 ldr         r1,|$LN34@Init|	; =|??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  000c0	4808		 ldr         r0,|$LN33@Init|	; =|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  000c2	228e		 movs        r2,#0x8E
  000c4	f000 f800	 bl          NKDbgPrintfW
  000c8	4805		 ldr         r0,|$LN32@Init|	; =|??_C@_1FO@BFMKAFKP@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAb?$AAu@|
  000ca	f000 f800	 bl          NKDbgPrintfW

; 150  : 
; 151  : cleanUp:

  000ce	e003		 b           |$cleanUp$45|
  000d0		 |$LN3@Init|

; 143  :         goto cleanUp;
; 144  :     }
; 145  :     else
; 146  :     {
; 147  :        CeSetThreadPriority(g_hPwrBtnThread, BSP_PWRBTN_THREAD_PRIORITY);

  000d0	2198		 movs        r1,#0x98
  000d2	f000 f800	 bl          CeSetThreadPriority

; 148  :     }
; 149  :     rc = TRUE;

  000d6	2401		 movs        r4,#1
  000d8		 |$cleanUp$45|

; 152  : 
; 153  :     return rc;
; 154  : 
; 155  : }

  000d8	4620		 mov         r0,r4
  000da		 |$M30|
  000da	b004		 add         sp,sp,#0x10
  000dc	e8bd 88f0	 pop         {r4-r7,r11,pc}
  000e0		 |$LN31@Init|
  000e0		 |$LN32@Init|
  000e0	0000 0000	 DCD         |??_C@_1FO@BFMKAFKP@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAb?$AAu@|
  000e4		 |$LN33@Init|
  000e4	0000 0000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  000e8		 |$LN34@Init|
  000e8	0000 0000	 DCD         |??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  000ec		 |$LN35@Init|
  000ec	0000 0000	 DCD         |?PwrBtnThread@@YAKPAX@Z|
  000f0		 |$LN36@Init|
  000f0	0000 0000	 DCD         |??_C@_19HABNGADD@?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  000f4		 |$LN37@Init|
  000f4	0000 0000	 DCD         |??_C@_1FE@BIOKHGAH@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAa?$AAs?$AA?5?$AAw?$AAa?$AAk?$AAe@|
  000f8		 |$LN38@Init|
  000f8	00a0 0101	 DCD         0x10100a0
  000fc		 |$LN39@Init|
  000fc	0000 0000	 DCD         |??_C@_1EI@MFNLECAP@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAs?$AAy?$AAs?$AA?5?$AAi?$AAn?$AAt@|
  00100		 |$LN40@Init|
  00100	0000 0000	 DCD         |??_C@_1FA@CBMFLOL@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAi?$AAr?$AAq?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAs?$AAy?$AAs@|
  00104		 |$LN41@Init|
  00104	0098 0101	 DCD         0x1010098
  00108		 |$LN42@Init|
  00108	0000 0000	 DCD         |g_dwPwrBtnSysIntr|
  0010c		 |$LN43@Init|
  0010c	0000 0000	 DCD         |??_C@_1EG@CHFCBFON@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAI?$AAS?$AAT?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt@|
  00110		 |$LN44@Init|
  00110	0000 0000	 DCD         |g_hPwrBtnThread|
  00114		 |$M28|

			 ENDP  ; |?Init@@YAHXZ|, Init

	END
