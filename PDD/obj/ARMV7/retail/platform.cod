; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.114 

	TTL	C:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp
	THUMB

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?gdwUnattendedModeRequests@@3KA| [ DATA ] ; gdwUnattendedModeRequests
	EXPORT	|?gdwBattSuspendTimeout@@3KA| [ DATA ]	; gdwBattSuspendTimeout
	EXPORT	|?ghevRestartTimers@@3PAXA| [ DATA ]	; ghevRestartTimers
	EXPORT	|?gfGwesReady@@3HA| [ DATA ]		; gfGwesReady
	EXPORT	|gSystemPowerStatus| [ DATA ]
	EXPORT	|?gdwBattResumingSuspendTimeout@@3KA| [ DATA ] ; gdwBattResumingSuspendTimeout
	EXPORT	|?giPreSuspendPriority@@3HA| [ DATA ]	; giPreSuspendPriority
	EXPORT	|?gdwACResumingSuspendTimeout@@3KA| [ DATA ] ; gdwACResumingSuspendTimeout
	EXPORT	|?giSuspendPriority@@3HA| [ DATA ]	; giSuspendPriority
	EXPORT	|?gdwACSuspendTimeout@@3KA| [ DATA ]	; gdwACSuspendTimeout
	EXPORT	|?ghevReloadActivityTimeouts@@3PAXA| [ DATA ] ; ghevReloadActivityTimeouts
	EXPORT	|?gpfnGwesPowerDown@@3P6AHXZA| [ DATA ]	; gpfnGwesPowerDown
	EXPORT	|?gpfnGwesPowerUp@@3P6AXH@ZA| [ DATA ]	; gpfnGwesPowerUp
	EXPORT	|?gfSystemSuspended@@3HA| [ DATA ]	; gfSystemSuspended
	EXPORT	|?gfFileSystemsAvailable@@3HA| [ DATA ]	; gfFileSystemsAvailable
	EXPORT	|?idBlockDevices@@3U_GUID@@A| [ DATA ]	; idBlockDevices
	EXPORT	|?gdwStateTimeLeft@@3KA| [ DATA ]	; gdwStateTimeLeft
	EXPORT	|?gfSupportPowerButtonRelease@@3HA| [ DATA ] ; gfSupportPowerButtonRelease
	EXPORT	|?gfPageOutAllModules@@3HA| [ DATA ]	; gfPageOutAllModules
	EXPORT	|?g_pPowerStateManager@@3PAVPowerStateManager@@A| [ DATA ] ; g_pPowerStateManager

  00000			 AREA	 |.bss|, NOINIT
|?gdwUnattendedModeRequests@@3KA| % 0x4			; gdwUnattendedModeRequests
|?gdwBattSuspendTimeout@@3KA| % 0x4			; gdwBattSuspendTimeout
|?ghevRestartTimers@@3PAXA| % 0x4			; ghevRestartTimers
|?gfGwesReady@@3HA| % 0x4				; gfGwesReady
|gSystemPowerStatus| % 0x1c
|?gdwBattResumingSuspendTimeout@@3KA| % 0x4		; gdwBattResumingSuspendTimeout
|?giPreSuspendPriority@@3HA| % 0x4			; giPreSuspendPriority
|?gdwACResumingSuspendTimeout@@3KA| % 0x4		; gdwACResumingSuspendTimeout
|?giSuspendPriority@@3HA| % 0x4				; giSuspendPriority
|?gdwACSuspendTimeout@@3KA| % 0x4			; gdwACSuspendTimeout
|?ghevReloadActivityTimeouts@@3PAXA| % 0x4		; ghevReloadActivityTimeouts
|?gpfnGwesPowerDown@@3P6AHXZA| % 0x4			; gpfnGwesPowerDown
|?gpfnGwesPowerUp@@3P6AXH@ZA| % 0x4			; gpfnGwesPowerUp
|?gfSystemSuspended@@3HA| % 0x4				; gfSystemSuspended
|?gfSupportPowerButtonRelease@@3HA| % 0x4		; gfSupportPowerButtonRelease
|?gfPageOutAllModules@@3HA| % 0x4			; gfPageOutAllModules
|?g_pPowerStateManager@@3PAVPowerStateManager@@A| % 0x4	; g_pPowerStateManager

  00000			 AREA	 |.data|, DATA
|?gfFileSystemsAvailable@@3HA| DCD 0x1			; gfFileSystemsAvailable
|?idBlockDevices@@3U_GUID@@A| DCD 0x8dd679ce		; idBlockDevices
	DCW	0x8ab4
	DCW	0x43c8
	DCB	0xa1
	DCB	0x4a
	DCB	0xea
	DCB	0x49
	DCB	0x63
	DCB	0xfa
	DCB	0xa7
	DCB	0x15
|?gdwStateTimeLeft@@3KA| DCD 0xffffffff			; gdwStateTimeLeft
	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |SetEvent| PROC

; 244  :     return EventModify(h,EVENT_SET);

  00000	2103		 movs        r1,#3
  00002		 |$M4|
  00002	f000 9000	 b           EventModify

			 ENDP  ; |SetEvent|

	EXPORT	|GetCurrentThread|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |GetCurrentThread| PROC

; 358  :     return ((HANDLE)(SH_CURTHREAD+SYS_HANDLE_BASE));

  00000	2041		 movs        r0,#0x41
  00002		 |$M4|

; 359  : }

  00002	4770		 bx          lr

			 ENDP  ; |GetCurrentThread|

	EXPORT	|GetCurrentThreadId|
	IMPORT	|__GetUserKData|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |GetCurrentThreadId| PROC

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00000	2008		 movs        r0,#8
  00002		 |$M4|
  00002	f000 9000	 b           __GetUserKData

			 ENDP  ; |GetCurrentThreadId|

	EXPORT	|?IsEqualGUID@@YAHABU_GUID@@0@Z|	; IsEqualGUID
	IMPORT	|memcmp|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?IsEqualGUID@@YAHABU_GUID@@0@Z| DCD imagerel |$LN8@IsEqualGUI|
	DCD	0x3f6031
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\guiddef.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?IsEqualGUID@@YAHABU_GUID@@0@Z| PROC	; IsEqualGUID

; 149  : {

  00000		 |$LN8@IsEqualGUI|
  00000	e92d 4800	 push        {r11,lr}
  00004	46eb		 mov         r11,sp
  00006		 |$M6|

; 150  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00006	2210		 movs        r2,#0x10
  00008	f000 f800	 bl          memcmp
  0000c	b908		 cbnz        r0,|$LN3@IsEqualGUI|
  0000e	2001		 movs        r0,#1
  00010	e000		 b           |$LN4@IsEqualGUI|
  00012		 |$LN3@IsEqualGUI|
  00012	2000		 movs        r0,#0
  00014		 |$LN4@IsEqualGUI|
  00014		 |$M9|

; 151  : }

  00014	e8bd 8800	 pop         {r11,pc}
  00018		 |$M7|

			 ENDP  ; |?IsEqualGUID@@YAHABU_GUID@@0@Z|, IsEqualGUID

	IMPORT	|__security_push_cookie|
	IMPORT	|__security_pop_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|StringCchLengthW|
	IMPORT	|CeLogData|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$CeLogMsg| DCD imagerel |$LN8@CeLogMsg|
	DCD	imagerel |$unwind2$CeLogMsg|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$CeLogMsg| DCD 0x44b00032
	DCD	0x1e889e8
	DCD	0x400a8fb
	DCD	0x8801e8ff
	DCD	0xff05ef00
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffe5
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\celog.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |CeLogMsg| PROC

; 1208 : {

  00000		 |$LN8@CeLogMsg|
  00000	b40f		 push        {r0-r3}
  00002	e92d 4800	 push        {r11,lr}
  00006	46eb		 mov         r11,sp
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d24	 subw        sp,sp,#0x224
  00010		 |$M6|
  00010	4602		 mov         r2,r0

; 1209 :     va_list arglist;
; 1210 :     WCHAR   szTemp[MAX_PATH];
; 1211 :     size_t  cchLen;
; 1212 :     HRESULT hr;
; 1213 : 
; 1214 :     // Compose a single string using the input args
; 1215 :     va_start(arglist, szFormat);
; 1216 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00012	a806		 add         r0,sp,#0x18
  00014	ab8d		 add         r3,sp,#0x234
  00016	f44f 7182	 mov         r1,#0x104
  0001a	928c		 str         r2,[sp,#0x230]
  0001c	f000 f800	 bl          StringCchVPrintfW

; 1217 :     if (SUCCEEDED(hr)) {

  00020	2800		 cmp         r0,#0
  00022	db17		 blt         |$LN1@CeLogMsg|

; 1218 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00024	aa04		 add         r2,sp,#0x10
  00026	a806		 add         r0,sp,#0x18
  00028	f44f 7182	 mov         r1,#0x104
  0002c	f000 f800	 bl          StringCchLengthW

; 1219 :         if (SUCCEEDED(hr)) {

  00030	2800		 cmp         r0,#0
  00032	db0f		 blt         |$LN1@CeLogMsg|

; 1220 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1221 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  00034	f04f 4380	 mov         r3,#0x40000000
  00038	9301		 str         r3,[sp,#4]
  0003a	9b04		 ldr         r3,[sp,#0x10]
  0003c	2200		 movs        r2,#0
  0003e	9203		 str         r2,[sp,#0xC]
  00040	3301		 adds        r3,#1
  00042	005b		 lsls        r3,r3,#1
  00044	9202		 str         r2,[sp,#8]
  00046	9200		 str         r2,[sp]
  00048	aa06		 add         r2,sp,#0x18
  0004a	214a		 movs        r1,#0x4A
  0004c	b29b		 uxth        r3,r3
  0004e	2001		 movs        r0,#1
  00050	f000 f800	 bl          CeLogData
  00054		 |$LN1@CeLogMsg|
  00054		 |$M9|

; 1222 :         }
; 1223 :     }
; 1224 : }

  00054	f20d 2d24	 addw        sp,sp,#0x224
  00058	f000 f800	 bl          __security_pop_cookie
  0005c	f85d bb04	 pop         {r11}
  00060	f85d fb14	 ldr         pc,[sp],#0x14
  00064		 |$M7|

			 ENDP  ; |CeLogMsg|

	EXPORT	|?Lock@CLockObject@@QAAXXZ|		; CLockObject::Lock
	IMPORT	|EnterCriticalSection|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\csync.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Lock@CLockObject@@QAAXXZ| PROC	; CLockObject::Lock

; 45   :     {

  00000		 |$M4|

; 46   :         EnterCriticalSection( &m_CSection );

  00000	f000 9000	 b           EnterCriticalSection

			 ENDP  ; |?Lock@CLockObject@@QAAXXZ|, CLockObject::Lock

	EXPORT	|?Unlock@CLockObject@@QAAXXZ|		; CLockObject::Unlock
	IMPORT	|LeaveCriticalSection|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\csync.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Unlock@CLockObject@@QAAXXZ| PROC	; CLockObject::Unlock

; 49   :     {

  00000		 |$M4|

; 50   :         LeaveCriticalSection( &m_CSection );

  00000	f000 9000	 b           LeaveCriticalSection

			 ENDP  ; |?Unlock@CLockObject@@QAAXXZ|, CLockObject::Unlock

	EXPORT	|?Init@RegKeyOrValue@@UAAHXZ|		; RegKeyOrValue::Init
	EXPORT	|??_7RegKeyOrValue@@6B@| [ DATA ]	; RegKeyOrValue::`vftable'
	EXPORT	|??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| ; RegKeyOrValue::RegKeyOrValue
	IMPORT	|wcslen|
	IMPORT	|??_ERegKeyOrValue@@UAAPAXI@Z|, WEAK |??_GRegKeyOrValue@@UAAPAXI@Z| ; RegKeyOrValue::`vector deleting destructor', RegKeyOrValue::`scalar deleting destructor'
	IMPORT	|??2@YAPAXI@Z|				; operator new
	IMPORT	|StringCchCopyW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| DCD imagerel |$LN11@RegKeyOrVa|
	DCD	0xfd3260ad

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7RegKeyOrValue@@6B@| DCD |?Init@RegKeyOrValue@@UAAHXZ| ; RegKeyOrValue::`vftable'
	DCD	|??_ERegKeyOrValue@@UAAPAXI@Z|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| PROC ; RegKeyOrValue::RegKeyOrValue

; 29   :     RegKeyOrValue(HKEY hKey,LPCTSTR lpRegName,RegKeyOrValue *pNextRegKeyOrValue) : m_hParentKey (hKey),m_pNextRegKeyOrValue(pNextRegKeyOrValue) {

  00000		 |$LN11@RegKeyOrVa|
  00000	e92d 4878	 push        {r3-r6,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M9|
  00008	4c13		 ldr         r4,|$LN14@RegKeyOrVa| ; =|??_7RegKeyOrValue@@6B@|
  0000a	4605		 mov         r5,r0
  0000c	60eb		 str         r3,[r5,#0xC]

; 30   :         m_lpRegName = NULL;

  0000e	2300		 movs        r3,#0
  00010	4616		 mov         r6,r2
  00012	606b		 str         r3,[r5,#4]
  00014	602c		 str         r4,[r5]
  00016	60a9		 str         r1,[r5,#8]

; 31   :         if (lpRegName) {

  00018	b1ce		 cbz         r6,|$LN3@RegKeyOrVa|

; 32   :             m_lpRegName = new TCHAR [ _tcslen(lpRegName) +1 ];

  0001a	4610		 mov         r0,r2
  0001c	f000 f800	 bl          wcslen
  00020	1c41		 adds        r1,r0,#1
  00022	f06f 4300	 mvn         r3,#0x80000000
  00026	4299		 cmp         r1,r3
  00028	d801		 bhi         |$LN6@RegKeyOrVa|
  0002a	0048		 lsls        r0,r1,#1
  0002c	e001		 b           |$LN7@RegKeyOrVa|
  0002e		 |$LN6@RegKeyOrVa|
  0002e	f06f 0000	 mvn         r0,#0
  00032		 |$LN7@RegKeyOrVa|
  00032	f000 f800	 bl          |??2@YAPAXI@Z|
  00036	4604		 mov         r4,r0
  00038	606c		 str         r4,[r5,#4]

; 33   :             if (m_lpRegName)

  0003a	b14c		 cbz         r4,|$LN1@RegKeyOrVa|

; 34   :                 VERIFY(SUCCEEDED(StringCchCopy(m_lpRegName,_tcslen(lpRegName) +1,lpRegName)));

  0003c	4630		 mov         r0,r6
  0003e	f000 f800	 bl          wcslen
  00042	1c41		 adds        r1,r0,#1
  00044	4620		 mov         r0,r4
  00046	4632		 mov         r2,r6
  00048	f000 f800	 bl          StringCchCopyW

; 35   :         }
; 36   :         else 

  0004c	e000		 b           |$LN1@RegKeyOrVa|
  0004e		 |$LN3@RegKeyOrVa|

; 37   :             m_lpRegName = NULL;

  0004e	606b		 str         r3,[r5,#4]
  00050		 |$LN1@RegKeyOrVa|

; 38   :         
; 39   :     };

  00050	4628		 mov         r0,r5
  00052		 |$M12|
  00052	e8bd 8878	 pop         {r3-r6,r11,pc}
  00056		 |$LN15@RegKeyOrVa|
  00056		 |$M16|
  00056	defe		 __debugbreak
  00058		 |$LN13@RegKeyOrVa|
  00058		 |$LN14@RegKeyOrVa|
  00058	0000 0000	 DCD         |??_7RegKeyOrValue@@6B@|
  0005c		 |$M10|

			 ENDP  ; |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|, RegKeyOrValue::RegKeyOrValue

	EXPORT	|??1RegKeyOrValue@@UAA@XZ|		; RegKeyOrValue::~RegKeyOrValue
	IMPORT	|??3@YAXPAX@Z|				; operator delete
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1RegKeyOrValue@@UAA@XZ| PROC	; RegKeyOrValue::~RegKeyOrValue

; 41   :     virtual ~RegKeyOrValue() {

  00000	4b03		 ldr         r3,|$LN8@RegKeyOrVa| ; =|??_7RegKeyOrValue@@6B@|
  00002	6003		 str         r3,[r0]

; 42   :         if (m_lpRegName!=NULL)

  00004	6840		 ldr         r0,[r0,#4]
  00006	b108		 cbz         r0,|$LN1@RegKeyOrVa|
  00008		 |$M5|

; 43   :             delete m_lpRegName;

  00008	f000 9000	 b           |??3@YAXPAX@Z|
  0000c		 |$LN1@RegKeyOrVa|
  0000c		 |$M6|

; 44   :     }

  0000c	4770		 bx          lr
  0000e		 |$LN9@RegKeyOrVa|
  0000e		 |$M10|
  0000e	defe		 __debugbreak
  00010		 |$LN7@RegKeyOrVa|
  00010		 |$LN8@RegKeyOrVa|
  00010	0000 0000	 DCD         |??_7RegKeyOrValue@@6B@|

			 ENDP  ; |??1RegKeyOrValue@@UAA@XZ|, RegKeyOrValue::~RegKeyOrValue

	EXPORT	|?GetNextRegKeyOrValuePtr@RegKeyOrValue@@QAAPAV1@XZ| ; RegKeyOrValue::GetNextRegKeyOrValuePtr
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetNextRegKeyOrValuePtr@RegKeyOrValue@@QAAPAV1@XZ| PROC ; RegKeyOrValue::GetNextRegKeyOrValuePtr

; 51   :     RegKeyOrValue * GetNextRegKeyOrValuePtr() { return m_pNextRegKeyOrValue; };

  00000	68c0		 ldr         r0,[r0,#0xC]
  00002		 |$M4|
  00002	4770		 bx          lr

			 ENDP  ; |?GetNextRegKeyOrValuePtr@RegKeyOrValue@@QAAPAV1@XZ|, RegKeyOrValue::GetNextRegKeyOrValuePtr

	EXPORT	|?UpdateRegValue@RegValue@@MAAHXZ|	; RegValue::UpdateRegValue
	IMPORT	|RegQueryValueExW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?UpdateRegValue@RegValue@@MAAHXZ| DCD imagerel |$LN13@UpdateRegV|
	DCD	0xfdb060bd
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?UpdateRegValue@RegValue@@MAAHXZ| PROC ; RegValue::UpdateRegValue

; 83   :     virtual BOOL UpdateRegValue()  {

  00000		 |$LN13@UpdateRegV|
  00000	e92d 481e	 push        {r1-r4,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M11|
  00008	4604		 mov         r4,r0

; 84   :         if (m_lpRegName) {

  0000a	6861		 ldr         r1,[r4,#4]
  0000c	b321		 cbz         r1,|$LN1@UpdateRegV|

; 85   :             if (m_lpByteValue == NULL) {

  0000e	69a2		 ldr         r2,[r4,#0x18]
  00010	b99a		 cbnz        r2,|$LN9@UpdateRegV|

; 86   :                 m_dwValueSize = 0;
; 87   :                 LONG status =  RegQueryValueEx(m_hParentKey,m_lpRegName,NULL, &m_dwValueType,NULL,&m_dwValueSize);

  00012	f110 0314	 adds        r3,r0,#0x14
  00016	9301		 str         r3,[sp,#4]
  00018	f110 0310	 adds        r3,r0,#0x10
  0001c	68a0		 ldr         r0,[r4,#8]
  0001e	2200		 movs        r2,#0
  00020	6162		 str         r2,[r4,#0x14]
  00022	9200		 str         r2,[sp]
  00024	f000 f800	 bl          RegQueryValueExW

; 88   :                 if ( status == ERROR_SUCCESS || status == ERROR_MORE_DATA )

  00028	b108		 cbz         r0,|$LN3@UpdateRegV|
  0002a	28ea		 cmp         r0,#0xEA
  0002c	d103		 bne         |$LN4@UpdateRegV|
  0002e		 |$LN3@UpdateRegV|

; 89   :                     m_lpByteValue = new BYTE [ m_dwValueSize ];

  0002e	6960		 ldr         r0,[r4,#0x14]
  00030	f000 f800	 bl          |??2@YAPAXI@Z|
  00034	61a0		 str         r0,[r4,#0x18]
  00036		 |$LN4@UpdateRegV|

; 90   :             }
; 91   :             if (m_lpByteValue != NULL) {

  00036	69a2		 ldr         r2,[r4,#0x18]
  00038	b172		 cbz         r2,|$LN1@UpdateRegV|
  0003a		 |$LN9@UpdateRegV|

; 92   :                 DWORD dwLen = m_dwValueSize;

  0003a	6963		 ldr         r3,[r4,#0x14]

; 93   :                 if (RegQueryValueEx(m_hParentKey,m_lpRegName,NULL, &m_dwValueType,m_lpByteValue,&dwLen) == ERROR_SUCCESS) {

  0003c	6861		 ldr         r1,[r4,#4]
  0003e	68a0		 ldr         r0,[r4,#8]
  00040	9302		 str         r3,[sp,#8]
  00042	ab02		 add         r3,sp,#8
  00044	9301		 str         r3,[sp,#4]
  00046	9200		 str         r2,[sp]
  00048	f114 0310	 adds        r3,r4,#0x10
  0004c	2200		 movs        r2,#0
  0004e	f000 f800	 bl          RegQueryValueExW
  00052	b908		 cbnz        r0,|$LN1@UpdateRegV|

; 94   :                     return TRUE;

  00054	2001		 movs        r0,#1
  00056	e000		 b           |$LN7@UpdateRegV|
  00058		 |$LN1@UpdateRegV|

; 95   :                 }
; 96   :                 
; 97   :             }
; 98   :         }
; 99   :         return FALSE;

  00058	2000		 movs        r0,#0
  0005a		 |$LN7@UpdateRegV|
  0005a		 |$M14|

; 100  :     };

  0005a	e8bd 881e	 pop         {r1-r4,r11,pc}
  0005e		 |$M12|

			 ENDP  ; |?UpdateRegValue@RegValue@@MAAHXZ|, RegValue::UpdateRegValue

	EXPORT	|?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z| ; RegReadStateTimeout
	IMPORT	|RegQueryTypedValue|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z| DCD imagerel |$LN12@RegReadSta|
	DCD	0x1700089
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z| PROC ; RegReadStateTimeout

; 801  : {

  00000		 |$LN12@RegReadSta|
  00000	e92d 4810	 push        {r4,r11,lr}
  00004	f20d 0b04	 addw        r11,sp,#4
  00008	b085		 sub         sp,sp,#0x14
  0000a		 |$M10|

; 802  :     DWORD dwValue, dwSize, dwStatus;
; 803  : 
; 804  :     dwSize = sizeof (dwValue);

  0000a	2304		 movs        r3,#4
  0000c	9302		 str         r3,[sp,#8]

; 805  :     dwStatus = RegQueryTypedValue (hk, pszName, &dwValue, &dwSize, REG_DWORD);

  0000e	9300		 str         r3,[sp]
  00010	4614		 mov         r4,r2
  00012	ab02		 add         r3,sp,#8
  00014	aa03		 add         r2,sp,#0xC
  00016	f000 f800	 bl          RegQueryTypedValue

; 806  :     if (dwStatus != ERROR_SUCCESS)

  0001a	b940		 cbnz        r0,|$LN2@RegReadSta|

; 807  :     {
; 808  :         dwValue = dwDefault;
; 809  :     }
; 810  :     else
; 811  :     {
; 812  :         // Translate zero to infinite timeout. If the timeout is not
; 813  :         // zero, enforce a ceiling for the timeout value.
; 814  : 
; 815  :         if (dwValue == 0)

  0001c	9c03		 ldr         r4,[sp,#0xC]
  0001e	b914		 cbnz        r4,|$LN4@RegReadSta|

; 816  :         {
; 817  :             dwValue = INFINITE;

  00020	f06f 0400	 mvn         r4,#0

; 818  :         }
; 819  :         else

  00024	e00a		 b           |$LN1@RegReadSta|
  00026		 |$LN4@RegReadSta|

; 820  :         {
; 821  :             if (dwValue > MAXACTIVITYTIMEOUT)

  00026	4b07		 ldr         r3,|$LN15@RegReadSta| ; =0x418937
  00028	429c		 cmp         r4,r3
  0002a	d900		 bls         |$LN2@RegReadSta|

; 822  :             {
; 823  :                 dwValue = MAXACTIVITYTIMEOUT;

  0002c	461c		 mov         r4,r3
  0002e		 |$LN2@RegReadSta|

; 824  :             }
; 825  :         }
; 826  :     }
; 827  : 
; 828  :     // Convert to milliseconds:
; 829  :     if (dwValue != INFINITE)

  0002e	f1b4 3fff	 cmp         r4,#0xFFFFFFFF
  00032	d003		 beq         |$LN1@RegReadSta|

; 830  :     {
; 831  :         dwValue *= 1000;

  00034	f44f 737a	 mov         r3,#0x3E8
  00038	fb03 f404	 mul         r4,r3,r4
  0003c		 |$LN1@RegReadSta|

; 832  :     }
; 833  :     return dwValue;
; 834  : }

  0003c	4620		 mov         r0,r4
  0003e		 |$M13|
  0003e	b005		 add         sp,sp,#0x14
  00040	e8bd 8810	 pop         {r4,r11,pc}
  00044		 |$LN14@RegReadSta|
  00044		 |$LN15@RegReadSta|
  00044	8937 0041	 DCD         0x418937
  00048		 |$M11|

			 ENDP  ; |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|, RegReadStateTimeout

	EXPORT	|??_GPowerStateManager@@QAAPAXI@Z|	; PowerStateManager::`scalar deleting destructor'
	IMPORT	|??1PowerStateManager@@QAA@XZ|		; PowerStateManager::~PowerStateManager

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateManager@@QAAPAXI@Z| DCD imagerel |$LN7@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateManager@@QAAPAXI@Z| PROC ; PowerStateManager::`scalar deleting destructor'
  00000		 |$LN7@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M5|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerStateManager@@QAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M8|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M6|

			 ENDP  ; |??_GPowerStateManager@@QAAPAXI@Z|, PowerStateManager::`scalar deleting destructor'

	EXPORT	|PlatformSendSystemPowerState|
	IMPORT	|?SendSystemPowerState@PMSystemAPI@@QAAKPBGKK@Z| ; PMSystemAPI::SendSystemPowerState

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PlatformSendSystemPowerState| DCD imagerel |$LN7@PlatformSe|
	DCD	0x316045
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PlatformSendSystemPowerState| PROC

; 1096 : {

  00000		 |$LN7@PlatformSe|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M5|

; 1097 :     DWORD dwReturn = ERROR_GEN_FAILURE;
; 1098 : 
; 1099 :     if (g_pPowerStateManager)

  00008	4b06		 ldr         r3,|$LN10@PlatformSe| ; =|?g_pPowerStateManager@@3PAVPowerStateManager@@A|
  0000a	4605		 mov         r5,r0
  0000c	201f		 movs        r0,#0x1F
  0000e	681c		 ldr         r4,[r3]
  00010	b12c		 cbz         r4,|$LN1@PlatformSe|

; 1100 :     {
; 1101 :         dwReturn = g_pPowerStateManager->SendSystemPowerState (pwsState, dwStateHint, dwOptions);

  00012	4613		 mov         r3,r2
  00014	460a		 mov         r2,r1
  00016	4629		 mov         r1,r5
  00018	4620		 mov         r0,r4
  0001a	f000 f800	 bl          |?SendSystemPowerState@PMSystemAPI@@QAAKPBGKK@Z|
  0001e		 |$LN1@PlatformSe|
  0001e		 |$M8|

; 1102 :     }
; 1103 :     return dwReturn;
; 1104 : }

  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$LN11@PlatformSe|
  00022		 |$M12|
  00022	defe		 __debugbreak
  00024		 |$LN9@PlatformSe|
  00024		 |$LN10@PlatformSe|
  00024	0000 0000	 DCD         |?g_pPowerStateManager@@3PAVPowerStateManager@@A|
  00028		 |$M6|

			 ENDP  ; |PlatformSendSystemPowerState|

	EXPORT	|??8@YAHABU_GUID@@0@Z|			; operator==

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??8@YAHABU_GUID@@0@Z| DCD imagerel |$LN10@operator|
	DCD	0x3f6031
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\guiddef.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??8@YAHABU_GUID@@0@Z| PROC		; operator==

; 183  : {

  00000		 |$LN10@operator|
  00000	e92d 4800	 push        {r11,lr}
  00004	46eb		 mov         r11,sp
  00006		 |$M8|

; 150  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00006	2210		 movs        r2,#0x10
  00008	f000 f800	 bl          memcmp
  0000c	b908		 cbnz        r0,|$LN5@operator|
  0000e	2001		 movs        r0,#1
  00010	e000		 b           |$LN6@operator|
  00012		 |$LN5@operator|
  00012	2000		 movs        r0,#0
  00014		 |$LN6@operator|
  00014		 |$M11|

; 184  :     return IsEqualGUID(guidOne,guidOther);
; 185  : }

  00014	e8bd 8800	 pop         {r11,pc}
  00018		 |$M9|

			 ENDP  ; |??8@YAHABU_GUID@@0@Z|, operator==

	EXPORT	|??_C@_1DE@GDDAACD@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAf?$AAl?$AAa?$AAg?$AA?5?$AAi?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@BCEGLJGC@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@PJLIJGPL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAA?$AAR?$AAN?$AAI?$AAN?$AAG?$AA?3?$AA?5?$AAu?$AAn?$AAe?$AAx?$AAp?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?$CB?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@FPBBIEMJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAK?$AAe?$AAr?$AAn?$AAe?$AAl?$AAI?$AAo?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@BIFGJDIH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAa?$AAt?$AA?5?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@FKDMEONL@?$AA?9?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|PlatformResumeSystem|
	IMPORT	|dpCurSettings|
	IMPORT	|KernelIoControl|
	IMPORT	|ActivityTimerFindByWakeSource|
	IMPORT	|ghtActivityTimers|
	IMPORT	|CeGetThreadPriority|
	IMPORT	|CeSetThreadPriority|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PlatformResumeSystem| DCD imagerel |$LN30@PlatformRe|
	DCD	0x17401c5

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@FKDMEONL@?$AA?9?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-", 0x0
	DCB	"%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@BIFGJDIH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAa?$AAt?$AA?5?$AAr@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "g"
	DCB	0x0, "n", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, " "
	DCB	0x0, "a", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i"
	DCB	0x0, "t", 0x0, "y", 0x0, " ", 0x0, "a", 0x0, "t", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@FPBBIEMJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAK?$AAe?$AAr?$AAn?$AAe?$AAl?$AAI?$AAo?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "K", 0x0, "e", 0x0, "r"
	DCB	0x0, "n", 0x0, "e", 0x0, "l", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "a", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "s"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@PJLIJGPL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAA?$AAR?$AAN?$AAI?$AAN?$AAG?$AA?3?$AA?5?$AAu?$AAn?$AAe?$AAx?$AAp?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?$CB?$AA?$AN@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "W", 0x0, "A", 0x0, "R"
	DCB	0x0, "N", 0x0, "I", 0x0, "N", 0x0, "G", 0x0, ":", 0x0, " "
	DCB	0x0, "u", 0x0, "n", 0x0, "e", 0x0, "x", 0x0, "p", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, "!"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@BCEGLJGC@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$AA@| DCB "P"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m"
	DCB	0x0, "e", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "m", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@GDDAACD@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAf?$AAl?$AAa?$AAg?$AA?5?$AAi?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "u"
	DCB	0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, " "
	DCB	0x0, "f", 0x0, "l", 0x0, "a", 0x0, "g", 0x0, " ", 0x0, "i"
	DCB	0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PlatformResumeSystem| PROC

; 994  : {

  00000		 |$LN30@PlatformRe|
  00000	e92d 49f0	 push        {r4-r8,r11,lr}
  00004	f20d 0b14	 addw        r11,sp,#0x14
  00008	b085		 sub         sp,sp,#0x14
  0000a		 |$M28|

; 995  : 	SETFNAME (_T ("PlatformResumeSystem"));
; 996  : 
; 997  : 	PMLOGMSG (ZONE_RESUME, (_T ("+%s: suspend flag is %d\r\n"), pszFname, gfSystemSuspended));

  0000a	4f3f		 ldr         r7,|$LN42@PlatformRe| ; =|dpCurSettings|
  0000c	4c3d		 ldr         r4,|$LN41@PlatformRe| ; =|?ghevRestartTimers@@3PAXA|
  0000e	f8d7 2440	 ldr         r2,[r7,#0x440]
  00012	f012 0f08	 tst         r2,#8
  00016	d006		 beq         |$LN10@PlatformRe|
  00018	4839		 ldr         r0,|$LN40@PlatformRe| ; =|??_C@_1DE@GDDAACD@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAf?$AAl?$AAa?$AAg?$AA?5?$AAi?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0001a	6c62		 ldr         r2,[r4,#0x44]
  0001c	4931		 ldr         r1,|$LN33@PlatformRe| ; =|??_C@_1CK@BCEGLJGC@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$AA@|
  0001e	f000 f800	 bl          CeLogMsg
  00022	f8d7 2440	 ldr         r2,[r7,#0x440]
  00026		 |$LN10@PlatformRe|

; 998  : 
; 999  : 	// Was this an unexpected resume event?  If so, there may be a thread priority problem
; 1000 : 	// or some piece of software suspended the system without calling SetSystemPowerState().
; 1001 : 
; 1002 : 	DEBUGCHK (gfSystemSuspended);
; 1003 : 	if (!gfSystemSuspended)

  00026	6c63		 ldr         r3,[r4,#0x44]
  00028	b973		 cbnz        r3,|$LN7@PlatformRe|

; 1004 : 	{
; 1005 : 		// Unexpected resume -- go to the resuming state.  This should not happen unless
; 1006 : 		// somebody is illegally calling PowerOffSystem() directly.
; 1007 : 
; 1008 : 		PMLOGMSG (ZONE_WARN || ZONE_RESUME, (_T ("%s: WARNING: unexpected resume!\r\n"), pszFname));

  0002a	f012 0f02	 tst         r2,#2
  0002e	d102		 bne         |$LN12@PlatformRe|
  00030	f012 0f08	 tst         r2,#8
  00034	d003		 beq         |$LN13@PlatformRe|
  00036		 |$LN12@PlatformRe|
  00036	4831		 ldr         r0,|$LN39@PlatformRe| ; =|??_C@_1EE@PJLIJGPL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAA?$AAR?$AAN?$AAI?$AAN?$AAG?$AA?3?$AA?5?$AAu?$AAn?$AAe?$AAx?$AAp?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?$CB?$AA?$AN@|
  00038	492a		 ldr         r1,|$LN33@PlatformRe| ; =|??_C@_1CK@BCEGLJGC@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$AA@|
  0003a	f000 f800	 bl          CeLogMsg
  0003e		 |$LN13@PlatformRe|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  0003e	6820		 ldr         r0,[r4]
  00040	2103		 movs        r1,#3
  00042	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

; 1018 : 	else

  00046	e040		 b           |$LN26@PlatformRe|
  00048		 |$LN7@PlatformRe|

; 1019 : 	{
; 1020 : 		DWORD dwWakeSource, dwBytesReturned;
; 1021 : 		BOOL fOk;
; 1022 : 
; 1023 : 		// Get the system wake source to help determine which power state we resume into:
; 1024 : 		fOk = KernelIoControl (IOCTL_HAL_GET_WAKE_SOURCE, NULL, 0, &dwWakeSource,
; 1025 : 							   sizeof (dwWakeSource), &dwBytesReturned);

  00048	ab02		 add         r3,sp,#8
  0004a	9301		 str         r3,[sp,#4]
  0004c	482a		 ldr         r0,|$LN38@PlatformRe| ; =0x10100a8
  0004e	2304		 movs        r3,#4
  00050	9300		 str         r3,[sp]
  00052	ab03		 add         r3,sp,#0xC
  00054	2200		 movs        r2,#0
  00056	2100		 movs        r1,#0
  00058	f000 f800	 bl          KernelIoControl

; 1026 : 		if (fOk)

  0005c	b3a8		 cbz         r0,|$LN26@PlatformRe|

; 1027 : 		{
; 1028 : 			// IOCTL succeeded (not all platforms necessarily support it), but sanity check
; 1029 : 			// the return value, just in case.
; 1030 : 
; 1031 : 			if (dwBytesReturned != sizeof (dwWakeSource))

  0005e	9a02		 ldr         r2,[sp,#8]
  00060	2a04		 cmp         r2,#4
  00062	d009		 beq         |$LN4@PlatformRe|

; 1032 : 			{
; 1033 : 				PMLOGMSG (ZONE_WARN, (_T ("%s: KernelIoControl() returned an invalid size %d\r\n"),
; 1034 : 									  pszFname, dwBytesReturned));

  00064	f8d7 3440	 ldr         r3,[r7,#0x440]
  00068	f013 0f02	 tst         r3,#2
  0006c	d02d		 beq         |$LN26@PlatformRe|
  0006e	4821		 ldr         r0,|$LN37@PlatformRe| ; =|??_C@_1GI@FPBBIEMJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAK?$AAe?$AAr?$AAn?$AAe?$AAl?$AAI?$AAo?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAa@|
  00070	491c		 ldr         r1,|$LN33@PlatformRe| ; =|??_C@_1CK@BCEGLJGC@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$AA@|
  00072	f000 f800	 bl          CeLogMsg

; 1035 : 			}
; 1036 : 			else

  00076	e028		 b           |$LN26@PlatformRe|
  00078		 |$LN4@PlatformRe|

; 1037 : 			{
; 1038 : 				// Look for an activity timer corresponding to this wake source.
; 1039 : 				PACTIVITY_TIMER pat = ActivityTimerFindByWakeSource (dwWakeSource);

  00078	9803		 ldr         r0,[sp,#0xC]
  0007a	f000 f800	 bl          ActivityTimerFindByWakeSource
  0007e	4680		 mov         r8,r0

; 1040 : 
; 1041 : 				if (pat != NULL)

  00080	b318		 cbz         r0,|$LN26@PlatformRe|

; 1042 : 				{
; 1043 : 					PMLOGMSG (ZONE_RESUME, (_T ("%s: signaling '%s' activity at resume\r\n"),
; 1044 : 											pszFname, pat->pszName));

  00082	f8d7 3440	 ldr         r3,[r7,#0x440]
  00086	f013 0f08	 tst         r3,#8
  0008a	d005		 beq         |$LN16@PlatformRe|
  0008c	f8d0 2000	 ldr.w       r2,[r0]
  00090	4817		 ldr         r0,|$LN36@PlatformRe| ; =|??_C@_1FA@BIFGJDIH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAa?$AAt?$AA?5?$AAr@|
  00092	4914		 ldr         r1,|$LN33@PlatformRe| ; =|??_C@_1CK@BCEGLJGC@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$AA@|
  00094	f000 f800	 bl          CeLogMsg
  00098		 |$LN16@PlatformRe|

; 1045 : 
; 1046 : 					// Is there an activity timer we need to reset?
; 1047 : 					if (pat->hevReset != NULL)

  00098	f8d8 300c	 ldr         r3,[r8,#0xC]
  0009c	b1ab		 cbz         r3,|$LN26@PlatformRe|

; 1048 : 					{
; 1049 : 						// Found a timer, elevate the timer management priority thread so that it
; 1050 : 						// executes before the suspending thread.
; 1051 : 
; 1052 : 						DWORD dwOldPriority = CeGetThreadPriority (ghtActivityTimers);

  0009e	4e13		 ldr         r6,|$LN35@PlatformRe| ; =|ghtActivityTimers|
  000a0	6830		 ldr         r0,[r6]
  000a2	f000 f800	 bl          CeGetThreadPriority
  000a6	4605		 mov         r5,r0

; 1053 : 						DWORD dwNewPriority = (CeGetThreadPriority (GetCurrentThread ()) - 1);

  000a8	2041		 movs        r0,#0x41
  000aa	f000 f800	 bl          CeGetThreadPriority
  000ae	4604		 mov         r4,r0
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  000b0	f8d8 000c	 ldr         r0,[r8,#0xC]
  000b4	2103		 movs        r1,#3
  000b6	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

; 1057 : 						CeSetThreadPriority (ghtActivityTimers, dwNewPriority);

  000ba	6830		 ldr         r0,[r6]
  000bc	1e61		 subs        r1,r4,#1
  000be	f000 f800	 bl          CeSetThreadPriority

; 1058 : 						CeSetThreadPriority (ghtActivityTimers, dwOldPriority);

  000c2	6830		 ldr         r0,[r6]
  000c4	4629		 mov         r1,r5
  000c6	f000 f800	 bl          CeSetThreadPriority
  000ca		 |$LN26@PlatformRe|

; 1059 : 					}
; 1060 : 				}
; 1061 : 			}
; 1062 : 		}
; 1063 : 	}
; 1064 : 	PMLOGMSG (ZONE_RESUME, (_T ("-%s\r\n"), pszFname));

  000ca	f8d7 3440	 ldr         r3,[r7,#0x440]
  000ce	f013 0f08	 tst         r3,#8
  000d2	d003		 beq         |$LN18@PlatformRe|
  000d4	4804		 ldr         r0,|$LN34@PlatformRe| ; =|??_C@_1M@FKDMEONL@?$AA?9?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  000d6	4903		 ldr         r1,|$LN33@PlatformRe| ; =|??_C@_1CK@BCEGLJGC@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$AA@|
  000d8	f000 f800	 bl          CeLogMsg
  000dc		 |$LN18@PlatformRe|
  000dc		 |$M31|

; 1065 : }

  000dc	b005		 add         sp,sp,#0x14
  000de	e8bd 89f0	 pop         {r4-r8,r11,pc}
  000e2		 |$LN43@PlatformRe|
  000e2		 |$M44|
  000e2	defe		 __debugbreak
  000e4		 |$LN32@PlatformRe|
  000e4		 |$LN33@PlatformRe|
  000e4	0000 0000	 DCD         |??_C@_1CK@BCEGLJGC@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$AA@|
  000e8		 |$LN34@PlatformRe|
  000e8	0000 0000	 DCD         |??_C@_1M@FKDMEONL@?$AA?9?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  000ec		 |$LN35@PlatformRe|
  000ec	0000 0000	 DCD         |ghtActivityTimers|
  000f0		 |$LN36@PlatformRe|
  000f0	0000 0000	 DCD         |??_C@_1FA@BIFGJDIH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAa?$AAt?$AA?5?$AAr@|
  000f4		 |$LN37@PlatformRe|
  000f4	0000 0000	 DCD         |??_C@_1GI@FPBBIEMJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAK?$AAe?$AAr?$AAn?$AAe?$AAl?$AAI?$AAo?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAa@|
  000f8		 |$LN38@PlatformRe|
  000f8	00a8 0101	 DCD         0x10100a8
  000fc		 |$LN39@PlatformRe|
  000fc	0000 0000	 DCD         |??_C@_1EE@PJLIJGPL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAA?$AAR?$AAN?$AAI?$AAN?$AAG?$AA?3?$AA?5?$AAu?$AAn?$AAe?$AAx?$AAp?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?$CB?$AA?$AN@|
  00100		 |$LN40@PlatformRe|
  00100	0000 0000	 DCD         |??_C@_1DE@GDDAACD@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?5?$AAf?$AAl?$AAa?$AAg?$AA?5?$AAi?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00104		 |$LN41@PlatformRe|
  00104	0000 0000	 DCD         |?ghevRestartTimers@@3PAXA|
  00108		 |$LN42@PlatformRe|
  00108	0000 0000	 DCD         |dpCurSettings|
  0010c		 |$M29|

			 ENDP  ; |PlatformResumeSystem|

	EXPORT	|??_C@_1DE@CBGPACHL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAa?$AAd?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@LLGAJMLB@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAM?$AAa?$AAp?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAH?$AAi?$AAn?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@FEJCAGNG@?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@HLEAMJNI@?$AAs?$AAc?$AAr?$AAe?$AAe?$AAn?$AAo?$AAf?$AAf?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|PlatformMapPowerStateHint|
	IMPORT	|wcscpy_s|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PlatformMapPowerStateHint| DCD imagerel |$LN25@PlatformMa|
	DCD	0xfd346145

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@| DCB "o", 0x0, "n", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@| DCB "o", 0x0, "f", 0x0, "f", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@HLEAMJNI@?$AAs?$AAc?$AAr?$AAe?$AAe?$AAn?$AAo?$AAf?$AAf?$AA?$AA@| DCB "s"
	DCB	0x0, "c", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, "o"
	DCB	0x0, "f", 0x0, "f", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| DCB "s", 0x0
	DCB	"u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@FEJCAGNG@?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| DCB "r", 0x0, "e"
	DCB	0x0, "b", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@| DCB "u"
	DCB	0x0, "s", 0x0, "e", 0x0, "r", 0x0, "i", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@LLGAJMLB@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAM?$AAa?$AAp?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAH?$AAi?$AAn?$AAt?$AA?$AA@| DCB "P"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "M", 0x0, "a", 0x0, "p", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "H", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@CBGPACHL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAa?$AAd?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "b", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "h", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PlatformMapPowerStateHint| PROC

; 359  : {

  00000		 |$LN25@PlatformMa|
  00000	e92d 49f8	 push        {r3-r8,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M23|

; 360  : 	DWORD dwStatus = ERROR_SUCCESS;
; 361  : 	LPTSTR pszMappedStateName = NULL;
; 362  : 
; 363  : 	SETFNAME (_T ("PlatformMapPowerStateHint"));
; 364  : 
; 365  : 	// Mask off unused bits:
; 366  : 	dwHint &=
; 367  : 		(POWER_STATE_ON | POWER_STATE_USERIDLE | POWER_STATE_IDLE | POWER_STATE_SUSPEND |
; 368  : 		 POWER_STATE_OFF | POWER_STATE_RESET | POWER_STATE_CRITICAL);

  00008	4b30		 ldr         r3,|$LN38@PlatformMa| ; =0x1b70000
  0000a	4617		 mov         r7,r2

; 369  : 
; 370  : 	// Try to map the hint value.  Note that only one bit at a time should be set.
; 371  : 	switch (dwHint)

  0000c	4e2e		 ldr         r6,|$LN37@PlatformMa| ; =|dpCurSettings|
  0000e	ea10 0203	 ands        r2,r0,r3
  00012	2500		 movs        r5,#0
  00014	f5b2 3f80	 cmp         r2,#0x10000
  00018	4688		 mov         r8,r1
  0001a	d027		 beq         |$LN11@PlatformMa|
  0001c	f5b2 3f00	 cmp         r2,#0x20000
  00020	d022		 beq         |$LN8@PlatformMa|
  00022	f5b2 2f80	 cmp         r2,#0x40000
  00026	d01b		 beq         |$LN9@PlatformMa|
  00028	f5b2 1f80	 cmp         r2,#0x100000
  0002c	d01a		 beq         |$LN10@PlatformMa|
  0002e	f5b2 1f00	 cmp         r2,#0x200000
  00032	d015		 beq         |$LN9@PlatformMa|
  00034	f5b2 0f00	 cmp         r2,#0x800000
  00038	d010		 beq         |$LN6@PlatformMa|
  0003a	f1b2 7f80	 cmp         r2,#0x1000000
  0003e	d00b		 beq         |$LN5@PlatformMa|

; 399  : 	  default:
; 400  : 		  PMLOGMSG (ZONE_PLATFORM | ZONE_WARN,
; 401  : 					(_T ("%s: bad hint value 0x%x\r\n"), pszFname, dwHint));

  00040	f8d6 3440	 ldr         r3,[r6,#0x440]
  00044	f240 4102	 mov         r1,#0x402
  00048	420b		 tst         r3,r1
  0004a	d003		 beq         |$LN16@PlatformMa|
  0004c	481d		 ldr         r0,|$LN36@PlatformMa| ; =|??_C@_1DE@CBGPACHL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAa?$AAd?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0004e	4915		 ldr         r1,|$LN28@PlatformMa| ; =|??_C@_1DE@LLGAJMLB@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAM?$AAa?$AAp?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAH?$AAi?$AAn?$AAt?$AA?$AA@|
  00050	f000 f800	 bl          CeLogMsg
  00054		 |$LN16@PlatformMa|

; 402  : 		  dwStatus = ERROR_FILE_NOT_FOUND;

  00054	2502		 movs        r5,#2

; 403  : 		  break;

  00056	e011		 b           |$LN20@PlatformMa|
  00058		 |$LN5@PlatformMa|

; 396  : 	  case POWER_STATE_USERIDLE:
; 397  : 		  pszMappedStateName = _T ("useridle");

  00058	4c19		 ldr         r4,|$LN35@PlatformMa| ; =|??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|

; 398  : 		  break;

  0005a	e008		 b           |$LN12@PlatformMa|
  0005c		 |$LN6@PlatformMa|

; 388  : 
; 389  : 	  case POWER_STATE_CRITICAL:	// Catastrophic power loss, shut down immediately.
; 390  : 		  pszMappedStateName = _T ("suspend");
; 391  : 		  break;
; 392  : 
; 393  : 	  case POWER_STATE_RESET:	    // Flush files and reboot.
; 394  : 		  pszMappedStateName = _T ("reboot");

  0005c	4c17		 ldr         r4,|$LN34@PlatformMa| ; =|??_C@_1O@FEJCAGNG@?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@|

; 395  : 		  break;

  0005e	e006		 b           |$LN12@PlatformMa|
  00060		 |$LN9@PlatformMa|

; 380  : 
; 381  : 	  case POWER_STATE_SUSPEND:
; 382  : 		  pszMappedStateName = _T ("suspend");

  00060	4c15		 ldr         r4,|$LN33@PlatformMa| ; =|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|

; 383  : 		  break;

  00062	e004		 b           |$LN12@PlatformMa|
  00064		 |$LN10@PlatformMa|

; 375  : 		  break;
; 376  : 
; 377  : 	  case POWER_STATE_IDLE:
; 378  : 		  pszMappedStateName = _T ("screenoff");

  00064	4c13		 ldr         r4,|$LN32@PlatformMa| ; =|??_C@_1BE@HLEAMJNI@?$AAs?$AAc?$AAr?$AAe?$AAe?$AAn?$AAo?$AAf?$AAf?$AA?$AA@|

; 379  : 		  break;

  00066	e002		 b           |$LN12@PlatformMa|
  00068		 |$LN8@PlatformMa|

; 384  : 
; 385  : 	  case POWER_STATE_OFF:	        // Power off, cold boot on resume.
; 386  :           pszMappedStateName = _T ("off");  // Gard

  00068	4c11		 ldr         r4,|$LN31@PlatformMa| ; =|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@|

; 387  :           break;

  0006a	e000		 b           |$LN12@PlatformMa|
  0006c		 |$LN11@PlatformMa|

; 372  : 	{
; 373  : 	  case POWER_STATE_ON:
; 374  : 		  pszMappedStateName = _T ("on");

  0006c	4c0f		 ldr         r4,|$LN30@PlatformMa| ; =|??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@|
  0006e		 |$LN12@PlatformMa|

; 404  : 	}
; 405  : 
; 406  : 	DEBUGCHK (dwStatus == ERROR_SUCCESS);
; 407  : 
; 408  : 	// If we were able to map the hint to a state name, copy it back to the caller:
; 409  : 
; 410  : 	if (pszMappedStateName != NULL)
; 411  : 	{
; 412  : 		if (dwBufChars < (_tcslen (pszMappedStateName) + 1))

  0006e	4620		 mov         r0,r4
  00070	f000 f800	 bl          wcslen
  00074	1c43		 adds        r3,r0,#1
  00076	429f		 cmp         r7,r3
  00078	d20b		 bcs         |$LN2@PlatformMa|

; 413  : 		{
; 414  : 			dwStatus = ERROR_INSUFFICIENT_BUFFER;

  0007a	257a		 movs        r5,#0x7A
  0007c		 |$LN20@PlatformMa|

; 399  : 	  default:
; 400  : 		  PMLOGMSG (ZONE_PLATFORM | ZONE_WARN,
; 401  : 					(_T ("%s: bad hint value 0x%x\r\n"), pszFname, dwHint));

  0007c	f8d6 3440	 ldr         r3,[r6,#0x440]

; 419  : 		}
; 420  : 	}
; 421  : 
; 422  : 	PMLOGMSG (dwStatus != ERROR_SUCCESS && ZONE_WARN,
; 423  : 			  (_T ("%s: returning %d\r\n"), pszFname, dwStatus));

  00080	f013 0f02	 tst         r3,#2
  00084	d00a		 beq         |$LN18@PlatformMa|
  00086	4808		 ldr         r0,|$LN29@PlatformMa| ; =|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00088	4906		 ldr         r1,|$LN28@PlatformMa| ; =|??_C@_1DE@LLGAJMLB@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAM?$AAa?$AAp?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAH?$AAi?$AAn?$AAt?$AA?$AA@|
  0008a	462a		 mov         r2,r5
  0008c	f000 f800	 bl          CeLogMsg
  00090	e004		 b           |$LN18@PlatformMa|
  00092		 |$LN2@PlatformMa|

; 415  : 		}
; 416  : 		else
; 417  : 		{
; 418  : 			_tcscpy_s (pszBuf, dwBufChars, pszMappedStateName);

  00092	4622		 mov         r2,r4
  00094	4639		 mov         r1,r7
  00096	4640		 mov         r0,r8
  00098	f000 f800	 bl          wcscpy_s
  0009c		 |$LN18@PlatformMa|

; 424  : 	return dwStatus;
; 425  : }

  0009c	4628		 mov         r0,r5
  0009e		 |$M26|
  0009e	e8bd 89f8	 pop         {r3-r8,r11,pc}
  000a2		 |$LN39@PlatformMa|
  000a2		 |$M40|
  000a2	defe		 __debugbreak
  000a4		 |$LN27@PlatformMa|
  000a4		 |$LN28@PlatformMa|
  000a4	0000 0000	 DCD         |??_C@_1DE@LLGAJMLB@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAM?$AAa?$AAp?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAH?$AAi?$AAn?$AAt?$AA?$AA@|
  000a8		 |$LN29@PlatformMa|
  000a8	0000 0000	 DCD         |??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  000ac		 |$LN30@PlatformMa|
  000ac	0000 0000	 DCD         |??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@|
  000b0		 |$LN31@PlatformMa|
  000b0	0000 0000	 DCD         |??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@|
  000b4		 |$LN32@PlatformMa|
  000b4	0000 0000	 DCD         |??_C@_1BE@HLEAMJNI@?$AAs?$AAc?$AAr?$AAe?$AAe?$AAn?$AAo?$AAf?$AAf?$AA?$AA@|
  000b8		 |$LN33@PlatformMa|
  000b8	0000 0000	 DCD         |??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  000bc		 |$LN34@PlatformMa|
  000bc	0000 0000	 DCD         |??_C@_1O@FEJCAGNG@?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@|
  000c0		 |$LN35@PlatformMa|
  000c0	0000 0000	 DCD         |??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|
  000c4		 |$LN36@PlatformMa|
  000c4	0000 0000	 DCD         |??_C@_1DE@CBGPACHL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAa?$AAd?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000c8		 |$LN37@PlatformMa|
  000c8	0000 0000	 DCD         |dpCurSettings|
  000cc		 |$LN38@PlatformMa|
  000cc	0000 01b7	 DCD         0x1b70000
  000d0		 |$M24|

			 ENDP  ; |PlatformMapPowerStateHint|

	EXPORT	|??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@MCBMLNCL@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAP?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@OBINEGAB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAs?$AA?5?$AA?$CF?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@MEOJPGLP@?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAB?$AAu?$AAt?$AAt?$AAo?$AAn?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@EBNDLHBI@?$AAP?$AAa?$AAg?$AAe?$AAO?$AAu?$AAt?$AAA?$AAl?$AAl?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@JELGADA@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PDJDFFAK@?$AA?$HL?$AAA?$AA3?$AA2?$AA9?$AA4?$AA2?$AAB?$AA7?$AA?9?$AA9?$AA2?$AA0?$AAC?$AA?9?$AA4?$AA8?$AA6?$AAb?$AA?9?$AAB?$AA0?$AAE?$AA6?$AA?9?$AA9?$AA2?$AAA?$AA7?$AA0?$AA2?$AAA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@GFDKAMGI@?$AAG?$AAe?$AAn?$AAe?$AAr?$AAi?$AAc?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@JGHMMDDC@?$AA?$HL?$AA8?$AAD?$AAD?$AA6?$AA7?$AA9?$AAC?$AAE?$AA?9?$AA8?$AAA?$AAB?$AA4?$AA?9?$AA4?$AA3?$AAc?$AA8?$AA?9?$AAA?$AA1?$AA4?$AAA?$AA?9?$AAE?$AAA?$AA4?$AA9?$AA6?$AA3?$AAF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@NPOIGDNK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@BHDHHEGO@?$AA?$HL?$AAE?$AAB?$AA9?$AA1?$AAC?$AA7?$AAC?$AA9?$AA?9?$AA8?$AAB?$AAF?$AA6?$AA?9?$AA4?$AAa?$AA2?$AAd?$AA?9?$AA9?$AAA?$AAB?$AA8?$AA?9?$AA6?$AA9?$AA7?$AA2?$AA4?$AAE?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@EALEAAGD@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAd?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@CIOFCGCG@?$AA?$HL?$AA9?$AA8?$AAC?$AA5?$AA2?$AA5?$AA0?$AAD?$AA?9?$AAC?$AA2?$AA9?$AAA?$AA?9?$AA4?$AA9?$AA8?$AA5?$AA?9?$AAA?$AAE?$AA5?$AAF?$AA?9?$AAA?$AAF?$AAE?$AA5?$AA3?$AA6?$AA7@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@PCIIHMIA@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAN?$AAD?$AAI?$AAS?$AA?5?$AA?$CI?$AAn?$AAe?$AAt?$AAw?$AAo?$AAr?$AAk?$AA?$CJ?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PMNKCEGP@?$AA?$HL?$AA0?$AA0?$AA0?$AA7?$AAA?$AAE?$AA3?$AAD?$AA?9?$AA4?$AA1?$AA3?$AAC?$AA?9?$AA4?$AAE?$AA7?$AAE?$AA?9?$AA8?$AA7?$AA8?$AA6?$AA?9?$AAE?$AA2?$AAA?$AA6?$AA9?$AA6?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@EHADOCBC@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAb?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PLIOFAOC@?$AA?$HL?$AA7?$AA1?$AA1?$AA9?$AA7?$AA7?$AA6?$AAD?$AA?9?$AA9?$AAF?$AA2?$AA3?$AA?9?$AA4?$AAE?$AA4?$AAE?$AA?9?$AA9?$AAD?$AA9?$AAB?$AA?9?$AA9?$AAA?$AAE?$AA9?$AA6?$AA2?$AA7@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@OIKIJDPK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AAu?$AAc?$AAh?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@LEOLOBOG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AAw?$AAh?$AAi?$AAl?$AAe?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAo?$AAr?$AA?5?$AAw@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|PlatformValidatePMRegistry|
	IMPORT	|RegCreateKeyExW|
	IMPORT	|RegSetValueExW|
	IMPORT	|RegCloseKey|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PlatformValidatePMRegistry| DCD imagerel |$LN36@PlatformVa|
	DCD	0x2f40355

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@LEOLOBOG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AAw?$AAh?$AAi?$AAl?$AAe?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAo?$AAr?$AA?5?$AAw@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "w", 0x0, "h", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "c", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u"
	DCB	0x0, "e", 0x0, "s", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "\\", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@OIKIJDPK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AAu?$AAc?$AAh?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, "u", 0x0, "c", 0x0, "h", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PLIOFAOC@?$AA?$HL?$AA7?$AA1?$AA1?$AA9?$AA7?$AA7?$AA6?$AAD?$AA?9?$AA9?$AAF?$AA2?$AA3?$AA?9?$AA4?$AAE?$AA4?$AAE?$AA?9?$AA9?$AAD?$AA9?$AAB?$AA?9?$AA9?$AAA?$AAE?$AA9?$AA6?$AA2?$AA7@| DCB "{"
	DCB	0x0, "7", 0x0, "1", 0x0, "1", 0x0, "9", 0x0, "7", 0x0, "7"
	DCB	0x0, "6", 0x0, "D", 0x0, "-", 0x0, "9", 0x0, "F", 0x0, "2"
	DCB	0x0, "3", 0x0, "-", 0x0, "4", 0x0, "E", 0x0, "4", 0x0, "E"
	DCB	0x0, "-", 0x0, "9", 0x0, "D", 0x0, "9", 0x0, "B", 0x0, "-"
	DCB	0x0, "9", 0x0, "A", 0x0, "E", 0x0, "9", 0x0, "6", 0x0, "2"
	DCB	0x0, "7", 0x0, "3", 0x0, "3", 0x0, "7", 0x0, "7", 0x0, "0"
	DCB	0x0, "}", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@EHADOCBC@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAb?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, " ", 0x0, "b", 0x0, "a"
	DCB	0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i", 0x0, "g", 0x0, "h"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PMNKCEGP@?$AA?$HL?$AA0?$AA0?$AA0?$AA7?$AAA?$AAE?$AA3?$AAD?$AA?9?$AA4?$AA1?$AA3?$AAC?$AA?9?$AA4?$AAE?$AA7?$AAE?$AA?9?$AA8?$AA7?$AA8?$AA6?$AA?9?$AAE?$AA2?$AAA?$AA6?$AA9?$AA6?$AAE@| DCB "{"
	DCB	0x0, "0", 0x0, "0", 0x0, "0", 0x0, "7", 0x0, "A", 0x0, "E"
	DCB	0x0, "3", 0x0, "D", 0x0, "-", 0x0, "4", 0x0, "1", 0x0, "3"
	DCB	0x0, "C", 0x0, "-", 0x0, "4", 0x0, "E", 0x0, "7", 0x0, "E"
	DCB	0x0, "-", 0x0, "8", 0x0, "7", 0x0, "8", 0x0, "6", 0x0, "-"
	DCB	0x0, "E", 0x0, "2", 0x0, "A", 0x0, "6", 0x0, "9", 0x0, "6"
	DCB	0x0, "E", 0x0, "7", 0x0, "3", 0x0, "A", 0x0, "6", 0x0, "E"
	DCB	0x0, "}", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@PCIIHMIA@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAN?$AAD?$AAI?$AAS?$AA?5?$AA?$CI?$AAn?$AAe?$AAt?$AAw?$AAo?$AAr?$AAk?$AA?$CJ?$AA?5@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, " ", 0x0, "N", 0x0, "D"
	DCB	0x0, "I", 0x0, "S", 0x0, " ", 0x0, "(", 0x0, "n", 0x0, "e"
	DCB	0x0, "t", 0x0, "w", 0x0, "o", 0x0, "r", 0x0, "k", 0x0, ")"
	DCB	0x0, " ", 0x0, "m", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "p"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@CIOFCGCG@?$AA?$HL?$AA9?$AA8?$AAC?$AA5?$AA2?$AA5?$AA0?$AAD?$AA?9?$AAC?$AA2?$AA9?$AAA?$AA?9?$AA4?$AA9?$AA8?$AA5?$AA?9?$AAA?$AAE?$AA5?$AAF?$AA?9?$AAA?$AAF?$AAE?$AA5?$AA3?$AA6?$AA7@| DCB "{"
	DCB	0x0, "9", 0x0, "8", 0x0, "C", 0x0, "5", 0x0, "2", 0x0, "5"
	DCB	0x0, "0", 0x0, "D", 0x0, "-", 0x0, "C", 0x0, "2", 0x0, "9"
	DCB	0x0, "A", 0x0, "-", 0x0, "4", 0x0, "9", 0x0, "8", 0x0, "5"
	DCB	0x0, "-", 0x0, "A", 0x0, "E", 0x0, "5", 0x0, "F", 0x0, "-"
	DCB	0x0, "A", 0x0, "F", 0x0, "E", 0x0, "5", 0x0, "3", 0x0, "6"
	DCB	0x0, "7", 0x0, "E", 0x0, "5", 0x0, "0", 0x0, "0", 0x0, "6"
	DCB	0x0, "}", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@EALEAAGD@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAd?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, " ", 0x0, "d", 0x0, "i"
	DCB	0x0, "s", 0x0, "p", 0x0, "l", 0x0, "a", 0x0, "y", 0x0, " "
	DCB	0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@BHDHHEGO@?$AA?$HL?$AAE?$AAB?$AA9?$AA1?$AAC?$AA7?$AAC?$AA9?$AA?9?$AA8?$AAB?$AAF?$AA6?$AA?9?$AA4?$AAa?$AA2?$AAd?$AA?9?$AA9?$AAA?$AAB?$AA8?$AA?9?$AA6?$AA9?$AA7?$AA2?$AA4?$AAE?$AAE@| DCB "{"
	DCB	0x0, "E", 0x0, "B", 0x0, "9", 0x0, "1", 0x0, "C", 0x0, "7"
	DCB	0x0, "C", 0x0, "9", 0x0, "-", 0x0, "8", 0x0, "B", 0x0, "F"
	DCB	0x0, "6", 0x0, "-", 0x0, "4", 0x0, "a", 0x0, "2", 0x0, "d"
	DCB	0x0, "-", 0x0, "9", 0x0, "A", 0x0, "B", 0x0, "8", 0x0, "-"
	DCB	0x0, "6", 0x0, "9", 0x0, "7", 0x0, "2", 0x0, "4", 0x0, "E"
	DCB	0x0, "E", 0x0, "D", 0x0, "9", 0x0, "7", 0x0, "D", 0x0, "1"
	DCB	0x0, "}", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@NPOIGDNK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "-", 0x0, "m"
	DCB	0x0, "a", 0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, " ", 0x0, "b", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@JGHMMDDC@?$AA?$HL?$AA8?$AAD?$AAD?$AA6?$AA7?$AA9?$AAC?$AAE?$AA?9?$AA8?$AAA?$AAB?$AA4?$AA?9?$AA4?$AA3?$AAc?$AA8?$AA?9?$AAA?$AA1?$AA4?$AAA?$AA?9?$AAE?$AAA?$AA4?$AA9?$AA6?$AA3?$AAF@| DCB "{"
	DCB	0x0, "8", 0x0, "D", 0x0, "D", 0x0, "6", 0x0, "7", 0x0, "9"
	DCB	0x0, "C", 0x0, "E", 0x0, "-", 0x0, "8", 0x0, "A", 0x0, "B"
	DCB	0x0, "4", 0x0, "-", 0x0, "4", 0x0, "3", 0x0, "c", 0x0, "8"
	DCB	0x0, "-", 0x0, "A", 0x0, "1", 0x0, "4", 0x0, "A", 0x0, "-"
	DCB	0x0, "E", 0x0, "A", 0x0, "4", 0x0, "9", 0x0, "6", 0x0, "3"
	DCB	0x0, "F", 0x0, "A", 0x0, "A", 0x0, "7", 0x0, "1", 0x0, "5"
	DCB	0x0, "}", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@GFDKAMGI@?$AAG?$AAe?$AAn?$AAe?$AAr?$AAi?$AAc?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs@| DCB "G"
	DCB	0x0, "e", 0x0, "n", 0x0, "e", 0x0, "r", 0x0, "i", 0x0, "c"
	DCB	0x0, " ", 0x0, "p", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, "-", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "a", 0x0, "g"
	DCB	0x0, "e", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PDJDFFAK@?$AA?$HL?$AAA?$AA3?$AA2?$AA9?$AA4?$AA2?$AAB?$AA7?$AA?9?$AA9?$AA2?$AA0?$AAC?$AA?9?$AA4?$AA8?$AA6?$AAb?$AA?9?$AAB?$AA0?$AAE?$AA6?$AA?9?$AA9?$AA2?$AAA?$AA7?$AA0?$AA2?$AAA@| DCB "{"
	DCB	0x0, "A", 0x0, "3", 0x0, "2", 0x0, "9", 0x0, "4", 0x0, "2"
	DCB	0x0, "B", 0x0, "7", 0x0, "-", 0x0, "9", 0x0, "2", 0x0, "0"
	DCB	0x0, "C", 0x0, "-", 0x0, "4", 0x0, "8", 0x0, "6", 0x0, "b"
	DCB	0x0, "-", 0x0, "B", 0x0, "0", 0x0, "E", 0x0, "6", 0x0, "-"
	DCB	0x0, "9", 0x0, "2", 0x0, "A", 0x0, "7", 0x0, "0", 0x0, "2"
	DCB	0x0, "A", 0x0, "9", 0x0, "9", 0x0, "B", 0x0, "3", 0x0, "5"
	DCB	0x0, "}", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@JELGADA@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@EBNDLHBI@?$AAP?$AAa?$AAg?$AAe?$AAO?$AAu?$AAt?$AAA?$AAl?$AAl?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?$AA@| DCB "P"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, "O", 0x0, "u", 0x0, "t"
	DCB	0x0, "A", 0x0, "l", 0x0, "l", 0x0, "M", 0x0, "o", 0x0, "d"
	DCB	0x0, "u", 0x0, "l", 0x0, "e", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@MEOJPGLP@?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAB?$AAu?$AAt?$AAt?$AAo?$AAn?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?$AA@| DCB "S"
	DCB	0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "B"
	DCB	0x0, "u", 0x0, "t", 0x0, "t", 0x0, "o", 0x0, "n", 0x0, "R"
	DCB	0x0, "e", 0x0, "l", 0x0, "e", 0x0, "a", 0x0, "s", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@OBINEGAB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAs?$AA?5?$AA?$CF?$AAd@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'"
	DCB	0x0, ",", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "\\"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "\\"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "\\", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@MCBMLNCL@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAP?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?$AA@| DCB "P"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "V", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "P", 0x0, "M", 0x0, "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r"
	DCB	0x0, "y", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "+", 0x0
	DCB	"%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PlatformValidatePMRegistry| PROC

; 128  : {

  00000		 |$LN36@PlatformVa|
  00000	e92d 49f0	 push        {r4-r8,r11,lr}
  00004	f20d 0b14	 addw        r11,sp,#0x14
  00008	b08b		 sub         sp,sp,#0x2C
  0000a		 |$M34|

; 129  : 	HKEY hkPM = NULL, hkSubkey;
; 130  : 	LPTSTR pszSubKey;
; 131  : 	DWORD dwStatus = ERROR_GEN_FAILURE;
; 132  : 	DWORD dwDisposition;
; 133  : 
; 134  : 	SETFNAME (_T ("PlatformValidatePMRegistry"));
; 135  : 
; 136  : 	PMLOGMSG (ZONE_INIT, (_T ("+%s\r\n"), pszFname));

  0000a	4d7e		 ldr         r5,|$LN61@PlatformVa| ; =|dpCurSettings|
  0000c	2300		 movs        r3,#0
  0000e	9307		 str         r3,[sp,#0x1C]
  00010	f8d5 3440	 ldr         r3,[r5,#0x440]
  00014	f013 0f04	 tst         r3,#4
  00018	d003		 beq         |$LN17@PlatformVa|
  0001a	4879		 ldr         r0,|$LN60@PlatformVa| ; =|??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0001c	4963		 ldr         r1,|$LN39@PlatformVa| ; =|??_C@_1DG@MCBMLNCL@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAP?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?$AA@|
  0001e	f000 f800	 bl          CeLogMsg
  00022		 |$LN17@PlatformVa|

; 137  : 
; 138  : 	// Open the Power Manager registry key:
; 139  : 
; 140  : 	dwStatus = RegCreateKeyEx (HKEY_LOCAL_MACHINE, PWRMGR_REG_KEY, 0, NULL, 0, 0, NULL,
; 141  : 							   &hkPM, &dwDisposition);

  00022	ab0a		 add         r3,sp,#0x28
  00024	9304		 str         r3,[sp,#0x10]
  00026	ab07		 add         r3,sp,#0x1C
  00028	9303		 str         r3,[sp,#0xC]
  0002a	2301		 movs        r3,#1
  0002c	4961		 ldr         r1,|$LN41@PlatformVa| ; =|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  0002e	07d8		 lsls        r0,r3,#0x1F
  00030	2700		 movs        r7,#0
  00032	3002		 adds        r0,#2
  00034	2300		 movs        r3,#0
  00036	2200		 movs        r2,#0
  00038	9702		 str         r7,[sp,#8]
  0003a	9701		 str         r7,[sp,#4]
  0003c	9700		 str         r7,[sp]
  0003e	f000 f800	 bl          RegCreateKeyExW
  00042	4604		 mov         r4,r0

; 142  : 	if (dwStatus != ERROR_SUCCESS)

  00044	b164		 cbz         r4,|$LN28@PlatformVa|

; 143  : 	{
; 144  : 		PMLOGMSG (ZONE_ERROR, (_T ("%s: can't open '%s', error is %d\r\n"), pszFname,
; 145  : 							   PWRMGR_REG_KEY, dwStatus));

  00046	f8d5 3440	 ldr         r3,[r5,#0x440]
  0004a	f013 0f01	 tst         r3,#1
  0004e	f000 809a	 beq         |$LN30@PlatformVa|
  00052	486a		 ldr         r0,|$LN59@PlatformVa| ; =|??_C@_1EG@OBINEGAB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAs?$AA?5?$AA?$CF?$AAd@|
  00054	4a57		 ldr         r2,|$LN41@PlatformVa| ; =|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  00056	4955		 ldr         r1,|$LN39@PlatformVa| ; =|??_C@_1DG@MCBMLNCL@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAP?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?$AA@|
  00058	4623		 mov         r3,r4
  0005a	f000 f800	 bl          CeLogMsg

; 146  : 	}
; 147  : 
; 148  :     // The registry key exists. Examine registry values and set global variables according
; 149  :     // to registry settings:
; 150  : 
; 151  : 	if (dwStatus == ERROR_SUCCESS && dwDisposition != REG_CREATED_NEW_KEY)

  0005e	e092		 b           |$LN30@PlatformVa|
  00060		 |$LN28@PlatformVa|
  00060	9b0a		 ldr         r3,[sp,#0x28]
  00062	2b01		 cmp         r3,#1
  00064	d023		 beq         |$LN10@PlatformVa|

; 152  : 	{   // Exit Key.
; 153  : 		DWORD dwValue = 0;

  00066	2300		 movs        r3,#0
  00068	9308		 str         r3,[sp,#0x20]

; 154  : 		DWORD dwSize = sizeof (DWORD);
; 155  : 
; 156  : 		if (RegQueryTypedValue (hkPM, PM_SUPPORT_PB_RELEASE, &dwValue, &dwSize, REG_DWORD) == ERROR_SUCCESS)

  0006a	4963		 ldr         r1,|$LN58@PlatformVa| ; =|??_C@_1DE@MEOJPGLP@?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAB?$AAu?$AAt?$AAt?$AAo?$AAn?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?$AA@|
  0006c	9807		 ldr         r0,[sp,#0x1C]
  0006e	2304		 movs        r3,#4
  00070	9309		 str         r3,[sp,#0x24]
  00072	2604		 movs        r6,#4
  00074	ab09		 add         r3,sp,#0x24
  00076	aa08		 add         r2,sp,#0x20
  00078	9600		 str         r6,[sp]
  0007a	f000 f800	 bl          RegQueryTypedValue
  0007e	4c5d		 ldr         r4,|$LN57@PlatformVa| ; =|?gfSupportPowerButtonRelease@@3HA|
  00080	b928		 cbnz        r0,|$LN22@PlatformVa|

; 157  : 		{
; 158  : 			gfSupportPowerButtonRelease = (dwValue != 0);

  00082	9b08		 ldr         r3,[sp,#0x20]
  00084	b10b		 cbz         r3,|$LN21@PlatformVa|
  00086	2301		 movs        r3,#1
  00088	e000		 b           |$LN31@PlatformVa|
  0008a		 |$LN21@PlatformVa|
  0008a	2300		 movs        r3,#0
  0008c		 |$LN31@PlatformVa|
  0008c	6023		 str         r3,[r4]
  0008e		 |$LN22@PlatformVa|

; 159  : 		}
; 160  : 		dwSize = sizeof (dwSize);
; 161  : 		if (RegQueryTypedValue (hkPM, L"PageOutAllModules", &dwValue, &dwSize, REG_DWORD) == ERROR_SUCCESS && dwValue != 0)

  0008e	4958		 ldr         r1,|$LN56@PlatformVa| ; =|??_C@_1CE@EBNDLHBI@?$AAP?$AAa?$AAg?$AAe?$AAO?$AAu?$AAt?$AAA?$AAl?$AAl?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?$AA@|
  00090	9807		 ldr         r0,[sp,#0x1C]
  00092	2304		 movs        r3,#4
  00094	9309		 str         r3,[sp,#0x24]
  00096	ab09		 add         r3,sp,#0x24
  00098	aa08		 add         r2,sp,#0x20
  0009a	9600		 str         r6,[sp]
  0009c	f000 f800	 bl          RegQueryTypedValue
  000a0	b918		 cbnz        r0,|$LN11@PlatformVa|
  000a2	9b08		 ldr         r3,[sp,#0x20]
  000a4	b10b		 cbz         r3,|$LN11@PlatformVa|

; 162  : 			gfPageOutAllModules = TRUE;

  000a6	2301		 movs        r3,#1

; 163  : 		else

  000a8	e000		 b           |$LN32@PlatformVa|
  000aa		 |$LN11@PlatformVa|

; 164  : 			gfPageOutAllModules = FALSE;

  000aa	2300		 movs        r3,#0
  000ac		 |$LN32@PlatformVa|
  000ac	6063		 str         r3,[r4,#4]
  000ae		 |$LN10@PlatformVa|

; 165  : 	}
; 166  : 
; 167  : 	// Verify interface GUIDs:
; 168  : 
; 169  : 	if (dwStatus == ERROR_SUCCESS)
; 170  : 	{
; 171  : 		pszSubKey = _T ("Interfaces");
; 172  : 		dwStatus = RegCreateKeyEx (hkPM, pszSubKey, 0, NULL, 0, 0, NULL, &hkSubkey, &dwDisposition);

  000ae	ab0a		 add         r3,sp,#0x28
  000b0	4e4e		 ldr         r6,|$LN55@PlatformVa| ; =|??_C@_1BG@JELGADA@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?$AA@|
  000b2	9304		 str         r3,[sp,#0x10]
  000b4	9807		 ldr         r0,[sp,#0x1C]
  000b6	ab06		 add         r3,sp,#0x18
  000b8	9303		 str         r3,[sp,#0xC]
  000ba	2300		 movs        r3,#0
  000bc	2200		 movs        r2,#0
  000be	4631		 mov         r1,r6
  000c0	9702		 str         r7,[sp,#8]
  000c2	9701		 str         r7,[sp,#4]
  000c4	9700		 str         r7,[sp]
  000c6	f000 f800	 bl          RegCreateKeyExW
  000ca	4604		 mov         r4,r0

; 173  : 		if (dwStatus == ERROR_SUCCESS)

  000cc	2c00		 cmp         r4,#0
  000ce	d14e		 bne         |$LN27@PlatformVa|

; 174  : 		{
; 175  : 			if (dwDisposition == REG_CREATED_NEW_KEY)

  000d0	9b0a		 ldr         r3,[sp,#0x28]
  000d2	2b01		 cmp         r3,#1
  000d4	d147		 bne         |$LN2@PlatformVa|

; 176  : 			{
; 177  :                 // GUIDs for these interface classes are defined in public\COMMONk\oak\files\common.reg
; 178  :                 // and in public\COMMON\sdk\inc\pm.h
; 179  : 
; 180  : 				LPTSTR pszName = PMCLASS_GENERIC_DEVICE;
; 181  : 				LPTSTR pszValue = _T ("Generic power-manageable devices");
; 182  : 
; 183  : 				dwStatus = RegSetValueEx (hkSubkey, pszName, 0, REG_SZ, (LPBYTE) pszValue,
; 184  : 										  (_tcslen (pszValue) + 1) * sizeof (*pszValue));

  000d6	4b44		 ldr         r3,|$LN54@PlatformVa| ; =|??_C@_1EC@GFDKAMGI@?$AAG?$AAe?$AAn?$AAe?$AAr?$AAi?$AAc?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs@|
  000d8	4942		 ldr         r1,|$LN53@PlatformVa| ; =|??_C@_1EO@PDJDFFAK@?$AA?$HL?$AAA?$AA3?$AA2?$AA9?$AA4?$AA2?$AAB?$AA7?$AA?9?$AA9?$AA2?$AA0?$AAC?$AA?9?$AA4?$AA8?$AA6?$AAb?$AA?9?$AAB?$AA0?$AAE?$AA6?$AA?9?$AA9?$AA2?$AAA?$AA7?$AA0?$AA2?$AAA@|
  000da	9806		 ldr         r0,[sp,#0x18]
  000dc	9300		 str         r3,[sp]
  000de	2742		 movs        r7,#0x42
  000e0	2301		 movs        r3,#1
  000e2	2200		 movs        r2,#0
  000e4	9701		 str         r7,[sp,#4]
  000e6	f000 f800	 bl          RegSetValueExW
  000ea	4604		 mov         r4,r0

; 185  : 				if (dwStatus == ERROR_SUCCESS)

  000ec	bbdc		 cbnz        r4,|$LN2@PlatformVa|

; 186  : 				{
; 187  : 					pszName = PMCLASS_BLOCK_DEVICE;
; 188  : 					pszValue = _T ("Power-manageable block devices");
; 189  : 					dwStatus = RegSetValueEx (hkSubkey, pszName, 0, REG_SZ, (LPBYTE) pszValue,
; 190  : 											  (_tcslen (pszValue) + 1) * sizeof (*pszValue));

  000ee	4b3c		 ldr         r3,|$LN52@PlatformVa| ; =|??_C@_1DO@NPOIGDNK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@|
  000f0	493a		 ldr         r1,|$LN51@PlatformVa| ; =|??_C@_1EO@JGHMMDDC@?$AA?$HL?$AA8?$AAD?$AAD?$AA6?$AA7?$AA9?$AAC?$AAE?$AA?9?$AA8?$AAA?$AAB?$AA4?$AA?9?$AA4?$AA3?$AAc?$AA8?$AA?9?$AAA?$AA1?$AA4?$AAA?$AA?9?$AAE?$AAA?$AA4?$AA9?$AA6?$AA3?$AAF@|
  000f2	9806		 ldr         r0,[sp,#0x18]
  000f4	9300		 str         r3,[sp]
  000f6	f04f 083e	 mov         r8,#0x3E
  000fa	2301		 movs        r3,#1
  000fc	2200		 movs        r2,#0
  000fe	f8cd 8004	 str         r8,[sp,#4]
  00102	f000 f800	 bl          RegSetValueExW
  00106	4604		 mov         r4,r0

; 191  : 				}
; 192  : 				if (dwStatus == ERROR_SUCCESS)

  00108	bb6c		 cbnz        r4,|$LN2@PlatformVa|

; 193  : 				{
; 194  : 					pszName = PMCLASS_DISPLAY;
; 195  : 					pszValue = _T ("Power-manageable display drivers");
; 196  : 					dwStatus = RegSetValueEx (hkSubkey, pszName, 0, REG_SZ, (LPBYTE) pszValue,
; 197  : 											  (_tcslen (pszValue) + 1) * sizeof (*pszValue));

  0010a	4b33		 ldr         r3,|$LN50@PlatformVa| ; =|??_C@_1EC@EALEAAGD@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAd?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs@|
  0010c	4931		 ldr         r1,|$LN49@PlatformVa| ; =|??_C@_1EO@BHDHHEGO@?$AA?$HL?$AAE?$AAB?$AA9?$AA1?$AAC?$AA7?$AAC?$AA9?$AA?9?$AA8?$AAB?$AAF?$AA6?$AA?9?$AA4?$AAa?$AA2?$AAd?$AA?9?$AA9?$AAA?$AAB?$AA8?$AA?9?$AA6?$AA9?$AA7?$AA2?$AA4?$AAE?$AAE@|
  0010e	9806		 ldr         r0,[sp,#0x18]
  00110	9300		 str         r3,[sp]
  00112	2301		 movs        r3,#1
  00114	2200		 movs        r2,#0
  00116	9701		 str         r7,[sp,#4]
  00118	f000 f800	 bl          RegSetValueExW
  0011c	4604		 mov         r4,r0

; 198  : 				}
; 199  : 				if (dwStatus == ERROR_SUCCESS)

  0011e	bb14		 cbnz        r4,|$LN2@PlatformVa|

; 200  : 				{
; 201  : 					pszName = PMCLASS_NDIS_MINIPORT;
; 202  : 					pszValue = _T ("Power-manageable NDIS (network) miniport devices");
; 203  : 					dwStatus = RegSetValueEx (hkSubkey, pszName, 0, REG_SZ, (LPBYTE) pszValue,
; 204  : 											  (_tcslen (pszValue) + 1) * sizeof (*pszValue));

  00120	2362		 movs        r3,#0x62
  00122	9301		 str         r3,[sp,#4]
  00124	4b2a		 ldr         r3,|$LN48@PlatformVa| ; =|??_C@_1GC@PCIIHMIA@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAN?$AAD?$AAI?$AAS?$AA?5?$AA?$CI?$AAn?$AAe?$AAt?$AAw?$AAo?$AAr?$AAk?$AA?$CJ?$AA?5@|
  00126	4929		 ldr         r1,|$LN47@PlatformVa| ; =|??_C@_1EO@CIOFCGCG@?$AA?$HL?$AA9?$AA8?$AAC?$AA5?$AA2?$AA5?$AA0?$AAD?$AA?9?$AAC?$AA2?$AA9?$AAA?$AA?9?$AA4?$AA9?$AA8?$AA5?$AA?9?$AAA?$AAE?$AA5?$AAF?$AA?9?$AAA?$AAF?$AAE?$AA5?$AA3?$AA6?$AA7@|
  00128	9806		 ldr         r0,[sp,#0x18]
  0012a	9300		 str         r3,[sp]
  0012c	2301		 movs        r3,#1
  0012e	2200		 movs        r2,#0
  00130	f000 f800	 bl          RegSetValueExW
  00134	4604		 mov         r4,r0

; 205  : 				}
; 206  : 				if (dwStatus == ERROR_SUCCESS)

  00136	b9b4		 cbnz        r4,|$LN2@PlatformVa|

; 207  : 				{
; 208  : 					pszName = PMCLASS_BACKLIGHT;
; 209  : 					pszValue = _T ("Power-manageable backlight");
; 210  : 					dwStatus = RegSetValueEx (hkSubkey, pszName, 0, REG_SZ, (LPBYTE) pszValue,
; 211  : 											  (_tcslen (pszValue) + 1) * sizeof (*pszValue));

  00138	2336		 movs        r3,#0x36
  0013a	9301		 str         r3,[sp,#4]
  0013c	4b22		 ldr         r3,|$LN46@PlatformVa| ; =|??_C@_1DG@EHADOCBC@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAb?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@|
  0013e	4921		 ldr         r1,|$LN45@PlatformVa| ; =|??_C@_1EO@PMNKCEGP@?$AA?$HL?$AA0?$AA0?$AA0?$AA7?$AAA?$AAE?$AA3?$AAD?$AA?9?$AA4?$AA1?$AA3?$AAC?$AA?9?$AA4?$AAE?$AA7?$AAE?$AA?9?$AA8?$AA7?$AA8?$AA6?$AA?9?$AAE?$AA2?$AAA?$AA6?$AA9?$AA6?$AAE@|
  00140	9806		 ldr         r0,[sp,#0x18]
  00142	9300		 str         r3,[sp]
  00144	2301		 movs        r3,#1
  00146	2200		 movs        r2,#0
  00148	f000 f800	 bl          RegSetValueExW
  0014c	4604		 mov         r4,r0

; 212  : 				}
; 213  : 				if (dwStatus == ERROR_SUCCESS)

  0014e	b954		 cbnz        r4,|$LN2@PlatformVa|

; 214  : 				{
; 215  : 					pszName = PMCLASS_TOUCH;
; 216  : 					pszValue = _T ("Power-manageable touch devices");
; 217  : 					dwStatus = RegSetValueEx (hkSubkey, pszName, 0, REG_SZ, (LPBYTE) pszValue,
; 218  : 											  (_tcslen (pszValue) + 1) * sizeof (*pszValue));

  00150	4b1b		 ldr         r3,|$LN44@PlatformVa| ; =|??_C@_1DO@OIKIJDPK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AAu?$AAc?$AAh?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@|
  00152	491a		 ldr         r1,|$LN43@PlatformVa| ; =|??_C@_1EO@PLIOFAOC@?$AA?$HL?$AA7?$AA1?$AA1?$AA9?$AA7?$AA7?$AA6?$AAD?$AA?9?$AA9?$AAF?$AA2?$AA3?$AA?9?$AA4?$AAE?$AA4?$AAE?$AA?9?$AA9?$AAD?$AA9?$AAB?$AA?9?$AA9?$AAA?$AAE?$AA9?$AA6?$AA2?$AA7@|
  00154	9806		 ldr         r0,[sp,#0x18]
  00156	9300		 str         r3,[sp]
  00158	2301		 movs        r3,#1
  0015a	2200		 movs        r2,#0
  0015c	f8cd 8004	 str         r8,[sp,#4]
  00160	f000 f800	 bl          RegSetValueExW
  00164	4604		 mov         r4,r0
  00166		 |$LN2@PlatformVa|

; 219  : 				}
; 220  :                 // Other power-manageable device classes can be added here.
; 221  : 			}
; 222  : 			RegCloseKey (hkSubkey);

  00166	9806		 ldr         r0,[sp,#0x18]
  00168	f000 f800	 bl          RegCloseKey

; 223  : 		}
; 224  : 
; 225  : 		PMLOGMSG (dwStatus != ERROR_SUCCESS && ZONE_ERROR,
; 226  : 				  (_T ("%s: error %d while creating or writing values in '%s\\%s'\r\n"), pszFname,
; 227  : 				   dwStatus, PWRMGR_REG_KEY, pszSubKey));

  0016c	b15c		 cbz         r4,|$LN30@PlatformVa|
  0016e		 |$LN27@PlatformVa|

; 143  : 	{
; 144  : 		PMLOGMSG (ZONE_ERROR, (_T ("%s: can't open '%s', error is %d\r\n"), pszFname,
; 145  : 							   PWRMGR_REG_KEY, dwStatus));

  0016e	f8d5 3440	 ldr         r3,[r5,#0x440]

; 223  : 		}
; 224  : 
; 225  : 		PMLOGMSG (dwStatus != ERROR_SUCCESS && ZONE_ERROR,
; 226  : 				  (_T ("%s: error %d while creating or writing values in '%s\\%s'\r\n"), pszFname,
; 227  : 				   dwStatus, PWRMGR_REG_KEY, pszSubKey));

  00172	f013 0f01	 tst         r3,#1
  00176	d006		 beq         |$LN30@PlatformVa|
  00178	480f		 ldr         r0,|$LN42@PlatformVa| ; =|??_C@_1HG@LEOLOBOG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AAw?$AAh?$AAi?$AAl?$AAe?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAo?$AAr?$AA?5?$AAw@|
  0017a	4b0e		 ldr         r3,|$LN41@PlatformVa| ; =|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  0017c	490b		 ldr         r1,|$LN39@PlatformVa| ; =|??_C@_1DG@MCBMLNCL@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAP?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?$AA@|
  0017e	4622		 mov         r2,r4
  00180	9600		 str         r6,[sp]
  00182	f000 f800	 bl          CeLogMsg
  00186		 |$LN30@PlatformVa|

; 228  : 	}
; 229  : 
; 230  : 	// Release resources
; 231  : 
; 232  : 	if (hkPM != NULL)

  00186	9807		 ldr         r0,[sp,#0x1C]
  00188	b108		 cbz         r0,|$LN1@PlatformVa|

; 233  : 		RegCloseKey (hkPM);

  0018a	f000 f800	 bl          RegCloseKey
  0018e		 |$LN1@PlatformVa|

; 143  : 	{
; 144  : 		PMLOGMSG (ZONE_ERROR, (_T ("%s: can't open '%s', error is %d\r\n"), pszFname,
; 145  : 							   PWRMGR_REG_KEY, dwStatus));

  0018e	f8d5 3440	 ldr         r3,[r5,#0x440]

; 234  : 
; 235  : 	PMLOGMSG (ZONE_INIT, (_T ("-%s: returning %d\r\n"), pszFname, dwStatus));

  00192	f013 0f04	 tst         r3,#4
  00196	d004		 beq         |$LN25@PlatformVa|
  00198	4805		 ldr         r0,|$LN40@PlatformVa| ; =|??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0019a	4904		 ldr         r1,|$LN39@PlatformVa| ; =|??_C@_1DG@MCBMLNCL@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAP?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?$AA@|
  0019c	4622		 mov         r2,r4
  0019e	f000 f800	 bl          CeLogMsg
  001a2		 |$LN25@PlatformVa|

; 236  : 
; 237  : 	return dwStatus;
; 238  : }

  001a2	4620		 mov         r0,r4
  001a4		 |$M37|
  001a4	b00b		 add         sp,sp,#0x2C
  001a6	e8bd 89f0	 pop         {r4-r8,r11,pc}
  001aa		 |$LN62@PlatformVa|
  001aa		 |$M63|
  001aa	defe		 __debugbreak
  001ac		 |$LN38@PlatformVa|
  001ac		 |$LN39@PlatformVa|
  001ac	0000 0000	 DCD         |??_C@_1DG@MCBMLNCL@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAP?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?$AA@|
  001b0		 |$LN40@PlatformVa|
  001b0	0000 0000	 DCD         |??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  001b4		 |$LN41@PlatformVa|
  001b4	0000 0000	 DCD         |??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  001b8		 |$LN42@PlatformVa|
  001b8	0000 0000	 DCD         |??_C@_1HG@LEOLOBOG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AAw?$AAh?$AAi?$AAl?$AAe?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAo?$AAr?$AA?5?$AAw@|
  001bc		 |$LN43@PlatformVa|
  001bc	0000 0000	 DCD         |??_C@_1EO@PLIOFAOC@?$AA?$HL?$AA7?$AA1?$AA1?$AA9?$AA7?$AA7?$AA6?$AAD?$AA?9?$AA9?$AAF?$AA2?$AA3?$AA?9?$AA4?$AAE?$AA4?$AAE?$AA?9?$AA9?$AAD?$AA9?$AAB?$AA?9?$AA9?$AAA?$AAE?$AA9?$AA6?$AA2?$AA7@|
  001c0		 |$LN44@PlatformVa|
  001c0	0000 0000	 DCD         |??_C@_1DO@OIKIJDPK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AAu?$AAc?$AAh?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@|
  001c4		 |$LN45@PlatformVa|
  001c4	0000 0000	 DCD         |??_C@_1EO@PMNKCEGP@?$AA?$HL?$AA0?$AA0?$AA0?$AA7?$AAA?$AAE?$AA3?$AAD?$AA?9?$AA4?$AA1?$AA3?$AAC?$AA?9?$AA4?$AAE?$AA7?$AAE?$AA?9?$AA8?$AA7?$AA8?$AA6?$AA?9?$AAE?$AA2?$AAA?$AA6?$AA9?$AA6?$AAE@|
  001c8		 |$LN46@PlatformVa|
  001c8	0000 0000	 DCD         |??_C@_1DG@EHADOCBC@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAb?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@|
  001cc		 |$LN47@PlatformVa|
  001cc	0000 0000	 DCD         |??_C@_1EO@CIOFCGCG@?$AA?$HL?$AA9?$AA8?$AAC?$AA5?$AA2?$AA5?$AA0?$AAD?$AA?9?$AAC?$AA2?$AA9?$AAA?$AA?9?$AA4?$AA9?$AA8?$AA5?$AA?9?$AAA?$AAE?$AA5?$AAF?$AA?9?$AAA?$AAF?$AAE?$AA5?$AA3?$AA6?$AA7@|
  001d0		 |$LN48@PlatformVa|
  001d0	0000 0000	 DCD         |??_C@_1GC@PCIIHMIA@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAN?$AAD?$AAI?$AAS?$AA?5?$AA?$CI?$AAn?$AAe?$AAt?$AAw?$AAo?$AAr?$AAk?$AA?$CJ?$AA?5@|
  001d4		 |$LN49@PlatformVa|
  001d4	0000 0000	 DCD         |??_C@_1EO@BHDHHEGO@?$AA?$HL?$AAE?$AAB?$AA9?$AA1?$AAC?$AA7?$AAC?$AA9?$AA?9?$AA8?$AAB?$AAF?$AA6?$AA?9?$AA4?$AAa?$AA2?$AAd?$AA?9?$AA9?$AAA?$AAB?$AA8?$AA?9?$AA6?$AA9?$AA7?$AA2?$AA4?$AAE?$AAE@|
  001d8		 |$LN50@PlatformVa|
  001d8	0000 0000	 DCD         |??_C@_1EC@EALEAAGD@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAd?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AAs@|
  001dc		 |$LN51@PlatformVa|
  001dc	0000 0000	 DCD         |??_C@_1EO@JGHMMDDC@?$AA?$HL?$AA8?$AAD?$AAD?$AA6?$AA7?$AA9?$AAC?$AAE?$AA?9?$AA8?$AAA?$AAB?$AA4?$AA?9?$AA4?$AA3?$AAc?$AA8?$AA?9?$AAA?$AA1?$AA4?$AAA?$AA?9?$AAE?$AAA?$AA4?$AA9?$AA6?$AA3?$AAF@|
  001e0		 |$LN52@PlatformVa|
  001e0	0000 0000	 DCD         |??_C@_1DO@NPOIGDNK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@|
  001e4		 |$LN53@PlatformVa|
  001e4	0000 0000	 DCD         |??_C@_1EO@PDJDFFAK@?$AA?$HL?$AAA?$AA3?$AA2?$AA9?$AA4?$AA2?$AAB?$AA7?$AA?9?$AA9?$AA2?$AA0?$AAC?$AA?9?$AA4?$AA8?$AA6?$AAb?$AA?9?$AAB?$AA0?$AAE?$AA6?$AA?9?$AA9?$AA2?$AAA?$AA7?$AA0?$AA2?$AAA@|
  001e8		 |$LN54@PlatformVa|
  001e8	0000 0000	 DCD         |??_C@_1EC@GFDKAMGI@?$AAG?$AAe?$AAn?$AAe?$AAr?$AAi?$AAc?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?9?$AAm?$AAa?$AAn?$AAa?$AAg?$AAe?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs@|
  001ec		 |$LN55@PlatformVa|
  001ec	0000 0000	 DCD         |??_C@_1BG@JELGADA@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?$AA@|
  001f0		 |$LN56@PlatformVa|
  001f0	0000 0000	 DCD         |??_C@_1CE@EBNDLHBI@?$AAP?$AAa?$AAg?$AAe?$AAO?$AAu?$AAt?$AAA?$AAl?$AAl?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?$AA@|
  001f4		 |$LN57@PlatformVa|
  001f4	0000 0000	 DCD         |?gfSupportPowerButtonRelease@@3HA|
  001f8		 |$LN58@PlatformVa|
  001f8	0000 0000	 DCD         |??_C@_1DE@MEOJPGLP@?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAB?$AAu?$AAt?$AAt?$AAo?$AAn?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?$AA@|
  001fc		 |$LN59@PlatformVa|
  001fc	0000 0000	 DCD         |??_C@_1EG@OBINEGAB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAs?$AA?5?$AA?$CF?$AAd@|
  00200		 |$LN60@PlatformVa|
  00200	0000 0000	 DCD         |??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00204		 |$LN61@PlatformVa|
  00204	0000 0000	 DCD         |dpCurSettings|
  00208		 |$M35|

			 ENDP  ; |PlatformValidatePMRegistry|

	EXPORT	|?LeaveLock@SystemNotifyRegKey@@QAAXXZ|	; SystemNotifyRegKey::LeaveLock
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?LeaveLock@SystemNotifyRegKey@@QAAXXZ| PROC ; SystemNotifyRegKey::LeaveLock
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  00000	3034		 adds        r0,r0,#0x34
  00002		 |$M6|
  00002	f000 9000	 b           LeaveCriticalSection

			 ENDP  ; |?LeaveLock@SystemNotifyRegKey@@QAAXXZ|, SystemNotifyRegKey::LeaveLock

; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Init@RegKeyOrValue@@UAAHXZ| PROC	; RegKeyOrValue::Init

; 40   :     virtual BOOL Init() { return m_lpRegName!=NULL; };

  00000	6843		 ldr         r3,[r0,#4]
  00002	b10b		 cbz         r3,|$LN3@Init|
  00004	2001		 movs        r0,#1
  00006		 |$M6|
  00006	4770		 bx          lr
  00008		 |$LN3@Init|
  00008	2000		 movs        r0,#0
  0000a		 |$M7|
  0000a	4770		 bx          lr

			 ENDP  ; |?Init@RegKeyOrValue@@UAAHXZ|, RegKeyOrValue::Init

	EXPORT	|?Init@RegKey@@UAAHXZ|			; RegKey::Init
	EXPORT	|??_7RegKey@@6B@| [ DATA ]		; RegKey::`vftable'
	EXPORT	|??0RegKey@@QAA@PAUHKEY__@@PBGKPAV0@@Z|	; RegKey::RegKey
	IMPORT	|??_ERegKey@@UAAPAXI@Z|, WEAK |??_GRegKey@@UAAPAXI@Z| ; RegKey::`vector deleting destructor', RegKey::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0RegKey@@QAA@PAUHKEY__@@PBGKPAV0@@Z| DCD imagerel |$LN6@RegKey|
	DCD	0xfd306045

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7RegKey@@6B@| DCD |?Init@RegKey@@UAAHXZ|		; RegKey::`vftable'
	DCD	|??_ERegKey@@UAAPAXI@Z|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0RegKey@@QAA@PAUHKEY__@@PBGKPAV0@@Z| PROC ; RegKey::RegKey

; 110  :     RegKey(HKEY hCurrentOpenKey, LPCTSTR lpKeyPath,DWORD /*dwFlag*/, RegKey * pNextRegKey) : RegKeyOrValue( hCurrentOpenKey,lpKeyPath,pNextRegKey) {

  00000		 |$LN6@RegKey|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	9b04		 ldr         r3,[sp,#0x10]
  0000a	4604		 mov         r4,r0
  0000c	f000 f800	 bl          |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|
  00010	4b04		 ldr         r3,|$LN9@RegKey|	; =|??_7RegKey@@6B@|

; 111  :         m_pRegValueList=NULL;
; 112  :         m_pRegKeyList=NULL;
; 113  :         m_RegKey = NULL;
; 114  :     }

  00012	4620		 mov         r0,r4
  00014	6023		 str         r3,[r4]
  00016	2300		 movs        r3,#0
  00018	6163		 str         r3,[r4,#0x14]
  0001a	61a3		 str         r3,[r4,#0x18]
  0001c	6123		 str         r3,[r4,#0x10]
  0001e		 |$M7|
  0001e	e8bd 8818	 pop         {r3,r4,r11,pc}
  00022		 |$LN10@RegKey|
  00022		 |$M11|
  00022	defe		 __debugbreak
  00024		 |$LN8@RegKey|
  00024		 |$LN9@RegKey|
  00024	0000 0000	 DCD         |??_7RegKey@@6B@|
  00028		 |$M5|

			 ENDP  ; |??0RegKey@@QAA@PAUHKEY__@@PBGKPAV0@@Z|, RegKey::RegKey


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GRegKeyOrValue@@UAAPAXI@Z| DCD imagerel |$LN10@scalar|
	DCD	0x316055
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GRegKeyOrValue@@UAAPAXI@Z| PROC	; RegKeyOrValue::`scalar deleting destructor'
  00000		 |$LN10@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M8|
  00008	4604		 mov         r4,r0

; 42   :         if (m_lpRegName!=NULL)

  0000a	6860		 ldr         r0,[r4,#4]
  0000c	4b07		 ldr         r3,|$LN13@scalar|	; =|??_7RegKeyOrValue@@6B@|
  0000e	460d		 mov         r5,r1
  00010	6023		 str         r3,[r4]
  00012	b108		 cbz         r0,|$LN4@scalar|

; 43   :             delete m_lpRegName;

  00014	f000 f800	 bl          |??3@YAXPAX@Z|
  00018		 |$LN4@scalar|
  00018	f015 0f01	 tst         r5,#1
  0001c	d002		 beq         |$LN1@scalar|
  0001e	4620		 mov         r0,r4
  00020	f000 f800	 bl          |??3@YAXPAX@Z|
  00024		 |$LN1@scalar|
  00024	4620		 mov         r0,r4
  00026		 |$M11|
  00026	e8bd 8830	 pop         {r4,r5,r11,pc}
  0002a		 |$LN14@scalar|
  0002a		 |$M15|
  0002a	defe		 __debugbreak
  0002c		 |$LN12@scalar|
  0002c		 |$LN13@scalar|
  0002c	0000 0000	 DCD         |??_7RegKeyOrValue@@6B@|
  00030		 |$M9|

			 ENDP  ; |??_GRegKeyOrValue@@UAAPAXI@Z|, RegKeyOrValue::`scalar deleting destructor'

	EXPORT	|?DeleteAll@RegKey@@IAAXXZ|		; RegKey::DeleteAll

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?DeleteAll@RegKey@@IAAXXZ| DCD imagerel |$LN24@DeleteAll|
	DCD	0x316085
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?DeleteAll@RegKey@@IAAXXZ| PROC	; RegKey::DeleteAll

; 223  :     void DeleteAll() {

  00000		 |$LN24@DeleteAll|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M22|
  00008	4604		 mov         r4,r0

; 224  :         while (m_pRegValueList) {

  0000a	6963		 ldr         r3,[r4,#0x14]
  0000c	b153		 cbz         r3,|$LN16@DeleteAll|
  0000e		 |$LL4@DeleteAll|

; 225  :             RegValue * pNextRegValue = (RegValue * )m_pRegValueList->GetNextRegKeyOrValuePtr() ;

  0000e	6963		 ldr         r3,[r4,#0x14]
  00010	68dd		 ldr         r5,[r3,#0xC]

; 226  :             delete m_pRegValueList;

  00012	b123		 cbz         r3,|$LN7@DeleteAll|
  00014	4618		 mov         r0,r3
  00016	681b		 ldr         r3,[r3]
  00018	2101		 movs        r1,#1
  0001a	685b		 ldr         r3,[r3,#4]
  0001c	4798		 blx         r3
  0001e		 |$LN7@DeleteAll|

; 227  :             m_pRegValueList = pNextRegValue;

  0001e	6165		 str         r5,[r4,#0x14]
  00020	2d00		 cmp         r5,#0
  00022	d1f4		 bne         |$LL4@DeleteAll|
  00024		 |$LN16@DeleteAll|

; 228  :         }
; 229  :         while (m_pRegKeyList) {

  00024	69a3		 ldr         r3,[r4,#0x18]
  00026	b153		 cbz         r3,|$LN1@DeleteAll|
  00028		 |$LL2@DeleteAll|

; 230  :             RegKey * pNextKey = (RegKey *) m_pRegKeyList->GetNextRegKeyOrValuePtr();

  00028	69a3		 ldr         r3,[r4,#0x18]
  0002a	68dd		 ldr         r5,[r3,#0xC]

; 231  :             delete m_pRegKeyList;

  0002c	b123		 cbz         r3,|$LN9@DeleteAll|
  0002e	4618		 mov         r0,r3
  00030	681b		 ldr         r3,[r3]
  00032	2101		 movs        r1,#1
  00034	685b		 ldr         r3,[r3,#4]
  00036	4798		 blx         r3
  00038		 |$LN9@DeleteAll|

; 232  :             m_pRegKeyList =  pNextKey ;

  00038	61a5		 str         r5,[r4,#0x18]
  0003a	2d00		 cmp         r5,#0
  0003c	d1f4		 bne         |$LL2@DeleteAll|
  0003e		 |$LN1@DeleteAll|
  0003e		 |$M25|

; 233  :         }
; 234  :     }

  0003e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00042		 |$M23|

			 ENDP  ; |?DeleteAll@RegKey@@IAAXXZ|, RegKey::DeleteAll

	EXPORT	|?Init@RegValue@@UAAHXZ|		; RegValue::Init
	EXPORT	|?GetRegValue@RegValue@@UAAHPAXPAK1@Z|	; RegValue::GetRegValue
	EXPORT	|??_7RegValue@@6B@| [ DATA ]		; RegValue::`vftable'
	EXPORT	|??0RegValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| ; RegValue::RegValue
	IMPORT	|??_ERegValue@@UAAPAXI@Z|, WEAK |??_GRegValue@@UAAPAXI@Z| ; RegValue::`vector deleting destructor', RegValue::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0RegValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| DCD imagerel |$LN6@RegValue|
	DCD	0xfd306049

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7RegValue@@6B@| DCD |?Init@RegValue@@UAAHXZ|	; RegValue::`vftable'
	DCD	|??_ERegValue@@UAAPAXI@Z|
	DCD	|?GetRegValue@RegValue@@UAAHPAXPAK1@Z|
	DCD	|?UpdateRegValue@RegValue@@MAAHXZ|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0RegValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| PROC ; RegValue::RegValue

; 60   :     RegValue(HKEY hKey,LPCTSTR lpRegName,RegValue * pNextRegValue ) :  RegKeyOrValue(hKey,lpRegName,pNextRegValue) { 

  00000		 |$LN6@RegValue|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|
  0000e	4b05		 ldr         r3,|$LN9@RegValue|	; =|??_7RegValue@@6B@|

; 61   :         m_dwValueSize=0;
; 62   :         m_lpByteValue = NULL;
; 63   :         UpdateRegValue();

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014	2300		 movs        r3,#0
  00016	6163		 str         r3,[r4,#0x14]
  00018	61a3		 str         r3,[r4,#0x18]
  0001a	f000 f800	 bl          |?UpdateRegValue@RegValue@@MAAHXZ|

; 64   :     };

  0001e	4620		 mov         r0,r4
  00020		 |$M7|
  00020	e8bd 8818	 pop         {r3,r4,r11,pc}
  00024		 |$LN8@RegValue|
  00024		 |$LN9@RegValue|
  00024	0000 0000	 DCD         |??_7RegValue@@6B@|
  00028		 |$M5|

			 ENDP  ; |??0RegValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|, RegValue::RegValue

	EXPORT	|??_C@_1DE@KDIFNMIO@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@FOKODBBI@?$AAP?$AAr?$AAe?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@MIEGLNJC@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@CJKPFBEK@?$AAc?$AAo?$AAr?$AAe?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@EOGAKPPB@?$AAG?$AAw?$AAe?$AAs?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@LIEOBILH@?$AAG?$AAw?$AAe?$AAs?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@IMOGCHJK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAm?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAQ?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@MDBMPGIE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@CJBDBNJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAy?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@HFODHNIK@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|PlatformManageSystemPower|
	IMPORT	|GetPMThreadPriority|
	IMPORT	|LoadLibraryW|
	IMPORT	|PmInitPowerStatus|
	IMPORT	|GetProcAddressW|
	IMPORT	|CreateEventW|
	IMPORT	|PmPolicyCreateNotificationQueue|
	IMPORT	|??0PowerStateManager@@QAA@XZ|		; PowerStateManager::PowerStateManager
	IMPORT	|?Init@PowerStateManager@@QAAHXZ|	; PowerStateManager::Init
	IMPORT	|CloseHandle|
	IMPORT	|PmPolicyCloseNotificationQueue|
	IMPORT	|FreeLibrary|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PlatformManageSystemPower| DCD imagerel |$LN52@PlatformMa|
	DCD	0x35630d

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@HFODHNIK@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@CJBDBNJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAy?$AAs@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "e"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@MDBMPGIE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "M", 0x0, "a", 0x0, "n", 0x0, "a", 0x0, "g"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, "!"
	DCB	0x0, "!", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@IMOGCHJK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAm?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAQ?$AAu@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "P", 0x0, "m", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "i", 0x0, "c", 0x0, "y", 0x0, "C"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "N"
	DCB	0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "i", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "Q"
	DCB	0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "M", 0x0, "a"
	DCB	0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, "/"
	DCB	0x0, "R", 0x0, "e", 0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d"
	DCB	0x0, "A", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i"
	DCB	0x0, "t", 0x0, "y", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@LIEOBILH@?$AAG?$AAw?$AAe?$AAs?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AA@| DCB "G"
	DCB	0x0, "w", 0x0, "e", 0x0, "s", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "D", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@EOGAKPPB@?$AAG?$AAw?$AAe?$AAs?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?$AA@| DCB "G"
	DCB	0x0, "w", 0x0, "e", 0x0, "s", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "U", 0x0, "p", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@CJKPFBEK@?$AAc?$AAo?$AAr?$AAe?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@| DCB "c"
	DCB	0x0, "o", 0x0, "r", 0x0, "e", 0x0, "d", 0x0, "l", 0x0, "l"
	DCB	0x0, ".", 0x0, "d", 0x0, "l", 0x0, "l", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@MIEGLNJC@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| DCB "S"
	DCB	0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "P", 0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "y", 0x0, "2", 0x0, "5", 0x0, "6", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@FOKODBBI@?$AAP?$AAr?$AAe?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| DCB "P"
	DCB	0x0, "r", 0x0, "e", 0x0, "S", 0x0, "u", 0x0, "s", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "P", 0x0, "r", 0x0, "i"
	DCB	0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, "2"
	DCB	0x0, "5", 0x0, "6", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@KDIFNMIO@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| DCB "P"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "M", 0x0, "a", 0x0, "n", 0x0, "a", 0x0, "g"
	DCB	0x0, "e", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "m", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PlatformManageSystemPower| PROC

; 855  : {

  00000		 |$LN52@PlatformMa|
  00000	e92d 4bf0	 push        {r4-r9,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M50|

; 856  : 	BOOL fDone = FALSE;
; 857  : 	HANDLE hqNotify = NULL;
; 858  : 	HMODULE hmCoreDll = NULL;
; 859  : 
; 860  : 	SETFNAME (_T ("PlatformManageSystemPower"));
; 861  : 
; 862  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM, (_T ("+%s\r\n"), pszFname));

  00008	4e6c		 ldr         r6,|$LN68@PlatformMa| ; =|dpCurSettings|
  0000a	f04f 0800	 mov         r8,#0
  0000e	4681		 mov         r9,r0
  00010	f8d6 3440	 ldr         r3,[r6,#0x440]
  00014	f013 0f04	 tst         r3,#4
  00018	d102		 bne         |$LN22@PlatformMa|
  0001a	f413 6f80	 tst         r3,#0x400
  0001e	d003		 beq         |$LN23@PlatformMa|
  00020		 |$LN22@PlatformMa|
  00020	4865		 ldr         r0,|$LN67@PlatformMa| ; =|??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00022	4959		 ldr         r1,|$LN55@PlatformMa| ; =|??_C@_1DE@KDIFNMIO@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@|
  00024	f000 f800	 bl          CeLogMsg
  00028		 |$LN23@PlatformMa|

; 863  : 
; 864  : 	// Initialize globals:
; 865  : 	ghevReloadActivityTimeouts = NULL;

  00028	4c62		 ldr         r4,|$LN66@PlatformMa| ; =|?ghevRestartTimers@@3PAXA|

; 866  : 	ghevRestartTimers = NULL;
; 867  : 
; 868  : 	// Determine thread priority settings while we're suspending (in case
; 869  : 	// of priority inversion):
; 870  : 
; 871  : 	if (!GetPMThreadPriority (_T ("PreSuspendPriority256"), &giPreSuspendPriority))

  0002a	4861		 ldr         r0,|$LN65@PlatformMa| ; =|??_C@_1CM@FOKODBBI@?$AAP?$AAr?$AAe?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
  0002c	2300		 movs        r3,#0
  0002e	f114 0128	 adds        r1,r4,#0x28
  00032	63a3		 str         r3,[r4,#0x38]
  00034	6023		 str         r3,[r4]
  00036	f000 f800	 bl          GetPMThreadPriority
  0003a	b908		 cbnz        r0,|$LN19@PlatformMa|

; 872  : 	{
; 873  : 		giPreSuspendPriority = DEF_PRESUSPEND_THREAD_PRIORITY;

  0003c	23f9		 movs        r3,#0xF9
  0003e	62a3		 str         r3,[r4,#0x28]
  00040		 |$LN19@PlatformMa|

; 874  : 	}
; 875  : 	if (!GetPMThreadPriority (_T ("SuspendPriority256"), &giSuspendPriority))

  00040	485a		 ldr         r0,|$LN64@PlatformMa| ; =|??_C@_1CG@MIEGLNJC@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
  00042	f114 0130	 adds        r1,r4,#0x30
  00046	f000 f800	 bl          GetPMThreadPriority
  0004a	b908		 cbnz        r0,|$LN18@PlatformMa|

; 876  : 	{
; 877  : 		giSuspendPriority = DEF_SUSPEND_THREAD_PRIORITY;

  0004c	2300		 movs        r3,#0
  0004e	6323		 str         r3,[r4,#0x30]
  00050		 |$LN18@PlatformMa|

; 878  : 	}
; 879  : 
; 880  : 	// Get pointers to GWES's suspend/routine APIs.  These require GWES, so the OEM may
; 881  : 	// not have them on this platform.  Also get battery level APIs, which require a
; 882  : 	// battery driver and may not be present.
; 883  : 
; 884  : 	hmCoreDll = (HMODULE) LoadLibrary (_T ("coredll.dll"));

  00050	4855		 ldr         r0,|$LN63@PlatformMa| ; =|??_C@_1BI@CJKPFBEK@?$AAc?$AAo?$AAr?$AAe?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@|
  00052	f000 f800	 bl          LoadLibraryW

; 885  : 	gfGwesReady = FALSE;

  00056	2300		 movs        r3,#0
  00058	6063		 str         r3,[r4,#4]
  0005a	4607		 mov         r7,r0

; 886  : 	PmInitPowerStatus (hmCoreDll);

  0005c	f000 f800	 bl          PmInitPowerStatus

; 887  : 	if (hmCoreDll != NULL)

  00060	b17f		 cbz         r7,|$LN16@PlatformMa|

; 888  : 	{
; 889  : 		gpfnGwesPowerDown = (PFN_GwesPowerDown) GetProcAddress (hmCoreDll, _T ("GwesPowerDown"));

  00062	4950		 ldr         r1,|$LN62@PlatformMa| ; =|??_C@_1BM@LIEOBILH@?$AAG?$AAw?$AAe?$AAs?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AA@|
  00064	4638		 mov         r0,r7
  00066	f000 f800	 bl          GetProcAddressW

; 890  : 		gpfnGwesPowerUp = (PFN_GwesPowerUp) GetProcAddress (hmCoreDll, _T ("GwesPowerUp"));

  0006a	494d		 ldr         r1,|$LN61@PlatformMa| ; =|??_C@_1BI@EOGAKPPB@?$AAG?$AAw?$AAe?$AAs?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?$AA@|
  0006c	63e0		 str         r0,[r4,#0x3C]
  0006e	4638		 mov         r0,r7
  00070	f000 f800	 bl          GetProcAddressW

; 891  : 
; 892  : 		// Do we have both GWES suspend/resume APIs?
; 893  : 		if (gpfnGwesPowerDown == NULL || gpfnGwesPowerUp == NULL)

  00074	6be3		 ldr         r3,[r4,#0x3C]
  00076	6420		 str         r0,[r4,#0x40]
  00078	b103		 cbz         r3,|$LN15@PlatformMa|
  0007a	b910		 cbnz        r0,|$LN16@PlatformMa|
  0007c		 |$LN15@PlatformMa|

; 894  : 		{
; 895  : 			// No, ignore GWES.
; 896  : 			gpfnGwesPowerDown = NULL;

  0007c	2300		 movs        r3,#0
  0007e	63e3		 str         r3,[r4,#0x3C]

; 897  : 			gpfnGwesPowerUp = NULL;

  00080	6423		 str         r3,[r4,#0x40]
  00082		 |$LN16@PlatformMa|

; 898  : 		}
; 899  : 	}
; 900  : 
; 901  : 	// Create events:
; 902  : 	ghevReloadActivityTimeouts =
; 903  : 		CreateEvent (NULL, FALSE, FALSE, _T ("PowerManager/ReloadActivityTimeouts"));

  00082	4b46		 ldr         r3,|$LN60@PlatformMa| ; =|??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@|
  00084	2200		 movs        r2,#0
  00086	2100		 movs        r1,#0
  00088	2000		 movs        r0,#0
  0008a	f000 f800	 bl          CreateEventW
  0008e	63a0		 str         r0,[r4,#0x38]

; 904  : 	ghevRestartTimers = CreateEvent (NULL, FALSE, FALSE, NULL);

  00090	2000		 movs        r0,#0
  00092	2300		 movs        r3,#0
  00094	2200		 movs        r2,#0
  00096	2100		 movs        r1,#0
  00098	f000 f800	 bl          CreateEventW

; 905  : 	if (ghevReloadActivityTimeouts == NULL || ghevRestartTimers == NULL)

  0009c	6ba3		 ldr         r3,[r4,#0x38]
  0009e	6020		 str         r0,[r4]
  000a0	2b00		 cmp         r3,#0
  000a2	d044		 beq         |$LN13@PlatformMa|

; 947  : 		}
; 948  : 	}
; 949  : 
; 950  :   done:

  000a4	4603		 mov         r3,r0
  000a6	2b00		 cmp         r3,#0
  000a8	d041		 beq         |$LN13@PlatformMa|

; 908  : 		goto done;
; 909  : 	}
; 910  : 
; 911  : 	// Create our notification queue:
; 912  : 	hqNotify = PmPolicyCreateNotificationQueue ();

  000aa	f000 f800	 bl          PmPolicyCreateNotificationQueue
  000ae	4680		 mov         r8,r0

; 913  : 	if (hqNotify == NULL)

  000b0	b930		 cbnz        r0,|$LN46@PlatformMa|

; 914  : 	{
; 915  : 		PMLOGMSG (ZONE_WARN, (_T ("%s: PmPolicyCreateNotificationQueue() failed\r\n"), pszFname));

  000b2	f8d6 3440	 ldr         r3,[r6,#0x440]
  000b6	f013 0f02	 tst         r3,#2
  000ba	d041		 beq         |$done$71|
  000bc	4836		 ldr         r0,|$LN59@PlatformMa| ; =|??_C@_1FO@IMOGCHJK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAm?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAQ?$AAu@|

; 947  : 		}
; 948  : 	}
; 949  : 
; 950  :   done:

  000be	e03c		 b           |$LN48@PlatformMa|
  000c0		 |$LN46@PlatformMa|

; 916  : 		goto done;
; 917  : 	}
; 918  : 
; 919  : 	if (!fDone)
; 920  : 	{
; 921  :         // Instantiate the PowerStateManager object and call its Init method:
; 922  : 
; 923  : 		PowerStateManager *pPowerStateManager = new PowerStateManager ();

  000c0	f44f 7025	 mov         r0,#0x294
  000c4	f000 f800	 bl          |??2@YAPAXI@Z|
  000c8	b118		 cbz         r0,|$LN28@PlatformMa|
  000ca	f000 f800	 bl          |??0PowerStateManager@@QAA@XZ|
  000ce	4605		 mov         r5,r0
  000d0	e000		 b           |$LN29@PlatformMa|
  000d2		 |$LN28@PlatformMa|
  000d2	2500		 movs        r5,#0
  000d4		 |$LN29@PlatformMa|

; 924  : 
; 925  : 		if (pPowerStateManager && pPowerStateManager->Init ())

  000d4	b1a5		 cbz         r5,|$LN40@PlatformMa|
  000d6	4628		 mov         r0,r5
  000d8	f000 f800	 bl          |?Init@PowerStateManager@@QAAHXZ|
  000dc	b150		 cbz         r0,|$LN8@PlatformMa|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  000de	2103		 movs        r1,#3
  000e0	4648		 mov         r0,r9
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

; 927  : 			g_pPowerStateManager = pPowerStateManager;

  000e2	6525		 str         r5,[r4,#0x50]
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  000e4	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

; 931  : 			g_pPowerStateManager->ThreadRun ();

  000e8	6d23		 ldr         r3,[r4,#0x50]
  000ea	4618		 mov         r0,r3
  000ec	681b		 ldr         r3,[r3]
  000ee	6a5b		 ldr         r3,[r3,#0x24]
  000f0	4798		 blx         r3

; 932  : 		}
; 933  : 		else

  000f2	e011		 b           |$LN33@PlatformMa|
  000f4		 |$LN8@PlatformMa|
  000f4	4628		 mov         r0,r5
  000f6	f000 f800	 bl          |??1PowerStateManager@@QAA@XZ|
  000fa	4628		 mov         r0,r5
  000fc	f000 f800	 bl          |??3@YAXPAX@Z|
  00100		 |$LN40@PlatformMa|

; 914  : 	{
; 915  : 		PMLOGMSG (ZONE_WARN, (_T ("%s: PmPolicyCreateNotificationQueue() failed\r\n"), pszFname));

  00100	f8d6 3440	 ldr         r3,[r6,#0x440]

; 934  : 		{
; 935  :             // Power Manager initialization failed:
; 936  : 			ASSERT (FALSE);
; 937  : 			if (pPowerStateManager)
; 938  : 				delete pPowerStateManager;
; 939  : 
; 940  : 			PMLOGMSG (ZONE_INIT || ZONE_ERROR,
; 941  : 					  (_T ("%s: PowerStateManager Intialization Failed!!!\r\n"), pszFname));

  00104	f013 0f04	 tst         r3,#4
  00108	d102		 bne         |$LN32@PlatformMa|
  0010a	f013 0f01	 tst         r3,#1
  0010e	d003		 beq         |$LN33@PlatformMa|
  00110		 |$LN32@PlatformMa|
  00110	4820		 ldr         r0,|$LN58@PlatformMa| ; =|??_C@_1GA@MDBMPGIE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt@|
  00112	491d		 ldr         r1,|$LN55@PlatformMa| ; =|??_C@_1DE@KDIFNMIO@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@|
  00114	f000 f800	 bl          CeLogMsg
  00118		 |$LN33@PlatformMa|

; 942  : 		}
; 943  : 		if (g_pPowerStateManager)

  00118	6d25		 ldr         r5,[r4,#0x50]
  0011a	b18d		 cbz         r5,|$done$71|

; 944  : 		{
; 945  : 			delete g_pPowerStateManager;
; 946  : 			g_pPowerStateManager = NULL;

  0011c	4628		 mov         r0,r5
  0011e	f000 f800	 bl          |??1PowerStateManager@@QAA@XZ|
  00122	4628		 mov         r0,r5
  00124	f000 f800	 bl          |??3@YAXPAX@Z|
  00128	2300		 movs        r3,#0
  0012a	6523		 str         r3,[r4,#0x50]

; 947  : 		}
; 948  : 	}
; 949  : 
; 950  :   done:

  0012c	e008		 b           |$done$71|
  0012e		 |$LN13@PlatformMa|

; 914  : 	{
; 915  : 		PMLOGMSG (ZONE_WARN, (_T ("%s: PmPolicyCreateNotificationQueue() failed\r\n"), pszFname));

  0012e	f8d6 3440	 ldr         r3,[r6,#0x440]
  00132	f013 0f02	 tst         r3,#2
  00136	d003		 beq         |$done$71|

; 906  : 	{
; 907  : 		PMLOGMSG (ZONE_WARN, (_T ("%s: CreateEvent() failed for system event\r\n"), pszFname));

  00138	4815		 ldr         r0,|$LN57@PlatformMa| ; =|??_C@_1FI@CJBDBNJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAy?$AAs@|
  0013a		 |$LN48@PlatformMa|
  0013a	4913		 ldr         r1,|$LN55@PlatformMa| ; =|??_C@_1DE@KDIFNMIO@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@|
  0013c	f000 f800	 bl          CeLogMsg
  00140		 |$done$71|

; 951  : 	// Clean up before exiting:
; 952  : 	if (ghevReloadActivityTimeouts == NULL)

  00140	6ba3		 ldr         r3,[r4,#0x38]
  00142	b923		 cbnz        r3,|$LN4@PlatformMa|

; 953  : 	{
; 954  : 		CloseHandle (ghevReloadActivityTimeouts);

  00144	2000		 movs        r0,#0
  00146	f000 f800	 bl          CloseHandle

; 955  : 		ghevReloadActivityTimeouts = NULL;

  0014a	2300		 movs        r3,#0
  0014c	63a3		 str         r3,[r4,#0x38]
  0014e		 |$LN4@PlatformMa|

; 956  : 	}
; 957  : 	if (ghevRestartTimers != NULL)

  0014e	6823		 ldr         r3,[r4]
  00150	b123		 cbz         r3,|$LN3@PlatformMa|

; 958  : 	{
; 959  : 		CloseHandle (ghevRestartTimers);

  00152	4618		 mov         r0,r3
  00154	f000 f800	 bl          CloseHandle

; 960  : 		ghevRestartTimers = NULL;

  00158	2300		 movs        r3,#0
  0015a	6023		 str         r3,[r4]
  0015c		 |$LN3@PlatformMa|

; 961  : 	}
; 962  : 	if (hqNotify != NULL)

  0015c	f1b8 0f00	 cmp         r8,#0
  00160	d002		 beq         |$LN2@PlatformMa|

; 963  : 	{
; 964  : 		PmPolicyCloseNotificationQueue (hqNotify);

  00162	4640		 mov         r0,r8
  00164	f000 f800	 bl          PmPolicyCloseNotificationQueue
  00168		 |$LN2@PlatformMa|

; 965  : 		hqNotify = NULL;
; 966  : 	}
; 967  : 
; 968  : 	if (hmCoreDll != NULL)

  00168	b117		 cbz         r7,|$LN1@PlatformMa|

; 969  : 		FreeLibrary (hmCoreDll);

  0016a	4638		 mov         r0,r7
  0016c	f000 f800	 bl          FreeLibrary
  00170		 |$LN1@PlatformMa|

; 970  : 
; 971  : 	PMLOGMSG (ZONE_PLATFORM, (_T ("-%s: exiting\r\n"), pszFname));

  00170	f8d6 3440	 ldr         r3,[r6,#0x440]
  00174	f413 6f80	 tst         r3,#0x400
  00178	d003		 beq         |$LN36@PlatformMa|
  0017a	4804		 ldr         r0,|$LN56@PlatformMa| ; =|??_C@_1BO@HFODHNIK@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  0017c	4902		 ldr         r1,|$LN55@PlatformMa| ; =|??_C@_1DE@KDIFNMIO@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@|
  0017e	f000 f800	 bl          CeLogMsg
  00182		 |$LN36@PlatformMa|
  00182		 |$M53|

; 972  : }

  00182	e8bd 8bf0	 pop         {r4-r9,r11,pc}
  00186		 |$LN69@PlatformMa|
  00186		 |$M70|
  00186	defe		 __debugbreak
  00188		 |$LN54@PlatformMa|
  00188		 |$LN55@PlatformMa|
  00188	0000 0000	 DCD         |??_C@_1DE@KDIFNMIO@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@|
  0018c		 |$LN56@PlatformMa|
  0018c	0000 0000	 DCD         |??_C@_1BO@HFODHNIK@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  00190		 |$LN57@PlatformMa|
  00190	0000 0000	 DCD         |??_C@_1FI@CJBDBNJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAy?$AAs@|
  00194		 |$LN58@PlatformMa|
  00194	0000 0000	 DCD         |??_C@_1GA@MDBMPGIE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt@|
  00198		 |$LN59@PlatformMa|
  00198	0000 0000	 DCD         |??_C@_1FO@IMOGCHJK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAm?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAQ?$AAu@|
  0019c		 |$LN60@PlatformMa|
  0019c	0000 0000	 DCD         |??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@|
  001a0		 |$LN61@PlatformMa|
  001a0	0000 0000	 DCD         |??_C@_1BI@EOGAKPPB@?$AAG?$AAw?$AAe?$AAs?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?$AA@|
  001a4		 |$LN62@PlatformMa|
  001a4	0000 0000	 DCD         |??_C@_1BM@LIEOBILH@?$AAG?$AAw?$AAe?$AAs?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?$AA@|
  001a8		 |$LN63@PlatformMa|
  001a8	0000 0000	 DCD         |??_C@_1BI@CJKPFBEK@?$AAc?$AAo?$AAr?$AAe?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@|
  001ac		 |$LN64@PlatformMa|
  001ac	0000 0000	 DCD         |??_C@_1CG@MIEGLNJC@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
  001b0		 |$LN65@PlatformMa|
  001b0	0000 0000	 DCD         |??_C@_1CM@FOKODBBI@?$AAP?$AAr?$AAe?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
  001b4		 |$LN66@PlatformMa|
  001b4	0000 0000	 DCD         |?ghevRestartTimers@@3PAXA|
  001b8		 |$LN67@PlatformMa|
  001b8	0000 0000	 DCD         |??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  001bc		 |$LN68@PlatformMa|
  001bc	0000 0000	 DCD         |dpCurSettings|
  001c0		 |$M51|

			 ENDP  ; |PlatformManageSystemPower|

	EXPORT	|??_C@_1LG@FELINOHN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@BLHMMPPB@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LE@JNMBPGGE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@NEBPKHHF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAw?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAp?$AAf?$AAn?$AAI?$AAn?$AAi?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5@| [ DATA ] ; `string'
	EXPORT	|PlatformDeviceListInit|
	IMPORT	|idPMDisplayDeviceClass|
	IMPORT	|gDisplayInterface|
	IMPORT	|gStreamInterface|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PlatformDeviceListInit| DCD imagerel |$LN25@PlatformDe|
	DCD	0x2330195

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@NEBPKHHF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAw?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAp?$AAf?$AAn?$AAI?$AAn?$AAi?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "w", 0x0, "a", 0x0, "r"
	DCB	0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, ":", 0x0, " "
	DCB	0x0, "p", 0x0, "f", 0x0, "n", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "f", 0x0, "a", 0x0, "c", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f"
	DCB	0x0, "a", 0x0, "c", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LE@JNMBPGGE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAc@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "u", 0x0, "s", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "m", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c"
	DCB	0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "a"
	DCB	0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " "
	DCB	0x0, "c", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "s", 0x0, " "
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, "-", 0x0, "%"
	DCB	0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@BLHMMPPB@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| DCB "P"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LG@FELINOHN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "u", 0x0, "s", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "d", 0x0, "i", 0x0, "s"
	DCB	0x0, "p", 0x0, "l", 0x0, "a", 0x0, "y", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "f", 0x0, "a"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "a", 0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, " ", 0x0, "c", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "s"
	DCB	0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, "-"
	DCB	0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-", 0x0, "%"
	DCB	0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0"
	DCB	0x0, "4", 0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp
; File c:\wince800\public\common\sdk\inc\guiddef.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp
; File c:\wince800\public\common\sdk\inc\guiddef.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp
; File c:\wince800\public\common\sdk\inc\guiddef.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PlatformDeviceListInit| PROC

; 264  : {

  00000		 |$LN25@PlatformDe|
  00000	e92d 48f0	 push        {r4-r7,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008	b088		 sub         sp,sp,#0x20
  0000a		 |$M23|
  0000a	4607		 mov         r7,r0
; File c:\wince800\public\common\sdk\inc\guiddef.h

; 150  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  0000c	683c		 ldr         r4,[r7]
  0000e	4936		 ldr         r1,|$LN35@PlatformDe| ; =|idPMDisplayDeviceClass|
  00010	2210		 movs        r2,#0x10
  00012	4620		 mov         r0,r4
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

; 265  : 	BOOL fOk = FALSE;

  00014	2600		 movs        r6,#0
; File c:\wince800\public\common\sdk\inc\guiddef.h

; 150  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00016	f000 f800	 bl          memcmp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

; 281  : 				   pdl->pGuid->Data4[6], pdl->pGuid->Data4[7]));

  0001a	4d32		 ldr         r5,|$LN34@PlatformDe| ; =|dpCurSettings|
  0001c	f8d5 3440	 ldr         r3,[r5,#0x440]
; File c:\wince800\public\common\sdk\inc\guiddef.h

; 150  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00020	bb00		 cbnz        r0,|$LN5@PlatformDe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

; 281  : 				   pdl->pGuid->Data4[6], pdl->pGuid->Data4[7]));

  00022	f013 0f04	 tst         r3,#4
  00026	d102		 bne         |$LN8@PlatformDe|
  00028	f413 6f80	 tst         r3,#0x400
  0002c	d018		 beq         |$LN9@PlatformDe|
  0002e		 |$LN8@PlatformDe|
  0002e	7be3		 ldrb        r3,[r4,#0xF]
  00030	7a22		 ldrb        r2,[r4,#8]
  00032	482b		 ldr         r0,|$LN33@PlatformDe| ; =|??_C@_1LG@FELINOHN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa@|
  00034	9307		 str         r3,[sp,#0x1C]
  00036	7ba3		 ldrb        r3,[r4,#0xE]
  00038	4924		 ldr         r1,|$LN28@PlatformDe| ; =|??_C@_1CO@BLHMMPPB@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  0003a	9306		 str         r3,[sp,#0x18]
  0003c	7b63		 ldrb        r3,[r4,#0xD]
  0003e	9305		 str         r3,[sp,#0x14]
  00040	7b23		 ldrb        r3,[r4,#0xC]
  00042	9304		 str         r3,[sp,#0x10]
  00044	7ae3		 ldrb        r3,[r4,#0xB]
  00046	9303		 str         r3,[sp,#0xC]
  00048	7aa3		 ldrb        r3,[r4,#0xA]
  0004a	9302		 str         r3,[sp,#8]
  0004c	7a63		 ldrb        r3,[r4,#9]
  0004e	eb03 2302	 add         r3,r3,r2,lsl #8
  00052	9301		 str         r3,[sp,#4]
  00054	88e3		 ldrh        r3,[r4,#6]
  00056	6822		 ldr         r2,[r4]
  00058	9300		 str         r3,[sp]
  0005a	88a3		 ldrh        r3,[r4,#4]
  0005c	f000 f800	 bl          CeLogMsg
  00060		 |$LN9@PlatformDe|

; 282  : 
; 283  : 		// Use the display driver interface to get to the device.  To remove
; 284  : 		// display code from the link, edit or conditionally compile this code out
; 285  : 		// of the Power Manager.
; 286  : 
; 287  : 		extern DEVICE_INTERFACE gDisplayInterface;	// defined in the MDD
; 288  : 
; 289  : 		pInterface = &gDisplayInterface;

  00060	4c1e		 ldr         r4,|$LN32@PlatformDe| ; =|gDisplayInterface|

; 290  : 	}
; 291  : 	else

  00062	e01f		 b           |$LN4@PlatformDe|
  00064		 |$LN5@PlatformDe|

; 292  : 	{
; 293  : 		// Use the standard stream interface to get to the device:
; 294  : 		PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 295  : 				  (_T
; 296  : 				   ("%s: using stream interface to access class %08x-%04x-%04x-%04x-%02x%02x%02x%02x%02x%02x\r\n"),
; 297  : 				   pszFname, pdl->pGuid->Data1, pdl->pGuid->Data2, pdl->pGuid->Data3,
; 298  : 				   (pdl->pGuid->Data4[0] << 8) + pdl->pGuid->Data4[1], pdl->pGuid->Data4[2],
; 299  : 				   pdl->pGuid->Data4[3], pdl->pGuid->Data4[4], pdl->pGuid->Data4[5],
; 300  : 				   pdl->pGuid->Data4[6], pdl->pGuid->Data4[7]));

  00064	f013 0f04	 tst         r3,#4
  00068	d102		 bne         |$LN10@PlatformDe|
  0006a	f413 6f80	 tst         r3,#0x400
  0006e	d018		 beq         |$LN11@PlatformDe|
  00070		 |$LN10@PlatformDe|
  00070	7be3		 ldrb        r3,[r4,#0xF]
  00072	7a22		 ldrb        r2,[r4,#8]
  00074	4818		 ldr         r0,|$LN31@PlatformDe| ; =|??_C@_1LE@JNMBPGGE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAc@|
  00076	9307		 str         r3,[sp,#0x1C]
  00078	7ba3		 ldrb        r3,[r4,#0xE]
  0007a	4914		 ldr         r1,|$LN28@PlatformDe| ; =|??_C@_1CO@BLHMMPPB@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  0007c	9306		 str         r3,[sp,#0x18]
  0007e	7b63		 ldrb        r3,[r4,#0xD]
  00080	9305		 str         r3,[sp,#0x14]
  00082	7b23		 ldrb        r3,[r4,#0xC]
  00084	9304		 str         r3,[sp,#0x10]
  00086	7ae3		 ldrb        r3,[r4,#0xB]
  00088	9303		 str         r3,[sp,#0xC]
  0008a	7aa3		 ldrb        r3,[r4,#0xA]
  0008c	9302		 str         r3,[sp,#8]
  0008e	7a63		 ldrb        r3,[r4,#9]
  00090	eb03 2302	 add         r3,r3,r2,lsl #8
  00094	9301		 str         r3,[sp,#4]
  00096	88e3		 ldrh        r3,[r4,#6]
  00098	6822		 ldr         r2,[r4]
  0009a	9300		 str         r3,[sp]
  0009c	88a3		 ldrh        r3,[r4,#4]
  0009e	f000 f800	 bl          CeLogMsg
  000a2		 |$LN11@PlatformDe|

; 301  : 		extern DEVICE_INTERFACE gStreamInterface;	// defined in the MDD
; 302  : 
; 303  : 		pInterface = &gStreamInterface;

  000a2	4c0c		 ldr         r4,|$LN30@PlatformDe| ; =|gStreamInterface|
  000a4		 |$LN4@PlatformDe|

; 304  : 	}
; 305  : 
; 306  : 	// Try to initialize the interface:
; 307  : 	if (pInterface != NULL)
; 308  : 	{
; 309  : 		if (pInterface->pfnInitInterface () == FALSE)

  000a4	6823		 ldr         r3,[r4]
  000a6	4798		 blx         r3
  000a8	b948		 cbnz        r0,|$LN2@PlatformDe|

; 310  : 		{
; 311  : 			PMLOGMSG (ZONE_WARN,
; 312  : 					  (_T ("%s: warning: pfnInitInterface() failed for interface\r\n"), pszFname));

  000aa	f8d5 3440	 ldr         r3,[r5,#0x440]
  000ae	f013 0f02	 tst         r3,#2
  000b2	d006		 beq         |$LN1@PlatformDe|
  000b4	4806		 ldr         r0,|$LN29@PlatformDe| ; =|??_C@_1GO@NEBPKHHF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAw?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAp?$AAf?$AAn?$AAI?$AAn?$AAi?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5@|
  000b6	4905		 ldr         r1,|$LN28@PlatformDe| ; =|??_C@_1CO@BLHMMPPB@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  000b8	f000 f800	 bl          CeLogMsg

; 313  : 		}
; 314  : 		else

  000bc	e001		 b           |$LN1@PlatformDe|
  000be		 |$LN2@PlatformDe|

; 315  : 		{
; 316  : 			// Pass back the pointer
; 317  : 			pdl->pInterface = pInterface;

  000be	613c		 str         r4,[r7,#0x10]

; 318  : 			fOk = TRUE;

  000c0	2601		 movs        r6,#1
  000c2		 |$LN1@PlatformDe|

; 319  : 		}
; 320  : 	}
; 321  : 	return fOk;
; 322  : }

  000c2	4630		 mov         r0,r6
  000c4		 |$M26|
  000c4	b008		 add         sp,sp,#0x20
  000c6	e8bd 88f0	 pop         {r4-r7,r11,pc}
  000ca		 |$LN36@PlatformDe|
  000ca		 |$M37|
  000ca	defe		 __debugbreak
  000cc		 |$LN27@PlatformDe|
  000cc		 |$LN28@PlatformDe|
  000cc	0000 0000	 DCD         |??_C@_1CO@BLHMMPPB@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  000d0		 |$LN29@PlatformDe|
  000d0	0000 0000	 DCD         |??_C@_1GO@NEBPKHHF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAw?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAp?$AAf?$AAn?$AAI?$AAn?$AAi?$AAt?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?$CI?$AA?$CJ?$AA?5@|
  000d4		 |$LN30@PlatformDe|
  000d4	0000 0000	 DCD         |gStreamInterface|
  000d8		 |$LN31@PlatformDe|
  000d8	0000 0000	 DCD         |??_C@_1LE@JNMBPGGE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAc@|
  000dc		 |$LN32@PlatformDe|
  000dc	0000 0000	 DCD         |gDisplayInterface|
  000e0		 |$LN33@PlatformDe|
  000e0	0000 0000	 DCD         |??_C@_1LG@FELINOHN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAa@|
  000e4		 |$LN34@PlatformDe|
  000e4	0000 0000	 DCD         |dpCurSettings|
  000e8		 |$LN35@PlatformDe|
  000e8	0000 0000	 DCD         |idPMDisplayDeviceClass|
  000ec		 |$M24|

			 ENDP  ; |PlatformDeviceListInit|

	EXPORT	|??9@YAHABU_GUID@@0@Z|			; operator!=

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??9@YAHABU_GUID@@0@Z| DCD imagerel |$LN14@operator|
	DCD	0x3f6031
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\guiddef.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??9@YAHABU_GUID@@0@Z| PROC		; operator!=

; 188  : {

  00000		 |$LN14@operator|
  00000	e92d 4800	 push        {r11,lr}
  00004	46eb		 mov         r11,sp
  00006		 |$M12|

; 150  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00006	2210		 movs        r2,#0x10
  00008	f000 f800	 bl          memcmp
  0000c	b108		 cbz         r0,|$LN3@operator|

; 189  :     return !(guidOne == guidOther);

  0000e	2001		 movs        r0,#1
  00010	e000		 b           |$LN4@operator|
  00012		 |$LN3@operator|
  00012	2000		 movs        r0,#0
  00014		 |$LN4@operator|
  00014		 |$M15|

; 190  : }

  00014	e8bd 8800	 pop         {r11,pc}
  00018		 |$M13|

			 ENDP  ; |??9@YAHABU_GUID@@0@Z|, operator!=

	EXPORT	|?EnumerateAllKey@RegKey@@IAAHXZ|	; RegKey::EnumerateAllKey
	IMPORT	|RegEnumKeyExW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?EnumerateAllKey@RegKey@@IAAHXZ| DCD imagerel |$LN28@EnumerateA|
	DCD	imagerel |$unwind2$?EnumerateAllKey@RegKey@@IAAHXZ|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?EnumerateAllKey@RegKey@@IAAHXZ| DCD 0x33b00056
	DCD	0x1e888e8
	DCD	0xe8ffdffc
	DCD	0xffdf01
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffd9
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?EnumerateAllKey@RegKey@@IAAHXZ| PROC	; RegKey::EnumerateAllKey

; 235  :     BOOL EnumerateAllKey() {

  00000		 |$LN28@EnumerateA|
  00000	e92d 4ff0	 push        {r4-r11,lr}
  00004	f20d 0b1c	 addw        r11,sp,#0x1C
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d20	 subw        sp,sp,#0x220
  00010		 |$M26|
  00010	4606		 mov         r6,r0

; 236  :         BOOL fReturn = FALSE;
; 237  :         if (m_RegKey) {

  00012	6933		 ldr         r3,[r6,#0x10]
  00014	2500		 movs        r5,#0
  00016	2b00		 cmp         r3,#0
  00018	d041		 beq         |$LN23@EnumerateA|

; 238  :             TCHAR regName[MAX_PATH];
; 239  :             fReturn = TRUE;

  0001a	f8df 8090	 ldr         r8,|$LN31@EnumerateA| ; =|??_7RegKey@@6B@|
  0001e	2501		 movs        r5,#1

; 240  :             for (DWORD RegEnum = 0;;RegEnum++) {

  00020	2700		 movs        r7,#0
  00022	f04f 0a00	 mov         r10,#0
  00026	f44f 7982	 mov         r9,#0x104
  0002a		 |$LN24@EnumerateA|

; 241  :                 DWORD ValLen = MAX_PATH;
; 242  :                 LONG status = ::RegEnumKeyEx(m_RegKey, RegEnum, regName, &ValLen, NULL, NULL, NULL, NULL);

  0002a	6930		 ldr         r0,[r6,#0x10]
  0002c	ab04		 add         r3,sp,#0x10
  0002e	aa06		 add         r2,sp,#0x18
  00030	4639		 mov         r1,r7
  00032	2400		 movs        r4,#0
  00034	f8cd 9010	 str         r9,[sp,#0x10]
  00038	f8cd a00c	 str         r10,[sp,#0xC]
  0003c	f8cd a008	 str         r10,[sp,#8]
  00040	f8cd a004	 str         r10,[sp,#4]
  00044	f8cd a000	 str         r10,[sp]
  00048	f000 f800	 bl          RegEnumKeyExW

; 243  :                 if (status == ERROR_SUCCESS || status == ERROR_MORE_DATA) {

  0004c	b108		 cbz         r0,|$LN5@EnumerateA|
  0004e	28ea		 cmp         r0,#0xEA
  00050	d125		 bne         |$LN23@EnumerateA|
  00052		 |$LN5@EnumerateA|

; 244  :                     regName[MAX_PATH -1] =0;
; 245  :                     RegKey * newKey = new RegKey (m_RegKey,regName,0,m_pRegKeyList);

  00052	201c		 movs        r0,#0x1C
  00054	f8ad 421e	 strh        r4,[sp,#0x21E]
  00058	f000 f800	 bl          |??2@YAPAXI@Z|
  0005c	4604		 mov         r4,r0
  0005e	b16c		 cbz         r4,|$LN15@EnumerateA|

; 110  :     RegKey(HKEY hCurrentOpenKey, LPCTSTR lpKeyPath,DWORD /*dwFlag*/, RegKey * pNextRegKey) : RegKeyOrValue( hCurrentOpenKey,lpKeyPath,pNextRegKey) {

  00060	69b3		 ldr         r3,[r6,#0x18]
  00062	6931		 ldr         r1,[r6,#0x10]
  00064	aa06		 add         r2,sp,#0x18
  00066	f000 f800	 bl          |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|
  0006a	f8c4 8000	 str         r8,[r4]

; 111  :         m_pRegValueList=NULL;

  0006e	f8c4 a014	 str         r10,[r4,#0x14]

; 112  :         m_pRegKeyList=NULL;

  00072	f8c4 a018	 str         r10,[r4,#0x18]

; 113  :         m_RegKey = NULL;

  00076	f8c4 a010	 str         r10,[r4,#0x10]

; 244  :                     regName[MAX_PATH -1] =0;
; 245  :                     RegKey * newKey = new RegKey (m_RegKey,regName,0,m_pRegKeyList);

  0007a	e000		 b           |$LN16@EnumerateA|
  0007c		 |$LN15@EnumerateA|
  0007c	2400		 movs        r4,#0
  0007e		 |$LN16@EnumerateA|

; 246  :                     if (newKey && newKey->Init())

  0007e	b15c		 cbz         r4,|$LN17@EnumerateA|
  00080	6823		 ldr         r3,[r4]
  00082	4620		 mov         r0,r4
  00084	681b		 ldr         r3,[r3]
  00086	4798		 blx         r3
  00088	b108		 cbz         r0,|$LN4@EnumerateA|

; 247  :                         m_pRegKeyList = newKey;

  0008a	61b4		 str         r4,[r6,#0x18]

; 248  :                     else{

  0008c	e005		 b           |$LN8@EnumerateA|
  0008e		 |$LN4@EnumerateA|

; 249  :                         if (newKey)
; 250  :                             delete newKey;

  0008e	6823		 ldr         r3,[r4]
  00090	2101		 movs        r1,#1
  00092	4620		 mov         r0,r4
  00094	685b		 ldr         r3,[r3,#4]
  00096	4798		 blx         r3
  00098		 |$LN17@EnumerateA|

; 251  :                         fReturn = FALSE; // Not all the key has been enumerated.

  00098	2500		 movs        r5,#0
  0009a		 |$LN8@EnumerateA|

; 240  :             for (DWORD RegEnum = 0;;RegEnum++) {

  0009a	3701		 adds        r7,#1
  0009c	e7c5		 b           |$LN24@EnumerateA|
  0009e		 |$LN23@EnumerateA|

; 252  :                     }
; 253  :                 }
; 254  :                 else
; 255  :                     break;
; 256  :             }
; 257  :         }
; 258  :         return fReturn;
; 259  :     }

  0009e	4628		 mov         r0,r5
  000a0		 |$M29|
  000a0	f20d 2d20	 addw        sp,sp,#0x220
  000a4	f000 f800	 bl          __security_pop_cookie
  000a8	e8bd 8ff0	 pop         {r4-r11,pc}
  000ac		 |$LN30@EnumerateA|
  000ac		 |$LN31@EnumerateA|
  000ac	0000 0000	 DCD         |??_7RegKey@@6B@|
  000b0		 |$M27|

			 ENDP  ; |?EnumerateAllKey@RegKey@@IAAHXZ|, RegKey::EnumerateAllKey

	EXPORT	|??1RegKey@@UAA@XZ|			; RegKey::~RegKey

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??1RegKey@@UAA@XZ| DCD imagerel |$LN30@RegKey|
	DCD	0x3160b5
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1RegKey@@UAA@XZ| PROC		; RegKey::~RegKey

; 119  :     virtual ~RegKey() {

  00000		 |$LN30@RegKey|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M28|
  00008	4b15		 ldr         r3,|$LN34@RegKey|	; =|??_7RegKey@@6B@|
  0000a	4604		 mov         r4,r0
  0000c	6023		 str         r3,[r4]

; 125  :     //  Function 
; 126  :     BOOL    RefreshAll (BOOL bDoNotCloseKey = FALSE) {
; 127  :         BOOL fReturn = FALSE;
; 128  :         if(m_RegKey == NULL && RegOpenKeyEx(m_hParentKey, m_lpRegName, 0, 0, &m_RegKey ) != ERROR_SUCCESS )  {
; 129  :             m_RegKey = NULL;
; 130  :         }
; 131  :         if (m_RegKey) {
; 132  :             // Backup old key first
; 133  :             RegValue * m_pBackupRegValueList = m_pRegValueList;
; 134  :             RegKey *   m_pBackupRegKeyList = m_pRegKeyList;
; 135  :             m_pRegValueList = NULL;
; 136  :             m_pRegKeyList = NULL;
; 137  :             if ( EnumerateAllKey() && EnumerateAllValue()) { // Succeed to enumerate new key. Delete old key.
; 138  :                 while (m_pBackupRegValueList ) {
; 139  :                     RegValue * pNextRegValue = (RegValue * )m_pBackupRegValueList->GetNextRegKeyOrValuePtr() ;
; 140  :                     delete m_pBackupRegValueList;
; 141  :                     m_pBackupRegValueList = pNextRegValue;
; 142  :                 }
; 143  :                 while (m_pBackupRegKeyList) {
; 144  :                     RegKey * pNextKey = (RegKey *) m_pBackupRegKeyList->GetNextRegKeyOrValuePtr();
; 145  :                     delete m_pBackupRegKeyList;
; 146  :                     m_pBackupRegKeyList =  pNextKey ;
; 147  :                 }
; 148  :                 fReturn = TRUE;
; 149  :             }
; 150  :             else { // Fails, We need recover old key
; 151  :                 DeleteAll(); // Delete partial succeeded key and value.
; 152  :                 m_pRegValueList = m_pBackupRegValueList;
; 153  :                 m_pRegKeyList = m_pBackupRegKeyList ;
; 154  :                 fReturn = FALSE;
; 155  :             }
; 156  :             if (!bDoNotCloseKey) {
; 157  :                 RegCloseKey( m_RegKey );
; 158  :                 m_RegKey = NULL;
; 159  :             }
; 160  :         }
; 161  :         return fReturn;
; 162  :     }
; 163  :     RegKey * RegFindKey(LPCTSTR lpKeyPath) {
; 164  :         RegKey * pReturnKey =  m_pRegKeyList;
; 165  :         while (pReturnKey) {
; 166  :             if (_tcsicmp( pReturnKey->GetName(),lpKeyPath)==0)
; 167  :                 return pReturnKey;
; 168  :             else
; 169  :                 pReturnKey=(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();
; 170  :         }
; 171  :         return NULL;
; 172  :     }
; 173  :     LONG RegFindValue(LPCTSTR lpValueName, PVOID pvData, LPDWORD pdwSize, LPDWORD pdwType) {
; 174  :         RegValue * pCurValue =  m_pRegValueList;
; 175  :         while (pCurValue) {
; 176  :             if (_tcsicmp( pCurValue->GetName(),lpValueName)==0) {
; 177  :                 return (pCurValue->GetRegValue(pvData,pdwSize,pdwType)?ERROR_SUCCESS :ERROR_INVALID_PARAMETER);
; 178  :             }
; 179  :             else
; 180  :                 pCurValue=(RegValue *)pCurValue->GetNextRegKeyOrValuePtr();
; 181  :         }
; 182  :         return ERROR_NO_MORE_ITEMS;
; 183  :         
; 184  :     }
; 185  :     LONG RegEnum(RegKeyOrValue * pList, DWORD dwReqIndex, __out_bcount(*lpcbName) PWSTR lpName, PDWORD lpcbName) {
; 186  :         RegKeyOrValue * pReturnKey = pList;
; 187  :         for (DWORD dwIndex = 0; pReturnKey!=NULL &&  dwIndex<dwReqIndex; dwIndex++) {
; 188  :             pReturnKey =(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();
; 189  :         }
; 190  :         if (pReturnKey && pReturnKey->GetName()) {
; 191  :             LONG lReturn = ERROR_SUCCESS;
; 192  :             if ( lpcbName) {
; 193  :                 DWORD cbSize = (_tcslen(pReturnKey->GetName()) + 1) * sizeof(lpName[0]) ;
; 194  :                 if ( lpName) {
; 195  :                     VERIFY(SUCCEEDED(StringCbCopy(lpName,*lpcbName,pReturnKey->GetName())));
; 196  :                     if (cbSize>*lpcbName)
; 197  :                         lReturn = ERROR_MORE_DATA;
; 198  :                 }
; 199  :                 *lpcbName =  cbSize;
; 200  :             }
; 201  :             return lReturn;
; 202  :         }
; 203  :         else
; 204  :             return ERROR_NO_MORE_ITEMS;
; 205  :     }
; 206  :     LONG RegEnumKeyEx( DWORD dwReqIndex, __out_bcount(*lpcbName) PWSTR lpName, PDWORD lpcbName) {
; 207  :         return RegEnum(m_pRegKeyList, dwReqIndex, lpName, lpcbName) ;
; 208  :     }
; 209  :     LONG RegEnumValue( DWORD dwReqIndex,__out_bcount(*lpcbValueName)LPWSTR lpValueName, LPDWORD lpcbValueName) {
; 210  :         return RegEnum(m_pRegValueList, dwReqIndex, lpValueName, lpcbValueName) ;
; 211  :     }
; 212  : 
; 213  : protected:
; 214  :     RegKeyOrValue * SearchByName(RegKeyOrValue * pRegKeyOrValueList,LPCTSTR pszName) {
; 215  :         while (pRegKeyOrValueList) {
; 216  :             if (_tcsicmp(pRegKeyOrValueList->GetName(),pszName)== 0) // found it 
; 217  :                 break;
; 218  :             else
; 219  :                 pRegKeyOrValueList = pRegKeyOrValueList->GetNextRegKeyOrValuePtr();
; 220  :         }
; 221  :         return pRegKeyOrValueList;
; 222  :     }
; 223  :     void DeleteAll() {
; 224  :         while (m_pRegValueList) {

  0000e	6963		 ldr         r3,[r4,#0x14]
  00010	b153		 cbz         r3,|$LN22@RegKey|
  00012		 |$LL7@RegKey|

; 225  :             RegValue * pNextRegValue = (RegValue * )m_pRegValueList->GetNextRegKeyOrValuePtr() ;

  00012	6963		 ldr         r3,[r4,#0x14]
  00014	68dd		 ldr         r5,[r3,#0xC]

; 226  :             delete m_pRegValueList;

  00016	b123		 cbz         r3,|$LN10@RegKey|
  00018	4618		 mov         r0,r3
  0001a	681b		 ldr         r3,[r3]
  0001c	2101		 movs        r1,#1
  0001e	685b		 ldr         r3,[r3,#4]
  00020	4798		 blx         r3
  00022		 |$LN10@RegKey|

; 227  :             m_pRegValueList = pNextRegValue;

  00022	6165		 str         r5,[r4,#0x14]
  00024	2d00		 cmp         r5,#0
  00026	d1f4		 bne         |$LL7@RegKey|
  00028		 |$LN22@RegKey|

; 228  :         }
; 229  :         while (m_pRegKeyList) {

  00028	69a3		 ldr         r3,[r4,#0x18]
  0002a	b153		 cbz         r3,|$LN4@RegKey|
  0002c		 |$LL5@RegKey|

; 230  :             RegKey * pNextKey = (RegKey *) m_pRegKeyList->GetNextRegKeyOrValuePtr();

  0002c	69a3		 ldr         r3,[r4,#0x18]
  0002e	68dd		 ldr         r5,[r3,#0xC]

; 231  :             delete m_pRegKeyList;

  00030	b123		 cbz         r3,|$LN12@RegKey|
  00032	4618		 mov         r0,r3
  00034	681b		 ldr         r3,[r3]
  00036	2101		 movs        r1,#1
  00038	685b		 ldr         r3,[r3,#4]
  0003a	4798		 blx         r3
  0003c		 |$LN12@RegKey|

; 232  :             m_pRegKeyList =  pNextKey ;

  0003c	61a5		 str         r5,[r4,#0x18]
  0003e	2d00		 cmp         r5,#0
  00040	d1f4		 bne         |$LL5@RegKey|
  00042		 |$LN4@RegKey|

; 120  :         DeleteAll();
; 121  :         if (m_RegKey) {

  00042	6920		 ldr         r0,[r4,#0x10]
  00044	b108		 cbz         r0,|$LN1@RegKey|

; 122  :             RegCloseKey( m_RegKey );

  00046	f000 f800	 bl          RegCloseKey
  0004a		 |$LN1@RegKey|

; 41   :     virtual ~RegKeyOrValue() {

  0004a	4b04		 ldr         r3,|$LN33@RegKey|	; =|??_7RegKeyOrValue@@6B@|

; 42   :         if (m_lpRegName!=NULL)

  0004c	6860		 ldr         r0,[r4,#4]
  0004e	6023		 str         r3,[r4]
  00050	b108		 cbz         r0,|$LN18@RegKey|

; 43   :             delete m_lpRegName;

  00052	f000 f800	 bl          |??3@YAXPAX@Z|
  00056		 |$LN18@RegKey|
  00056		 |$M31|

; 123  :         }
; 124  :     }

  00056	e8bd 8830	 pop         {r4,r5,r11,pc}
  0005a		 |$LN35@RegKey|
  0005a		 |$M36|
  0005a	defe		 __debugbreak
  0005c		 |$LN32@RegKey|
  0005c		 |$LN33@RegKey|
  0005c	0000 0000	 DCD         |??_7RegKeyOrValue@@6B@|
  00060		 |$LN34@RegKey|
  00060	0000 0000	 DCD         |??_7RegKey@@6B@|
  00064		 |$M29|

			 ENDP  ; |??1RegKey@@UAA@XZ|, RegKey::~RegKey

; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Init@RegValue@@UAAHXZ| PROC		; RegValue::Init

; 69   :     virtual BOOL Init() { return (m_dwValueSize!=NULL && m_lpByteValue!=NULL); };

  00000	6943		 ldr         r3,[r0,#0x14]
  00002	b11b		 cbz         r3,|$LN3@Init|
  00004	6983		 ldr         r3,[r0,#0x18]
  00006	b10b		 cbz         r3,|$LN3@Init|
  00008	2001		 movs        r0,#1
  0000a		 |$M6|
  0000a	4770		 bx          lr
  0000c		 |$LN3@Init|
  0000c	2000		 movs        r0,#0
  0000e		 |$M7|
  0000e	4770		 bx          lr

			 ENDP  ; |?Init@RegValue@@UAAHXZ|, RegValue::Init

	EXPORT	|??1RegValue@@UAA@XZ|			; RegValue::~RegValue

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??1RegValue@@UAA@XZ| DCD imagerel |$LN10@RegValue|
	DCD	0xfd30604d
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1RegValue@@UAA@XZ| PROC		; RegValue::~RegValue

; 65   :     virtual ~RegValue () {

  00000		 |$LN10@RegValue|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M8|
  00008	4604		 mov         r4,r0

; 66   :         if ( m_lpByteValue)

  0000a	69a0		 ldr         r0,[r4,#0x18]
  0000c	4b07		 ldr         r3,|$LN14@RegValue| ; =|??_7RegValue@@6B@|
  0000e	6023		 str         r3,[r4]
  00010	b108		 cbz         r0,|$LN1@RegValue|

; 67   :             delete  m_lpByteValue;

  00012	f000 f800	 bl          |??3@YAXPAX@Z|
  00016		 |$LN1@RegValue|

; 41   :     virtual ~RegKeyOrValue() {

  00016	4b04		 ldr         r3,|$LN13@RegValue| ; =|??_7RegKeyOrValue@@6B@|

; 42   :         if (m_lpRegName!=NULL)

  00018	6860		 ldr         r0,[r4,#4]
  0001a	6023		 str         r3,[r4]
  0001c	b108		 cbz         r0,|$LN4@RegValue|

; 43   :             delete m_lpRegName;

  0001e	f000 f800	 bl          |??3@YAXPAX@Z|
  00022		 |$LN4@RegValue|
  00022		 |$M11|

; 68   :     }

  00022	e8bd 8818	 pop         {r3,r4,r11,pc}
  00026		 |$LN15@RegValue|
  00026		 |$M16|
  00026	defe		 __debugbreak
  00028		 |$LN12@RegValue|
  00028		 |$LN13@RegValue|
  00028	0000 0000	 DCD         |??_7RegKeyOrValue@@6B@|
  0002c		 |$LN14@RegValue|
  0002c	0000 0000	 DCD         |??_7RegValue@@6B@|
  00030		 |$M9|

			 ENDP  ; |??1RegValue@@UAA@XZ|, RegValue::~RegValue

	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?GetRegValue@RegValue@@UAAHPAXPAK1@Z| DCD imagerel |$LN12@GetRegValu|
	DCD	0xfd326079
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetRegValue@RegValue@@UAAHPAXPAK1@Z| PROC ; RegValue::GetRegValue

; 70   :     virtual BOOL GetRegValue(PVOID pvData, LPDWORD pdwSize, LPDWORD pdwType)  {

  00000		 |$LN12@GetRegValu|
  00000	e92d 4878	 push        {r3-r6,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M10|
  00008	461e		 mov         r6,r3
  0000a	4604		 mov         r4,r0
  0000c	460b		 mov         r3,r1

; 71   :         if (m_lpByteValue &&  pdwSize ) {

  0000e	69a1		 ldr         r1,[r4,#0x18]
  00010	4615		 mov         r5,r2
  00012	b181		 cbz         r1,|$LN4@GetRegValu|
  00014	b17d		 cbz         r5,|$LN4@GetRegValu|

; 72   :             if (pvData)

  00016	b13b		 cbz         r3,|$LN3@GetRegValu|

; 73   :                 memcpy(pvData,m_lpByteValue, min (*pdwSize, m_dwValueSize));

  00018	682a		 ldr         r2,[r5]
  0001a	6960		 ldr         r0,[r4,#0x14]
  0001c	4282		 cmp         r2,r0
  0001e	d300		 bcc         |$LN8@GetRegValu|
  00020	4602		 mov         r2,r0
  00022		 |$LN8@GetRegValu|
  00022	4618		 mov         r0,r3
  00024	f000 f800	 bl          memcpy
  00028		 |$LN3@GetRegValu|

; 74   :             *pdwSize = m_dwValueSize;

  00028	6963		 ldr         r3,[r4,#0x14]

; 75   :             if (pdwType)

  0002a	602b		 str         r3,[r5]
  0002c	b10e		 cbz         r6,|$LN2@GetRegValu|

; 76   :                 *pdwType = m_dwValueType;

  0002e	6923		 ldr         r3,[r4,#0x10]
  00030	6033		 str         r3,[r6]
  00032		 |$LN2@GetRegValu|

; 77   :             return TRUE;

  00032	2001		 movs        r0,#1
  00034	e000		 b           |$LN1@GetRegValu|
  00036		 |$LN4@GetRegValu|

; 78   :         }
; 79   :         else
; 80   :             return FALSE;

  00036	2000		 movs        r0,#0
  00038		 |$LN1@GetRegValu|
  00038		 |$M13|

; 81   :     }

  00038	e8bd 8878	 pop         {r3-r6,r11,pc}
  0003c		 |$M11|

			 ENDP  ; |?GetRegValue@RegValue@@UAAHPAXPAK1@Z|, RegValue::GetRegValue

	EXPORT	|?EnumerateAllValue@RegKey@@IAAHXZ|	; RegKey::EnumerateAllValue
	IMPORT	|RegEnumValueW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?EnumerateAllValue@RegKey@@IAAHXZ| DCD imagerel |$LN28@EnumerateA|
	DCD	imagerel |$unwind2$?EnumerateAllValue@RegKey@@IAAHXZ|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?EnumerateAllValue@RegKey@@IAAHXZ| DCD 0x33b00057
	DCD	0x1e888e8
	DCD	0xe8ffdffc
	DCD	0xffdf01
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffd9
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?EnumerateAllValue@RegKey@@IAAHXZ| PROC ; RegKey::EnumerateAllValue

; 260  :     BOOL EnumerateAllValue() {

  00000		 |$LN28@EnumerateA|
  00000	e92d 4ff0	 push        {r4-r11,lr}
  00004	f20d 0b1c	 addw        r11,sp,#0x1C
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d20	 subw        sp,sp,#0x220
  00010		 |$M26|
  00010	4606		 mov         r6,r0

; 261  :         BOOL fReturn = FALSE;
; 262  :         if (m_RegKey) {

  00012	6933		 ldr         r3,[r6,#0x10]
  00014	2500		 movs        r5,#0
  00016	2b00		 cmp         r3,#0
  00018	d042		 beq         |$LN23@EnumerateA|

; 263  :             fReturn = TRUE;

  0001a	f8df 8094	 ldr         r8,|$LN31@EnumerateA| ; =|??_7RegValue@@6B@|
  0001e	2501		 movs        r5,#1

; 264  :             TCHAR regName[MAX_PATH];
; 265  :             for (DWORD RegEnum = 0;;RegEnum++) {

  00020	2700		 movs        r7,#0
  00022	f04f 0a00	 mov         r10,#0
  00026	f44f 7982	 mov         r9,#0x104
  0002a		 |$LN24@EnumerateA|

; 266  :                 DWORD ValLen = MAX_PATH;
; 267  :                 LONG status = ::RegEnumValue (m_RegKey, RegEnum, regName, &ValLen, NULL, NULL, NULL, NULL);

  0002a	6930		 ldr         r0,[r6,#0x10]
  0002c	ab04		 add         r3,sp,#0x10
  0002e	aa06		 add         r2,sp,#0x18
  00030	4639		 mov         r1,r7
  00032	2400		 movs        r4,#0
  00034	f8cd 9010	 str         r9,[sp,#0x10]
  00038	f8cd a00c	 str         r10,[sp,#0xC]
  0003c	f8cd a008	 str         r10,[sp,#8]
  00040	f8cd a004	 str         r10,[sp,#4]
  00044	f8cd a000	 str         r10,[sp]
  00048	f000 f800	 bl          RegEnumValueW

; 268  :                 if (status == ERROR_SUCCESS || status == ERROR_MORE_DATA) {

  0004c	b108		 cbz         r0,|$LN5@EnumerateA|
  0004e	28ea		 cmp         r0,#0xEA
  00050	d126		 bne         |$LN23@EnumerateA|
  00052		 |$LN5@EnumerateA|

; 269  :                     regName[MAX_PATH -1] =0;
; 270  :                     RegValue* newValue = new RegValue(m_RegKey,regName,m_pRegValueList);

  00052	201c		 movs        r0,#0x1C
  00054	f8ad 421e	 strh        r4,[sp,#0x21E]
  00058	f000 f800	 bl          |??2@YAPAXI@Z|
  0005c	4604		 mov         r4,r0
  0005e	b174		 cbz         r4,|$LN15@EnumerateA|

; 60   :     RegValue(HKEY hKey,LPCTSTR lpRegName,RegValue * pNextRegValue ) :  RegKeyOrValue(hKey,lpRegName,pNextRegValue) { 

  00060	6973		 ldr         r3,[r6,#0x14]
  00062	6931		 ldr         r1,[r6,#0x10]
  00064	aa06		 add         r2,sp,#0x18
  00066	f000 f800	 bl          |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|

; 61   :         m_dwValueSize=0;
; 62   :         m_lpByteValue = NULL;
; 63   :         UpdateRegValue();

  0006a	4620		 mov         r0,r4
  0006c	f8c4 8000	 str         r8,[r4]
  00070	f8c4 a014	 str         r10,[r4,#0x14]
  00074	f8c4 a018	 str         r10,[r4,#0x18]
  00078	f000 f800	 bl          |?UpdateRegValue@RegValue@@MAAHXZ|

; 269  :                     regName[MAX_PATH -1] =0;
; 270  :                     RegValue* newValue = new RegValue(m_RegKey,regName,m_pRegValueList);

  0007c	e000		 b           |$LN16@EnumerateA|
  0007e		 |$LN15@EnumerateA|
  0007e	2400		 movs        r4,#0
  00080		 |$LN16@EnumerateA|

; 271  :                     if (newValue && newValue->Init())

  00080	b15c		 cbz         r4,|$LN17@EnumerateA|
  00082	6823		 ldr         r3,[r4]
  00084	4620		 mov         r0,r4
  00086	681b		 ldr         r3,[r3]
  00088	4798		 blx         r3
  0008a	b108		 cbz         r0,|$LN4@EnumerateA|

; 272  :                         m_pRegValueList = newValue;

  0008c	6174		 str         r4,[r6,#0x14]

; 273  :                     else {

  0008e	e005		 b           |$LN8@EnumerateA|
  00090		 |$LN4@EnumerateA|

; 274  :                         if (newValue) 
; 275  :                             delete newValue;

  00090	6823		 ldr         r3,[r4]
  00092	2101		 movs        r1,#1
  00094	4620		 mov         r0,r4
  00096	685b		 ldr         r3,[r3,#4]
  00098	4798		 blx         r3
  0009a		 |$LN17@EnumerateA|

; 276  :                         fReturn = FALSE;

  0009a	2500		 movs        r5,#0
  0009c		 |$LN8@EnumerateA|

; 264  :             TCHAR regName[MAX_PATH];
; 265  :             for (DWORD RegEnum = 0;;RegEnum++) {

  0009c	3701		 adds        r7,#1
  0009e	e7c4		 b           |$LN24@EnumerateA|
  000a0		 |$LN23@EnumerateA|

; 277  :                     }
; 278  :                 }
; 279  :                 else
; 280  :                     break;
; 281  :             }
; 282  :         }
; 283  :         return fReturn;
; 284  :     }

  000a0	4628		 mov         r0,r5
  000a2		 |$M29|
  000a2	f20d 2d20	 addw        sp,sp,#0x220
  000a6	f000 f800	 bl          __security_pop_cookie
  000aa	e8bd 8ff0	 pop         {r4-r11,pc}
  000ae		 |$LN32@EnumerateA|
  000ae		 |$M33|
  000ae	defe		 __debugbreak
  000b0		 |$LN30@EnumerateA|
  000b0		 |$LN31@EnumerateA|
  000b0	0000 0000	 DCD         |??_7RegValue@@6B@|
  000b4		 |$M27|

			 ENDP  ; |?EnumerateAllValue@RegKey@@IAAHXZ|, RegKey::EnumerateAllValue


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GRegKey@@UAAPAXI@Z| DCD imagerel |$LN7@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GRegKey@@UAAPAXI@Z| PROC		; RegKey::`scalar deleting destructor'
  00000		 |$LN7@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M5|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1RegKey@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M8|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M6|

			 ENDP  ; |??_GRegKey@@UAAPAXI@Z|, RegKey::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GRegValue@@UAAPAXI@Z| DCD imagerel |$LN13@scalar|
	DCD	0x31606d
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GRegValue@@UAAPAXI@Z| PROC		; RegValue::`scalar deleting destructor'
  00000		 |$LN13@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M11|
  00008	4604		 mov         r4,r0

; 66   :         if ( m_lpByteValue)

  0000a	69a0		 ldr         r0,[r4,#0x18]
  0000c	4b0b		 ldr         r3,|$LN17@scalar|	; =|??_7RegValue@@6B@|
  0000e	460d		 mov         r5,r1
  00010	6023		 str         r3,[r4]
  00012	b108		 cbz         r0,|$LN4@scalar|

; 67   :             delete  m_lpByteValue;

  00014	f000 f800	 bl          |??3@YAXPAX@Z|
  00018		 |$LN4@scalar|

; 41   :     virtual ~RegKeyOrValue() {

  00018	4b07		 ldr         r3,|$LN16@scalar|	; =|??_7RegKeyOrValue@@6B@|

; 42   :         if (m_lpRegName!=NULL)

  0001a	6860		 ldr         r0,[r4,#4]
  0001c	6023		 str         r3,[r4]
  0001e	b108		 cbz         r0,|$LN7@scalar|

; 43   :             delete m_lpRegName;

  00020	f000 f800	 bl          |??3@YAXPAX@Z|
  00024		 |$LN7@scalar|
  00024	f015 0f01	 tst         r5,#1
  00028	d002		 beq         |$LN1@scalar|
  0002a	4620		 mov         r0,r4
  0002c	f000 f800	 bl          |??3@YAXPAX@Z|
  00030		 |$LN1@scalar|
  00030	4620		 mov         r0,r4
  00032		 |$M14|
  00032	e8bd 8830	 pop         {r4,r5,r11,pc}
  00036		 |$LN18@scalar|
  00036		 |$M19|
  00036	defe		 __debugbreak
  00038		 |$LN15@scalar|
  00038		 |$LN16@scalar|
  00038	0000 0000	 DCD         |??_7RegKeyOrValue@@6B@|
  0003c		 |$LN17@scalar|
  0003c	0000 0000	 DCD         |??_7RegValue@@6B@|
  00040		 |$M12|

			 ENDP  ; |??_GRegValue@@UAAPAXI@Z|, RegValue::`scalar deleting destructor'

	EXPORT	|?RefreshAll@RegKey@@QAAHH@Z|		; RegKey::RefreshAll
	IMPORT	|RegOpenKeyExW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?RefreshAll@RegKey@@QAAHH@Z| DCD imagerel |$LN50@RefreshAll|
	DCD	0xfd756199
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?RefreshAll@RegKey@@QAAHH@Z| PROC	; RegKey::RefreshAll

; 126  :     BOOL    RefreshAll (BOOL bDoNotCloseKey = FALSE) {

  00000		 |$LN50@RefreshAll|
  00000	e92d 4bfc	 push        {r2-r9,r11,lr}
  00004	f20d 0b20	 addw        r11,sp,#0x20
  00008		 |$M48|
  00008	4605		 mov         r5,r0

; 127  :         BOOL fReturn = FALSE;
; 128  :         if(m_RegKey == NULL && RegOpenKeyEx(m_hParentKey, m_lpRegName, 0, 0, &m_RegKey ) != ERROR_SUCCESS )  {

  0000a	692b		 ldr         r3,[r5,#0x10]
  0000c	2400		 movs        r4,#0
  0000e	f04f 0900	 mov         r9,#0
  00012	4688		 mov         r8,r1
  00014	b973		 cbnz        r3,|$LN46@RefreshAll|
  00016	6869		 ldr         r1,[r5,#4]
  00018	f110 0310	 adds        r3,r0,#0x10
  0001c	68a8		 ldr         r0,[r5,#8]
  0001e	9300		 str         r3,[sp]
  00020	2300		 movs        r3,#0
  00022	2200		 movs        r2,#0
  00024	f000 f800	 bl          RegOpenKeyExW
  00028	b108		 cbz         r0,|$LN9@RefreshAll|

; 129  :             m_RegKey = NULL;

  0002a	f8c5 9010	 str         r9,[r5,#0x10]
  0002e		 |$LN9@RefreshAll|

; 130  :         }
; 131  :         if (m_RegKey) {

  0002e	692b		 ldr         r3,[r5,#0x10]
  00030	2b00		 cmp         r3,#0
  00032	d048		 beq         |$LN1@RefreshAll|
  00034		 |$LN46@RefreshAll|

; 132  :             // Backup old key first
; 133  :             RegValue * m_pBackupRegValueList = m_pRegValueList;

  00034	696f		 ldr         r7,[r5,#0x14]

; 134  :             RegKey *   m_pBackupRegKeyList = m_pRegKeyList;

  00036	69ae		 ldr         r6,[r5,#0x18]

; 135  :             m_pRegValueList = NULL;
; 136  :             m_pRegKeyList = NULL;
; 137  :             if ( EnumerateAllKey() && EnumerateAllValue()) { // Succeed to enumerate new key. Delete old key.

  00038	4628		 mov         r0,r5
  0003a	f8c5 9014	 str         r9,[r5,#0x14]
  0003e	f8c5 9018	 str         r9,[r5,#0x18]
  00042	f000 f800	 bl          |?EnumerateAllKey@RegKey@@IAAHXZ|
  00046	b1c8		 cbz         r0,|$LN36@RefreshAll|
  00048	4628		 mov         r0,r5
  0004a	f000 f800	 bl          |?EnumerateAllValue@RegKey@@IAAHXZ|
  0004e	b1a8		 cbz         r0,|$LN36@RefreshAll|

; 138  :                 while (m_pBackupRegValueList ) {

  00050	b147		 cbz         r7,|$LN35@RefreshAll|
  00052		 |$LL6@RefreshAll|

; 139  :                     RegValue * pNextRegValue = (RegValue * )m_pBackupRegValueList->GetNextRegKeyOrValuePtr() ;
; 140  :                     delete m_pBackupRegValueList;

  00052	683b		 ldr         r3,[r7]
  00054	68fc		 ldr         r4,[r7,#0xC]
  00056	2101		 movs        r1,#1
  00058	685b		 ldr         r3,[r3,#4]
  0005a	4638		 mov         r0,r7
  0005c	4798		 blx         r3

; 141  :                     m_pBackupRegValueList = pNextRegValue;

  0005e	4627		 mov         r7,r4
  00060	2c00		 cmp         r4,#0
  00062	d1f6		 bne         |$LL6@RefreshAll|
  00064		 |$LN35@RefreshAll|

; 142  :                 }
; 143  :                 while (m_pBackupRegKeyList) {

  00064	b146		 cbz         r6,|$LN3@RefreshAll|
  00066		 |$LL4@RefreshAll|

; 144  :                     RegKey * pNextKey = (RegKey *) m_pBackupRegKeyList->GetNextRegKeyOrValuePtr();
; 145  :                     delete m_pBackupRegKeyList;

  00066	6833		 ldr         r3,[r6]
  00068	68f4		 ldr         r4,[r6,#0xC]
  0006a	2101		 movs        r1,#1
  0006c	685b		 ldr         r3,[r3,#4]
  0006e	4630		 mov         r0,r6
  00070	4798		 blx         r3

; 146  :                     m_pBackupRegKeyList =  pNextKey ;

  00072	4626		 mov         r6,r4
  00074	2c00		 cmp         r4,#0
  00076	d1f6		 bne         |$LL4@RefreshAll|
  00078		 |$LN3@RefreshAll|

; 147  :                 }
; 148  :                 fReturn = TRUE;

  00078	2401		 movs        r4,#1

; 149  :             }
; 150  :             else { // Fails, We need recover old key

  0007a	e01c		 b           |$LN2@RefreshAll|
  0007c		 |$LN36@RefreshAll|

; 163  :     RegKey * RegFindKey(LPCTSTR lpKeyPath) {
; 164  :         RegKey * pReturnKey =  m_pRegKeyList;
; 165  :         while (pReturnKey) {
; 166  :             if (_tcsicmp( pReturnKey->GetName(),lpKeyPath)==0)
; 167  :                 return pReturnKey;
; 168  :             else
; 169  :                 pReturnKey=(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();
; 170  :         }
; 171  :         return NULL;
; 172  :     }
; 173  :     LONG RegFindValue(LPCTSTR lpValueName, PVOID pvData, LPDWORD pdwSize, LPDWORD pdwType) {
; 174  :         RegValue * pCurValue =  m_pRegValueList;
; 175  :         while (pCurValue) {
; 176  :             if (_tcsicmp( pCurValue->GetName(),lpValueName)==0) {
; 177  :                 return (pCurValue->GetRegValue(pvData,pdwSize,pdwType)?ERROR_SUCCESS :ERROR_INVALID_PARAMETER);
; 178  :             }
; 179  :             else
; 180  :                 pCurValue=(RegValue *)pCurValue->GetNextRegKeyOrValuePtr();
; 181  :         }
; 182  :         return ERROR_NO_MORE_ITEMS;
; 183  :         
; 184  :     }
; 185  :     LONG RegEnum(RegKeyOrValue * pList, DWORD dwReqIndex, __out_bcount(*lpcbName) PWSTR lpName, PDWORD lpcbName) {
; 186  :         RegKeyOrValue * pReturnKey = pList;
; 187  :         for (DWORD dwIndex = 0; pReturnKey!=NULL &&  dwIndex<dwReqIndex; dwIndex++) {
; 188  :             pReturnKey =(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();
; 189  :         }
; 190  :         if (pReturnKey && pReturnKey->GetName()) {
; 191  :             LONG lReturn = ERROR_SUCCESS;
; 192  :             if ( lpcbName) {
; 193  :                 DWORD cbSize = (_tcslen(pReturnKey->GetName()) + 1) * sizeof(lpName[0]) ;
; 194  :                 if ( lpName) {
; 195  :                     VERIFY(SUCCEEDED(StringCbCopy(lpName,*lpcbName,pReturnKey->GetName())));
; 196  :                     if (cbSize>*lpcbName)
; 197  :                         lReturn = ERROR_MORE_DATA;
; 198  :                 }
; 199  :                 *lpcbName =  cbSize;
; 200  :             }
; 201  :             return lReturn;
; 202  :         }
; 203  :         else
; 204  :             return ERROR_NO_MORE_ITEMS;
; 205  :     }
; 206  :     LONG RegEnumKeyEx( DWORD dwReqIndex, __out_bcount(*lpcbName) PWSTR lpName, PDWORD lpcbName) {
; 207  :         return RegEnum(m_pRegKeyList, dwReqIndex, lpName, lpcbName) ;
; 208  :     }
; 209  :     LONG RegEnumValue( DWORD dwReqIndex,__out_bcount(*lpcbValueName)LPWSTR lpValueName, LPDWORD lpcbValueName) {
; 210  :         return RegEnum(m_pRegValueList, dwReqIndex, lpValueName, lpcbValueName) ;
; 211  :     }
; 212  : 
; 213  : protected:
; 214  :     RegKeyOrValue * SearchByName(RegKeyOrValue * pRegKeyOrValueList,LPCTSTR pszName) {
; 215  :         while (pRegKeyOrValueList) {
; 216  :             if (_tcsicmp(pRegKeyOrValueList->GetName(),pszName)== 0) // found it 
; 217  :                 break;
; 218  :             else
; 219  :                 pRegKeyOrValueList = pRegKeyOrValueList->GetNextRegKeyOrValuePtr();
; 220  :         }
; 221  :         return pRegKeyOrValueList;
; 222  :     }
; 223  :     void DeleteAll() {
; 224  :         while (m_pRegValueList) {

  0007c	696b		 ldr         r3,[r5,#0x14]
  0007e	b153		 cbz         r3,|$LN37@RefreshAll|
  00080		 |$LL23@RefreshAll|

; 225  :             RegValue * pNextRegValue = (RegValue * )m_pRegValueList->GetNextRegKeyOrValuePtr() ;

  00080	696b		 ldr         r3,[r5,#0x14]
  00082	68dc		 ldr         r4,[r3,#0xC]

; 226  :             delete m_pRegValueList;

  00084	b123		 cbz         r3,|$LN26@RefreshAll|
  00086	4618		 mov         r0,r3
  00088	681b		 ldr         r3,[r3]
  0008a	2101		 movs        r1,#1
  0008c	685b		 ldr         r3,[r3,#4]
  0008e	4798		 blx         r3
  00090		 |$LN26@RefreshAll|

; 227  :             m_pRegValueList = pNextRegValue;

  00090	616c		 str         r4,[r5,#0x14]
  00092	2c00		 cmp         r4,#0
  00094	d1f4		 bne         |$LL23@RefreshAll|
  00096		 |$LN37@RefreshAll|

; 228  :         }
; 229  :         while (m_pRegKeyList) {

  00096	69ab		 ldr         r3,[r5,#0x18]
  00098	b153		 cbz         r3,|$LN20@RefreshAll|
  0009a		 |$LL21@RefreshAll|

; 230  :             RegKey * pNextKey = (RegKey *) m_pRegKeyList->GetNextRegKeyOrValuePtr();

  0009a	69ab		 ldr         r3,[r5,#0x18]
  0009c	68dc		 ldr         r4,[r3,#0xC]

; 231  :             delete m_pRegKeyList;

  0009e	b123		 cbz         r3,|$LN28@RefreshAll|
  000a0	4618		 mov         r0,r3
  000a2	681b		 ldr         r3,[r3]
  000a4	2101		 movs        r1,#1
  000a6	685b		 ldr         r3,[r3,#4]
  000a8	4798		 blx         r3
  000aa		 |$LN28@RefreshAll|

; 232  :             m_pRegKeyList =  pNextKey ;

  000aa	61ac		 str         r4,[r5,#0x18]
  000ac	2c00		 cmp         r4,#0
  000ae	d1f4		 bne         |$LL21@RefreshAll|
  000b0		 |$LN20@RefreshAll|

; 151  :                 DeleteAll(); // Delete partial succeeded key and value.
; 152  :                 m_pRegValueList = m_pBackupRegValueList;

  000b0	616f		 str         r7,[r5,#0x14]

; 153  :                 m_pRegKeyList = m_pBackupRegKeyList ;

  000b2	61ae		 str         r6,[r5,#0x18]

; 154  :                 fReturn = FALSE;

  000b4	2400		 movs        r4,#0
  000b6		 |$LN2@RefreshAll|

; 155  :             }
; 156  :             if (!bDoNotCloseKey) {

  000b6	f1b8 0f00	 cmp         r8,#0
  000ba	d104		 bne         |$LN1@RefreshAll|

; 157  :                 RegCloseKey( m_RegKey );

  000bc	6928		 ldr         r0,[r5,#0x10]
  000be	f000 f800	 bl          RegCloseKey

; 158  :                 m_RegKey = NULL;

  000c2	f8c5 9010	 str         r9,[r5,#0x10]
  000c6		 |$LN1@RefreshAll|

; 159  :             }
; 160  :         }
; 161  :         return fReturn;
; 162  :     }

  000c6	4620		 mov         r0,r4
  000c8		 |$M51|
  000c8	e8bd 8bfc	 pop         {r2-r9,r11,pc}
  000cc		 |$M49|

			 ENDP  ; |?RefreshAll@RegKey@@QAAHH@Z|, RegKey::RefreshAll


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?Init@RegKey@@UAAHXZ| DCD imagerel |$LN6@Init|
	DCD	0x3f6025
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Init@RegKey@@UAAHXZ| PROC		; RegKey::Init

; 115  :     BOOL Init() {  

  00000		 |$LN6@Init|
  00000	e92d 4800	 push        {r11,lr}
  00004	46eb		 mov         r11,sp
  00006		 |$M4|

; 116  :         RefreshAll();

  00006	2100		 movs        r1,#0
  00008	f000 f800	 bl          |?RefreshAll@RegKey@@QAAHH@Z|

; 117  :         return TRUE; 

  0000c	2001		 movs        r0,#1
  0000e		 |$M7|

; 118  :     };

  0000e	e8bd 8800	 pop         {r11,pc}
  00012		 |$M5|

			 ENDP  ; |?Init@RegKey@@UAAHXZ|, RegKey::Init

	EXPORT	|?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ| ; SystemNotifyRegKey::UpdateAllValue
	IMPORT	|CeFindNextRegChange|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ| DCD imagerel |$LN13@UpdateAllV|
	DCD	0xfd306085
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ| PROC ; SystemNotifyRegKey::UpdateAllValue

; 331  :     BOOL UpdateAllValue() {

  00000		 |$LN13@UpdateAllV|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M11|
  00008	4604		 mov         r4,r0

; 332  :         if (m_hNotifyEvent!=INVALID_HANDLE_VALUE) {

  0000a	6ca3		 ldr         r3,[r4,#0x48]
  0000c	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00010	d014		 beq         |$LN3@UpdateAllV|
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  00012	3034		 adds        r0,r0,#0x34
  00014	f000 f800	 bl          EnterCriticalSection
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

; 334  :             CeFindNextRegChange( m_hNotifyEvent);

  00018	6ca0		 ldr         r0,[r4,#0x48]
  0001a	f000 f800	 bl          CeFindNextRegChange

; 335  :             m_fUpdated = FALSE;

  0001e	2300		 movs        r3,#0

; 336  :             if (RefreshAll(TRUE))

  00020	2101		 movs        r1,#1
  00022	4620		 mov         r0,r4
  00024	6523		 str         r3,[r4,#0x50]
  00026	f000 f800	 bl          |?RefreshAll@RegKey@@QAAHH@Z|
  0002a	b108		 cbz         r0,|$LN2@UpdateAllV|

; 337  :                  m_fUpdated = TRUE;

  0002c	2301		 movs        r3,#1
  0002e	6523		 str         r3,[r4,#0x50]
  00030		 |$LN2@UpdateAllV|
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  00030	f114 0034	 adds        r0,r4,#0x34
  00034	f000 f800	 bl          LeaveCriticalSection
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

; 339  :             return TRUE;

  00038	2001		 movs        r0,#1
  0003a	e000		 b           |$LN1@UpdateAllV|
  0003c		 |$LN3@UpdateAllV|

; 340  :         } else
; 341  :             return FALSE;

  0003c	2000		 movs        r0,#0
  0003e		 |$LN1@UpdateAllV|
  0003e		 |$M14|

; 342  :     }

  0003e	e8bd 8818	 pop         {r3,r4,r11,pc}
  00042		 |$M12|

			 ENDP  ; |?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ|, SystemNotifyRegKey::UpdateAllValue

	EXPORT	|?EnterLock@SystemNotifyRegKey@@QAAXXZ|	; SystemNotifyRegKey::EnterLock

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?EnterLock@SystemNotifyRegKey@@QAAXXZ| DCD imagerel |$LN18@EnterLock|
	DCD	0xfd306091
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?EnterLock@SystemNotifyRegKey@@QAAXXZ| PROC ; SystemNotifyRegKey::EnterLock

; 325  :     void EnterLock() { 

  00000		 |$LN18@EnterLock|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M16|
  00008	4604		 mov         r4,r0
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  0000a	3034		 adds        r0,r0,#0x34
  0000c	f000 f800	 bl          EnterCriticalSection
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

; 327  :         if ( m_fUpdated == FALSE)

  00010	6d23		 ldr         r3,[r4,#0x50]
  00012	b9bb		 cbnz        r3,|$LN8@EnterLock|

; 330  :     void LeaveLock() { Unlock(); };
; 331  :     BOOL UpdateAllValue() {
; 332  :         if (m_hNotifyEvent!=INVALID_HANDLE_VALUE) {

  00014	6ca3		 ldr         r3,[r4,#0x48]
  00016	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  0001a	d013		 beq         |$LN8@EnterLock|
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  0001c	f114 0034	 adds        r0,r4,#0x34
  00020	f000 f800	 bl          EnterCriticalSection
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

; 334  :             CeFindNextRegChange( m_hNotifyEvent);

  00024	6ca0		 ldr         r0,[r4,#0x48]
  00026	f000 f800	 bl          CeFindNextRegChange

; 335  :             m_fUpdated = FALSE;

  0002a	2300		 movs        r3,#0

; 336  :             if (RefreshAll(TRUE))

  0002c	2101		 movs        r1,#1
  0002e	4620		 mov         r0,r4
  00030	6523		 str         r3,[r4,#0x50]
  00032	f000 f800	 bl          |?RefreshAll@RegKey@@QAAHH@Z|
  00036	b108		 cbz         r0,|$LN7@EnterLock|

; 337  :                  m_fUpdated = TRUE;

  00038	2301		 movs        r3,#1
  0003a	6523		 str         r3,[r4,#0x50]
  0003c		 |$LN7@EnterLock|
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  0003c	f114 0034	 adds        r0,r4,#0x34
  00040	f000 f800	 bl          LeaveCriticalSection
  00044		 |$LN8@EnterLock|
  00044		 |$M19|
; File c:\wince800\public\common\oak\drivers\pm\mdd\pmsysreg.h

; 329  :     };

  00044	e8bd 8818	 pop         {r3,r4,r11,pc}
  00048		 |$M17|

			 ENDP  ; |?EnterLock@SystemNotifyRegKey@@QAAXXZ|, SystemNotifyRegKey::EnterLock

	EXPORT	|??_C@_1FO@BEMGMFB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAo?$AAn?$AA?9?$AAb@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@KLECHLJH@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@CIJJOFGK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAK?$AAe?$AAr?$AAn?$AAe?$AAl?$AAI?$AAo?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAI?$AAO?$AAC?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@BGMPGNLF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAr?$AAa?$AAi?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@BDHACCND@?$AAc?$AAo?$AAl?$AAd?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@HNBCPNM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JO@PPFJDFMA@?$AAP?$AAM?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@MODNLGMJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@GKMKKCOO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AAO?$AAf?$AAf?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@NKKFKHPG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAa?$AAc?$AAk?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AAO?$AAf?$AAf?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@HOFKPKHN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAo?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAp?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAo@| [ DATA ] ; `string'
	EXPORT	|PlatformSetSystemPowerState|
	IMPORT	|wcscmp|
	IMPORT	|PmUpdateSystemPowerStatesIfChanged|
	IMPORT	|RegReadSystemPowerState|
	IMPORT	|wcsncpy_s|
	IMPORT	|GenerateNotifications|
	IMPORT	|WaitForAPIReady|
	IMPORT	|PmLock|
	IMPORT	|gpSystemPowerState|
	IMPORT	|gpCeilingDx|
	IMPORT	|PmUnlock|
	IMPORT	|gpDeviceLists|
	IMPORT	|UpdateClassDeviceStates|
	IMPORT	|Sleep|
	IMPORT	|ForcePageout|
	IMPORT	|?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A| ; g_pSysRegistryAccess
	IMPORT	|SetCleanRebootFlag|
	IMPORT	|FileSystemPowerFunction|
	IMPORT	|GetDeviceListFromClass|
	IMPORT	|KernelLibIoControl|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|UpdateAllDeviceStates|
	IMPORT	|SystemPowerStateDestroy|
	IMPORT	|PowerRestrictionDestroy|
	IMPORT	|PowerOffSystem|

  00000			 AREA	 |.bss|, NOINIT
|?fWantStartupScreen@?6??PlatformSetSystemPowerState@@9@4HA| % 0x4 ; `PlatformSetSystemPowerState'::`7'::fWantStartupScreen

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PlatformSetSystemPowerState| DCD imagerel |$LN123@PlatformSe|
	DCD	imagerel |$unwind2$PlatformSetSystemPowerState|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$PlatformSetSystemPowerState| DCD 0x33b001ba
	DCD	0x1e892e8
	DCD	0xe8ffdffc
	DCD	0xffdf01
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffd9

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@HOFKPKHN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAo?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAp?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAo@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "t", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "p", 0x0, "r", 0x0, "i", 0x0, "o"
	DCB	0x0, "r", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@NKKFKHPG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAa?$AAc?$AAk?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AAO?$AAf?$AAf?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "b", 0x0, "a", 0x0, "c"
	DCB	0x0, "k", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m"
	DCB	0x0, " ", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, "O", 0x0, "f", 0x0, "f", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, "(", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@GKMKKCOO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AAO?$AAf?$AAf?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "O", 0x0, "f"
	DCB	0x0, "f", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "m", 0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@MODNLGMJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAd@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "u", 0x0, "m", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "-", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, "i"
	DCB	0x0, "f", 0x0, "y", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " "
	DCB	0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@PPFJDFMA@?$AAP?$AAM?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3@| DCB "P"
	DCB	0x0, "M", 0x0, ":", 0x0, " ", 0x0, "P", 0x0, "l", 0x0, "a"
	DCB	0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0, "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, ":", 0x0, " ", 0x0, "K", 0x0, "e", 0x0, "r", 0x0, "n"
	DCB	0x0, "e", 0x0, "l", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "("
	DCB	0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_"
	DCB	0x0, "H", 0x0, "A", 0x0, "L", 0x0, "_", 0x0, "R", 0x0, "E"
	DCB	0x0, "B", 0x0, "O", 0x0, "O", 0x0, "T", 0x0, ")", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n"
	DCB	0x0, "e", 0x0, "d", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@HNBCPNM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "s"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, " ", 0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@BDHACCND@?$AAc?$AAo?$AAl?$AAd?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| DCB "c"
	DCB	0x0, "o", 0x0, "l", 0x0, "d", 0x0, "r", 0x0, "e", 0x0, "b"
	DCB	0x0, "o", 0x0, "o", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@BGMPGNLF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAr?$AAa?$AAi?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAp@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "s"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "a", 0x0, "i"
	DCB	0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "t"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "p", 0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "y", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@CIJJOFGK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAK?$AAe?$AAr?$AAn?$AAe?$AAl?$AAI?$AAo?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAI?$AAO?$AAC?$AAT@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "K"
	DCB	0x0, "e", 0x0, "r", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, "I"
	DCB	0x0, "o", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "(", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "H", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "P", 0x0, "R", 0x0, "E", 0x0, "S", 0x0, "U"
	DCB	0x0, "S", 0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@KLECHLJH@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@BEMGMFB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAo?$AAn?$AA?9?$AAb@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "s"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "n", 0x0, "-"
	DCB	0x0, "b", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " "
	DCB	0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp
; File c:\wince800\public\common\sdk\inc\guiddef.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp
; File c:\wince800\public\common\sdk\inc\guiddef.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PlatformSetSystemPowerState| PROC

; 458  : {

  00000		 |$LN123@PlatformSe|
  00000	e92d 4ff0	 push        {r4-r11,lr}
  00004	f20d 0b1c	 addw        r11,sp,#0x1C
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d48	 subw        sp,sp,#0x248
  00010		 |$M121|

; 459  : 	DWORD dwStatus = ERROR_SUCCESS;
; 460  : 	PSYSTEM_POWER_STATE pNewSystemPowerState = NULL;
; 461  : 	PDEVICE_POWER_RESTRICTION pNewCeilingDx = NULL;
; 462  : 	BOOL fDoTransition = FALSE;
; 463  : 	INT iPreSuspendPriority = 0;
; 464  : 	static BOOL fFirstCall = TRUE;
; 465  : 
; 466  : 	SETFNAME (_T ("PlatformSetSystemPowerState"));
; 467  : 
; 468  : 	// Read system power state variables and construct new lists:
; 469  : 
; 470  : 	if (gfFileSystemsAvailable)

  00010	f8df a3b0	 ldr         r10,|$LN146@PlatformSe| ; =|?gfFileSystemsAvailable@@3HA|
  00014	2300		 movs        r3,#0
  00016	9305		 str         r3,[sp,#0x14]
  00018	9306		 str         r3,[sp,#0x18]
  0001a	f8da 3000	 ldr         r3,[r10]
  0001e	4604		 mov         r4,r0
  00020	2700		 movs        r7,#0
  00022	9408		 str         r4,[sp,#0x20]
  00024	9707		 str         r7,[sp,#0x1C]
  00026	b10b		 cbz         r3,|$LN41@PlatformSe|

; 471  : 		PmUpdateSystemPowerStatesIfChanged ();

  00028	f000 f800	 bl          PmUpdateSystemPowerStatesIfChanged
  0002c		 |$LN41@PlatformSe|

; 472  : 	dwStatus = RegReadSystemPowerState (pszName, &pNewSystemPowerState, &pNewCeilingDx);

  0002c	aa06		 add         r2,sp,#0x18
  0002e	a905		 add         r1,sp,#0x14
  00030	4620		 mov         r0,r4
  00032	f000 f800	 bl          RegReadSystemPowerState

; 473  : 
; 474  : 	// Did we get registry information about the new power state?
; 475  : 
; 476  : 	if (dwStatus == ERROR_SUCCESS)

  00036	f8df 6388	 ldr.w       r6,|$LN145@PlatformSe| ; =|dpCurSettings|
  0003a	f8df 5380	 ldr.w       r5,|$LN144@PlatformSe| ; =|?gfGwesReady@@3HA|
  0003e	900a		 str         r0,[sp,#0x28]
  00040	2800		 cmp         r0,#0
  00042	f040 817e	 bne         |$LL118@PlatformSe|

; 477  : 	{
; 478  : 		BOOL fSuspendSystem = FALSE;
; 479  : 		static BOOL fWantStartupScreen = FALSE;
; 480  : 		DWORD dwNewStateFlags = pNewSystemPowerState->dwFlags;

  00046	9c05		 ldr         r4,[sp,#0x14]
  00048	f04f 0800	 mov         r8,#0
  0004c	f8cd 8010	 str         r8,[sp,#0x10]
  00050	f8d4 9008	 ldr         r9,[r4,#8]

; 481  : 
; 482  : 		// Assume we will update the system power state:
; 483  : 		fDoTransition = TRUE;
; 484  : 
; 485  : 		// Are we going to suspend the system as a whole?
; 486  : 		if ((dwNewStateFlags &
; 487  : 			 (POWER_STATE_SUSPEND | POWER_STATE_OFF | POWER_STATE_CRITICAL | POWER_STATE_RESET)) != 0)

  00054	f419 0f26	 tst         r9,#0xA60000
  00058	d001		 beq         |$LN39@PlatformSe|

; 488  : 		{
; 489  : 			fSuspendSystem = TRUE;

  0005a	2301		 movs        r3,#1
  0005c	9304		 str         r3,[sp,#0x10]
  0005e		 |$LN39@PlatformSe|

; 490  : 		}
; 491  : 
; 492  : 		// A "critical" suspend might mean we have totally lost battery power and need
; 493  : 		// to suspend really quickly.  Depending on the platform, OEMs may be able
; 494  : 		// to bypass driver notification entirely and rely on xxx_PowerDown() notifications
; 495  : 		// to suspend gracefully.  Or they may be able to implement a critical suspend
; 496  : 		// kernel ioctl.  This sample implementation is very generic and simply sets the
; 497  : 		// POWER_FORCE flag, which is not used.
; 498  : 
; 499  : 		if (dwNewStateFlags & (POWER_STATE_CRITICAL | POWER_STATE_OFF | POWER_STATE_RESET))
; 500  : 		{
; 501  : 			fForce = TRUE;
; 502  : 		}
; 503  : 
; 504  : 		// If everything seems OK, do the set operation:
; 505  : 
; 506  : 		if (fDoTransition)
; 507  : 		{
; 508  : 			POWER_BROADCAST_BUFFER pbb;
; 509  : 			PDEVICE_LIST pdl;
; 510  : 			BOOL fResumeSystem = FALSE;
; 511  : 
; 512  : 			// Send out system power state change notifications:
; 513  : 			pbb.Message = PBT_TRANSITION;

  0005e	2301		 movs        r3,#1
  00060	930c		 str         r3,[sp,#0x30]

; 514  : 			pbb.Flags = pNewSystemPowerState->dwFlags;

  00062	f8cd 9034	 str         r9,[sp,#0x34]

; 515  : 			pbb.Length = _tcslen (pNewSystemPowerState->pszName) + 1;	// Char count not byte count for now

  00066	6820		 ldr         r0,[r4]
  00068	2700		 movs        r7,#0
  0006a	f000 f800	 bl          wcslen
  0006e	1c43		 adds        r3,r0,#1
  00070	930e		 str         r3,[sp,#0x38]

; 516  : 			if (pbb.Length > MAX_PATH)

  00072	f5b3 7f82	 cmp         r3,#0x104
  00076	d902		 bls         |$LN36@PlatformSe|

; 517  : 			{
; 518  : 				// Truncate the system power state name -- note, we actually have MAX_PATH + 1
; 519  : 				// characters available.
; 520  : 				pbb.Length = MAX_PATH;

  00078	f44f 7382	 mov         r3,#0x104
  0007c	930e		 str         r3,[sp,#0x38]
  0007e		 |$LN36@PlatformSe|

; 521  : 			}
; 522  : 			_tcsncpy_s (pbb.SystemPowerState, _countof (pbb.SystemPowerState),
; 523  : 						pNewSystemPowerState->pszName, pbb.Length);

  0007e	6822		 ldr         r2,[r4]
  00080	f240 1105	 mov         r1,#0x105
  00084	a80f		 add         r0,sp,#0x3C
  00086	f000 f800	 bl          wcsncpy_s

; 524  : 			pbb.Length *= sizeof (pbb.SystemPowerState[0]);	           // Convert to byte count

  0008a	9b0e		 ldr         r3,[sp,#0x38]

; 525  : 			GenerateNotifications ((PPOWER_BROADCAST) & pbb);

  0008c	a80c		 add         r0,sp,#0x30
  0008e	005b		 lsls        r3,r3,#1
  00090	930e		 str         r3,[sp,#0x38]
  00092	f000 f800	 bl          GenerateNotifications

; 526  : 
; 527  : 			// Is GWES ready?
; 528  : 			if (!gfGwesReady)

  00096	682a		 ldr         r2,[r5]
  00098	b942		 cbnz        r2,|$LN34@PlatformSe|

; 529  : 			{
; 530  : 				if (WaitForAPIReady (SH_GDI, 0) == WAIT_OBJECT_0)

  0009a	2100		 movs        r1,#0
  0009c	2050		 movs        r0,#0x50
  0009e	f000 f800	 bl          WaitForAPIReady
  000a2	b910		 cbnz        r0,|$LN117@PlatformSe|

; 531  : 				{
; 532  : 					gfGwesReady = TRUE;

  000a4	2201		 movs        r2,#1
  000a6	602a		 str         r2,[r5]
  000a8	e000		 b           |$LN34@PlatformSe|
  000aa		 |$LN117@PlatformSe|
  000aa	682a		 ldr         r2,[r5]
  000ac		 |$LN34@PlatformSe|

; 533  : 				}
; 534  : 			}
; 535  : 
; 536  : 			// Are we suspending?
; 537  : 			if (fSuspendSystem && gpfnGwesPowerDown != NULL)

  000ac	9c04		 ldr         r4,[sp,#0x10]
  000ae	f8df 8308	 ldr         r8,|$LN143@PlatformSe| ; =|?fWantStartupScreen@?6??PlatformSetSystemPowerState@@9@4HA|
  000b2	b12c		 cbz         r4,|$LN32@PlatformSe|
  000b4	6bab		 ldr         r3,[r5,#0x38]
  000b6	b11b		 cbz         r3,|$LN32@PlatformSe|

; 538  : 			{
; 539  : 				// Start the process of suspending GWES:
; 540  : 				if (gfGwesReady)

  000b8	b112		 cbz         r2,|$LN32@PlatformSe|

; 541  : 				{
; 542  : 					fWantStartupScreen = gpfnGwesPowerDown ();

  000ba	4798		 blx         r3
  000bc	f8c8 0000	 str         r0,[r8]
  000c0		 |$LN32@PlatformSe|

; 543  : 				}
; 544  : 			}
; 545  : 
; 546  : 			// Update global system state variables:
; 547  : 			PMLOCK ();

  000c0	f000 f800	 bl          PmLock

; 548  : 			PSYSTEM_POWER_STATE pOldSystemPowerState = gpSystemPowerState;

  000c4	4abb		 ldr         r2,|$LN142@PlatformSe| ; =|gpSystemPowerState|

; 549  : 			PDEVICE_POWER_RESTRICTION pOldCeilingDx = gpCeilingDx;

  000c6	49ba		 ldr         r1,|$LN141@PlatformSe| ; =|gpCeilingDx|
  000c8	6810		 ldr         r0,[r2]
  000ca	680b		 ldr         r3,[r1]
  000cc	900b		 str         r0,[sp,#0x2C]
  000ce	9309		 str         r3,[sp,#0x24]

; 550  : 
; 551  : 			if (gpSystemPowerState != NULL
; 552  : 				&& (gpSystemPowerState->
; 553  : 					dwFlags & (POWER_STATE_SUSPEND | POWER_STATE_OFF | POWER_STATE_CRITICAL)) != 0)

  000d0	b120		 cbz         r0,|$LN31@PlatformSe|
  000d2	6883		 ldr         r3,[r0,#8]
  000d4	f413 1f18	 tst         r3,#0x260000
  000d8	d000		 beq         |$LN31@PlatformSe|

; 554  : 			{
; 555  : 				// We are exiting a suspended state:
; 556  : 				fResumeSystem = TRUE;

  000da	2701		 movs        r7,#1
  000dc		 |$LN31@PlatformSe|

; 557  : 			}
; 558  : 			gpSystemPowerState = pNewSystemPowerState;

  000dc	9b05		 ldr         r3,[sp,#0x14]
  000de	6013		 str         r3,[r2]

; 559  : 			gpCeilingDx = pNewCeilingDx;

  000e0	9b06		 ldr         r3,[sp,#0x18]
  000e2	600b		 str         r3,[r1]

; 560  : 			PMUNLOCK ();

  000e4	f000 f800	 bl          PmUnlock

; 561  : 
; 562  : 			// Are we suspending, resuming, or neither?
; 563  : 			if (fSuspendSystem)

  000e8	2c00		 cmp         r4,#0
  000ea	f000 80a2	 beq         |$LN30@PlatformSe|

; 564  : 			{
; 565  : 				INT iCurrentPriority;
; 566  : 
; 567  : 				// We're suspending: update all devices other than block devices,
; 568  : 				// in case any of them need to access the registry or write files.
; 569  : 
; 570  : 				PMLOGMSG (ZONE_PLATFORM || ZONE_RESUME,
; 571  : 						  (_T ("%s: suspending - notifying non-block drivers\r\n"), pszFname));

  000ee	f8d6 2440	 ldr         r2,[r6,#0x440]
  000f2	f412 6f80	 tst         r2,#0x400
  000f6	d102		 bne         |$LN44@PlatformSe|
  000f8	f012 0f08	 tst         r2,#8
  000fc	d005		 beq         |$LN45@PlatformSe|
  000fe		 |$LN44@PlatformSe|
  000fe	48ab		 ldr         r0,|$LN140@PlatformSe| ; =|??_C@_1FO@BEMGMFB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAo?$AAn?$AA?9?$AAb@|
  00100	499c		 ldr         r1,|$LN126@PlatformSe| ; =|??_C@_1DI@KLECHLJH@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00102	f000 f800	 bl          CeLogMsg
  00106	f8d6 2440	 ldr         r2,[r6,#0x440]
  0010a		 |$LN45@PlatformSe|

; 572  : 				for (pdl = gpDeviceLists; pdl != NULL; pdl = pdl->pNext)

  0010a	4b9e		 ldr         r3,|$LN130@PlatformSe| ; =|gpDeviceLists|
  0010c	681c		 ldr         r4,[r3]
  0010e	b174		 cbz         r4,|$LN27@PlatformSe|
  00110		 |$LL29@PlatformSe|
; File c:\wince800\public\common\sdk\inc\guiddef.h

; 150  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00110	6820		 ldr         r0,[r4]
  00112	2210		 movs        r2,#0x10
  00114	f10a 0104	 add         r1,r10,#4
  00118	f000 f800	 bl          memcmp
  0011c	b110		 cbz         r0,|$LN28@PlatformSe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

; 576  : 						UpdateClassDeviceStates (pdl);

  0011e	4620		 mov         r0,r4
  00120	f000 f800	 bl          UpdateClassDeviceStates
  00124		 |$LN28@PlatformSe|

; 572  : 				for (pdl = gpDeviceLists; pdl != NULL; pdl = pdl->pNext)

  00124	6964		 ldr         r4,[r4,#0x14]
  00126	2c00		 cmp         r4,#0
  00128	d1f2		 bne         |$LL29@PlatformSe|
  0012a	f8d6 2440	 ldr         r2,[r6,#0x440]
  0012e		 |$LN27@PlatformSe|

; 577  : 					}
; 578  : 				}
; 579  : 
; 580  : 				// Notify the kernel that we are about to suspend.  This gives the
; 581  : 				// kernel an opportunity to clear wake source flags before we initiate
; 582  : 				// the suspend process.  If we don't do this and a wake source interrupt
; 583  : 				// occurs between the time we call PowerOffSystem() and the time
; 584  : 				// OEMPowerOff() is invoked, it is hard for the kernel to know whether or
; 585  : 				// not to suspend.
; 586  : 
; 587  : 				PMLOGMSG (ZONE_PLATFORM || ZONE_RESUME,
; 588  : 						  (_T ("%s: calling KernelIoControl(IOCTL_HAL_PRESUSPEND)\r\n"), pszFname));

  0012e	f412 6f80	 tst         r2,#0x400
  00132	d102		 bne         |$LN46@PlatformSe|
  00134	f012 0f08	 tst         r2,#8
  00138	d003		 beq         |$LN47@PlatformSe|
  0013a		 |$LN46@PlatformSe|
  0013a	489b		 ldr         r0,|$LN139@PlatformSe| ; =|??_C@_1GI@CIJJOFGK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAK?$AAe?$AAr?$AAn?$AAe?$AAl?$AAI?$AAo?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAI?$AAO?$AAC?$AAT@|
  0013c	498d		 ldr         r1,|$LN126@PlatformSe| ; =|??_C@_1DI@KLECHLJH@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  0013e	f000 f800	 bl          CeLogMsg
  00142		 |$LN47@PlatformSe|

; 589  : 				KernelIoControl (IOCTL_HAL_PRESUSPEND, NULL, 0, NULL, 0, NULL);

  00142	4898		 ldr         r0,|$LN138@PlatformSe| ; =0x10100f4
  00144	f04f 0800	 mov         r8,#0
  00148	2300		 movs        r3,#0
  0014a	2200		 movs        r2,#0
  0014c	2100		 movs        r1,#0
  0014e	f8cd 8004	 str         r8,[sp,#4]
  00152	f8cd 8000	 str         r8,[sp]
  00156	f000 f800	 bl          KernelIoControl

; 590  : 				iCurrentPriority = CeGetThreadPriority (GetCurrentThread ());

  0015a	2041		 movs        r0,#0x41
  0015c	f000 f800	 bl          CeGetThreadPriority
  00160	4604		 mov         r4,r0

; 591  : 				DEBUGCHK (iCurrentPriority != THREAD_PRIORITY_ERROR_RETURN);
; 592  : 				if (iCurrentPriority != THREAD_PRIORITY_ERROR_RETURN)

  00162	f06f 4300	 mvn         r3,#0x80000000
  00166	429c		 cmp         r4,r3
  00168	d00a		 beq         |$LN25@PlatformSe|

; 593  : 				{
; 594  : 					CeSetThreadPriority (GetCurrentThread (), giPreSuspendPriority);

  0016a	6a69		 ldr         r1,[r5,#0x24]
  0016c	2041		 movs        r0,#0x41
  0016e	f000 f800	 bl          CeSetThreadPriority

; 595  : 					Sleep (0);

  00172	2000		 movs        r0,#0
  00174	f000 f800	 bl          Sleep

; 596  : 					CeSetThreadPriority (GetCurrentThread (), iCurrentPriority);

  00178	4621		 mov         r1,r4
  0017a	2041		 movs        r0,#0x41
  0017c	f000 f800	 bl          CeSetThreadPriority
  00180		 |$LN25@PlatformSe|

; 597  : 				}
; 598  : 
; 599  : 				// Notify file systems that their block drivers will soon go away.
; 600  : 				// After making this call, this thread is the only one that can access
; 601  : 				// the file system (including registry and device drivers) without
; 602  : 				// blocking.  Unfortunately, this API takes and holds the file system
; 603  : 				// critical section, so other threads attempting to access the registry
; 604  : 				// or files may cause priority inversions.  To avoid priority problem
; 605  : 				// that may starve the Power Manager, we may raise our own priority to a
; 606  : 				// high level.  Do this if giSuspendPriority is non-zero.
; 607  : 
; 608  : 				if (giSuspendPriority != 0)

  00180	6aeb		 ldr         r3,[r5,#0x2C]
  00182	b1c3		 cbz         r3,|$LN24@PlatformSe|

; 609  : 				{
; 610  : 					iPreSuspendPriority = CeGetThreadPriority (GetCurrentThread ());

  00184	2041		 movs        r0,#0x41
  00186	f000 f800	 bl          CeGetThreadPriority

; 616  : 							   giSuspendPriority));

  0018a	f8d6 3440	 ldr         r3,[r6,#0x440]
  0018e	4607		 mov         r7,r0
  00190	9707		 str         r7,[sp,#0x1C]
  00192	f413 6f80	 tst         r3,#0x400
  00196	d00a		 beq         |$LN48@PlatformSe|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00198	2008		 movs        r0,#8
  0019a	f000 f800	 bl          __GetUserKData
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

; 616  : 							   giSuspendPriority));

  0019e	6aeb		 ldr         r3,[r5,#0x2C]
  001a0	4974		 ldr         r1,|$LN126@PlatformSe| ; =|??_C@_1DI@KLECHLJH@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  001a2	4602		 mov         r2,r0
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

; 616  : 							   giSuspendPriority));

  001a4	487e		 ldr         r0,|$LN137@PlatformSe| ; =|??_C@_1IG@BGMPGNLF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAr?$AAa?$AAi?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAp@|
  001a6	9300		 str         r3,[sp]
  001a8	463b		 mov         r3,r7
  001aa	f000 f800	 bl          CeLogMsg
  001ae		 |$LN48@PlatformSe|

; 617  : 					CeSetThreadPriority (GetCurrentThread (), giSuspendPriority);

  001ae	6ae9		 ldr         r1,[r5,#0x2C]
  001b0	2041		 movs        r0,#0x41
  001b2	f000 f800	 bl          CeSetThreadPriority
  001b6		 |$LN24@PlatformSe|

; 618  : 				}
; 619  : 
; 620  :                 // Discard code pages from drivers.  This is a diagnostic tool to
; 621  :                 // forcibly expose paging-related bugs that could cause apparently
; 622  :                 // random system crashes or hangs.  Optionally, OEMs can disable this
; 623  :                 // for production systems to speed up resume times.  We have to call
; 624  :                 // PageOutMode before FileSys Shutdown. Otherwise, it cause dead lock
; 625  :                 // between filesystem and loader.
; 626  : 
; 627  : 				if (gfPageOutAllModules)

  001b6	6cab		 ldr         r3,[r5,#0x48]
  001b8	b10b		 cbz         r3,|$LN23@PlatformSe|

; 628  : 				{
; 629  : 					ForcePageout ();

  001ba	f000 f800	 bl          ForcePageout
  001be		 |$LN23@PlatformSe|

; 630  : 				}
; 631  : 
; 632  : 				if (g_pSysRegistryAccess)

  001be	4b73		 ldr         r3,|$LN132@PlatformSe| ; =|?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A|
  001c0	6818		 ldr         r0,[r3]
  001c2	b108		 cbz         r0,|$LN22@PlatformSe|

; 633  : 					g_pSysRegistryAccess->EnterLock ();

  001c4	f000 f800	 bl          |?EnterLock@SystemNotifyRegKey@@QAAXXZ|
  001c8		 |$LN22@PlatformSe|

; 634  : 				gfFileSystemsAvailable = FALSE;

  001c8	2300		 movs        r3,#0
  001ca	f8ca 3000	 str         r3,[r10]

; 635  : 
; 636  : 				if ((dwNewStateFlags & POWER_STATE_RESET) != 0)

  001ce	f419 0400	 ands        r4,r9,#0x800000
  001d2	d006		 beq         |$LN20@PlatformSe|

; 637  : 				{
; 638  : 					// Is this to be a cold boot?
; 639  : 					if (_tcscmp (pszName, _T ("coldreboot")) == 0)

  001d4	4971		 ldr         r1,|$LN136@PlatformSe| ; =|??_C@_1BG@BDHACCND@?$AAc?$AAo?$AAl?$AAd?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@|
  001d6	9808		 ldr         r0,[sp,#0x20]
  001d8	f000 f800	 bl          wcscmp
  001dc	b908		 cbnz        r0,|$LN20@PlatformSe|

; 640  : 					{
; 641  : 						SetCleanRebootFlag ();

  001de	f000 f800	 bl          SetCleanRebootFlag
  001e2		 |$LN20@PlatformSe|

; 642  : 					}
; 643  : 				}
; 644  : 
; 645  : 				FileSystemPowerFunction (FSNOTIFY_POWER_OFF);

  001e2	2002		 movs        r0,#2
  001e4	f000 f800	 bl          FileSystemPowerFunction

; 646  : 
; 647  : 				// Update block device power states:
; 648  : 				PMLOGMSG (ZONE_PLATFORM || ZONE_RESUME,
; 649  : 						  (_T ("%s: suspending - notifying block drivers\r\n"), pszFname));

  001e8	f8d6 3440	 ldr         r3,[r6,#0x440]
  001ec	f413 6f80	 tst         r3,#0x400
  001f0	d102		 bne         |$LN50@PlatformSe|
  001f2	f013 0f08	 tst         r3,#8
  001f6	d003		 beq         |$LN51@PlatformSe|
  001f8		 |$LN50@PlatformSe|
  001f8	4867		 ldr         r0,|$LN135@PlatformSe| ; =|??_C@_1FG@HNBCPNM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk@|
  001fa	495e		 ldr         r1,|$LN126@PlatformSe| ; =|??_C@_1DI@KLECHLJH@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  001fc	f000 f800	 bl          CeLogMsg
  00200		 |$LN51@PlatformSe|

; 650  : 				pdl = GetDeviceListFromClass (&idBlockDevices);

  00200	f10a 0004	 add         r0,r10,#4
  00204	f000 f800	 bl          GetDeviceListFromClass

; 651  : 				if (pdl != NULL)

  00208	b108		 cbz         r0,|$LN19@PlatformSe|

; 652  : 				{
; 653  : 					UpdateClassDeviceStates (pdl);

  0020a	f000 f800	 bl          UpdateClassDeviceStates
  0020e		 |$LN19@PlatformSe|

; 654  : 				}
; 655  : 
; 656  : 				// Handle resets and shutdowns here, after flushing files.  Since Windows CE does
; 657  : 				// not define a standard mechanism for handling shutdown (via POWER_STATE_OFF),
; 658  : 				// OEMs will need to fill in the appropriate code here.  Similarly, if an OEM does
; 659  : 				// not support IOCTL_HAL_REBOOT, they should not support POWER_STATE_RESET.
; 660  : 
; 661  : 				if ((dwNewStateFlags & POWER_STATE_RESET) != 0)

  0020e	2c00		 cmp         r4,#0
  00210	d065		 beq         |$LN8@PlatformSe|

; 662  : 				{
; 663  : 					// Should not return from this call, but if we do just suspend the system:
; 664  : 					KernelLibIoControl ((HANDLE) KMOD_OAL, IOCTL_HAL_REBOOT, NULL, 0, NULL, 0,
; 665  : 										NULL);

  00212	4960		 ldr         r1,|$LN134@PlatformSe| ; =0x101003c
  00214	2300		 movs        r3,#0
  00216	2200		 movs        r2,#0
  00218	2005		 movs        r0,#5
  0021a	f8cd 8008	 str         r8,[sp,#8]
  0021e	f8cd 8004	 str         r8,[sp,#4]
  00222	f8cd 8000	 str         r8,[sp]
  00226	f000 f800	 bl          KernelLibIoControl

; 666  : 					RETAILMSG (TRUE,
; 667  : 							   (_T
; 668  : 								("PM: PlatformSetSystemPowerState: KernelIoControl(IOCTL_HAL_REBOOT) returned!\r\n")));

  0022a	4859		 ldr         r0,|$LN133@PlatformSe| ; =|??_C@_1JO@PPFJDFMA@?$AAP?$AAM?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3@|
  0022c	f000 f800	 bl          NKDbgPrintfW

; 669  : 					DEBUGCHK (FALSE);	// Break into the debugger.
; 670  : 				}
; 671  : 			}

  00230	e055		 b           |$LN8@PlatformSe|
  00232		 |$LN30@PlatformSe|

; 672  : 			else if (fResumeSystem)

  00232	2f00		 cmp         r7,#0
  00234	d051		 beq         |$LN16@PlatformSe|

; 673  : 			{
; 674  : 				// We're waking up from a resume -- update block device power states
; 675  : 				// so we can access the registry and/or files.
; 676  : 
; 677  : 				PMLOGMSG (ZONE_PLATFORM || ZONE_RESUME,
; 678  : 						  (_T ("%s: resuming - notifying block drivers\r\n"), pszFname));

  00236	f8d6 3440	 ldr         r3,[r6,#0x440]
  0023a	f413 6f80	 tst         r3,#0x400
  0023e	d102		 bne         |$LN54@PlatformSe|
  00240	f013 0f08	 tst         r3,#8
  00244	d003		 beq         |$LN55@PlatformSe|
  00246		 |$LN54@PlatformSe|
  00246	494b		 ldr         r1,|$LN126@PlatformSe| ; =|??_C@_1DI@KLECHLJH@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00248	484f		 ldr         r0,|$LN131@PlatformSe| ; =|??_C@_1FC@MODNLGMJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAd@|
  0024a	f000 f800	 bl          CeLogMsg
  0024e		 |$LN55@PlatformSe|

; 679  : 				pdl = GetDeviceListFromClass (&idBlockDevices);

  0024e	f10a 0004	 add         r0,r10,#4
  00252	f000 f800	 bl          GetDeviceListFromClass

; 680  : 				if (pdl != NULL)

  00256	b108		 cbz         r0,|$LN15@PlatformSe|

; 681  : 				{
; 682  : 					UpdateClassDeviceStates (pdl);

  00258	f000 f800	 bl          UpdateClassDeviceStates
  0025c		 |$LN15@PlatformSe|

; 683  : 				}
; 684  : 
; 685  : 				// Notify file systems that their block drivers are back.
; 686  : 
; 687  : 				FileSystemPowerFunction (FSNOTIFY_POWER_ON);

  0025c	2001		 movs        r0,#1
  0025e	f000 f800	 bl          FileSystemPowerFunction

; 688  : 				gfFileSystemsAvailable = TRUE;

  00262	2301		 movs        r3,#1
  00264	f8ca 3000	 str         r3,[r10]

; 689  : 				if (g_pSysRegistryAccess)

  00268	4b48		 ldr         r3,|$LN132@PlatformSe| ; =|?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A|
  0026a	681b		 ldr         r3,[r3]
  0026c	b11b		 cbz         r3,|$LN88@PlatformSe|
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  0026e	f113 0034	 adds        r0,r3,#0x34
  00272	f000 f800	 bl          LeaveCriticalSection
  00276		 |$LN88@PlatformSe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

; 695  : 						  (_T ("%s: resuming - notifying block drivers\r\n"), pszFname));

  00276	f8d6 3440	 ldr         r3,[r6,#0x440]
  0027a	f413 6f80	 tst         r3,#0x400
  0027e	d102		 bne         |$LN56@PlatformSe|
  00280	f013 0f08	 tst         r3,#8
  00284	d003		 beq         |$LN57@PlatformSe|
  00286		 |$LN56@PlatformSe|
  00286	493b		 ldr         r1,|$LN126@PlatformSe| ; =|??_C@_1DI@KLECHLJH@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00288	483f		 ldr         r0,|$LN131@PlatformSe| ; =|??_C@_1FC@MODNLGMJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAd@|
  0028a	f000 f800	 bl          CeLogMsg
  0028e		 |$LN57@PlatformSe|

; 696  : 				for (pdl = gpDeviceLists; pdl != NULL; pdl = pdl->pNext)

  0028e	4b3d		 ldr         r3,|$LN130@PlatformSe| ; =|gpDeviceLists|
  00290	681c		 ldr         r4,[r3]
  00292	e00a		 b           |$LN119@PlatformSe|
  00294		 |$LL13@PlatformSe|
; File c:\wince800\public\common\sdk\inc\guiddef.h

; 150  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00294	6820		 ldr         r0,[r4]
  00296	2210		 movs        r2,#0x10
  00298	f10a 0104	 add         r1,r10,#4
  0029c	f000 f800	 bl          memcmp
  002a0	b110		 cbz         r0,|$LN12@PlatformSe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\platform.cpp

; 700  : 						UpdateClassDeviceStates (pdl);

  002a2	4620		 mov         r0,r4
  002a4	f000 f800	 bl          UpdateClassDeviceStates
  002a8		 |$LN12@PlatformSe|

; 696  : 				for (pdl = gpDeviceLists; pdl != NULL; pdl = pdl->pNext)

  002a8	6964		 ldr         r4,[r4,#0x14]
  002aa		 |$LN119@PlatformSe|
  002aa	2c00		 cmp         r4,#0
  002ac	d1f2		 bne         |$LL13@PlatformSe|

; 701  : 					}
; 702  : 				}
; 703  : 
; 704  : 				// Tell GWES to wake up:
; 705  : 				if (gpfnGwesPowerUp != NULL && gfGwesReady)

  002ae	6beb		 ldr         r3,[r5,#0x3C]
  002b0	b143		 cbz         r3,|$LN9@PlatformSe|
  002b2	682b		 ldr         r3,[r5]
  002b4	b133		 cbz         r3,|$LN9@PlatformSe|

; 706  : 				{
; 707  : 					gpfnGwesPowerUp (fWantStartupScreen);

  002b6	f8d8 0000	 ldr         r0,[r8]
  002ba	6beb		 ldr         r3,[r5,#0x3C]
  002bc	4798		 blx         r3

; 708  : 					fWantStartupScreen = FALSE;

  002be	2300		 movs        r3,#0
  002c0	f8c8 3000	 str         r3,[r8]
  002c4		 |$LN9@PlatformSe|

; 709  : 				}
; 710  : 
; 711  : 				// Send out resume notification:
; 712  : 				pbb.Message = PBT_RESUME;

  002c4	2302		 movs        r3,#2
  002c6	930c		 str         r3,[sp,#0x30]

; 713  : 				pbb.Flags = 0;

  002c8	2300		 movs        r3,#0

; 714  : 				pbb.Length = 0;
; 715  : 				pbb.SystemPowerState[0] = 0;
; 716  : 				GenerateNotifications ((PPOWER_BROADCAST) & pbb);

  002ca	a80c		 add         r0,sp,#0x30
  002cc	930d		 str         r3,[sp,#0x34]
  002ce	930e		 str         r3,[sp,#0x38]
  002d0	f8ad 303c	 strh        r3,[sp,#0x3C]
  002d4	f000 f800	 bl          GenerateNotifications

; 717  : 			}
; 718  : 			else

  002d8	e001		 b           |$LN8@PlatformSe|
  002da		 |$LN16@PlatformSe|

; 719  : 			{
; 720  : 				// Update all devices without any particular ordering:
; 721  : 				UpdateAllDeviceStates ();

  002da	f000 f800	 bl          UpdateAllDeviceStates
  002de		 |$LN8@PlatformSe|

; 722  : 			}
; 723  : 
; 724  : 			// Release the old state information:
; 725  : 			SystemPowerStateDestroy (pOldSystemPowerState);

  002de	980b		 ldr         r0,[sp,#0x2C]
  002e0	f000 f800	 bl          SystemPowerStateDestroy

; 726  : 			while (pOldCeilingDx != NULL)

  002e4	9b09		 ldr         r3,[sp,#0x24]
  002e6	b133		 cbz         r3,|$LN6@PlatformSe|
  002e8		 |$LL7@PlatformSe|

; 727  : 			{
; 728  : 				PDEVICE_POWER_RESTRICTION pdpr = pOldCeilingDx->pNext;

  002e8	695c		 ldr         r4,[r3,#0x14]

; 729  : 
; 730  : 				PowerRestrictionDestroy (pOldCeilingDx);

  002ea	4618		 mov         r0,r3
  002ec	f000 f800	 bl          PowerRestrictionDestroy

; 731  : 				pOldCeilingDx = pdpr;

  002f0	4623		 mov         r3,r4
  002f2	2c00		 cmp         r4,#0
  002f4	d1f8		 bne         |$LL7@PlatformSe|
  002f6		 |$LN6@PlatformSe|

; 732  : 			}
; 733  : 
; 734  : 			// Are we suspending?
; 735  : 			if (fSuspendSystem)

  002f6	9b04		 ldr         r3,[sp,#0x10]
  002f8	b31b		 cbz         r3,|$LL118@PlatformSe|

; 736  : 			{
; 737  : 				// Set a flag to notify the resume thread that this was a controlled suspend.
; 738  : 				gfSystemSuspended = TRUE;

  002fa	2301		 movs        r3,#1
  002fc	642b		 str         r3,[r5,#0x40]

; 739  : 
; 740  : 				PMLOGMSG (ZONE_PLATFORM
; 741  : 						  || ZONE_RESUME, (_T ("%s: calling PowerOffSystem()\r\n"), pszFname));

  002fe	f8d6 3440	 ldr         r3,[r6,#0x440]
  00302	f413 6f80	 tst         r3,#0x400
  00306	d102		 bne         |$LN58@PlatformSe|
  00308	f013 0f08	 tst         r3,#8
  0030c	d003		 beq         |$LN59@PlatformSe|
  0030e		 |$LN58@PlatformSe|
  0030e	481c		 ldr         r0,|$LN129@PlatformSe| ; =|??_C@_1DO@GKMKKCOO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AAO?$AAf?$AAf?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00310	4918		 ldr         r1,|$LN126@PlatformSe| ; =|??_C@_1DI@KLECHLJH@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00312	f000 f800	 bl          CeLogMsg
  00316		 |$LN59@PlatformSe|

; 742  : 				PowerOffSystem ();	    // Sets a flag in the kernel for the scheduler.

  00316	f000 f800	 bl          PowerOffSystem

; 743  : 				Sleep (0);	            // Force the scheduler to run.

  0031a	2000		 movs        r0,#0
  0031c	f000 f800	 bl          Sleep

; 744  : 				PMLOGMSG (ZONE_PLATFORM
; 745  : 						  || ZONE_RESUME, (_T ("%s: back from PowerOffSystem()\r\n"), pszFname));

  00320	f8d6 2440	 ldr         r2,[r6,#0x440]
  00324	f412 6f80	 tst         r2,#0x400
  00328	d102		 bne         |$LN60@PlatformSe|
  0032a	f012 0f08	 tst         r2,#8
  0032e	d005		 beq         |$LN61@PlatformSe|
  00330		 |$LN60@PlatformSe|
  00330	4812		 ldr         r0,|$LN128@PlatformSe| ; =|??_C@_1EC@NKKFKHPG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAa?$AAc?$AAk?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AAO?$AAf?$AAf?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6@|
  00332	4910		 ldr         r1,|$LN126@PlatformSe| ; =|??_C@_1DI@KLECHLJH@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00334	f000 f800	 bl          CeLogMsg
  00338	f8d6 2440	 ldr         r2,[r6,#0x440]
  0033c		 |$LN61@PlatformSe|

; 746  : 
; 747  : 				// Clear the suspend flag:
; 748  : 				gfSystemSuspended = FALSE;

  0033c	2300		 movs        r3,#0
  0033e	642b		 str         r3,[r5,#0x40]
  00340	e001		 b           |$LN3@PlatformSe|
  00342		 |$LL118@PlatformSe|
  00342	f8d6 2440	 ldr         r2,[r6,#0x440]
  00346		 |$LN3@PlatformSe|

; 749  : 			}
; 750  : 		}
; 751  : 		else
; 752  : 		{
; 753  : 			// Release the unused new state information:
; 754  : 			SystemPowerStateDestroy (pNewSystemPowerState);
; 755  : 			while (pNewCeilingDx != NULL)
; 756  : 			{
; 757  : 				PDEVICE_POWER_RESTRICTION pdpr = pNewCeilingDx->pNext;
; 758  : 
; 759  : 				PowerRestrictionDestroy (pNewCeilingDx);
; 760  : 				pNewCeilingDx = pdpr;
; 761  : 			}
; 762  : 		}
; 763  : 	}
; 764  : 
; 765  : 	// Restore our priority if we updated it during a suspend transition:
; 766  : 	if (giSuspendPriority != 0 && iPreSuspendPriority != 0)

  00346	6aeb		 ldr         r3,[r5,#0x2C]
  00348	b16b		 cbz         r3,|$LN1@PlatformSe|
  0034a	9c07		 ldr         r4,[sp,#0x1C]
  0034c	b15c		 cbz         r4,|$LN1@PlatformSe|

; 767  : 	{
; 768  : 		PMLOGMSG (ZONE_PLATFORM, (_T ("%s: restoring thread priority to %d\r\n"),
; 769  : 								  pszFname, iPreSuspendPriority));

  0034e	f412 6f80	 tst         r2,#0x400
  00352	d004		 beq         |$LN62@PlatformSe|
  00354	4808		 ldr         r0,|$LN127@PlatformSe| ; =|??_C@_1EM@HOFKPKHN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAo?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAp?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAo@|
  00356	4907		 ldr         r1,|$LN126@PlatformSe| ; =|??_C@_1DI@KLECHLJH@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00358	4622		 mov         r2,r4
  0035a	f000 f800	 bl          CeLogMsg
  0035e		 |$LN62@PlatformSe|

; 770  : 		CeSetThreadPriority (GetCurrentThread (), iPreSuspendPriority);

  0035e	4621		 mov         r1,r4
  00360	2041		 movs        r0,#0x41
  00362	f000 f800	 bl          CeSetThreadPriority
  00366		 |$LN1@PlatformSe|

; 771  : 	}
; 772  : 
; 773  : 	return dwStatus;
; 774  : }

  00366	980a		 ldr         r0,[sp,#0x28]
  00368		 |$M124|
  00368	f20d 2d48	 addw        sp,sp,#0x248
  0036c	f000 f800	 bl          __security_pop_cookie
  00370	e8bd 8ff0	 pop         {r4-r11,pc}
  00374		 |$LN125@PlatformSe|
  00374		 |$LN126@PlatformSe|
  00374	0000 0000	 DCD         |??_C@_1DI@KLECHLJH@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00378		 |$LN127@PlatformSe|
  00378	0000 0000	 DCD         |??_C@_1EM@HOFKPKHN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAo?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAp?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAo@|
  0037c		 |$LN128@PlatformSe|
  0037c	0000 0000	 DCD         |??_C@_1EC@NKKFKHPG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAa?$AAc?$AAk?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AAO?$AAf?$AAf?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6@|
  00380		 |$LN129@PlatformSe|
  00380	0000 0000	 DCD         |??_C@_1DO@GKMKKCOO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AAO?$AAf?$AAf?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00384		 |$LN130@PlatformSe|
  00384	0000 0000	 DCD         |gpDeviceLists|
  00388		 |$LN131@PlatformSe|
  00388	0000 0000	 DCD         |??_C@_1FC@MODNLGMJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk?$AA?5?$AAd@|
  0038c		 |$LN132@PlatformSe|
  0038c	0000 0000	 DCD         |?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A|
  00390		 |$LN133@PlatformSe|
  00390	0000 0000	 DCD         |??_C@_1JO@PPFJDFMA@?$AAP?$AAM?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3@|
  00394		 |$LN134@PlatformSe|
  00394	003c 0101	 DCD         0x101003c
  00398		 |$LN135@PlatformSe|
  00398	0000 0000	 DCD         |??_C@_1FG@HNBCPNM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAb?$AAl?$AAo?$AAc?$AAk@|
  0039c		 |$LN136@PlatformSe|
  0039c	0000 0000	 DCD         |??_C@_1BG@BDHACCND@?$AAc?$AAo?$AAl?$AAd?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@|
  003a0		 |$LN137@PlatformSe|
  003a0	0000 0000	 DCD         |??_C@_1IG@BGMPGNLF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAr?$AAa?$AAi?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAp@|
  003a4		 |$LN138@PlatformSe|
  003a4	00f4 0101	 DCD         0x10100f4
  003a8		 |$LN139@PlatformSe|
  003a8	0000 0000	 DCD         |??_C@_1GI@CIJJOFGK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAK?$AAe?$AAr?$AAn?$AAe?$AAl?$AAI?$AAo?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAI?$AAO?$AAC?$AAT@|
  003ac		 |$LN140@PlatformSe|
  003ac	0000 0000	 DCD         |??_C@_1FO@BEMGMFB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA?9?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAo?$AAn?$AA?9?$AAb@|
  003b0		 |$LN141@PlatformSe|
  003b0	0000 0000	 DCD         |gpCeilingDx|
  003b4		 |$LN142@PlatformSe|
  003b4	0000 0000	 DCD         |gpSystemPowerState|
  003b8		 |$LN143@PlatformSe|
  003b8	0000 0000	 DCD         |?fWantStartupScreen@?6??PlatformSetSystemPowerState@@9@4HA|
  003bc		 |$LN144@PlatformSe|
  003bc	0000 0000	 DCD         |?gfGwesReady@@3HA|
  003c0		 |$LN145@PlatformSe|
  003c0	0000 0000	 DCD         |dpCurSettings|
  003c4		 |$LN146@PlatformSe|
  003c4	0000 0000	 DCD         |?gfFileSystemsAvailable@@3HA|
  003c8		 |$M122|

			 ENDP  ; |PlatformSetSystemPowerState|

	END
