; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.114 

	TTL	C:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
	THUMB

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|ResetEvent|
	IMPORT	|EventModify|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |ResetEvent| PROC

; 232  :     return EventModify(h,EVENT_RESET);

  00000	2102		 movs        r1,#2
  00002		 |$M4|
  00002	f000 9000	 b           EventModify

			 ENDP  ; |ResetEvent|

	EXPORT	|SetEvent|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |SetEvent| PROC

; 244  :     return EventModify(h,EVENT_SET);

  00000	2103		 movs        r1,#3
  00002		 |$M4|
  00002	f000 9000	 b           EventModify

			 ENDP  ; |SetEvent|

	EXPORT	|GetCurrentThreadId|
	IMPORT	|__GetUserKData|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |GetCurrentThreadId| PROC

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00000	2008		 movs        r0,#8
  00002		 |$M4|
  00002	f000 9000	 b           __GetUserKData

			 ENDP  ; |GetCurrentThreadId|

	EXPORT	|GetCurrentProcessId|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |GetCurrentProcessId| PROC

; 376  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  00000	200c		 movs        r0,#0xC
  00002		 |$M4|
  00002	f000 9000	 b           __GetUserKData

			 ENDP  ; |GetCurrentProcessId|

	IMPORT	|__security_push_cookie|
	IMPORT	|__security_pop_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|StringCchLengthW|
	IMPORT	|CeLogData|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$CeLogMsg| DCD imagerel |$LN8@CeLogMsg|
	DCD	imagerel |$unwind2$CeLogMsg|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$CeLogMsg| DCD 0x44b00032
	DCD	0x1e889e8
	DCD	0x400a8fb
	DCD	0x8801e8ff
	DCD	0xff05ef00
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffe5
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\celog.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |CeLogMsg| PROC

; 1208 : {

  00000		 |$LN8@CeLogMsg|
  00000	b40f		 push        {r0-r3}
  00002	e92d 4800	 push        {r11,lr}
  00006	46eb		 mov         r11,sp
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d24	 subw        sp,sp,#0x224
  00010		 |$M6|
  00010	4602		 mov         r2,r0

; 1209 :     va_list arglist;
; 1210 :     WCHAR   szTemp[MAX_PATH];
; 1211 :     size_t  cchLen;
; 1212 :     HRESULT hr;
; 1213 : 
; 1214 :     // Compose a single string using the input args
; 1215 :     va_start(arglist, szFormat);
; 1216 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00012	a806		 add         r0,sp,#0x18
  00014	ab8d		 add         r3,sp,#0x234
  00016	f44f 7182	 mov         r1,#0x104
  0001a	928c		 str         r2,[sp,#0x230]
  0001c	f000 f800	 bl          StringCchVPrintfW

; 1217 :     if (SUCCEEDED(hr)) {

  00020	2800		 cmp         r0,#0
  00022	db17		 blt         |$LN1@CeLogMsg|

; 1218 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00024	aa04		 add         r2,sp,#0x10
  00026	a806		 add         r0,sp,#0x18
  00028	f44f 7182	 mov         r1,#0x104
  0002c	f000 f800	 bl          StringCchLengthW

; 1219 :         if (SUCCEEDED(hr)) {

  00030	2800		 cmp         r0,#0
  00032	db0f		 blt         |$LN1@CeLogMsg|

; 1220 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1221 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  00034	f04f 4380	 mov         r3,#0x40000000
  00038	9301		 str         r3,[sp,#4]
  0003a	9b04		 ldr         r3,[sp,#0x10]
  0003c	2200		 movs        r2,#0
  0003e	9203		 str         r2,[sp,#0xC]
  00040	3301		 adds        r3,#1
  00042	005b		 lsls        r3,r3,#1
  00044	9202		 str         r2,[sp,#8]
  00046	9200		 str         r2,[sp]
  00048	aa06		 add         r2,sp,#0x18
  0004a	214a		 movs        r1,#0x4A
  0004c	b29b		 uxth        r3,r3
  0004e	2001		 movs        r0,#1
  00050	f000 f800	 bl          CeLogData
  00054		 |$LN1@CeLogMsg|
  00054		 |$M9|

; 1222 :         }
; 1223 :     }
; 1224 : }

  00054	f20d 2d24	 addw        sp,sp,#0x224
  00058	f000 f800	 bl          __security_pop_cookie
  0005c	f85d bb04	 pop         {r11}
  00060	f85d fb14	 ldr         pc,[sp],#0x14
  00064		 |$M7|

			 ENDP  ; |CeLogMsg|

	EXPORT	|??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z| ; CRegistryEdit::CRegistryEdit
	IMPORT	|RegOpenKeyExW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z| DCD imagerel |$LN8@CRegistryE|
	DCD	0xfd736059
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z| PROC ; CRegistryEdit::CRegistryEdit

; 42   :     CRegistryEdit( HKEY hKey, LPCTSTR pszRegPath )

  00000		 |$LN8@CRegistryE|
  00000	e92d 48fc	 push        {r2-r7,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M6|
  00008	4615		 mov         r5,r2
  0000a	4604		 mov         r4,r0

; 43   :     {
; 44   :         m_hDevKey = NULL;

  0000c	2700		 movs        r7,#0
  0000e	6027		 str         r7,[r4]

; 45   :         if( pszRegPath )

  00010	460e		 mov         r6,r1
  00012	b145		 cbz         r5,|$LN1@CRegistryE|

; 46   :         {
; 47   :             if( RegOpenKeyEx( hKey, pszRegPath, 0, 0, &m_hDevKey ) != ERROR_SUCCESS )

  00014	2300		 movs        r3,#0
  00016	2200		 movs        r2,#0
  00018	4629		 mov         r1,r5
  0001a	4630		 mov         r0,r6
  0001c	9400		 str         r4,[sp]
  0001e	f000 f800	 bl          RegOpenKeyExW
  00022	b100		 cbz         r0,|$LN1@CRegistryE|

; 48   :             {
; 49   :                 m_hDevKey = NULL;

  00024	6027		 str         r7,[r4]
  00026		 |$LN1@CRegistryE|

; 50   :             }
; 51   :         }
; 52   :     }

  00026	4620		 mov         r0,r4
  00028		 |$M9|
  00028	e8bd 88fc	 pop         {r2-r7,r11,pc}
  0002c		 |$M7|

			 ENDP  ; |??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z|, CRegistryEdit::CRegistryEdit

	EXPORT	|?CloseKey@CRegistryEdit@@QAAHXZ|	; CRegistryEdit::CloseKey
	IMPORT	|RegCloseKey|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?CloseKey@CRegistryEdit@@QAAHXZ| DCD imagerel |$LN7@CloseKey|
	DCD	0xfd306041
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?CloseKey@CRegistryEdit@@QAAHXZ| PROC	; CRegistryEdit::CloseKey

; 92   :     BOOL CloseKey() {

  00000		 |$LN7@CloseKey|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M5|
  00008	4604		 mov         r4,r0

; 93   :         if( m_hDevKey )

  0000a	6820		 ldr         r0,[r4]
  0000c	b128		 cbz         r0,|$LN1@CloseKey|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  0000e	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  00012	2300		 movs        r3,#0
  00014	6023		 str         r3,[r4]

; 97   :             return TRUE;

  00016	2001		 movs        r0,#1
  00018	e000		 b           |$LN2@CloseKey|
  0001a		 |$LN1@CloseKey|

; 98   :         }
; 99   :         return FALSE;

  0001a	2000		 movs        r0,#0
  0001c		 |$LN2@CloseKey|
  0001c		 |$M8|

; 100  :     }

  0001c	e8bd 8818	 pop         {r3,r4,r11,pc}
  00020		 |$M6|

			 ENDP  ; |?CloseKey@CRegistryEdit@@QAAHXZ|, CRegistryEdit::CloseKey

	EXPORT	|?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z| ; CRegistryEdit::GetRegValue
	IMPORT	|RegQueryValueExW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z| DCD imagerel |$LN8@GetRegValu|
	DCD	0xfdff8061
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z| PROC ; CRegistryEdit::GetRegValue

; 145  :     {

  00000		 |$LN8@GetRegValu|
  00000	b40f		 push        {r0-r3}
  00002	e92d 480f	 push        {r0-r3,r11,lr}
  00006	f20d 0b10	 addw        r11,sp,#0x10
  0000a		 |$M6|

; 146  :         DWORD dwType = 0;

  0000a	2300		 movs        r3,#0
  0000c	9302		 str         r3,[sp,#8]

; 147  :         LONG status = ::RegQueryValueEx( m_hDevKey,
; 148  :                                            lpcName,
; 149  :                                            NULL,
; 150  :                                            &dwType,
; 151  :                                            lpData,
; 152  :                                            &dwDataLen );

  0000e	6800		 ldr         r0,[r0]
  00010	ab09		 add         r3,sp,#0x24
  00012	9301		 str         r3,[sp,#4]
  00014	9200		 str         r2,[sp]
  00016	ab02		 add         r3,sp,#8
  00018	2200		 movs        r2,#0
  0001a	f000 f800	 bl          RegQueryValueExW

; 153  :         return ( status == ERROR_SUCCESS );

  0001e	b908		 cbnz        r0,|$LN3@GetRegValu|
  00020	2001		 movs        r0,#1
  00022	e000		 b           |$LN4@GetRegValu|
  00024		 |$LN3@GetRegValu|
  00024	2000		 movs        r0,#0
  00026		 |$LN4@GetRegValu|
  00026		 |$M9|

; 154  :     }

  00026	b004		 add         sp,sp,#0x10
  00028	f85d bb04	 pop         {r11}
  0002c	f85d fb14	 ldr         pc,[sp],#0x14
  00030		 |$M7|

			 ENDP  ; |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|, CRegistryEdit::GetRegValue

	EXPORT	|?GetHKey@CRegistryEdit@@QAAPAUHKEY__@@XZ| ; CRegistryEdit::GetHKey
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetHKey@CRegistryEdit@@QAAPAUHKEY__@@XZ| PROC ; CRegistryEdit::GetHKey

; 203  :         return m_hDevKey;

  00000	6800		 ldr         r0,[r0]
  00002		 |$M4|

; 204  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetHKey@CRegistryEdit@@QAAPAUHKEY__@@XZ|, CRegistryEdit::GetHKey

	EXPORT	|??0CLockObject@@QAA@XZ|		; CLockObject::CLockObject
	IMPORT	|InitializeCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0CLockObject@@QAA@XZ| DCD imagerel |$LN6@CLockObjec|
	DCD	0xfd306029
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\csync.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0CLockObject@@QAA@XZ| PROC		; CLockObject::CLockObject

; 36   :     CLockObject()

  00000		 |$LN6@CLockObjec|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0

; 37   :     {
; 38   :         InitializeCriticalSection( &m_CSection );

  0000a	f000 f800	 bl          InitializeCriticalSection

; 39   :     };

  0000e	4620		 mov         r0,r4
  00010		 |$M7|
  00010	e8bd 8818	 pop         {r3,r4,r11,pc}
  00014		 |$M5|

			 ENDP  ; |??0CLockObject@@QAA@XZ|, CLockObject::CLockObject

	EXPORT	|??1CLockObject@@QAA@XZ|		; CLockObject::~CLockObject
	IMPORT	|DeleteCriticalSection|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\csync.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1CLockObject@@QAA@XZ| PROC		; CLockObject::~CLockObject

; 41   :     {

  00000		 |$M4|

; 42   :         DeleteCriticalSection( &m_CSection );

  00000	f000 9000	 b           DeleteCriticalSection

			 ENDP  ; |??1CLockObject@@QAA@XZ|, CLockObject::~CLockObject

	EXPORT	|?Lock@CLockObject@@QAAXXZ|		; CLockObject::Lock
	IMPORT	|EnterCriticalSection|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\csync.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Lock@CLockObject@@QAAXXZ| PROC	; CLockObject::Lock

; 45   :     {

  00000		 |$M4|

; 46   :         EnterCriticalSection( &m_CSection );

  00000	f000 9000	 b           EnterCriticalSection

			 ENDP  ; |?Lock@CLockObject@@QAAXXZ|, CLockObject::Lock

	EXPORT	|?Unlock@CLockObject@@QAAXXZ|		; CLockObject::Unlock
	IMPORT	|LeaveCriticalSection|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\csync.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Unlock@CLockObject@@QAAXXZ| PROC	; CLockObject::Unlock

; 49   :     {

  00000		 |$M4|

; 50   :         LeaveCriticalSection( &m_CSection );

  00000	f000 9000	 b           LeaveCriticalSection

			 ENDP  ; |?Unlock@CLockObject@@QAAXXZ|, CLockObject::Unlock

	EXPORT	|?GetNextPowerState@PowerState@@QAAPAV1@XZ| ; PowerState::GetNextPowerState
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetNextPowerState@PowerState@@QAAPAV1@XZ| PROC ; PowerState::GetNextPowerState

; 169  : 		return m_pNextPowerState;

  00000	6940		 ldr         r0,[r0,#0x14]
  00002		 |$M4|

; 170  : 	};

  00002	4770		 bx          lr

			 ENDP  ; |?GetNextPowerState@PowerState@@QAAPAV1@XZ|, PowerState::GetNextPowerState

	EXPORT	|?GetState@PowerStateOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateOff::GetState
	EXPORT	|?GetStateString@PowerStateOff@@UAAPBGXZ| ; PowerStateOff::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateOff@@UAAKKK@Z| ; PowerStateOff::StateValidateRegistry
	EXPORT	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerState::GetLastNewState
	EXPORT	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z| ; PowerState::SetSystemAPIState
	EXPORT	|?AppsCanRequestState@PowerState@@UAAHXZ| ; PowerState::AppsCanRequestState
	EXPORT	|??_7PowerStateOff@@6B@| [ DATA ]	; PowerStateOff::`vftable'
	EXPORT	|??0PowerStateOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateOff::PowerStateOff
	IMPORT	|??_EPowerStateOff@@UAAPAXI@Z|, WEAK |??_GPowerStateOff@@UAAPAXI@Z| ; PowerStateOff::`vector deleting destructor', PowerStateOff::`scalar deleting destructor'
	IMPORT	|?EnterState@PowerStateOff@@UAAXXZ|	; PowerStateOff::EnterState
	IMPORT	|?Init@PowerState@@UAAHXZ|		; PowerState::Init
	IMPORT	|?WaitForEvent@PowerStateOff@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateOff::WaitForEvent
	IMPORT	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z| ; PowerState::DefaultEventHandle
	IMPORT	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ| ; PowerState::MsgQueueEvent
	IMPORT	|??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z| ; PowerState::PowerState

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateOff@@6B@| DCD |??_EPowerStateOff@@UAAPAXI@Z| ; PowerStateOff::`vftable'
	DCD	|?EnterState@PowerStateOff@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateOff@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateOff@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateOff@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerState@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateOff::PowerStateOff

; 194  :     PowerStateOff (PowerStateManager * pPwrStateMgr, PowerState * pNextPowerState = NULL)

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateOff@@6B@|
  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateOff@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateOff::PowerStateOff

	EXPORT	|?GetState@PowerStateOn@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateOn::GetState
	EXPORT	|?GetStateString@PowerStateOn@@UAAPBGXZ| ; PowerStateOn::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateOn@@UAAKKK@Z| ; PowerStateOn::StateValidateRegistry
	EXPORT	|?AppsCanRequestState@PowerStateOn@@UAAHXZ| ; PowerStateOn::AppsCanRequestState
	EXPORT	|??_7PowerStateOn@@6B@| [ DATA ]	; PowerStateOn::`vftable'
	EXPORT	|??0PowerStateOn@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateOn::PowerStateOn
	IMPORT	|??_EPowerStateOn@@UAAPAXI@Z|, WEAK |??_GPowerStateOn@@UAAPAXI@Z| ; PowerStateOn::`vector deleting destructor', PowerStateOn::`scalar deleting destructor'
	IMPORT	|?EnterState@PowerState@@UAAXXZ|	; PowerState::EnterState
	IMPORT	|?WaitForEvent@PowerStateOn@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateOn::WaitForEvent

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateOn@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateOn@@6B@| DCD |??_EPowerStateOn@@UAAPAXI@Z| ; PowerStateOn::`vftable'
	DCD	|?EnterState@PowerState@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateOn@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateOn@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateOn@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateOn@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerStateOn@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateOn@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateOn::PowerStateOn

; 227  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateOn@@6B@|

; 228  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateOn@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateOn@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateOn::PowerStateOn

	EXPORT	|?GetState@PowerStateUserIdle@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateUserIdle::GetState
	EXPORT	|?GetStateString@PowerStateUserIdle@@UAAPBGXZ| ; PowerStateUserIdle::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateUserIdle@@UAAKKK@Z| ; PowerStateUserIdle::StateValidateRegistry
	EXPORT	|?AppsCanRequestState@PowerStateUserIdle@@UAAHXZ| ; PowerStateUserIdle::AppsCanRequestState
	EXPORT	|??_7PowerStateUserIdle@@6B@| [ DATA ]	; PowerStateUserIdle::`vftable'
	EXPORT	|??0PowerStateUserIdle@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateUserIdle::PowerStateUserIdle
	IMPORT	|??_EPowerStateUserIdle@@UAAPAXI@Z|, WEAK |??_GPowerStateUserIdle@@UAAPAXI@Z| ; PowerStateUserIdle::`vector deleting destructor', PowerStateUserIdle::`scalar deleting destructor'
	IMPORT	|?WaitForEvent@PowerStateUserIdle@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateUserIdle::WaitForEvent

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateUserIdle@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateUserIdle@@6B@| DCD |??_EPowerStateUserIdle@@UAAPAXI@Z| ; PowerStateUserIdle::`vftable'
	DCD	|?EnterState@PowerState@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateUserIdle@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateUserIdle@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateUserIdle@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateUserIdle@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerStateUserIdle@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateUserIdle@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateUserIdle::PowerStateUserIdle

; 263  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateUserIdle@@6B@|

; 264  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateUserIdle@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateUserIdle@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateUserIdle::PowerStateUserIdle

	EXPORT	|?GetState@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateUnattended::GetState
	EXPORT	|?GetStateString@PowerStateUnattended@@UAAPBGXZ| ; PowerStateUnattended::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateUnattended@@UAAKKK@Z| ; PowerStateUnattended::StateValidateRegistry
	EXPORT	|??_7PowerStateUnattended@@6B@| [ DATA ] ; PowerStateUnattended::`vftable'
	EXPORT	|??0PowerStateUnattended@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateUnattended::PowerStateUnattended
	IMPORT	|??_EPowerStateUnattended@@UAAPAXI@Z|, WEAK |??_GPowerStateUnattended@@UAAPAXI@Z| ; PowerStateUnattended::`vector deleting destructor', PowerStateUnattended::`scalar deleting destructor'
	IMPORT	|?EnterState@PowerStateUnattended@@UAAXXZ| ; PowerStateUnattended::EnterState
	IMPORT	|?WaitForEvent@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateUnattended::WaitForEvent
	IMPORT	|?DefaultEventHandle@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z| ; PowerStateUnattended::DefaultEventHandle
	IMPORT	|?GetLastNewState@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateUnattended::GetLastNewState

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateUnattended@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateUnattended@@6B@| DCD |??_EPowerStateUnattended@@UAAPAXI@Z| ; PowerStateUnattended::`vftable'
	DCD	|?EnterState@PowerStateUnattended@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateUnattended@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateUnattended@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerState@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateUnattended@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateUnattended::PowerStateUnattended

; 299  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateUnattended@@6B@|

; 300  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateUnattended@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateUnattended@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateUnattended::PowerStateUnattended

	EXPORT	|?GetState@PowerStateResuming@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateResuming::GetState
	EXPORT	|?GetStateString@PowerStateResuming@@UAAPBGXZ| ; PowerStateResuming::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateResuming@@UAAKKK@Z| ; PowerStateResuming::StateValidateRegistry
	EXPORT	|??_7PowerStateResuming@@6B@| [ DATA ]	; PowerStateResuming::`vftable'
	EXPORT	|??0PowerStateResuming@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateResuming::PowerStateResuming
	IMPORT	|??_EPowerStateResuming@@UAAPAXI@Z|, WEAK |??_GPowerStateResuming@@UAAPAXI@Z| ; PowerStateResuming::`vector deleting destructor', PowerStateResuming::`scalar deleting destructor'
	IMPORT	|?EnterState@PowerStateResuming@@UAAXXZ| ; PowerStateResuming::EnterState
	IMPORT	|?WaitForEvent@PowerStateResuming@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateResuming::WaitForEvent

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateResuming@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateResuming@@6B@| DCD |??_EPowerStateResuming@@UAAPAXI@Z| ; PowerStateResuming::`vftable'
	DCD	|?EnterState@PowerStateResuming@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateResuming@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateResuming@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateResuming@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateResuming@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerState@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateResuming@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateResuming::PowerStateResuming

; 334  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateResuming@@6B@|

; 335  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateResuming@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateResuming@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateResuming::PowerStateResuming

	EXPORT	|?WaitForEvent@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateSuspend::WaitForEvent
	EXPORT	|?GetState@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateSuspend::GetState
	EXPORT	|?GetStateString@PowerStateSuspend@@UAAPBGXZ| ; PowerStateSuspend::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateSuspend@@UAAKKK@Z| ; PowerStateSuspend::StateValidateRegistry
	EXPORT	|?AppsCanRequestState@PowerStateSuspend@@UAAHXZ| ; PowerStateSuspend::AppsCanRequestState
	EXPORT	|??_7PowerStateSuspend@@6B@| [ DATA ]	; PowerStateSuspend::`vftable'
	EXPORT	|??0PowerStateSuspend@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateSuspend::PowerStateSuspend
	IMPORT	|??_EPowerStateSuspend@@UAAPAXI@Z|, WEAK |??_GPowerStateSuspend@@UAAPAXI@Z| ; PowerStateSuspend::`vector deleting destructor', PowerStateSuspend::`scalar deleting destructor'
	IMPORT	|?EnterState@PowerStateSuspend@@UAAXXZ|	; PowerStateSuspend::EnterState

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateSuspend@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateSuspend@@6B@| DCD |??_EPowerStateSuspend@@UAAPAXI@Z| ; PowerStateSuspend::`vftable'
	DCD	|?EnterState@PowerStateSuspend@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateSuspend@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateSuspend@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerStateSuspend@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateSuspend@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateSuspend::PowerStateSuspend

; 366  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateSuspend@@6B@|

; 367  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateSuspend@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateSuspend@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateSuspend::PowerStateSuspend

	EXPORT	|?GetState@PowerStateScreenOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateScreenOff::GetState
	EXPORT	|?GetStateString@PowerStateScreenOff@@UAAPBGXZ| ; PowerStateScreenOff::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateScreenOff@@UAAKKK@Z| ; PowerStateScreenOff::StateValidateRegistry
	EXPORT	|?AppsCanRequestState@PowerStateScreenOff@@UAAHXZ| ; PowerStateScreenOff::AppsCanRequestState
	EXPORT	|??_7PowerStateScreenOff@@6B@| [ DATA ]	; PowerStateScreenOff::`vftable'
	EXPORT	|??0PowerStateScreenOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateScreenOff::PowerStateScreenOff
	IMPORT	|??_EPowerStateScreenOff@@UAAPAXI@Z|, WEAK |??_GPowerStateScreenOff@@UAAPAXI@Z| ; PowerStateScreenOff::`vector deleting destructor', PowerStateScreenOff::`scalar deleting destructor'
	IMPORT	|?WaitForEvent@PowerStateScreenOff@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateScreenOff::WaitForEvent

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateScreenOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateScreenOff@@6B@| DCD |??_EPowerStateScreenOff@@UAAPAXI@Z| ; PowerStateScreenOff::`vftable'
	DCD	|?EnterState@PowerState@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateScreenOff@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateScreenOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateScreenOff@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateScreenOff@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerStateScreenOff@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateScreenOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateScreenOff::PowerStateScreenOff

; 406  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateScreenOff@@6B@|

; 407  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateScreenOff@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateScreenOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateScreenOff::PowerStateScreenOff

	EXPORT	|?GetState@PowerStateBacklightOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateBacklightOff::GetState
	EXPORT	|?GetStateString@PowerStateBacklightOff@@UAAPBGXZ| ; PowerStateBacklightOff::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateBacklightOff@@UAAKKK@Z| ; PowerStateBacklightOff::StateValidateRegistry
	EXPORT	|??_7PowerStateBacklightOff@@6B@| [ DATA ] ; PowerStateBacklightOff::`vftable'
	EXPORT	|??0PowerStateBacklightOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateBacklightOff::PowerStateBacklightOff
	IMPORT	|??_EPowerStateBacklightOff@@UAAPAXI@Z|, WEAK |??_GPowerStateBacklightOff@@UAAPAXI@Z| ; PowerStateBacklightOff::`vector deleting destructor', PowerStateBacklightOff::`scalar deleting destructor'
	IMPORT	|?WaitForEvent@PowerStateBacklightOff@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateBacklightOff::WaitForEvent

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateBacklightOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateBacklightOff@@6B@| DCD |??_EPowerStateBacklightOff@@UAAPAXI@Z| ; PowerStateBacklightOff::`vftable'
	DCD	|?EnterState@PowerState@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateBacklightOff@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateBacklightOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateBacklightOff@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateBacklightOff@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerState@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateBacklightOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateBacklightOff::PowerStateBacklightOff

; 442  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateBacklightOff@@6B@|

; 443  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateBacklightOff@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateBacklightOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateBacklightOff::PowerStateBacklightOff

	EXPORT	|?EnterState@PowerStateColdReboot@@UAAXXZ| ; PowerStateColdReboot::EnterState
	EXPORT	|?WaitForEvent@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateColdReboot::WaitForEvent
	EXPORT	|?GetState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateColdReboot::GetState
	EXPORT	|?GetStateString@PowerStateColdReboot@@UAAPBGXZ| ; PowerStateColdReboot::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateColdReboot@@UAAKKK@Z| ; PowerStateColdReboot::StateValidateRegistry
	EXPORT	|?GetLastNewState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateColdReboot::GetLastNewState
	EXPORT	|?AppsCanRequestState@PowerStateColdReboot@@UAAHXZ| ; PowerStateColdReboot::AppsCanRequestState
	EXPORT	|??_7PowerStateColdReboot@@6B@| [ DATA ] ; PowerStateColdReboot::`vftable'
	EXPORT	|??0PowerStateColdReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateColdReboot::PowerStateColdReboot
	IMPORT	|??_EPowerStateColdReboot@@UAAPAXI@Z|, WEAK |??_GPowerStateColdReboot@@UAAPAXI@Z| ; PowerStateColdReboot::`vector deleting destructor', PowerStateColdReboot::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateColdReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateColdReboot@@6B@| DCD |??_EPowerStateColdReboot@@UAAPAXI@Z| ; PowerStateColdReboot::`vftable'
	DCD	|?EnterState@PowerStateColdReboot@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateColdReboot@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateColdReboot@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerStateColdReboot@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateColdReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateColdReboot::PowerStateColdReboot

; 475  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateColdReboot@@6B@|

; 476  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateColdReboot@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateColdReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateColdReboot::PowerStateColdReboot

	EXPORT	|?EnterState@PowerStateReboot@@UAAXXZ|	; PowerStateReboot::EnterState
	EXPORT	|?WaitForEvent@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateReboot::WaitForEvent
	EXPORT	|?GetState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateReboot::GetState
	EXPORT	|?GetStateString@PowerStateReboot@@UAAPBGXZ| ; PowerStateReboot::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateReboot@@UAAKKK@Z| ; PowerStateReboot::StateValidateRegistry
	EXPORT	|?GetLastNewState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateReboot::GetLastNewState
	EXPORT	|?AppsCanRequestState@PowerStateReboot@@UAAHXZ| ; PowerStateReboot::AppsCanRequestState
	EXPORT	|??_7PowerStateReboot@@6B@| [ DATA ]	; PowerStateReboot::`vftable'
	EXPORT	|??0PowerStateReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateReboot::PowerStateReboot
	IMPORT	|??_EPowerStateReboot@@UAAPAXI@Z|, WEAK |??_GPowerStateReboot@@UAAPAXI@Z| ; PowerStateReboot::`vector deleting destructor', PowerStateReboot::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateReboot@@6B@| DCD |??_EPowerStateReboot@@UAAPAXI@Z| ; PowerStateReboot::`vftable'
	DCD	|?EnterState@PowerStateReboot@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateReboot@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateReboot@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerStateReboot@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateReboot::PowerStateReboot

; 523  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateReboot@@6B@|

; 524  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateReboot@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateReboot::PowerStateReboot

	EXPORT	|?GetAPISignalHandle@PMSystemAPI@@QAAPAXXZ| ; PMSystemAPI::GetAPISignalHandle
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetAPISignalHandle@PMSystemAPI@@QAAPAXXZ| PROC ; PMSystemAPI::GetAPISignalHandle

; 95   : 		return m_hNotEmpty;

  00000	6a80		 ldr         r0,[r0,#0x28]
  00002		 |$M4|

; 96   : 	};

  00002	4770		 bx          lr

			 ENDP  ; |?GetAPISignalHandle@PMSystemAPI@@QAAPAXXZ|, PMSystemAPI::GetAPISignalHandle

	EXPORT	|?Init@NotifyRegKey@@QAAHXZ|		; NotifyRegKey::Init
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Init@NotifyRegKey@@QAAHXZ| PROC	; NotifyRegKey::Init

; 138  : 		return m_hNotifyEvent != INVALID_HANDLE_VALUE;

  00000	6843		 ldr         r3,[r0,#4]
  00002	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00006	d001		 beq         |$LN3@Init|
  00008	2001		 movs        r0,#1
  0000a		 |$M6|

; 139  : 	};

  0000a	4770		 bx          lr
  0000c		 |$LN3@Init|

; 138  : 		return m_hNotifyEvent != INVALID_HANDLE_VALUE;

  0000c	2000		 movs        r0,#0
  0000e		 |$M7|

; 139  : 	};

  0000e	4770		 bx          lr

			 ENDP  ; |?Init@NotifyRegKey@@QAAHXZ|, NotifyRegKey::Init

	EXPORT	|?AckNotification@NotifyRegKey@@QAAHXZ|	; NotifyRegKey::AckNotification
	IMPORT	|CeFindNextRegChange|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AckNotification@NotifyRegKey@@QAAHXZ| PROC ; NotifyRegKey::AckNotification

; 160  : 		return CeFindNextRegChange (m_hNotifyEvent);

  00000	6840		 ldr         r0,[r0,#4]
  00002		 |$M4|
  00002	f000 9000	 b           CeFindNextRegChange

			 ENDP  ; |?AckNotification@NotifyRegKey@@QAAHXZ|, NotifyRegKey::AckNotification

	EXPORT	|?GetNotificationHandle@NotifyRegKey@@QAAPAXXZ| ; NotifyRegKey::GetNotificationHandle
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetNotificationHandle@NotifyRegKey@@QAAPAXXZ| PROC ; NotifyRegKey::GetNotificationHandle

; 164  : 		return m_hNotifyEvent;

  00000	6840		 ldr         r0,[r0,#4]
  00002		 |$M4|

; 165  : 	};

  00002	4770		 bx          lr

			 ENDP  ; |?GetNotificationHandle@NotifyRegKey@@QAAPAXXZ|, NotifyRegKey::GetNotificationHandle

	EXPORT	|?IncUnattendedRefCount@PowerStateManager@@QAAKXZ| ; PowerStateManager::IncUnattendedRefCount
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?IncUnattendedRefCount@PowerStateManager@@QAAKXZ| PROC ; PowerStateManager::IncUnattendedRefCount

; 238  : 		return (++m_dwUnattendedModeRef);

  00000	f8d0 3290	 ldr         r3,[r0,#0x290]
  00004	4602		 mov         r2,r0
  00006	1c58		 adds        r0,r3,#1
  00008	f8c2 0290	 str         r0,[r2,#0x290]
  0000c		 |$M4|

; 239  :     }

  0000c	4770		 bx          lr

			 ENDP  ; |?IncUnattendedRefCount@PowerStateManager@@QAAKXZ|, PowerStateManager::IncUnattendedRefCount

	EXPORT	|?DecUnattendedRefCount@PowerStateManager@@QAAKXZ| ; PowerStateManager::DecUnattendedRefCount
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?DecUnattendedRefCount@PowerStateManager@@QAAKXZ| PROC ; PowerStateManager::DecUnattendedRefCount

; 242  :         if (m_dwUnattendedModeRef)

  00000	f8d0 2290	 ldr         r2,[r0,#0x290]
  00004	4603		 mov         r3,r0
  00006	b11a		 cbz         r2,|$LN2@DecUnatten|

; 243  :         {
; 244  : 			return (--m_dwUnattendedModeRef);

  00008	1e50		 subs        r0,r2,#1
  0000a	f8c3 0290	 str         r0,[r3,#0x290]
  0000e		 |$M6|

; 249  :         }
; 250  :     }

  0000e	4770		 bx          lr
  00010		 |$LN2@DecUnatten|

; 245  :         }
; 246  :         else
; 247  :         {
; 248  : 			return 0;

  00010	2000		 movs        r0,#0
  00012		 |$M7|

; 249  :         }
; 250  :     }

  00012	4770		 bx          lr

			 ENDP  ; |?DecUnattendedRefCount@PowerStateManager@@QAAKXZ|, PowerStateManager::DecUnattendedRefCount

	EXPORT	|?SubtractTimeout@PowerStateManager@@UAAXK@Z| ; PowerStateManager::SubtractTimeout
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?SubtractTimeout@PowerStateManager@@UAAXK@Z| PROC ; PowerStateManager::SubtractTimeout

; 324  : 	if (m_dwCurSuspendTimeout != INFINITE)

  00000	f8d0 3280	 ldr         r3,[r0,#0x280]
  00004	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00008	d006		 beq         |$LN4@SubtractTi|

; 325  : 		m_dwCurSuspendTimeout =
; 326  : 			(m_dwCurSuspendTimeout > dwTicks ? m_dwCurSuspendTimeout - dwTicks : 0);

  0000a	428b		 cmp         r3,r1
  0000c	d901		 bls         |$LN7@SubtractTi|
  0000e	1a5b		 subs        r3,r3,r1
  00010	e000		 b           |$LN8@SubtractTi|
  00012		 |$LN7@SubtractTi|
  00012	2300		 movs        r3,#0
  00014		 |$LN8@SubtractTi|
  00014	f8c0 3280	 str         r3,[r0,#0x280]
  00018		 |$LN4@SubtractTi|

; 327  : 	if (m_dwCurResumingSuspendTimeout != INFINITE)

  00018	f8d0 3284	 ldr         r3,[r0,#0x284]
  0001c	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00020	d006		 beq         |$LN3@SubtractTi|

; 328  : 		m_dwCurResumingSuspendTimeout =
; 329  : 			(m_dwCurResumingSuspendTimeout > dwTicks ? m_dwCurResumingSuspendTimeout - dwTicks : 0);

  00022	428b		 cmp         r3,r1
  00024	d901		 bls         |$LN9@SubtractTi|
  00026	1a5b		 subs        r3,r3,r1
  00028	e000		 b           |$LN10@SubtractTi|
  0002a		 |$LN9@SubtractTi|
  0002a	2300		 movs        r3,#0
  0002c		 |$LN10@SubtractTi|
  0002c	f8c0 3284	 str         r3,[r0,#0x284]
  00030		 |$LN3@SubtractTi|

; 330  : 	if (m_dwCurBacklightTimeout != INFINITE)

  00030	f8d0 3288	 ldr         r3,[r0,#0x288]
  00034	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00038	d006		 beq         |$LN2@SubtractTi|

; 331  : 		m_dwCurBacklightTimeout =
; 332  : 			(m_dwCurBacklightTimeout > dwTicks ? m_dwCurBacklightTimeout - dwTicks : 0);

  0003a	428b		 cmp         r3,r1
  0003c	d901		 bls         |$LN11@SubtractTi|
  0003e	1a5b		 subs        r3,r3,r1
  00040	e000		 b           |$LN12@SubtractTi|
  00042		 |$LN11@SubtractTi|
  00042	2300		 movs        r3,#0
  00044		 |$LN12@SubtractTi|
  00044	f8c0 3288	 str         r3,[r0,#0x288]
  00048		 |$LN2@SubtractTi|

; 333  : 	if (m_dwCurUserIdleTimeout != INFINITE)

  00048	f8d0 328c	 ldr         r3,[r0,#0x28C]
  0004c	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00050	d006		 beq         |$LN1@SubtractTi|

; 334  : 		m_dwCurUserIdleTimeout =
; 335  : 			(m_dwCurUserIdleTimeout > dwTicks ? m_dwCurUserIdleTimeout - dwTicks : 0);

  00052	428b		 cmp         r3,r1
  00054	d901		 bls         |$LN13@SubtractTi|
  00056	1a5b		 subs        r3,r3,r1
  00058	e000		 b           |$LN14@SubtractTi|
  0005a		 |$LN13@SubtractTi|
  0005a	2300		 movs        r3,#0
  0005c		 |$LN14@SubtractTi|
  0005c	f8c0 328c	 str         r3,[r0,#0x28C]
  00060		 |$LN1@SubtractTi|
  00060		 |$M16|

; 336  : }

  00060	4770		 bx          lr

			 ENDP  ; |?SubtractTimeout@PowerStateManager@@UAAXK@Z|, PowerStateManager::SubtractTimeout

	EXPORT	|?GetSmallestTimeout@PowerStateManager@@UAAKPAW4TIMEOUT_ITEM@@@Z| ; PowerStateManager::GetSmallestTimeout

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?GetSmallestTimeout@PowerStateManager@@UAAKPAW4TIMEOUT_ITEM@@@Z| DCD imagerel |$LN11@GetSmalles|
	DCD	0xfd306095
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetSmallestTimeout@PowerStateManager@@UAAKPAW4TIMEOUT_ITEM@@@Z| PROC ; PowerStateManager::GetSmallestTimeout

; 340  : {

  00000		 |$LN11@GetSmalles|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M9|
  00008	4604		 mov         r4,r0

; 341  : 	DWORD dwReturn = INFINITE;
; 342  : 	TIMEOUT_ITEM activeEvent = NoTimeoutItem;
; 343  : 
; 344  : 	if (dwReturn > m_dwCurSuspendTimeout)

  0000a	f8d4 2280	 ldr         r2,[r4,#0x280]
  0000e	f06f 0000	 mvn         r0,#0
  00012	2300		 movs        r3,#0
  00014	f1b2 3fff	 cmp         r2,#0xFFFFFFFF
  00018	d201		 bcs         |$LN5@GetSmalles|

; 345  : 	{
; 346  : 		dwReturn = m_dwCurSuspendTimeout;

  0001a	4610		 mov         r0,r2

; 347  : 		activeEvent = SuspendTimeout;

  0001c	2301		 movs        r3,#1
  0001e		 |$LN5@GetSmalles|

; 348  : 	}
; 349  : 	if (dwReturn > m_dwCurResumingSuspendTimeout)

  0001e	f8d4 2284	 ldr         r2,[r4,#0x284]
  00022	4290		 cmp         r0,r2
  00024	d901		 bls         |$LN4@GetSmalles|

; 350  : 	{
; 351  : 		dwReturn = m_dwCurResumingSuspendTimeout;

  00026	4610		 mov         r0,r2

; 352  : 		activeEvent = ResumingSuspendTimeout;

  00028	2302		 movs        r3,#2
  0002a		 |$LN4@GetSmalles|

; 353  : 	}
; 354  : 	if (dwReturn > m_dwCurBacklightTimeout)

  0002a	f8d4 2288	 ldr         r2,[r4,#0x288]
  0002e	4290		 cmp         r0,r2
  00030	d901		 bls         |$LN3@GetSmalles|

; 355  : 	{
; 356  : 		dwReturn = m_dwCurBacklightTimeout;

  00032	4610		 mov         r0,r2

; 357  : 		activeEvent = BacklightTimeout;

  00034	2303		 movs        r3,#3
  00036		 |$LN3@GetSmalles|

; 358  : 	}
; 359  : 	if (dwReturn > m_dwCurUserIdleTimeout)

  00036	f8d4 228c	 ldr         r2,[r4,#0x28C]
  0003a	4290		 cmp         r0,r2
  0003c	d901		 bls         |$LN2@GetSmalles|

; 360  : 	{
; 361  : 		dwReturn = m_dwCurUserIdleTimeout;

  0003e	4610		 mov         r0,r2

; 362  : 		activeEvent = UserActivityTimeout;

  00040	2304		 movs        r3,#4
  00042		 |$LN2@GetSmalles|

; 363  : 	}
; 364  : 	if (pTimeoutItem)

  00042	b101		 cbz         r1,|$LN1@GetSmalles|

; 365  : 	{
; 366  : 		*pTimeoutItem = activeEvent;

  00044	600b		 str         r3,[r1]
  00046		 |$LN1@GetSmalles|
  00046		 |$M12|

; 367  : 	}
; 368  : 	return dwReturn;
; 369  : }

  00046	e8bd 8818	 pop         {r3,r4,r11,pc}
  0004a		 |$M10|

			 ENDP  ; |?GetSmallestTimeout@PowerStateManager@@UAAKPAW4TIMEOUT_ITEM@@@Z|, PowerStateManager::GetSmallestTimeout

	EXPORT	|?DisablePhase2Event@PowerStateManager@@UAAXXZ| ; PowerStateManager::DisablePhase2Event
	IMPORT	|CloseHandle|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?DisablePhase2Event@PowerStateManager@@UAAXXZ| DCD imagerel |$LN7@DisablePha|
	DCD	0xfd30603d
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?DisablePhase2Event@PowerStateManager@@UAAXXZ| PROC ; PowerStateManager::DisablePhase2Event

; 426  : {

  00000		 |$LN7@DisablePha|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M5|
  00008	4604		 mov         r4,r0

; 427  : 	if (m_hevBootPhase2)

  0000a	f8d0 0238	 ldr         r0,[r0,#0x238]
  0000e	b120		 cbz         r0,|$LN1@DisablePha|

; 428  : 	{
; 429  : 		CloseHandle (m_hevBootPhase2);

  00010	f000 f800	 bl          CloseHandle

; 430  : 		m_hevBootPhase2 = NULL;

  00014	2300		 movs        r3,#0
  00016	f8c4 3238	 str         r3,[r4,#0x238]
  0001a		 |$LN1@DisablePha|
  0001a		 |$M8|

; 431  : 	}
; 432  : }

  0001a	e8bd 8818	 pop         {r3,r4,r11,pc}
  0001e		 |$M6|

			 ENDP  ; |?DisablePhase2Event@PowerStateManager@@UAAXXZ|, PowerStateManager::DisablePhase2Event

	EXPORT	|?GetSuspendTimeOut@PowerStateManager@@QAAKXZ| ; PowerStateManager::GetSuspendTimeOut
	IMPORT	|gSystemPowerStatus|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetSuspendTimeOut@PowerStateManager@@QAAKXZ| PROC ; PowerStateManager::GetSuspendTimeOut

; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);

  00000	4b04		 ldr         r3,|$LN9@GetSuspend| ; =|gSystemPowerStatus|
  00002	7d1b		 ldrb        r3,[r3,#0x14]
  00004	b913		 cbnz        r3,|$LN3@GetSuspend|
  00006	f8d0 026c	 ldr         r0,[r0,#0x26C]
  0000a		 |$M6|

; 536  : }

  0000a	4770		 bx          lr
  0000c		 |$LN3@GetSuspend|

; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);

  0000c	f8d0 025c	 ldr         r0,[r0,#0x25C]
  00010		 |$M7|

; 536  : }

  00010	4770		 bx          lr
  00012		 |$LN10@GetSuspend|
  00012		 |$M11|
  00012	defe		 __debugbreak
  00014		 |$LN8@GetSuspend|
  00014		 |$LN9@GetSuspend|
  00014	0000 0000	 DCD         |gSystemPowerStatus|

			 ENDP  ; |?GetSuspendTimeOut@PowerStateManager@@QAAKXZ|, PowerStateManager::GetSuspendTimeOut

	EXPORT	|?GetResumingSuspendTimeout@PowerStateManager@@QAAKXZ| ; PowerStateManager::GetResumingSuspendTimeout
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetResumingSuspendTimeout@PowerStateManager@@QAAKXZ| PROC ; PowerStateManager::GetResumingSuspendTimeout

; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);

  00000	4b04		 ldr         r3,|$LN9@GetResumin| ; =|gSystemPowerStatus|
  00002	7d1b		 ldrb        r3,[r3,#0x14]
  00004	b913		 cbnz        r3,|$LN3@GetResumin|
  00006	f8d0 0270	 ldr         r0,[r0,#0x270]
  0000a		 |$M6|

; 543  : }

  0000a	4770		 bx          lr
  0000c		 |$LN3@GetResumin|

; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);

  0000c	f8d0 0260	 ldr         r0,[r0,#0x260]
  00010		 |$M7|

; 543  : }

  00010	4770		 bx          lr
  00012		 |$LN10@GetResumin|
  00012		 |$M11|
  00012	defe		 __debugbreak
  00014		 |$LN8@GetResumin|
  00014		 |$LN9@GetResumin|
  00014	0000 0000	 DCD         |gSystemPowerStatus|

			 ENDP  ; |?GetResumingSuspendTimeout@PowerStateManager@@QAAKXZ|, PowerStateManager::GetResumingSuspendTimeout

	EXPORT	|?GetBackLightTimeout@PowerStateManager@@QAAKXZ| ; PowerStateManager::GetBackLightTimeout
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetBackLightTimeout@PowerStateManager@@QAAKXZ| PROC ; PowerStateManager::GetBackLightTimeout

; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  00000	4b04		 ldr         r3,|$LN9@GetBackLig| ; =|gSystemPowerStatus|
  00002	7d1b		 ldrb        r3,[r3,#0x14]
  00004	b913		 cbnz        r3,|$LN3@GetBackLig|
  00006	f8d0 0274	 ldr         r0,[r0,#0x274]
  0000a		 |$M6|

; 550  : }

  0000a	4770		 bx          lr
  0000c		 |$LN3@GetBackLig|

; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  0000c	f8d0 0264	 ldr         r0,[r0,#0x264]
  00010		 |$M7|

; 550  : }

  00010	4770		 bx          lr
  00012		 |$LN10@GetBackLig|
  00012		 |$M11|
  00012	defe		 __debugbreak
  00014		 |$LN8@GetBackLig|
  00014		 |$LN9@GetBackLig|
  00014	0000 0000	 DCD         |gSystemPowerStatus|

			 ENDP  ; |?GetBackLightTimeout@PowerStateManager@@QAAKXZ|, PowerStateManager::GetBackLightTimeout

	EXPORT	|?GetUserIdleTimeOut@PowerStateManager@@QAAKXZ| ; PowerStateManager::GetUserIdleTimeOut
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetUserIdleTimeOut@PowerStateManager@@QAAKXZ| PROC ; PowerStateManager::GetUserIdleTimeOut

; 555  : 	return (gSystemPowerStatus.bACLineStatus ==
; 556  : 			AC_LINE_OFFLINE ? m_dwBattUserIdleTimeout : m_dwACUserIdleTimeout);

  00000	4b04		 ldr         r3,|$LN9@GetUserIdl| ; =|gSystemPowerStatus|
  00002	7d1b		 ldrb        r3,[r3,#0x14]
  00004	b913		 cbnz        r3,|$LN3@GetUserIdl|
  00006	f8d0 0278	 ldr         r0,[r0,#0x278]
  0000a		 |$M6|

; 557  : }

  0000a	4770		 bx          lr
  0000c		 |$LN3@GetUserIdl|

; 555  : 	return (gSystemPowerStatus.bACLineStatus ==
; 556  : 			AC_LINE_OFFLINE ? m_dwBattUserIdleTimeout : m_dwACUserIdleTimeout);

  0000c	f8d0 0268	 ldr         r0,[r0,#0x268]
  00010		 |$M7|

; 557  : }

  00010	4770		 bx          lr
  00012		 |$LN10@GetUserIdl|
  00012		 |$M11|
  00012	defe		 __debugbreak
  00014		 |$LN8@GetUserIdl|
  00014		 |$LN9@GetUserIdl|
  00014	0000 0000	 DCD         |gSystemPowerStatus|

			 ENDP  ; |?GetUserIdleTimeOut@PowerStateManager@@QAAKXZ|, PowerStateManager::GetUserIdleTimeOut

	EXPORT	|?Init@PMSystemAPI@@QAAHXZ|		; PMSystemAPI::Init
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Init@PMSystemAPI@@QAAHXZ| PROC	; PMSystemAPI::Init

; 816  : 	return (m_hEmpty != NULL && m_hNotEmpty != NULL && m_hComplete != NULL);

  00000	6a43		 ldr         r3,[r0,#0x24]
  00002	b12b		 cbz         r3,|$LN3@Init|
  00004	6a83		 ldr         r3,[r0,#0x28]
  00006	b11b		 cbz         r3,|$LN3@Init|
  00008	6ac3		 ldr         r3,[r0,#0x2C]
  0000a	b10b		 cbz         r3,|$LN3@Init|
  0000c	2001		 movs        r0,#1
  0000e		 |$M6|

; 817  : }

  0000e	4770		 bx          lr
  00010		 |$LN3@Init|

; 816  : 	return (m_hEmpty != NULL && m_hNotEmpty != NULL && m_hComplete != NULL);

  00010	2000		 movs        r0,#0
  00012		 |$M7|

; 817  : }

  00012	4770		 bx          lr

			 ENDP  ; |?Init@PMSystemAPI@@QAAHXZ|, PMSystemAPI::Init

	EXPORT	|?RequestComplete@PMSystemAPI@@QAAXK@Z|	; PMSystemAPI::RequestComplete
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?RequestComplete@PMSystemAPI@@QAAXK@Z| PROC ; PMSystemAPI::RequestComplete

; 875  : 	if (ERROR_SUCCESS != dwStatus)

  00000	b101		 cbz         r1,|$LN1@RequestCom|

; 876  : 		m_dwResult = dwStatus;

  00002	6201		 str         r1,[r0,#0x20]
  00004		 |$LN1@RequestCom|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  00004	6ac0		 ldr         r0,[r0,#0x2C]
  00006	2103		 movs        r1,#3
  00008		 |$M7|
  00008	f000 9000	 b           EventModify

			 ENDP  ; |?RequestComplete@PMSystemAPI@@QAAXK@Z|, PMSystemAPI::RequestComplete

	EXPORT	|??1CRegistryEdit@@QAA@XZ|		; CRegistryEdit::~CRegistryEdit

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??1CRegistryEdit@@QAA@XZ| DCD imagerel |$LN9@CRegistryE|
	DCD	0xfd306035
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1CRegistryEdit@@QAA@XZ| PROC	; CRegistryEdit::~CRegistryEdit

; 89   :     {

  00000		 |$LN9@CRegistryE|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	4604		 mov         r4,r0

; 92   :     BOOL CloseKey() {
; 93   :         if( m_hDevKey )

  0000a	6820		 ldr         r0,[r4]
  0000c	b118		 cbz         r0,|$LN3@CRegistryE|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  0000e	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  00012	2300		 movs        r3,#0
  00014	6023		 str         r3,[r4]
  00016		 |$LN3@CRegistryE|
  00016		 |$M10|

; 90   :         CloseKey();
; 91   :     }

  00016	e8bd 8818	 pop         {r3,r4,r11,pc}
  0001a		 |$M8|

			 ENDP  ; |??1CRegistryEdit@@QAA@XZ|, CRegistryEdit::~CRegistryEdit

	EXPORT	|?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z| ; NotifyRegKey::GetRegValue

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z| DCD imagerel |$LN17@GetRegValu|
	DCD	0x17000ad
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z| PROC ; NotifyRegKey::GetRegValue

; 141  : 	{

  00000		 |$LN17@GetRegValu|
  00000	e92d 4810	 push        {r4,r11,lr}
  00004	f20d 0b04	 addw        r11,sp,#4
  00008	b085		 sub         sp,sp,#0x14
  0000a		 |$M15|

; 142  : 		DWORD dwValue = 0;

  0000a	2300		 movs        r3,#0
  0000c	9302		 str         r3,[sp,#8]

; 143  : 
; 144  : 		if (CRegistryEdit::GetRegValue (lpcName, (PBYTE) & dwValue, sizeof (dwValue)))

  0000e	2304		 movs        r3,#4
  00010	9303		 str         r3,[sp,#0xC]
; File c:\wince800\public\common\oak\inc\cregedit.h

; 146  :         DWORD dwType = 0;

  00012	2300		 movs        r3,#0
  00014	9304		 str         r3,[sp,#0x10]

; 152  :                                            &dwDataLen );

  00016	ab03		 add         r3,sp,#0xC
  00018	9301		 str         r3,[sp,#4]
  0001a	6800		 ldr         r0,[r0]
  0001c	ab02		 add         r3,sp,#8
  0001e	9300		 str         r3,[sp]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 141  : 	{

  00020	4614		 mov         r4,r2
; File c:\wince800\public\common\oak\inc\cregedit.h

; 152  :                                            &dwDataLen );

  00022	ab04		 add         r3,sp,#0x10
  00024	2200		 movs        r2,#0
  00026	f000 f800	 bl          RegQueryValueExW

; 153  :         return ( status == ERROR_SUCCESS );

  0002a	b980		 cbnz        r0,|$LN4@GetRegValu|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 146  : 			if (lpdwData)

  0002c	b16c		 cbz         r4,|$LN3@GetRegValu|

; 147  : 			{
; 148  : 				if (dwValue >= INFINITE / 1000)

  0002e	4b0a		 ldr         r3,|$LN20@GetRegValu| ; =0x418937
  00030	9a02		 ldr         r2,[sp,#8]
  00032	429a		 cmp         r2,r3
  00034	d300		 bcc         |$LN2@GetRegValu|

; 149  : 					dwValue = INFINITE / 1000;

  00036	461a		 mov         r2,r3
  00038		 |$LN2@GetRegValu|

; 150  : 
; 151  : 				*lpdwData = (dwValue != 0 ? dwValue * 1000 : INFINITE);

  00038	b122		 cbz         r2,|$LN7@GetRegValu|
  0003a	f44f 737a	 mov         r3,#0x3E8
  0003e	fb02 f303	 mul         r3,r2,r3
  00042	e001		 b           |$LN8@GetRegValu|
  00044		 |$LN7@GetRegValu|
  00044	f06f 0300	 mvn         r3,#0
  00048		 |$LN8@GetRegValu|
  00048	6023		 str         r3,[r4]
  0004a		 |$LN3@GetRegValu|

; 152  : 			}
; 153  : 			return TRUE;

  0004a	2001		 movs        r0,#1
  0004c	e000		 b           |$LN1@GetRegValu|
  0004e		 |$LN4@GetRegValu|

; 154  : 		}
; 155  : 		else
; 156  : 			return FALSE;

  0004e	2000		 movs        r0,#0
  00050		 |$LN1@GetRegValu|
  00050		 |$M18|

; 157  : 	}

  00050	b005		 add         sp,sp,#0x14
  00052	e8bd 8810	 pop         {r4,r11,pc}
  00056		 |$LN21@GetRegValu|
  00056		 |$M22|
  00056	defe		 __debugbreak
  00058		 |$LN19@GetRegValu|
  00058		 |$LN20@GetRegValu|
  00058	8937 0041	 DCD         0x418937
  0005c		 |$M16|

			 ENDP  ; |?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z|, NotifyRegKey::GetRegValue

	EXPORT	|??_7PMSystemAPI@@6B@| [ DATA ]		; PMSystemAPI::`vftable'
	EXPORT	|??1PMSystemAPI@@QAA@XZ|		; PMSystemAPI::~PMSystemAPI
	IMPORT	|_purecall|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??1PMSystemAPI@@QAA@XZ| DCD imagerel |$LN11@PMSystemAP|
	DCD	0xfd306061

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PMSystemAPI@@6B@| DCD |_purecall|			; PMSystemAPI::`vftable'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PMSystemAPI@@QAA@XZ| PROC		; PMSystemAPI::~PMSystemAPI

; 820  : {

  00000		 |$LN11@PMSystemAP|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M9|
  00008	4604		 mov         r4,r0

; 821  : 	if (m_hEmpty)

  0000a	6a60		 ldr         r0,[r4,#0x24]
  0000c	4b08		 ldr         r3,|$LN14@PMSystemAP| ; =|??_7PMSystemAPI@@6B@|
  0000e	6023		 str         r3,[r4]
  00010	b108		 cbz         r0,|$LN3@PMSystemAP|

; 822  : 		CloseHandle (m_hEmpty);

  00012	f000 f800	 bl          CloseHandle
  00016		 |$LN3@PMSystemAP|

; 823  : 	if (m_hNotEmpty)

  00016	6aa0		 ldr         r0,[r4,#0x28]
  00018	b108		 cbz         r0,|$LN2@PMSystemAP|

; 824  : 		CloseHandle (m_hNotEmpty);

  0001a	f000 f800	 bl          CloseHandle
  0001e		 |$LN2@PMSystemAP|

; 825  : 	if (m_hComplete)

  0001e	6ae0		 ldr         r0,[r4,#0x2C]
  00020	b108		 cbz         r0,|$LN1@PMSystemAP|

; 826  : 		CloseHandle (m_hComplete);

  00022	f000 f800	 bl          CloseHandle
  00026		 |$LN1@PMSystemAP|
; File c:\wince800\public\common\oak\inc\csync.h

; 42   :         DeleteCriticalSection( &m_CSection );

  00026	1d20		 adds        r0,r4,#4
  00028	f000 f800	 bl          DeleteCriticalSection
  0002c		 |$M12|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 827  : }

  0002c	e8bd 8818	 pop         {r3,r4,r11,pc}
  00030		 |$LN13@PMSystemAP|
  00030		 |$LN14@PMSystemAP|
  00030	0000 0000	 DCD         |??_7PMSystemAPI@@6B@|
  00034		 |$M10|

			 ENDP  ; |??1PMSystemAPI@@QAA@XZ|, PMSystemAPI::~PMSystemAPI

	EXPORT	|??0PMSystemAPI@@QAA@XZ|		; PMSystemAPI::PMSystemAPI
	IMPORT	|CreateEventW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PMSystemAPI@@QAA@XZ| DCD imagerel |$LN8@PMSystemAP|
	DCD	0xfd306095
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PMSystemAPI@@QAA@XZ| PROC		; PMSystemAPI::PMSystemAPI

; 803  : {

  00000		 |$LN8@PMSystemAP|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M6|
  00008	4604		 mov         r4,r0
; File c:\wince800\public\common\oak\inc\csync.h

; 38   :         InitializeCriticalSection( &m_CSection );

  0000a	1d20		 adds        r0,r4,#4
  0000c	f000 f800	 bl          InitializeCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 803  : {

  00010	4b0e		 ldr         r3,|$LN11@PMSystemAP| ; =|??_7PMSystemAPI@@6B@|

; 804  : 	m_szStateName[0] = 0;
; 805  : 	m_dwStateHint = 0;
; 806  : 	m_dwOptions = 0;
; 807  : 
; 808  : 	m_hEmpty = CreateEvent (NULL, FALSE, TRUE, NULL);

  00012	2201		 movs        r2,#1
  00014	2100		 movs        r1,#0
  00016	6023		 str         r3,[r4]
  00018	2300		 movs        r3,#0
  0001a	8623		 strh        r3,[r4,#0x30]
  0001c	2000		 movs        r0,#0
  0001e	61a3		 str         r3,[r4,#0x18]
  00020	61e3		 str         r3,[r4,#0x1C]
  00022	f000 f800	 bl          CreateEventW
  00026	6260		 str         r0,[r4,#0x24]

; 809  : 	m_hNotEmpty = CreateEvent (NULL, TRUE, FALSE, NULL);

  00028	2000		 movs        r0,#0
  0002a	2300		 movs        r3,#0
  0002c	2200		 movs        r2,#0
  0002e	2101		 movs        r1,#1
  00030	f000 f800	 bl          CreateEventW
  00034	62a0		 str         r0,[r4,#0x28]

; 810  : 	m_hComplete = CreateEvent (NULL, TRUE, FALSE, NULL);

  00036	2300		 movs        r3,#0
  00038	2200		 movs        r2,#0
  0003a	2101		 movs        r1,#1
  0003c	2000		 movs        r0,#0
  0003e	f000 f800	 bl          CreateEventW
  00042	62e0		 str         r0,[r4,#0x2C]

; 811  : }

  00044	4620		 mov         r0,r4
  00046		 |$M9|
  00046	e8bd 8818	 pop         {r3,r4,r11,pc}
  0004a		 |$LN12@PMSystemAP|
  0004a		 |$M13|
  0004a	defe		 __debugbreak
  0004c		 |$LN10@PMSystemAP|
  0004c		 |$LN11@PMSystemAP|
  0004c	0000 0000	 DCD         |??_7PMSystemAPI@@6B@|
  00050		 |$M7|

			 ENDP  ; |??0PMSystemAPI@@QAA@XZ|, PMSystemAPI::PMSystemAPI

	EXPORT	|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@GLGOFLAA@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@| [ DATA ] ; `string'
	EXPORT	|?SendSystemPowerState@PMSystemAPI@@QAAKPBGKK@Z| ; PMSystemAPI::SendSystemPowerState
	IMPORT	|__C_specific_handler|
	IMPORT	|WaitForSingleObject|
	IMPORT	|dpCurSettings|
	IMPORT	|StringCchCopyW|
	IMPORT	|CaptureDumpFileOnDevice|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?SendSystemPowerState@PMSystemAPI@@QAAKPBGKK@Z| DCD imagerel |$LN39@SendSystem|
	DCD	imagerel |$unwind2$?SendSystemPowerState@PMSystemAPI@@QAAKPBGKK@Z|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?SendSystemPowerState@PMSystemAPI@@QAAKPBGKK@Z| DCD 0x33300072
	DCD	0xfcabfcc7
	DCD	0xf08bff04
	DCD	0xff05ef
	DCD	imagerel |__C_specific_handler|
	DCD	0x1
	DCD	imagerel |$LN17@SendSystem|
	DCD	imagerel |$LN18@SendSystem|
	DCD	0x1
	DCD	imagerel |$LN14@SendSystem|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "p", 0x0, "y", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "n", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@GLGOFLAA@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt@| DCB "P"
	DCB	0x0, "M", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "m", 0x0, "A", 0x0, "P", 0x0, "I", 0x0, ":", 0x0, ":"
	DCB	0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "S", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "n", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ","
	DCB	0x0, " ", 0x0, "h", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "n", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@| DCB "<", 0x0
	DCB	"N", 0x0, "U", 0x0, "L", 0x0, "L", 0x0, ">", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?SendSystemPowerState@PMSystemAPI@@QAAKPBGKK@Z| PROC ; PMSystemAPI::SendSystemPowerState

; 882  : {

  00000		 |$LN39@SendSystem|
  00000	b40f		 push        {r0-r3}
  00002	e92d 4bfc	 push        {r2-r9,r11,lr}
  00006	f20d 0b20	 addw        r11,sp,#0x20
  0000a	466f		 mov         r7,sp
  0000c	b082		 sub         sp,sp,#8
  0000e		 |$LN37@SendSystem|
  0000e	4698		 mov         r8,r3
  00010	637b		 str         r3,[r7,#0x34]
  00012	4691		 mov         r9,r2
  00014	633a		 str         r2,[r7,#0x30]
  00016	460e		 mov         r6,r1
  00018	4605		 mov         r5,r0
  0001a	62bd		 str         r5,[r7,#0x28]

; 883  : 	DWORD dwReturn = WaitForSingleObject (m_hEmpty, INFINITE);

  0001c	6a68		 ldr         r0,[r5,#0x24]
  0001e	f06f 0100	 mvn         r1,#0
  00022	f000 f800	 bl          WaitForSingleObject

; 884  : 
; 885  : 	SETFNAME (_T ("PMSystemAPI::SendSystemPowerState"));
; 886  : 	PMLOGMSG (ZONE_API, (_T ("+%s: name %s, hint 0x%08x, options 0x%08x, fInternal %d\r\n"),
; 887  : 						 pszFname, pwsState != NULL ? pwsState : _T ("<NULL>"), dwStateHint,
; 888  : 						 dwOptions));

  00026	4c31		 ldr         r4,|$LN45@SendSystem| ; =|dpCurSettings|
  00028	f8d4 4440	 ldr         r4,[r4,#0x440]
  0002c	f414 6f00	 tst         r4,#0x800
  00030	d00a		 beq         |$LN8@SendSystem|
  00032	b10e		 cbz         r6,|$LN6@SendSystem|
  00034	4632		 mov         r2,r6
  00036	e000		 b           |$LN7@SendSystem|
  00038		 |$LN6@SendSystem|
  00038	4a2e		 ldr         r2,|$LN47@SendSystem| ; =|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@|
  0003a		 |$LN7@SendSystem|
  0003a	f8cd 8000	 str         r8,[sp]
  0003e	492a		 ldr         r1,|$LN44@SendSystem| ; =|??_C@_1EE@GLGOFLAA@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt@|
  00040	482b		 ldr         r0,|$LN46@SendSystem| ; =|??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@|
  00042	464b		 mov         r3,r9
  00044	f000 f800	 bl          CeLogMsg
  00048		 |$LN8@SendSystem|
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  00048	1d28		 adds        r0,r5,#4
  0004a	f000 f800	 bl          EnterCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 891  : 	ResetEvent (m_hComplete);

  0004e	6ae8		 ldr         r0,[r5,#0x2C]
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 232  :     return EventModify(h,EVENT_RESET);

  00050	2102		 movs        r1,#2
  00052	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 892  : 	m_dwResult = ERROR_SUCCESS;

  00056	2300		 movs        r3,#0
  00058	622b		 str         r3,[r5,#0x20]

; 893  : 	m_szStateName[0] = 0;

  0005a	862b		 strh        r3,[r5,#0x30]

; 894  : 	if (pwsState)

  0005c	b1c6		 cbz         r6,|$LN19@SendSystem|
  0005e		 |$LN17@SendSystem|

; 895  : 	{
; 896  : 		__try
; 897  : 		{
; 898  : 			StringCchCopy (m_szStateName, MAX_PATH, pwsState);

  0005e	f44f 7182	 mov         r1,#0x104
  00062	f115 0030	 adds        r0,r5,#0x30
  00066	4632		 mov         r2,r6
  00068	f000 f800	 bl          StringCchCopyW
  0006c		 |$LN18@SendSystem|

; 899  : 		}

  0006c	e010		 b           |$LN19@SendSystem|
  0006e		 |$LN14@SendSystem|

; 900  : 		__except (EXCEPTION_EXECUTE_HANDLER)
; 901  : 		{
; 902  : 			PMLOGMSG (ZONE_WARN, (_T ("%s: exception copying state name\r\n"), pszFname));

  0006e	4b1f		 ldr         r3,|$LN45@SendSystem| ; =|dpCurSettings|
  00070	f8d3 3440	 ldr         r3,[r3,#0x440]
  00074	f013 0f02	 tst         r3,#2
  00078	d003		 beq         |$LN10@SendSystem|
  0007a	491b		 ldr         r1,|$LN44@SendSystem| ; =|??_C@_1EE@GLGOFLAA@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt@|
  0007c	4819		 ldr         r0,|$LN43@SendSystem| ; =|??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  0007e	f000 f800	 bl          CeLogMsg
  00082		 |$LN10@SendSystem|

; 903  : 			m_szStateName[0] = 0;

  00082	2300		 movs        r3,#0
  00084	6abd		 ldr         r5,[r7,#0x28]
  00086	862b		 strh        r3,[r5,#0x30]
  00088	f8d7 8034	 ldr         r8,[r7,#0x34]
  0008c	f8d7 9030	 ldr         r9,[r7,#0x30]
  00090		 |$LN19@SendSystem|

; 904  : 			dwReturn = ERROR_INVALID_PARAMETER;
; 905  : 		}
; 906  : 	}
; 907  : 	m_dwStateHint = dwStateHint;

  00090	f8c5 9018	 str         r9,[r5,#0x18]

; 908  : 	m_dwOptions = dwOptions;

  00094	f8c5 801c	 str         r8,[r5,#0x1C]
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  00098	6aa8		 ldr         r0,[r5,#0x28]
  0009a	2103		 movs        r1,#3
  0009c	f000 f800	 bl          EventModify
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  000a0	1d28		 adds        r0,r5,#4
  000a2	f000 f800	 bl          LeaveCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 911  : 	dwReturn = WaitForSingleObject (m_hComplete, INFINITE);

  000a6	6ae8		 ldr         r0,[r5,#0x2C]
  000a8	f06f 0100	 mvn         r1,#0
  000ac	f000 f800	 bl          WaitForSingleObject

; 912  : 	ASSERT (dwReturn == WAIT_OBJECT_0);
; 913  : 	dwReturn = m_dwResult;

  000b0	6a2e		 ldr         r6,[r5,#0x20]
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  000b2	6a68		 ldr         r0,[r5,#0x24]
  000b4	2103		 movs        r1,#3
  000b6	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 916  : 	if ((ERROR_SUCCESS == dwReturn) && ((dwOptions & POWER_DUMPDW) != 0))

  000ba	b96e		 cbnz        r6,|$LN1@SendSystem|
  000bc	f418 5f00	 tst         r8,#0x2000
  000c0	d00a		 beq         |$LN1@SendSystem|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  000c2	2008		 movs        r0,#8
  000c4	f000 f800	 bl          __GetUserKData
  000c8	4604		 mov         r4,r0

; 373  : }
; 374  : 
; 375  : _inline DWORD GetCurrentProcessId(void) {
; 376  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  000ca	200c		 movs        r0,#0xC
  000cc	f000 f800	 bl          __GetUserKData
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 918  : 		CaptureDumpFileOnDevice (GetCurrentProcessId (), GetCurrentThreadId (), NULL);

  000d0	2200		 movs        r2,#0
  000d2	4621		 mov         r1,r4
  000d4	f000 f800	 bl          CaptureDumpFileOnDevice
  000d8		 |$LN1@SendSystem|

; 919  : 	}
; 920  : 	return dwReturn;
; 921  : }

  000d8	4630		 mov         r0,r6
  000da		 |$M41|
  000da	b004		 add         sp,sp,#0x10
  000dc	e8bd 0bf0	 pop         {r4-r9,r11}
  000e0	f85d fb14	 ldr         pc,[sp],#0x14
  000e4		 |$LN42@SendSystem|
  000e4		 |$LN43@SendSystem|
  000e4	0000 0000	 DCD         |??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  000e8		 |$LN44@SendSystem|
  000e8	0000 0000	 DCD         |??_C@_1EE@GLGOFLAA@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt@|
  000ec		 |$LN45@SendSystem|
  000ec	0000 0000	 DCD         |dpCurSettings|
  000f0		 |$LN46@SendSystem|
  000f0	0000 0000	 DCD         |??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@|
  000f4		 |$LN47@SendSystem|
  000f4	0000 0000	 DCD         |??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@|

			 ENDP  ; |?SendSystemPowerState@PMSystemAPI@@QAAKPBGKK@Z|, PMSystemAPI::SendSystemPowerState

  000f8		 |$LN38@SendSystem|
	EXPORT	|??_C@_1HI@IEMHGFEB@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@JANJPGKN@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@EHLGAGMB@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAs?$AA?5?$AAm?$AA_?$AAh?$AAN?$AAo?$AAt?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAS?$AAe@| [ DATA ] ; `string'
	EXPORT	|?RequestedSystemPowerState@PMSystemAPI@@QAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PMSystemAPI::RequestedSystemPowerState
	IMPORT	|PlatformMapPowerStateHint|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?RequestedSystemPowerState@PMSystemAPI@@QAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| DCD imagerel |$LN24@RequestedS|
	DCD	0xfd736151

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@EHLGAGMB@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAs?$AA?5?$AAm?$AA_?$AAh?$AAN?$AAo?$AAt?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAS?$AAe@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "s", 0x0, " ", 0x0, "m", 0x0, "_"
	DCB	0x0, "h", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, "E", 0x0, "m"
	DCB	0x0, "p", 0x0, "t", 0x0, "y", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "S"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "d", 0x0, "w", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@JANJPGKN@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe@| DCB "P"
	DCB	0x0, "M", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "m", 0x0, "A", 0x0, "P", 0x0, "I", 0x0, ":", 0x0, ":"
	DCB	0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@IEMHGFEB@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "n", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, """", 0x0, "%", 0x0, "s"
	DCB	0x0, """", 0x0, ",", 0x0, " ", 0x0, "h", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "o", 0x0, "p"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "f", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "n", 0x0, "a", 0x0, "l", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?RequestedSystemPowerState@PMSystemAPI@@QAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PMSystemAPI::RequestedSystemPowerState

; 831  : {

  00000		 |$LN24@RequestedS|
  00000	e92d 48fc	 push        {r2-r7,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M22|
  00008	4604		 mov         r4,r0
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  0000a	1d20		 adds        r0,r4,#4
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 832  : 	PLATFORM_ACTIVITY_STATE activeState = UnknownState;

  0000c	f06f 0700	 mvn         r7,#0
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  00010	f000 f800	 bl          EnterCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 836  : 	if (WaitForSingleObject (m_hNotEmpty, 0) == WAIT_OBJECT_0)

  00014	6aa0		 ldr         r0,[r4,#0x28]
  00016	2100		 movs        r1,#0
  00018	f000 f800	 bl          WaitForSingleObject
  0001c	bba8		 cbnz        r0,|$LN5@RequestedS|

; 837  : 	{  // Signaled.
; 838  : 		DWORD dwStatus = ERROR_SUCCESS;
; 839  : 
; 840  : 		PMLOGMSG (ZONE_API, (_T ("+%s: name \"%s\", hint 0x%08x, options 0x%08x, fInternal %d\r\n"),
; 841  : 							 pszFname, m_szStateName, m_dwStateHint, m_dwOptions));

  0001e	4e23		 ldr         r6,|$LN28@RequestedS| ; =|dpCurSettings|
  00020	2500		 movs        r5,#0
  00022	f8d6 3440	 ldr         r3,[r6,#0x440]
  00026	f413 6f00	 tst         r3,#0x800
  0002a	d008		 beq         |$LN8@RequestedS|
  0002c	69e3		 ldr         r3,[r4,#0x1C]
  0002e	4822		 ldr         r0,|$LN31@RequestedS| ; =|??_C@_1HI@IEMHGFEB@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt@|
  00030	491f		 ldr         r1,|$LN29@RequestedS| ; =|??_C@_1EO@JANJPGKN@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe@|
  00032	9300		 str         r3,[sp]
  00034	69a3		 ldr         r3,[r4,#0x18]
  00036	f114 0230	 adds        r2,r4,#0x30
  0003a	f000 f800	 bl          CeLogMsg
  0003e		 |$LN8@RequestedS|

; 842  : 
; 843  : 		// If the user passes a null state name, use the hints flag to try to find a match.
; 844  : 		if (m_szStateName[0] == 0)

  0003e	8e23		 ldrh        r3,[r4,#0x30]
  00040	b943		 cbnz        r3,|$LN20@RequestedS|

; 845  : 		{
; 846  : 			// Try to match the hint flag to a system state
; 847  : 			dwStatus = PlatformMapPowerStateHint (m_dwStateHint, m_szStateName, _countof (m_szStateName));

  00042	69a0		 ldr         r0,[r4,#0x18]
  00044	f44f 7282	 mov         r2,#0x104
  00048	f114 0130	 adds        r1,r4,#0x30
  0004c	f000 f800	 bl          PlatformMapPowerStateHint
  00050	4605		 mov         r5,r0

; 848  : 		}
; 849  : 
; 850  : 		// Go ahead and do the update?
; 851  : 		if (dwStatus == ERROR_SUCCESS)

  00052	b955		 cbnz        r5,|$LN2@RequestedS|
  00054		 |$LN20@RequestedS|

; 852  : 		{
; 853  : 			activeState = SystemStateToActivityState (m_szStateName);

  00054	6823		 ldr         r3,[r4]
  00056	f114 0130	 adds        r1,r4,#0x30
  0005a	4620		 mov         r0,r4
  0005c	681b		 ldr         r3,[r3]
  0005e	4798		 blx         r3
  00060	4607		 mov         r7,r0

; 854  : 			if (activeState == UnknownState)

  00062	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00066	d100		 bne         |$LN2@RequestedS|

; 855  : 			{
; 856  : 				dwStatus = ERROR_INVALID_PARAMETER;

  00068	2557		 movs        r5,#0x57
  0006a		 |$LN2@RequestedS|

; 857  : 			}
; 858  : 		}
; 859  : 
; 860  : 		PMLOGMSG (ZONE_API, (_T ("-%s: returning dwStatus %d\r\n"), pszFname, dwStatus));

  0006a	f8d6 3440	 ldr         r3,[r6,#0x440]
  0006e	f413 6f00	 tst         r3,#0x800
  00072	d004		 beq         |$LN10@RequestedS|
  00074	480f		 ldr         r0,|$LN30@RequestedS| ; =|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00076	490e		 ldr         r1,|$LN29@RequestedS| ; =|??_C@_1EO@JANJPGKN@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe@|
  00078	462a		 mov         r2,r5
  0007a	f000 f800	 bl          CeLogMsg
  0007e		 |$LN10@RequestedS|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 232  :     return EventModify(h,EVENT_RESET);

  0007e	6aa0		 ldr         r0,[r4,#0x28]
  00080	2102		 movs        r1,#2
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 861  : 		m_dwResult = dwStatus;

  00082	6225		 str         r5,[r4,#0x20]
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 232  :     return EventModify(h,EVENT_RESET);

  00084	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 864  : 	else

  00088	e008		 b           |$LN12@RequestedS|
  0008a		 |$LN5@RequestedS|

; 865  : 	{
; 866  : 		PMLOGMSG (ZONE_ERROR, (_T ("-%s: Fails m_hNotEmpty is not Set \r\n")));

  0008a	4b08		 ldr         r3,|$LN28@RequestedS| ; =|dpCurSettings|
  0008c	f8d3 3440	 ldr         r3,[r3,#0x440]
  00090	f013 0f01	 tst         r3,#1
  00094	d002		 beq         |$LN12@RequestedS|
  00096	4804		 ldr         r0,|$LN27@RequestedS| ; =|??_C@_1EK@EHLGAGMB@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAs?$AA?5?$AAm?$AA_?$AAh?$AAN?$AAo?$AAt?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAS?$AAe@|
  00098	f000 f800	 bl          CeLogMsg
  0009c		 |$LN12@RequestedS|
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  0009c	1d20		 adds        r0,r4,#4
  0009e	f000 f800	 bl          LeaveCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 870  : }

  000a2	4638		 mov         r0,r7
  000a4		 |$M25|
  000a4	e8bd 88fc	 pop         {r2-r7,r11,pc}
  000a8		 |$LN26@RequestedS|
  000a8		 |$LN27@RequestedS|
  000a8	0000 0000	 DCD         |??_C@_1EK@EHLGAGMB@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAs?$AA?5?$AAm?$AA_?$AAh?$AAN?$AAo?$AAt?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAS?$AAe@|
  000ac		 |$LN28@RequestedS|
  000ac	0000 0000	 DCD         |dpCurSettings|
  000b0		 |$LN29@RequestedS|
  000b0	0000 0000	 DCD         |??_C@_1EO@JANJPGKN@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe@|
  000b4		 |$LN30@RequestedS|
  000b4	0000 0000	 DCD         |??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  000b8		 |$LN31@RequestedS|
  000b8	0000 0000	 DCD         |??_C@_1HI@IEMHGFEB@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt@|
  000bc		 |$M23|

			 ENDP  ; |?RequestedSystemPowerState@PMSystemAPI@@QAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PMSystemAPI::RequestedSystemPowerState

	EXPORT	|?GetStateObject@PowerStateManager@@QAAPAVPowerState@@W4PLATFORM_ACTIVITY_STATE@@@Z| ; PowerStateManager::GetStateObject

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?GetStateObject@PowerStateManager@@QAAPAVPowerState@@W4PLATFORM_ACTIVITY_STATE@@@Z| DCD imagerel |$LN17@GetStateOb|
	DCD	0x316055
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateObject@PowerStateManager@@QAAPAVPowerState@@W4PLATFORM_ACTIVITY_STATE@@@Z| PROC ; PowerStateManager::GetStateObject

; 561  : {

  00000		 |$LN17@GetStateOb|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M15|

; 562  : 	if (m_pPowerStateList != NULL)

  00008	f8d0 427c	 ldr         r4,[r0,#0x27C]
  0000c	460d		 mov         r5,r1
  0000e	e006		 b           |$LN13@GetStateOb|
  00010		 |$LL3@GetStateOb|

; 567  : 		{
; 568  : 			if (pCurState->GetState () == newState)

  00010	6823		 ldr         r3,[r4]
  00012	4620		 mov         r0,r4
  00014	695b		 ldr         r3,[r3,#0x14]
  00016	4798		 blx         r3
  00018	42a8		 cmp         r0,r5
  0001a	d003		 beq         |$LN5@GetStateOb|

; 569  : 			{
; 570  : 				return pCurState;
; 571  : 			}
; 572  : 			pCurState = pCurState->GetNextPowerState ();

  0001c	6964		 ldr         r4,[r4,#0x14]
  0001e		 |$LN13@GetStateOb|

; 563  : 	{
; 564  : 		PowerState *pCurState = m_pPowerStateList;
; 565  : 
; 566  : 		while (pCurState)

  0001e	2c00		 cmp         r4,#0
  00020	d1f6		 bne         |$LL3@GetStateOb|

; 573  : 		}
; 574  : 	}
; 575  : 	return NULL;

  00022	2400		 movs        r4,#0
  00024		 |$LN5@GetStateOb|

; 576  : }

  00024	4620		 mov         r0,r4
  00026		 |$M18|
  00026	e8bd 8830	 pop         {r4,r5,r11,pc}
  0002a		 |$M16|

			 ENDP  ; |?GetStateObject@PowerStateManager@@QAAPAVPowerState@@W4PLATFORM_ACTIVITY_STATE@@@Z|, PowerStateManager::GetStateObject

	EXPORT	|?SystemStateToActivityState@PowerStateManager@@UAA?AW4PLATFORM_ACTIVITY_STATE@@PBG@Z| ; PowerStateManager::SystemStateToActivityState
	IMPORT	|_wcsicmp|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?SystemStateToActivityState@PowerStateManager@@UAA?AW4PLATFORM_ACTIVITY_STATE@@PBG@Z| DCD imagerel |$LN17@SystemStat|
	DCD	0x316075
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?SystemStateToActivityState@PowerStateManager@@UAA?AW4PLATFORM_ACTIVITY_STATE@@PBG@Z| PROC ; PowerStateManager::SystemStateToActivityState

; 388  : {

  00000		 |$LN17@SystemStat|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M15|
  00008	460d		 mov         r5,r1

; 389  : 	if (lpState == NULL)

  0000a	b16d		 cbz         r5,|$LN3@SystemStat|

; 390  : 		return UnknownState;
; 391  : 	PowerState *curState = m_pPowerStateList;

  0000c	f8d0 427c	 ldr         r4,[r0,#0x27C]
  00010	e008		 b           |$LN13@SystemStat|
  00012		 |$LL4@SystemStat|

; 394  : 	{
; 395  : 		if (_tcsicmp (curState->GetStateString (), lpState) == 0)

  00012	6823		 ldr         r3,[r4]
  00014	4620		 mov         r0,r4
  00016	699b		 ldr         r3,[r3,#0x18]
  00018	4798		 blx         r3
  0001a	4629		 mov         r1,r5
  0001c	f000 f800	 bl          _wcsicmp
  00020	b130		 cbz         r0,|$LN11@SystemStat|

; 397  : 		else
; 398  : 			curState = curState->GetNextPowerState ();

  00022	6964		 ldr         r4,[r4,#0x14]
  00024		 |$LN13@SystemStat|

; 392  : 
; 393  : 	while (curState)

  00024	2c00		 cmp         r4,#0
  00026	d1f4		 bne         |$LL4@SystemStat|
  00028		 |$LN3@SystemStat|

; 399  : 	}
; 400  : 	return UnknownState;

  00028	f06f 0000	 mvn         r0,#0
  0002c		 |$LN6@SystemStat|
  0002c		 |$M18|

; 401  : }

  0002c	e8bd 8830	 pop         {r4,r5,r11,pc}
  00030		 |$LN11@SystemStat|

; 396  : 			return curState->GetState ();

  00030	6823		 ldr         r3,[r4]
  00032	4620		 mov         r0,r4
  00034	695b		 ldr         r3,[r3,#0x14]
  00036	4798		 blx         r3
  00038	e7f8		 b           |$LN6@SystemStat|
  0003a		 |$M16|

			 ENDP  ; |?SystemStateToActivityState@PowerStateManager@@UAA?AW4PLATFORM_ACTIVITY_STATE@@PBG@Z|, PowerStateManager::SystemStateToActivityState

	EXPORT	|?ActivityStateToSystemState@PowerStateManager@@UAAPBGW4PLATFORM_ACTIVITY_STATE@@@Z| ; PowerStateManager::ActivityStateToSystemState

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?ActivityStateToSystemState@PowerStateManager@@UAAPBGW4PLATFORM_ACTIVITY_STATE@@@Z| DCD imagerel |$LN16@ActivitySt|
	DCD	0x316065
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?ActivityStateToSystemState@PowerStateManager@@UAAPBGW4PLATFORM_ACTIVITY_STATE@@@Z| PROC ; PowerStateManager::ActivityStateToSystemState

; 373  : {

  00000		 |$LN16@ActivitySt|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M14|

; 374  : 	PowerState *curState = m_pPowerStateList;

  00008	f8d0 427c	 ldr         r4,[r0,#0x27C]
  0000c	460d		 mov         r5,r1
  0000e	e006		 b           |$LN12@ActivitySt|
  00010		 |$LL4@ActivitySt|

; 377  : 	{
; 378  : 		if (curState->GetState () == platActiveState)

  00010	6823		 ldr         r3,[r4]
  00012	4620		 mov         r0,r4
  00014	695b		 ldr         r3,[r3,#0x14]
  00016	4798		 blx         r3
  00018	42a8		 cmp         r0,r5
  0001a	d005		 beq         |$LN10@ActivitySt|

; 380  : 		else
; 381  : 			curState = curState->GetNextPowerState ();

  0001c	6964		 ldr         r4,[r4,#0x14]
  0001e		 |$LN12@ActivitySt|

; 375  : 
; 376  : 	while (curState)

  0001e	2c00		 cmp         r4,#0
  00020	d1f6		 bne         |$LL4@ActivitySt|

; 382  : 	}
; 383  : 	return NULL;

  00022	2000		 movs        r0,#0
  00024		 |$LN5@ActivitySt|
  00024		 |$M17|

; 384  : }

  00024	e8bd 8830	 pop         {r4,r5,r11,pc}
  00028		 |$LN10@ActivitySt|

; 379  : 			return curState->GetStateString ();

  00028	6823		 ldr         r3,[r4]
  0002a	4620		 mov         r0,r4
  0002c	699b		 ldr         r3,[r3,#0x18]
  0002e	4798		 blx         r3
  00030	e7f8		 b           |$LN5@ActivitySt|
  00032		 |$M15|

			 ENDP  ; |?ActivityStateToSystemState@PowerStateManager@@UAAPBGW4PLATFORM_ACTIVITY_STATE@@@Z|, PowerStateManager::ActivityStateToSystemState

	EXPORT	|??1PowerStateOff@@UAA@XZ|		; PowerStateOff::~PowerStateOff
	IMPORT	|??1PowerState@@UAA@XZ|			; PowerState::~PowerState
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateOff@@UAA@XZ| PROC	; PowerStateOff::~PowerStateOff
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateOff@@UAA@XZ|, PowerStateOff::~PowerStateOff

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateOff::GetState

; 202  :          return Off;

  00000	2009		 movs        r0,#9
  00002		 |$M4|

; 203  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateOff::GetState

	EXPORT	|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@| DCB "o", 0x0, "f", 0x0, "f", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateOff@@UAAPBGXZ| PROC ; PowerStateOff::GetStateString

; 206  :         return STRING_OFF;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@|
  00002		 |$M4|

; 207  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateOff@@UAAPBGXZ|, PowerStateOff::GetStateString

	IMPORT	|?StateValidateRegistry@PowerState@@UAAKKK@Z| ; PowerState::StateValidateRegistry
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateOff@@UAAKKK@Z| PROC ; PowerStateOff::StateValidateRegistry

; 210  :         return PowerState::StateValidateRegistry (4, POWER_STATE_OFF);

  00000	f44f 3200	 mov         r2,#0x20000
  00004	2104		 movs        r1,#4
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateOff@@UAAKKK@Z|, PowerStateOff::StateValidateRegistry

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerState::GetLastNewState

; 159  : 		return m_LastNewState;

  00000	6840		 ldr         r0,[r0,#4]
  00002		 |$M4|

; 160  : 	};

  00002	4770		 bx          lr

			 ENDP  ; |?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerState::GetLastNewState

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z| PROC ; PowerState::SetSystemAPIState

; 163  : 		if (UnknownState != apiState)

  00000	f1b1 3fff	 cmp         r1,#0xFFFFFFFF
  00004	d000		 beq         |$LN1@SetSystemA|

; 164  : 			m_LastNewState = apiState;

  00006	6041		 str         r1,[r0,#4]
  00008		 |$LN1@SetSystemA|

; 165  : 		return m_LastNewState;

  00008	6840		 ldr         r0,[r0,#4]
  0000a		 |$M5|

; 166  : 	}

  0000a	4770		 bx          lr

			 ENDP  ; |?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|, PowerState::SetSystemAPIState

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AppsCanRequestState@PowerState@@UAAHXZ| PROC ; PowerState::AppsCanRequestState

; 173  : 		return FALSE;

  00000	2000		 movs        r0,#0
  00002		 |$M4|

; 174  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?AppsCanRequestState@PowerState@@UAAHXZ|, PowerState::AppsCanRequestState

	EXPORT	|??1PowerStateOn@@UAA@XZ|		; PowerStateOn::~PowerStateOn
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateOn@@UAA@XZ| PROC		; PowerStateOn::~PowerStateOn
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateOn@@UAA@XZ|, PowerStateOn::~PowerStateOn

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateOn@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateOn::GetState

; 236  : 		return On;

  00000	2000		 movs        r0,#0
  00002		 |$M4|

; 237  : 	};

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateOn@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateOn::GetState

	EXPORT	|??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@| DCB "o", 0x0, "n", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateOn@@UAAPBGXZ| PROC ; PowerStateOn::GetStateString

; 240  : 		return STRING_ON;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@|
  00002		 |$M4|

; 241  : 	};

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateOn@@UAAPBGXZ|, PowerStateOn::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateOn@@UAAKKK@Z| PROC ; PowerStateOn::StateValidateRegistry

; 244  : 		return PowerState::StateValidateRegistry (0, POWER_STATE_ON | POWER_STATE_BACKLIGHTON);

  00000	4a01		 ldr         r2,|$LN6@StateValid| ; =0x2010000
  00002	2100		 movs        r1,#0
  00004		 |$M4|
  00004	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|
  00008		 |$LN5@StateValid|
  00008		 |$LN6@StateValid|
  00008	0000 0201	 DCD         0x2010000

			 ENDP  ; |?StateValidateRegistry@PowerStateOn@@UAAKKK@Z|, PowerStateOn::StateValidateRegistry

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AppsCanRequestState@PowerStateOn@@UAAHXZ| PROC ; PowerStateOn::AppsCanRequestState

; 248  : 		return TRUE;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 249  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?AppsCanRequestState@PowerStateOn@@UAAHXZ|, PowerStateOn::AppsCanRequestState

	EXPORT	|??1PowerStateUserIdle@@UAA@XZ|		; PowerStateUserIdle::~PowerStateUserIdle
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateUserIdle@@UAA@XZ| PROC	; PowerStateUserIdle::~PowerStateUserIdle
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateUserIdle@@UAA@XZ|, PowerStateUserIdle::~PowerStateUserIdle

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateUserIdle@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateUserIdle::GetState

; 272  : 		return UserIdle;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 273  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateUserIdle@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateUserIdle::GetState

	EXPORT	|??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@| DCB "u"
	DCB	0x0, "s", 0x0, "e", 0x0, "r", 0x0, "i", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateUserIdle@@UAAPBGXZ| PROC ; PowerStateUserIdle::GetStateString

; 276  : 		return STRING_USERIDLE;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|
  00002		 |$M4|

; 277  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateUserIdle@@UAAPBGXZ|, PowerStateUserIdle::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateUserIdle@@UAAKKK@Z| PROC ; PowerStateUserIdle::StateValidateRegistry

; 280  : 		return PowerState::StateValidateRegistry (2, POWER_STATE_USERIDLE);

  00000	f04f 7280	 mov         r2,#0x1000000
  00004	2102		 movs        r1,#2
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateUserIdle@@UAAKKK@Z|, PowerStateUserIdle::StateValidateRegistry

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AppsCanRequestState@PowerStateUserIdle@@UAAHXZ| PROC ; PowerStateUserIdle::AppsCanRequestState

; 284  : 		return TRUE;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 285  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?AppsCanRequestState@PowerStateUserIdle@@UAAHXZ|, PowerStateUserIdle::AppsCanRequestState

	EXPORT	|??1PowerStateUnattended@@UAA@XZ|	; PowerStateUnattended::~PowerStateUnattended
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateUnattended@@UAA@XZ| PROC	; PowerStateUnattended::~PowerStateUnattended
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateUnattended@@UAA@XZ|, PowerStateUnattended::~PowerStateUnattended

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateUnattended::GetState

; 311  : 		return Unattended;

  00000	2002		 movs        r0,#2
  00002		 |$M4|

; 312  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateUnattended::GetState

	EXPORT	|??_C@_1BG@PGILDLLG@?$AAu?$AAn?$AAa?$AAt?$AAt?$AAe?$AAn?$AAd?$AAe?$AAd?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@PGILDLLG@?$AAu?$AAn?$AAa?$AAt?$AAt?$AAe?$AAn?$AAd?$AAe?$AAd?$AA?$AA@| DCB "u"
	DCB	0x0, "n", 0x0, "a", 0x0, "t", 0x0, "t", 0x0, "e", 0x0, "n"
	DCB	0x0, "d", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateUnattended@@UAAPBGXZ| PROC ; PowerStateUnattended::GetStateString

; 315  : 		return STRING_UNATTENDED;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1BG@PGILDLLG@?$AAu?$AAn?$AAa?$AAt?$AAt?$AAe?$AAn?$AAd?$AAe?$AAd?$AA?$AA@|
  00002		 |$M4|

; 316  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1BG@PGILDLLG@?$AAu?$AAn?$AAa?$AAt?$AAt?$AAe?$AAn?$AAd?$AAe?$AAd?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateUnattended@@UAAPBGXZ|, PowerStateUnattended::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateUnattended@@UAAKKK@Z| PROC ; PowerStateUnattended::StateValidateRegistry

; 319  : 		return PowerState::StateValidateRegistry (4, POWER_STATE_UNATTENDED);

  00000	f44f 0280	 mov         r2,#0x400000
  00004	2104		 movs        r1,#4
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateUnattended@@UAAKKK@Z|, PowerStateUnattended::StateValidateRegistry

	EXPORT	|??1PowerStateResuming@@UAA@XZ|		; PowerStateResuming::~PowerStateResuming
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateResuming@@UAA@XZ| PROC	; PowerStateResuming::~PowerStateResuming
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateResuming@@UAA@XZ|, PowerStateResuming::~PowerStateResuming

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateResuming@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateResuming::GetState

; 343  : 		return Resuming;

  00000	2003		 movs        r0,#3
  00002		 |$M4|

; 344  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateResuming@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateResuming::GetState

	EXPORT	|??_C@_1BC@ECBFGKFC@?$AAr?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@ECBFGKFC@?$AAr?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AA?$AA@| DCB "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateResuming@@UAAPBGXZ| PROC ; PowerStateResuming::GetStateString

; 347  : 		return STRING_RESUMING;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1BC@ECBFGKFC@?$AAr?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AA?$AA@|
  00002		 |$M4|

; 348  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1BC@ECBFGKFC@?$AAr?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateResuming@@UAAPBGXZ|, PowerStateResuming::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateResuming@@UAAKKK@Z| PROC ; PowerStateResuming::StateValidateRegistry

; 351  : 		return PowerState::StateValidateRegistry (4, 0);

  00000	2200		 movs        r2,#0
  00002	2104		 movs        r1,#4
  00004		 |$M4|
  00004	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateResuming@@UAAKKK@Z|, PowerStateResuming::StateValidateRegistry

	EXPORT	|??1PowerStateSuspend@@UAA@XZ|		; PowerStateSuspend::~PowerStateSuspend
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateSuspend@@UAA@XZ| PROC	; PowerStateSuspend::~PowerStateSuspend
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateSuspend@@UAA@XZ|, PowerStateSuspend::~PowerStateSuspend

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?WaitForEvent@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| PROC ; PowerStateSuspend::WaitForEvent

; 374  : 		// Suspend is no wait
; 375  : 		return NoActivity;

  00000	2000		 movs        r0,#0
  00002		 |$M4|

; 376  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?WaitForEvent@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|, PowerStateSuspend::WaitForEvent

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateSuspend::GetState

; 379  : 		return Suspend;

  00000	2004		 movs        r0,#4
  00002		 |$M4|

; 380  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateSuspend::GetState

	EXPORT	|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| DCB "s", 0x0
	DCB	"u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateSuspend@@UAAPBGXZ| PROC ; PowerStateSuspend::GetStateString

; 383  : 		return STRING_SUSPEND;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  00002		 |$M4|

; 384  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateSuspend@@UAAPBGXZ|, PowerStateSuspend::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateSuspend@@UAAKKK@Z| PROC ; PowerStateSuspend::StateValidateRegistry

; 387  : 		return PowerState::StateValidateRegistry (3, POWER_STATE_SUSPEND);

  00000	f44f 1200	 mov         r2,#0x200000
  00004	2103		 movs        r1,#3
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateSuspend@@UAAKKK@Z|, PowerStateSuspend::StateValidateRegistry

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AppsCanRequestState@PowerStateSuspend@@UAAHXZ| PROC ; PowerStateSuspend::AppsCanRequestState

; 391  : 		return TRUE;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 392  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?AppsCanRequestState@PowerStateSuspend@@UAAHXZ|, PowerStateSuspend::AppsCanRequestState

	EXPORT	|??1PowerStateScreenOff@@UAA@XZ|	; PowerStateScreenOff::~PowerStateScreenOff
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateScreenOff@@UAA@XZ| PROC	; PowerStateScreenOff::~PowerStateScreenOff
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateScreenOff@@UAA@XZ|, PowerStateScreenOff::~PowerStateScreenOff

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateScreenOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateScreenOff::GetState

; 415  : 		return ScreenOff;

  00000	2005		 movs        r0,#5
  00002		 |$M4|

; 416  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateScreenOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateScreenOff::GetState

	EXPORT	|??_C@_1BE@HLEAMJNI@?$AAs?$AAc?$AAr?$AAe?$AAe?$AAn?$AAo?$AAf?$AAf?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@HLEAMJNI@?$AAs?$AAc?$AAr?$AAe?$AAe?$AAn?$AAo?$AAf?$AAf?$AA?$AA@| DCB "s"
	DCB	0x0, "c", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, "o"
	DCB	0x0, "f", 0x0, "f", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateScreenOff@@UAAPBGXZ| PROC ; PowerStateScreenOff::GetStateString

; 419  : 		return STRING_SCREENOFF;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1BE@HLEAMJNI@?$AAs?$AAc?$AAr?$AAe?$AAe?$AAn?$AAo?$AAf?$AAf?$AA?$AA@|
  00002		 |$M4|

; 420  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1BE@HLEAMJNI@?$AAs?$AAc?$AAr?$AAe?$AAe?$AAn?$AAo?$AAf?$AAf?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateScreenOff@@UAAPBGXZ|, PowerStateScreenOff::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateScreenOff@@UAAKKK@Z| PROC ; PowerStateScreenOff::StateValidateRegistry

; 423  : 		return PowerState::StateValidateRegistry (4, POWER_STATE_IDLE);

  00000	f44f 1280	 mov         r2,#0x100000
  00004	2104		 movs        r1,#4
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateScreenOff@@UAAKKK@Z|, PowerStateScreenOff::StateValidateRegistry

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AppsCanRequestState@PowerStateScreenOff@@UAAHXZ| PROC ; PowerStateScreenOff::AppsCanRequestState

; 427  : 		return TRUE;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 428  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?AppsCanRequestState@PowerStateScreenOff@@UAAHXZ|, PowerStateScreenOff::AppsCanRequestState

	EXPORT	|??1PowerStateBacklightOff@@UAA@XZ|	; PowerStateBacklightOff::~PowerStateBacklightOff
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateBacklightOff@@UAA@XZ| PROC ; PowerStateBacklightOff::~PowerStateBacklightOff
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateBacklightOff@@UAA@XZ|, PowerStateBacklightOff::~PowerStateBacklightOff

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateBacklightOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateBacklightOff::GetState

; 451  : 		return BacklightOff;

  00000	2006		 movs        r0,#6
  00002		 |$M4|

; 452  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateBacklightOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateBacklightOff::GetState

	EXPORT	|??_C@_1BK@NPGJBFII@?$AAb?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAo?$AAf?$AAf?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@NPGJBFII@?$AAb?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAo?$AAf?$AAf?$AA?$AA@| DCB "b"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i", 0x0, "g"
	DCB	0x0, "h", 0x0, "t", 0x0, "o", 0x0, "f", 0x0, "f", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateBacklightOff@@UAAPBGXZ| PROC ; PowerStateBacklightOff::GetStateString

; 455  : 		return STRING_BACKLIGHTOFF;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1BK@NPGJBFII@?$AAb?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAo?$AAf?$AAf?$AA?$AA@|
  00002		 |$M4|

; 456  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1BK@NPGJBFII@?$AAb?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAo?$AAf?$AAf?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateBacklightOff@@UAAPBGXZ|, PowerStateBacklightOff::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateBacklightOff@@UAAKKK@Z| PROC ; PowerStateBacklightOff::StateValidateRegistry

; 459  : 		return PowerState::StateValidateRegistry (0, POWER_STATE_ON);

  00000	f44f 3280	 mov         r2,#0x10000
  00004	2100		 movs        r1,#0
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateBacklightOff@@UAAKKK@Z|, PowerStateBacklightOff::StateValidateRegistry

	EXPORT	|??1PowerStateColdReboot@@UAA@XZ|	; PowerStateColdReboot::~PowerStateColdReboot
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateColdReboot@@UAA@XZ| PROC	; PowerStateColdReboot::~PowerStateColdReboot
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateColdReboot@@UAA@XZ|, PowerStateColdReboot::~PowerStateColdReboot

	IMPORT	|PmSetSystemPowerState_I|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?EnterState@PowerStateColdReboot@@UAAXXZ| DCD imagerel |$LN6@EnterState|
	DCD	0x3f6039
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?EnterState@PowerStateColdReboot@@UAAXXZ| PROC ; PowerStateColdReboot::EnterState

; 479  : 	{

  00000		 |$LN6@EnterState|
  00000	e92d 4800	 push        {r11,lr}
  00004	46eb		 mov         r11,sp
  00006		 |$M4|
  00006	4603		 mov         r3,r0

; 480  : 		PmSetSystemPowerState_I (GetStateString (), 0, 0, TRUE);

  00008	681b		 ldr         r3,[r3]
  0000a	699b		 ldr         r3,[r3,#0x18]
  0000c	4798		 blx         r3
  0000e	2301		 movs        r3,#1
  00010	2200		 movs        r2,#0
  00012	2100		 movs        r1,#0
  00014	f000 f800	 bl          PmSetSystemPowerState_I
  00018		 |$M7|

; 481  : 		// Because it wakeup by wakeup source So it automatic enter Resuming State.
; 482  : 	}

  00018	e8bd 8800	 pop         {r11,pc}
  0001c		 |$M5|

			 ENDP  ; |?EnterState@PowerStateColdReboot@@UAAXXZ|, PowerStateColdReboot::EnterState

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?WaitForEvent@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| PROC ; PowerStateColdReboot::WaitForEvent

; 487  : 		// Suspend is no wait
; 488  : 		return NoActivity;

  00000	2000		 movs        r0,#0
  00002		 |$M4|

; 489  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?WaitForEvent@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|, PowerStateColdReboot::WaitForEvent

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateColdReboot::GetState

; 492  : 		return ColdReboot;

  00000	2007		 movs        r0,#7
  00002		 |$M4|

; 493  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateColdReboot::GetState

	EXPORT	|??_C@_1BG@BDHACCND@?$AAc?$AAo?$AAl?$AAd?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@BDHACCND@?$AAc?$AAo?$AAl?$AAd?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| DCB "c"
	DCB	0x0, "o", 0x0, "l", 0x0, "d", 0x0, "r", 0x0, "e", 0x0, "b"
	DCB	0x0, "o", 0x0, "o", 0x0, "t", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateColdReboot@@UAAPBGXZ| PROC ; PowerStateColdReboot::GetStateString

; 500  : 		return STRING_ColdReboot;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1BG@BDHACCND@?$AAc?$AAo?$AAl?$AAd?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@|
  00002		 |$M4|

; 501  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1BG@BDHACCND@?$AAc?$AAo?$AAl?$AAd?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateColdReboot@@UAAPBGXZ|, PowerStateColdReboot::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateColdReboot@@UAAKKK@Z| PROC ; PowerStateColdReboot::StateValidateRegistry

; 504  : 		return PowerState::StateValidateRegistry (4, POWER_STATE_RESET);

  00000	f44f 0200	 mov         r2,#0x800000
  00004	2104		 movs        r1,#4
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateColdReboot@@UAAKKK@Z|, PowerStateColdReboot::StateValidateRegistry

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetLastNewState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateColdReboot::GetLastNewState

; 496  : 		return ColdReboot;;

  00000	2007		 movs        r0,#7
  00002		 |$M4|

; 497  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetLastNewState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateColdReboot::GetLastNewState

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AppsCanRequestState@PowerStateColdReboot@@UAAHXZ| PROC ; PowerStateColdReboot::AppsCanRequestState

; 508  : 		return TRUE;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 509  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?AppsCanRequestState@PowerStateColdReboot@@UAAHXZ|, PowerStateColdReboot::AppsCanRequestState

	EXPORT	|??1PowerStateReboot@@UAA@XZ|		; PowerStateReboot::~PowerStateReboot
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateReboot@@UAA@XZ| PROC	; PowerStateReboot::~PowerStateReboot
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateReboot@@UAA@XZ|, PowerStateReboot::~PowerStateReboot


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?EnterState@PowerStateReboot@@UAAXXZ| DCD imagerel |$LN6@EnterState|
	DCD	0x3f6039
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?EnterState@PowerStateReboot@@UAAXXZ| PROC ; PowerStateReboot::EnterState

; 527  : 	{

  00000		 |$LN6@EnterState|
  00000	e92d 4800	 push        {r11,lr}
  00004	46eb		 mov         r11,sp
  00006		 |$M4|
  00006	4603		 mov         r3,r0

; 528  : 		PmSetSystemPowerState_I (GetStateString (), 0, 0, TRUE);

  00008	681b		 ldr         r3,[r3]
  0000a	699b		 ldr         r3,[r3,#0x18]
  0000c	4798		 blx         r3
  0000e	2301		 movs        r3,#1
  00010	2200		 movs        r2,#0
  00012	2100		 movs        r1,#0
  00014	f000 f800	 bl          PmSetSystemPowerState_I
  00018		 |$M7|

; 529  : 		// Because it wakeup by wakeup source So it automatic enter Resuming State.
; 530  : 	}

  00018	e8bd 8800	 pop         {r11,pc}
  0001c		 |$M5|

			 ENDP  ; |?EnterState@PowerStateReboot@@UAAXXZ|, PowerStateReboot::EnterState

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?WaitForEvent@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| PROC ; PowerStateReboot::WaitForEvent

; 535  : 		// Suspend is no wait
; 536  : 		return NoActivity;

  00000	2000		 movs        r0,#0
  00002		 |$M4|

; 537  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?WaitForEvent@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|, PowerStateReboot::WaitForEvent

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateReboot::GetState

; 540  : 		return Reboot;

  00000	2008		 movs        r0,#8
  00002		 |$M4|

; 541  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateReboot::GetState

	EXPORT	|??_C@_1O@FEJCAGNG@?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@FEJCAGNG@?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| DCB "r", 0x0, "e"
	DCB	0x0, "b", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateReboot@@UAAPBGXZ| PROC ; PowerStateReboot::GetStateString

; 548  : 		return STRING_Reboot;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1O@FEJCAGNG@?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@|
  00002		 |$M4|

; 549  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1O@FEJCAGNG@?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateReboot@@UAAPBGXZ|, PowerStateReboot::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateReboot@@UAAKKK@Z| PROC ; PowerStateReboot::StateValidateRegistry

; 552  : 		return PowerState::StateValidateRegistry (4, POWER_STATE_RESET);

  00000	f44f 0200	 mov         r2,#0x800000
  00004	2104		 movs        r1,#4
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateReboot@@UAAKKK@Z|, PowerStateReboot::StateValidateRegistry

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetLastNewState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateReboot::GetLastNewState

; 544  : 		return Reboot;

  00000	2008		 movs        r0,#8
  00002		 |$M4|

; 545  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetLastNewState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateReboot::GetLastNewState

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AppsCanRequestState@PowerStateReboot@@UAAHXZ| PROC ; PowerStateReboot::AppsCanRequestState

; 556  : 		return TRUE;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 557  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?AppsCanRequestState@PowerStateReboot@@UAAHXZ|, PowerStateReboot::AppsCanRequestState

	EXPORT	|?CreatePowerStateList@PowerStateManager@@UAAHXZ| ; PowerStateManager::CreatePowerStateList
	IMPORT	|??2@YAPAXI@Z|				; operator new

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?CreatePowerStateList@PowerStateManager@@UAAHXZ| DCD imagerel |$LN60@CreatePowe|
	DCD	imagerel |$unwind2$?CreatePowerStateList@PowerStateManager@@UAAHXZ|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?CreatePowerStateList@PowerStateManager@@UAAHXZ| DCD 0x108000ca
	DCD	0x2e000c6
	DCD	0xffdffc05
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?CreatePowerStateList@PowerStateManager@@UAAHXZ| PROC ; PowerStateManager::CreatePowerStateList

; 157  : {

  00000		 |$LN60@CreatePowe|
  00000	e92d 4ff0	 push        {r4-r11,lr}
  00004	f20d 0b1c	 addw        r11,sp,#0x1C
  00008	b085		 sub         sp,sp,#0x14
  0000a		 |$M58|

; 158  :     if (m_pPowerStateList == NULL ) {

  0000a	f8d0 327c	 ldr         r3,[r0,#0x27C]
  0000e	4604		 mov         r4,r0
  00010	2b00		 cmp         r3,#0
  00012	f040 80ae	 bne         |$LN55@CreatePowe|

; 169  :             new PowerStateOff (this))))))))));

  00016	f44f 708c	 mov         r0,#0x118
  0001a	f000 f800	 bl          |??2@YAPAXI@Z|
  0001e	4605		 mov         r5,r0
  00020	2d00		 cmp         r5,#0
  00022	f000 80a2	 beq         |$LN27@CreatePowe|
  00026	f44f 708c	 mov         r0,#0x118
  0002a	f000 f800	 bl          |??2@YAPAXI@Z|
  0002e	4606		 mov         r6,r0
  00030	2e00		 cmp         r6,#0
  00032	f000 8091	 beq         |$LN25@CreatePowe|
  00036	f44f 708c	 mov         r0,#0x118
  0003a	f000 f800	 bl          |??2@YAPAXI@Z|
  0003e	4607		 mov         r7,r0
  00040	2f00		 cmp         r7,#0
  00042	f000 8080	 beq         |$LN23@CreatePowe|
  00046	f44f 708c	 mov         r0,#0x118
  0004a	f000 f800	 bl          |??2@YAPAXI@Z|
  0004e	4680		 mov         r8,r0
  00050	2800		 cmp         r0,#0
  00052	d06e		 beq         |$LN21@CreatePowe|
  00054	f44f 708c	 mov         r0,#0x118
  00058	f000 f800	 bl          |??2@YAPAXI@Z|
  0005c	4681		 mov         r9,r0
  0005e	2800		 cmp         r0,#0
  00060	d05c		 beq         |$LN19@CreatePowe|
  00062	f44f 708c	 mov         r0,#0x118
  00066	f000 f800	 bl          |??2@YAPAXI@Z|
  0006a	4682		 mov         r10,r0
  0006c	2800		 cmp         r0,#0
  0006e	d04a		 beq         |$LN17@CreatePowe|
  00070	f44f 708c	 mov         r0,#0x118
  00074	f000 f800	 bl          |??2@YAPAXI@Z|
  00078	9002		 str         r0,[sp,#8]
  0007a	b3d0		 cbz         r0,|$LN15@CreatePowe|
  0007c	f44f 708c	 mov         r0,#0x118
  00080	f000 f800	 bl          |??2@YAPAXI@Z|
  00084	9001		 str         r0,[sp,#4]
  00086	b348		 cbz         r0,|$LN13@CreatePowe|
  00088	f44f 708c	 mov         r0,#0x118
  0008c	f000 f800	 bl          |??2@YAPAXI@Z|
  00090	9000		 str         r0,[sp]
  00092	b1c0		 cbz         r0,|$LN11@CreatePowe|
  00094	f44f 708c	 mov         r0,#0x118
  00098	f000 f800	 bl          |??2@YAPAXI@Z|
  0009c	4603		 mov         r3,r0
  0009e	9303		 str         r3,[sp,#0xC]
  000a0	b13b		 cbz         r3,|$LN9@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 194  :     PowerStateOff (PowerStateManager * pPwrStateMgr, PowerState * pNextPowerState = NULL)

  000a2	2200		 movs        r2,#0
  000a4	4621		 mov         r1,r4
  000a6	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  000aa	4b43		 ldr         r3,|$LN72@CreatePowe| ; =|??_7PowerStateOff@@6B@|
  000ac	9a03		 ldr         r2,[sp,#0xC]
  000ae	6013		 str         r3,[r2]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  000b0	e000		 b           |$LN10@CreatePowe|
  000b2		 |$LN9@CreatePowe|
  000b2	2200		 movs        r2,#0
  000b4		 |$LN10@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 523  : 	{

  000b4	9800		 ldr         r0,[sp]
  000b6	4621		 mov         r1,r4
  000b8	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  000bc	4b3d		 ldr         r3,|$LN71@CreatePowe| ; =|??_7PowerStateReboot@@6B@|
  000be	9a00		 ldr         r2,[sp]
  000c0	6013		 str         r3,[r2]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  000c2	4613		 mov         r3,r2
  000c4	e000		 b           |$LN12@CreatePowe|
  000c6		 |$LN11@CreatePowe|
  000c6	2300		 movs        r3,#0
  000c8		 |$LN12@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 475  : 	{

  000c8	9801		 ldr         r0,[sp,#4]
  000ca	461a		 mov         r2,r3
  000cc	4621		 mov         r1,r4
  000ce	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  000d2	4b37		 ldr         r3,|$LN70@CreatePowe| ; =|??_7PowerStateColdReboot@@6B@|
  000d4	9a01		 ldr         r2,[sp,#4]
  000d6	6013		 str         r3,[r2]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  000d8	4613		 mov         r3,r2
  000da	e000		 b           |$LN14@CreatePowe|
  000dc		 |$LN13@CreatePowe|
  000dc	2300		 movs        r3,#0
  000de		 |$LN14@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 366  : 	{

  000de	9802		 ldr         r0,[sp,#8]
  000e0	461a		 mov         r2,r3
  000e2	4621		 mov         r1,r4
  000e4	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  000e8	4b30		 ldr         r3,|$LN69@CreatePowe| ; =|??_7PowerStateSuspend@@6B@|
  000ea	9a02		 ldr         r2,[sp,#8]
  000ec	6013		 str         r3,[r2]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  000ee	4613		 mov         r3,r2
  000f0	e000		 b           |$LN16@CreatePowe|
  000f2		 |$LN15@CreatePowe|
  000f2	2300		 movs        r3,#0
  000f4		 |$LN16@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 334  : 	{

  000f4	461a		 mov         r2,r3
  000f6	4621		 mov         r1,r4
  000f8	4650		 mov         r0,r10
  000fa	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  000fe	4b2a		 ldr         r3,|$LN68@CreatePowe| ; =|??_7PowerStateResuming@@6B@|
  00100	f8ca 3000	 str         r3,[r10]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  00104	e001		 b           |$LN18@CreatePowe|
  00106		 |$LN17@CreatePowe|
  00106	f04f 0a00	 mov         r10,#0
  0010a		 |$LN18@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 299  : 	{

  0010a	4652		 mov         r2,r10
  0010c	4621		 mov         r1,r4
  0010e	4648		 mov         r0,r9
  00110	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  00114	4b23		 ldr         r3,|$LN67@CreatePowe| ; =|??_7PowerStateUnattended@@6B@|
  00116	f8c9 3000	 str         r3,[r9]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  0011a	e001		 b           |$LN20@CreatePowe|
  0011c		 |$LN19@CreatePowe|
  0011c	f04f 0900	 mov         r9,#0
  00120		 |$LN20@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 406  : 	{

  00120	464a		 mov         r2,r9
  00122	4621		 mov         r1,r4
  00124	4640		 mov         r0,r8
  00126	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0012a	4b1d		 ldr         r3,|$LN66@CreatePowe| ; =|??_7PowerStateScreenOff@@6B@|
  0012c	f8c8 3000	 str         r3,[r8]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  00130	e001		 b           |$LN22@CreatePowe|
  00132		 |$LN21@CreatePowe|
  00132	f04f 0800	 mov         r8,#0
  00136		 |$LN22@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 442  : 	{

  00136	4642		 mov         r2,r8
  00138	4621		 mov         r1,r4
  0013a	4638		 mov         r0,r7
  0013c	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  00140	4b16		 ldr         r3,|$LN65@CreatePowe| ; =|??_7PowerStateBacklightOff@@6B@|
  00142	603b		 str         r3,[r7]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  00144	e000		 b           |$LN24@CreatePowe|
  00146		 |$LN23@CreatePowe|
  00146	2700		 movs        r7,#0
  00148		 |$LN24@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 263  : 	{

  00148	463a		 mov         r2,r7
  0014a	4621		 mov         r1,r4
  0014c	4630		 mov         r0,r6
  0014e	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  00152	4b11		 ldr         r3,|$LN64@CreatePowe| ; =|??_7PowerStateUserIdle@@6B@|
  00154	6033		 str         r3,[r6]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  00156	e000		 b           |$LN26@CreatePowe|
  00158		 |$LN25@CreatePowe|
  00158	2600		 movs        r6,#0
  0015a		 |$LN26@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 227  : 	{

  0015a	4632		 mov         r2,r6
  0015c	4621		 mov         r1,r4
  0015e	4628		 mov         r0,r5
  00160	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  00164	4b0b		 ldr         r3,|$LN63@CreatePowe| ; =|??_7PowerStateOn@@6B@|
  00166	602b		 str         r3,[r5]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  00168	e000		 b           |$LN28@CreatePowe|
  0016a		 |$LN27@CreatePowe|
  0016a	2500		 movs        r5,#0
  0016c		 |$LN28@CreatePowe|
  0016c	f8c4 527c	 str         r5,[r4,#0x27C]

; 170  :     }
; 171  :     if (m_pPowerStateList != NULL) {

  00170	b175		 cbz         r5,|$LN52@CreatePowe|
  00172		 |$LN55@CreatePowe|

; 172  :         PowerState * pCurState = m_pPowerStateList;

  00172	f8d4 427c	 ldr         r4,[r4,#0x27C]
  00176	e005		 b           |$LN56@CreatePowe|
  00178		 |$LL4@CreatePowe|

; 174  :             if (!pCurState->Init()) {

  00178	6823		 ldr         r3,[r4]
  0017a	4620		 mov         r0,r4
  0017c	689b		 ldr         r3,[r3,#8]
  0017e	4798		 blx         r3
  00180	b130		 cbz         r0,|$LN52@CreatePowe|

; 177  :             }
; 178  :             pCurState = pCurState->GetNextPowerState();

  00182	6964		 ldr         r4,[r4,#0x14]
  00184		 |$LN56@CreatePowe|

; 173  :         while (pCurState) {

  00184	2c00		 cmp         r4,#0
  00186	d1f7		 bne         |$LL4@CreatePowe|

; 179  :         }
; 180  :         return TRUE;

  00188	2001		 movs        r0,#1
  0018a		 |$LN1@CreatePowe|
  0018a		 |$M61|

; 181  :     }
; 182  :     else
; 183  :         return FALSE;
; 184  : }

  0018a	b005		 add         sp,sp,#0x14
  0018c	e8bd 8ff0	 pop         {r4-r11,pc}
  00190		 |$LN52@CreatePowe|

; 175  :                 ASSERT(FALSE);
; 176  :                 return FALSE;

  00190	2000		 movs        r0,#0
  00192	e7fa		 b           |$LN1@CreatePowe|
  00194		 |$LN62@CreatePowe|
  00194		 |$LN63@CreatePowe|
  00194	0000 0000	 DCD         |??_7PowerStateOn@@6B@|
  00198		 |$LN64@CreatePowe|
  00198	0000 0000	 DCD         |??_7PowerStateUserIdle@@6B@|
  0019c		 |$LN65@CreatePowe|
  0019c	0000 0000	 DCD         |??_7PowerStateBacklightOff@@6B@|
  001a0		 |$LN66@CreatePowe|
  001a0	0000 0000	 DCD         |??_7PowerStateScreenOff@@6B@|
  001a4		 |$LN67@CreatePowe|
  001a4	0000 0000	 DCD         |??_7PowerStateUnattended@@6B@|
  001a8		 |$LN68@CreatePowe|
  001a8	0000 0000	 DCD         |??_7PowerStateResuming@@6B@|
  001ac		 |$LN69@CreatePowe|
  001ac	0000 0000	 DCD         |??_7PowerStateSuspend@@6B@|
  001b0		 |$LN70@CreatePowe|
  001b0	0000 0000	 DCD         |??_7PowerStateColdReboot@@6B@|
  001b4		 |$LN71@CreatePowe|
  001b4	0000 0000	 DCD         |??_7PowerStateReboot@@6B@|
  001b8		 |$LN72@CreatePowe|
  001b8	0000 0000	 DCD         |??_7PowerStateOff@@6B@|
  001bc		 |$M59|

			 ENDP  ; |?CreatePowerStateList@PowerStateManager@@UAAHXZ|, PowerStateManager::CreatePowerStateList

	EXPORT	|?GetEventHandle@PowerStateManager@@QAAPAXK@Z| ; PowerStateManager::GetEventHandle
	IMPORT	|?ghevRestartTimers@@3PAXA|		; ghevRestartTimers
	IMPORT	|?ghevReloadActivityTimeouts@@3PAXA|	; ghevReloadActivityTimeouts
	IMPORT	|ghevPmShutdown|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetEventHandle@PowerStateManager@@QAAPAXK@Z| PROC ; PowerStateManager::GetEventHandle

; 406  : 	switch (dwIndex)

  00000	b1b9		 cbz         r1,|$LN6@GetEventHa|
  00002	2901		 cmp         r1,#1
  00004	d013		 beq         |$LN5@GetEventHa|
  00006	2902		 cmp         r1,#2
  00008	d00e		 beq         |$LN4@GetEventHa|
  0000a	2903		 cmp         r1,#3
  0000c	d00a		 beq         |$LN3@GetEventHa|
  0000e	2906		 cmp         r1,#6
  00010	d006		 beq         |$LN2@GetEventHa|
  00012	2907		 cmp         r1,#7
  00014	d001		 beq         |$LN1@GetEventHa|

; 420  : 	}
; 421  : 	return NULL;

  00016	2000		 movs        r0,#0
  00018		 |$M15|

; 422  : }

  00018	4770		 bx          lr
  0001a		 |$LN1@GetEventHa|

; 418  : 	  case PM_BOOTPHASE2_EVENT:
; 419  : 		  return m_hevBootPhase2;

  0001a	f8d0 0238	 ldr         r0,[r0,#0x238]
  0001e		 |$M16|

; 422  : }

  0001e	4770		 bx          lr
  00020		 |$LN2@GetEventHa|

; 416  : 	  case PM_SYSTEM_API_EVENT:
; 417  : 		  return GetAPISignalHandle ();

  00020	6a80		 ldr         r0,[r0,#0x28]
  00022		 |$M17|

; 422  : }

  00022	4770		 bx          lr
  00024		 |$LN3@GetEventHa|

; 414  : 	  case PM_RESTART_TIMER_EVENT:
; 415  : 		  return ghevRestartTimers;

  00024	4b06		 ldr         r3,|$LN23@GetEventHa| ; =|?ghevRestartTimers@@3PAXA|
  00026	e005		 b           |$LN13@GetEventHa|
  00028		 |$LN4@GetEventHa|

; 412  : 	  case PM_MSGQUEUE_EVENT:
; 413  : 		  return m_hqNotify;

  00028	f8d0 024c	 ldr         r0,[r0,#0x24C]
  0002c		 |$M18|

; 422  : }

  0002c	4770		 bx          lr
  0002e		 |$LN5@GetEventHa|

; 410  : 	  case PM_RELOAD_ACTIVITY_TIMEOUTS_EVENT:
; 411  : 		  return ghevReloadActivityTimeouts;

  0002e	4b03		 ldr         r3,|$LN22@GetEventHa| ; =|?ghevReloadActivityTimeouts@@3PAXA|
  00030	e000		 b           |$LN13@GetEventHa|
  00032		 |$LN6@GetEventHa|

; 407  : 	{
; 408  : 	  case PM_SHUTDOWN_EVENT:
; 409  : 		  return ghevPmShutdown;

  00032	4b01		 ldr         r3,|$LN21@GetEventHa| ; =|ghevPmShutdown|
  00034		 |$LN13@GetEventHa|
  00034	6818		 ldr         r0,[r3]
  00036		 |$M19|

; 422  : }

  00036	4770		 bx          lr
  00038		 |$LN20@GetEventHa|
  00038		 |$LN21@GetEventHa|
  00038	0000 0000	 DCD         |ghevPmShutdown|
  0003c		 |$LN22@GetEventHa|
  0003c	0000 0000	 DCD         |?ghevReloadActivityTimeouts@@3PAXA|
  00040		 |$LN23@GetEventHa|
  00040	0000 0000	 DCD         |?ghevRestartTimers@@3PAXA|

			 ENDP  ; |?GetEventHandle@PowerStateManager@@QAAPAXK@Z|, PowerStateManager::GetEventHandle

	EXPORT	|?ResetSystemIdleTimeTimeout@PowerStateManager@@UAAXH@Z| ; PowerStateManager::ResetSystemIdleTimeTimeout
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?ResetSystemIdleTimeTimeout@PowerStateManager@@UAAXH@Z| PROC ; PowerStateManager::ResetSystemIdleTimeTimeout

; 316  : 	m_dwCurSuspendTimeout = (fIdle ? GetSuspendTimeOut () : INFINITE);

  00000	f06f 0200	 mvn         r2,#0
  00004	b141		 cbz         r1,|$LN4@ResetSyste|

; 320  : 
; 321  : void
; 322  : PowerStateManager::SubtractTimeout (DWORD dwTicks)
; 323  : {
; 324  : 	if (m_dwCurSuspendTimeout != INFINITE)
; 325  : 		m_dwCurSuspendTimeout =
; 326  : 			(m_dwCurSuspendTimeout > dwTicks ? m_dwCurSuspendTimeout - dwTicks : 0);
; 327  : 	if (m_dwCurResumingSuspendTimeout != INFINITE)
; 328  : 		m_dwCurResumingSuspendTimeout =
; 329  : 			(m_dwCurResumingSuspendTimeout > dwTicks ? m_dwCurResumingSuspendTimeout - dwTicks : 0);
; 330  : 	if (m_dwCurBacklightTimeout != INFINITE)
; 331  : 		m_dwCurBacklightTimeout =
; 332  : 			(m_dwCurBacklightTimeout > dwTicks ? m_dwCurBacklightTimeout - dwTicks : 0);
; 333  : 	if (m_dwCurUserIdleTimeout != INFINITE)
; 334  : 		m_dwCurUserIdleTimeout =
; 335  : 			(m_dwCurUserIdleTimeout > dwTicks ? m_dwCurUserIdleTimeout - dwTicks : 0);
; 336  : }
; 337  : 
; 338  : DWORD
; 339  : PowerStateManager::GetSmallestTimeout (PTIMEOUT_ITEM pTimeoutItem)
; 340  : {
; 341  : 	DWORD dwReturn = INFINITE;
; 342  : 	TIMEOUT_ITEM activeEvent = NoTimeoutItem;
; 343  : 
; 344  : 	if (dwReturn > m_dwCurSuspendTimeout)
; 345  : 	{
; 346  : 		dwReturn = m_dwCurSuspendTimeout;
; 347  : 		activeEvent = SuspendTimeout;
; 348  : 	}
; 349  : 	if (dwReturn > m_dwCurResumingSuspendTimeout)
; 350  : 	{
; 351  : 		dwReturn = m_dwCurResumingSuspendTimeout;
; 352  : 		activeEvent = ResumingSuspendTimeout;
; 353  : 	}
; 354  : 	if (dwReturn > m_dwCurBacklightTimeout)
; 355  : 	{
; 356  : 		dwReturn = m_dwCurBacklightTimeout;
; 357  : 		activeEvent = BacklightTimeout;
; 358  : 	}
; 359  : 	if (dwReturn > m_dwCurUserIdleTimeout)
; 360  : 	{
; 361  : 		dwReturn = m_dwCurUserIdleTimeout;
; 362  : 		activeEvent = UserActivityTimeout;
; 363  : 	}
; 364  : 	if (pTimeoutItem)
; 365  : 	{
; 366  : 		*pTimeoutItem = activeEvent;
; 367  : 	}
; 368  : 	return dwReturn;
; 369  : }
; 370  : 
; 371  : LPCTSTR
; 372  : PowerStateManager::ActivityStateToSystemState (PLATFORM_ACTIVITY_STATE platActiveState)
; 373  : {
; 374  : 	PowerState *curState = m_pPowerStateList;
; 375  : 
; 376  : 	while (curState)
; 377  : 	{
; 378  : 		if (curState->GetState () == platActiveState)
; 379  : 			return curState->GetStateString ();
; 380  : 		else
; 381  : 			curState = curState->GetNextPowerState ();
; 382  : 	}
; 383  : 	return NULL;
; 384  : }
; 385  : 
; 386  : PLATFORM_ACTIVITY_STATE
; 387  : PowerStateManager::SystemStateToActivityState (LPCTSTR lpState)
; 388  : {
; 389  : 	if (lpState == NULL)
; 390  : 		return UnknownState;
; 391  : 	PowerState *curState = m_pPowerStateList;
; 392  : 
; 393  : 	while (curState)
; 394  : 	{
; 395  : 		if (_tcsicmp (curState->GetStateString (), lpState) == 0)
; 396  : 			return curState->GetState ();
; 397  : 		else
; 398  : 			curState = curState->GetNextPowerState ();
; 399  : 	}
; 400  : 	return UnknownState;
; 401  : }
; 402  : 
; 403  : HANDLE
; 404  : PowerStateManager::GetEventHandle (DWORD dwIndex)
; 405  : {
; 406  : 	switch (dwIndex)
; 407  : 	{
; 408  : 	  case PM_SHUTDOWN_EVENT:
; 409  : 		  return ghevPmShutdown;
; 410  : 	  case PM_RELOAD_ACTIVITY_TIMEOUTS_EVENT:
; 411  : 		  return ghevReloadActivityTimeouts;
; 412  : 	  case PM_MSGQUEUE_EVENT:
; 413  : 		  return m_hqNotify;
; 414  : 	  case PM_RESTART_TIMER_EVENT:
; 415  : 		  return ghevRestartTimers;
; 416  : 	  case PM_SYSTEM_API_EVENT:
; 417  : 		  return GetAPISignalHandle ();
; 418  : 	  case PM_BOOTPHASE2_EVENT:
; 419  : 		  return m_hevBootPhase2;
; 420  : 	}
; 421  : 	return NULL;
; 422  : }
; 423  : 
; 424  : void
; 425  : PowerStateManager::DisablePhase2Event ()
; 426  : {
; 427  : 	if (m_hevBootPhase2)
; 428  : 	{
; 429  : 		CloseHandle (m_hevBootPhase2);
; 430  : 		m_hevBootPhase2 = NULL;
; 431  : 	}
; 432  : }
; 433  : 
; 434  : void
; 435  : PowerStateManager::PlatformLoadTimeouts ()
; 436  : {
; 437  : 	DWORD dwStatus;
; 438  : 	TCHAR szPath[MAX_PATH];
; 439  : 	HKEY hk;
; 440  : 
; 441  : 	SETFNAME (_T ("PowerStateManager::PlatformLoadTimeouts"));
; 442  : 
; 443  : 	// Assume default values:
; 444  : 	m_dwACSuspendTimeout = DEF_ACSUSPENDTIMEOUT * 1000;
; 445  : 	m_dwACResumingSuspendTimeout = DEF_ACRESUMINGSUSPENDTIMEOUT * 1000;
; 446  : 	m_dwACBacklightTimeout = DEF_ACBACKLIGHTTIMEOUT * 1000;
; 447  : 	m_dwACUserIdleTimeout = DEF_ACUSERIDLETIMEOUT * 1000;
; 448  : 
; 449  : 	m_dwBattSuspendTimeout = DEF_BATTSUSPENDTIMEOUT * 1000;
; 450  : 	m_dwBattResumingSuspendTimeout = DEF_BATTRESUMINGSUSPENDTIMEOUT * 1000;
; 451  : 	m_dwBattBacklightTimeout = DEF_BATTBACKLIGHTTIMEOUT * 1000;
; 452  : 	m_dwBattUserIdleTimeout = DEF_BATTUSERIDLETIMEOUT * 1000;
; 453  : 
; 454  : 	// Get timeout thresholds for transitions between states:
; 455  : 	StringCchPrintf (szPath, MAX_PATH, _T ("%s\\%s"), PWRMGR_REG_KEY, _T ("Timeouts"));
; 456  : 	dwStatus = RegOpenKeyEx (HKEY_LOCAL_MACHINE, szPath, 0, 0, &hk);
; 457  : 	if (dwStatus == ERROR_SUCCESS)
; 458  : 	{
; 459  : 		// Read system power state timeouts:
; 460  : 		m_dwACSuspendTimeout =
; 461  : 			RegReadStateTimeout (hk, _T ("ACSuspendTimeout"), DEF_ACSUSPENDTIMEOUT);
; 462  : 		m_dwACResumingSuspendTimeout =
; 463  : 			RegReadStateTimeout (hk, _T ("ACResumingSuspendTimeout"), DEF_ACRESUMINGSUSPENDTIMEOUT);
; 464  : 		m_dwACBacklightTimeout =
; 465  : 			RegReadStateTimeout (hk, _T ("ACBacklightTimeout"), DEF_ACBACKLIGHTTIMEOUT);
; 466  : 		m_dwACUserIdleTimeout = RegReadStateTimeout (hk, _T ("ACUserIdle"), DEF_ACUSERIDLETIMEOUT);
; 467  : 
; 468  : 		m_dwBattSuspendTimeout =
; 469  : 			RegReadStateTimeout (hk, _T ("BattSuspendTimeout"), DEF_BATTSUSPENDTIMEOUT);
; 470  : 		m_dwBattResumingSuspendTimeout =
; 471  : 			RegReadStateTimeout (hk, _T ("BattResumingSuspendTimeout"),
; 472  : 								 DEF_BATTRESUMINGSUSPENDTIMEOUT);
; 473  : 		m_dwBattBacklightTimeout =
; 474  : 			RegReadStateTimeout (hk, _T ("BattBacklightTimeout"), DEF_BATTBACKLIGHTTIMEOUT);
; 475  : 		m_dwBattUserIdleTimeout =
; 476  : 			RegReadStateTimeout (hk, _T ("BattUserIdle"), DEF_BATTUSERIDLETIMEOUT);
; 477  : 
; 478  : 		// Release resources:
; 479  : 		RegCloseKey (hk);
; 480  : 	}
; 481  : 
; 482  : 	// Update Legacy if we find them.
; 483  : 	DWORD dwValue;
; 484  : 
; 485  : 	if (m_pLegacySPScreenOff)
; 486  : 	{
; 487  : 		m_pLegacySPScreenOff->AckNotification ();
; 488  : 		if (m_pLegacySPScreenOff->GetRegValue (_T ("Display"), &dwValue))
; 489  : 		{	// Found SmartPhone Legacy Value. Use it.
; 490  : 			m_dwACUserIdleTimeout = m_dwBattUserIdleTimeout = dwValue;
; 491  : 		}
; 492  : 	}
; 493  : 
; 494  : 	if (m_pLegacyBacklightOff)
; 495  : 	{
; 496  : 		m_pLegacyBacklightOff->AckNotification ();
; 497  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("BatteryTimeout"), &dwValue))
; 498  : 		{	// Legacy Backlight Off Registry value.
; 499  : 			m_dwBattBacklightTimeout = dwValue;
; 500  : 		}
; 501  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldBatteryTimeout"), &dwValue))
; 502  : 		{
; 503  : 			m_dwBattBacklightTimeout = INFINITE;
; 504  : 			m_dwBattUserIdleTimeout = INFINITE;
; 505  : 		}
; 506  : 
; 507  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("ACTimeout"), &dwValue))
; 508  : 		{	// Legacy Backlight Off Registry value.
; 509  : 			m_dwACBacklightTimeout = dwValue;
; 510  : 		}
; 511  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldACTimeout"), &dwValue))
; 512  : 		{
; 513  : 			m_dwACBacklightTimeout = INFINITE;
; 514  : 			m_dwACUserIdleTimeout = INFINITE;
; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 519  : 			  (_T
; 520  : 			   ("%s: ACSuspendTimeout %d, ACResumingSuspendTimeout %d,  ACBacklightTimeout %d, ACUserIdleTimeout %d \r\n"),
; 521  : 			   pszFname, m_dwACSuspendTimeout, m_dwACResumingSuspendTimeout, m_dwACBacklightTimeout,
; 522  : 			   m_dwACUserIdleTimeout));
; 523  : 	PMLOGMSG (ZONE_INIT
; 524  : 			  || ZONE_PLATFORM,
; 525  : 			  (_T
; 526  : 			   ("%s: BattSuspendTimeout %d, BattResumingSuspendTimeout %d , BattBacklightTimeout %d, BattUserIdleTimeout%d \r\n"),
; 527  : 			   pszFname, m_dwBattSuspendTimeout, m_dwBattResumingSuspendTimeout,
; 528  : 			   m_dwBattBacklightTimeout, m_dwBattUserIdleTimeout));
; 529  : }
; 530  : 
; 531  : DWORD
; 532  : PowerStateManager::GetSuspendTimeOut ()
; 533  : {
; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);

  00006	4b08		 ldr         r3,|$LN13@ResetSyste| ; =|gSystemPowerStatus|
  00008	7d1b		 ldrb        r3,[r3,#0x14]
  0000a	b913		 cbnz        r3,|$LN8@ResetSyste|
  0000c	f8d0 326c	 ldr         r3,[r0,#0x26C]
  00010	e003		 b           |$LN5@ResetSyste|
  00012		 |$LN8@ResetSyste|
  00012	f8d0 325c	 ldr         r3,[r0,#0x25C]

; 316  : 	m_dwCurSuspendTimeout = (fIdle ? GetSuspendTimeOut () : INFINITE);

  00016	e000		 b           |$LN5@ResetSyste|
  00018		 |$LN4@ResetSyste|
  00018	4613		 mov         r3,r2
  0001a		 |$LN5@ResetSyste|
  0001a	f8c0 3280	 str         r3,[r0,#0x280]

; 317  : 	if (m_dwCurSuspendTimeout == 0)

  0001e	b90b		 cbnz        r3,|$LN1@ResetSyste|

; 318  : 		m_dwCurSuspendTimeout = INFINITE;

  00020	f8c0 2280	 str         r2,[r0,#0x280]
  00024		 |$LN1@ResetSyste|
  00024		 |$M11|

; 319  : }

  00024	4770		 bx          lr
  00026		 |$LN14@ResetSyste|
  00026		 |$M15|
  00026	defe		 __debugbreak
  00028		 |$LN12@ResetSyste|
  00028		 |$LN13@ResetSyste|
  00028	0000 0000	 DCD         |gSystemPowerStatus|

			 ENDP  ; |?ResetSystemIdleTimeTimeout@PowerStateManager@@UAAXH@Z|, PowerStateManager::ResetSystemIdleTimeTimeout

	EXPORT	|?ResetUserIdleTimeout@PowerStateManager@@UAAXH@Z| ; PowerStateManager::ResetUserIdleTimeout

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?ResetUserIdleTimeout@PowerStateManager@@UAAXH@Z| DCD imagerel |$LN18@ResetUserI|
	DCD	0xfd3060ad
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?ResetUserIdleTimeout@PowerStateManager@@UAAXH@Z| PROC ; PowerStateManager::ResetUserIdleTimeout

; 296  : {

  00000		 |$LN18@ResetUserI|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M16|

; 297  : 	if (fIdle)

  00008	f06f 0400	 mvn         r4,#0
  0000c	b199		 cbz         r1,|$LN4@ResetUserI|

; 312  : 
; 313  : void
; 314  : PowerStateManager::ResetSystemIdleTimeTimeout (BOOL fIdle)
; 315  : {
; 316  : 	m_dwCurSuspendTimeout = (fIdle ? GetSuspendTimeOut () : INFINITE);
; 317  : 	if (m_dwCurSuspendTimeout == 0)
; 318  : 		m_dwCurSuspendTimeout = INFINITE;
; 319  : }
; 320  : 
; 321  : void
; 322  : PowerStateManager::SubtractTimeout (DWORD dwTicks)
; 323  : {
; 324  : 	if (m_dwCurSuspendTimeout != INFINITE)
; 325  : 		m_dwCurSuspendTimeout =
; 326  : 			(m_dwCurSuspendTimeout > dwTicks ? m_dwCurSuspendTimeout - dwTicks : 0);
; 327  : 	if (m_dwCurResumingSuspendTimeout != INFINITE)
; 328  : 		m_dwCurResumingSuspendTimeout =
; 329  : 			(m_dwCurResumingSuspendTimeout > dwTicks ? m_dwCurResumingSuspendTimeout - dwTicks : 0);
; 330  : 	if (m_dwCurBacklightTimeout != INFINITE)
; 331  : 		m_dwCurBacklightTimeout =
; 332  : 			(m_dwCurBacklightTimeout > dwTicks ? m_dwCurBacklightTimeout - dwTicks : 0);
; 333  : 	if (m_dwCurUserIdleTimeout != INFINITE)
; 334  : 		m_dwCurUserIdleTimeout =
; 335  : 			(m_dwCurUserIdleTimeout > dwTicks ? m_dwCurUserIdleTimeout - dwTicks : 0);
; 336  : }
; 337  : 
; 338  : DWORD
; 339  : PowerStateManager::GetSmallestTimeout (PTIMEOUT_ITEM pTimeoutItem)
; 340  : {
; 341  : 	DWORD dwReturn = INFINITE;
; 342  : 	TIMEOUT_ITEM activeEvent = NoTimeoutItem;
; 343  : 
; 344  : 	if (dwReturn > m_dwCurSuspendTimeout)
; 345  : 	{
; 346  : 		dwReturn = m_dwCurSuspendTimeout;
; 347  : 		activeEvent = SuspendTimeout;
; 348  : 	}
; 349  : 	if (dwReturn > m_dwCurResumingSuspendTimeout)
; 350  : 	{
; 351  : 		dwReturn = m_dwCurResumingSuspendTimeout;
; 352  : 		activeEvent = ResumingSuspendTimeout;
; 353  : 	}
; 354  : 	if (dwReturn > m_dwCurBacklightTimeout)
; 355  : 	{
; 356  : 		dwReturn = m_dwCurBacklightTimeout;
; 357  : 		activeEvent = BacklightTimeout;
; 358  : 	}
; 359  : 	if (dwReturn > m_dwCurUserIdleTimeout)
; 360  : 	{
; 361  : 		dwReturn = m_dwCurUserIdleTimeout;
; 362  : 		activeEvent = UserActivityTimeout;
; 363  : 	}
; 364  : 	if (pTimeoutItem)
; 365  : 	{
; 366  : 		*pTimeoutItem = activeEvent;
; 367  : 	}
; 368  : 	return dwReturn;
; 369  : }
; 370  : 
; 371  : LPCTSTR
; 372  : PowerStateManager::ActivityStateToSystemState (PLATFORM_ACTIVITY_STATE platActiveState)
; 373  : {
; 374  : 	PowerState *curState = m_pPowerStateList;
; 375  : 
; 376  : 	while (curState)
; 377  : 	{
; 378  : 		if (curState->GetState () == platActiveState)
; 379  : 			return curState->GetStateString ();
; 380  : 		else
; 381  : 			curState = curState->GetNextPowerState ();
; 382  : 	}
; 383  : 	return NULL;
; 384  : }
; 385  : 
; 386  : PLATFORM_ACTIVITY_STATE
; 387  : PowerStateManager::SystemStateToActivityState (LPCTSTR lpState)
; 388  : {
; 389  : 	if (lpState == NULL)
; 390  : 		return UnknownState;
; 391  : 	PowerState *curState = m_pPowerStateList;
; 392  : 
; 393  : 	while (curState)
; 394  : 	{
; 395  : 		if (_tcsicmp (curState->GetStateString (), lpState) == 0)
; 396  : 			return curState->GetState ();
; 397  : 		else
; 398  : 			curState = curState->GetNextPowerState ();
; 399  : 	}
; 400  : 	return UnknownState;
; 401  : }
; 402  : 
; 403  : HANDLE
; 404  : PowerStateManager::GetEventHandle (DWORD dwIndex)
; 405  : {
; 406  : 	switch (dwIndex)
; 407  : 	{
; 408  : 	  case PM_SHUTDOWN_EVENT:
; 409  : 		  return ghevPmShutdown;
; 410  : 	  case PM_RELOAD_ACTIVITY_TIMEOUTS_EVENT:
; 411  : 		  return ghevReloadActivityTimeouts;
; 412  : 	  case PM_MSGQUEUE_EVENT:
; 413  : 		  return m_hqNotify;
; 414  : 	  case PM_RESTART_TIMER_EVENT:
; 415  : 		  return ghevRestartTimers;
; 416  : 	  case PM_SYSTEM_API_EVENT:
; 417  : 		  return GetAPISignalHandle ();
; 418  : 	  case PM_BOOTPHASE2_EVENT:
; 419  : 		  return m_hevBootPhase2;
; 420  : 	}
; 421  : 	return NULL;
; 422  : }
; 423  : 
; 424  : void
; 425  : PowerStateManager::DisablePhase2Event ()
; 426  : {
; 427  : 	if (m_hevBootPhase2)
; 428  : 	{
; 429  : 		CloseHandle (m_hevBootPhase2);
; 430  : 		m_hevBootPhase2 = NULL;
; 431  : 	}
; 432  : }
; 433  : 
; 434  : void
; 435  : PowerStateManager::PlatformLoadTimeouts ()
; 436  : {
; 437  : 	DWORD dwStatus;
; 438  : 	TCHAR szPath[MAX_PATH];
; 439  : 	HKEY hk;
; 440  : 
; 441  : 	SETFNAME (_T ("PowerStateManager::PlatformLoadTimeouts"));
; 442  : 
; 443  : 	// Assume default values:
; 444  : 	m_dwACSuspendTimeout = DEF_ACSUSPENDTIMEOUT * 1000;
; 445  : 	m_dwACResumingSuspendTimeout = DEF_ACRESUMINGSUSPENDTIMEOUT * 1000;
; 446  : 	m_dwACBacklightTimeout = DEF_ACBACKLIGHTTIMEOUT * 1000;
; 447  : 	m_dwACUserIdleTimeout = DEF_ACUSERIDLETIMEOUT * 1000;
; 448  : 
; 449  : 	m_dwBattSuspendTimeout = DEF_BATTSUSPENDTIMEOUT * 1000;
; 450  : 	m_dwBattResumingSuspendTimeout = DEF_BATTRESUMINGSUSPENDTIMEOUT * 1000;
; 451  : 	m_dwBattBacklightTimeout = DEF_BATTBACKLIGHTTIMEOUT * 1000;
; 452  : 	m_dwBattUserIdleTimeout = DEF_BATTUSERIDLETIMEOUT * 1000;
; 453  : 
; 454  : 	// Get timeout thresholds for transitions between states:
; 455  : 	StringCchPrintf (szPath, MAX_PATH, _T ("%s\\%s"), PWRMGR_REG_KEY, _T ("Timeouts"));
; 456  : 	dwStatus = RegOpenKeyEx (HKEY_LOCAL_MACHINE, szPath, 0, 0, &hk);
; 457  : 	if (dwStatus == ERROR_SUCCESS)
; 458  : 	{
; 459  : 		// Read system power state timeouts:
; 460  : 		m_dwACSuspendTimeout =
; 461  : 			RegReadStateTimeout (hk, _T ("ACSuspendTimeout"), DEF_ACSUSPENDTIMEOUT);
; 462  : 		m_dwACResumingSuspendTimeout =
; 463  : 			RegReadStateTimeout (hk, _T ("ACResumingSuspendTimeout"), DEF_ACRESUMINGSUSPENDTIMEOUT);
; 464  : 		m_dwACBacklightTimeout =
; 465  : 			RegReadStateTimeout (hk, _T ("ACBacklightTimeout"), DEF_ACBACKLIGHTTIMEOUT);
; 466  : 		m_dwACUserIdleTimeout = RegReadStateTimeout (hk, _T ("ACUserIdle"), DEF_ACUSERIDLETIMEOUT);
; 467  : 
; 468  : 		m_dwBattSuspendTimeout =
; 469  : 			RegReadStateTimeout (hk, _T ("BattSuspendTimeout"), DEF_BATTSUSPENDTIMEOUT);
; 470  : 		m_dwBattResumingSuspendTimeout =
; 471  : 			RegReadStateTimeout (hk, _T ("BattResumingSuspendTimeout"),
; 472  : 								 DEF_BATTRESUMINGSUSPENDTIMEOUT);
; 473  : 		m_dwBattBacklightTimeout =
; 474  : 			RegReadStateTimeout (hk, _T ("BattBacklightTimeout"), DEF_BATTBACKLIGHTTIMEOUT);
; 475  : 		m_dwBattUserIdleTimeout =
; 476  : 			RegReadStateTimeout (hk, _T ("BattUserIdle"), DEF_BATTUSERIDLETIMEOUT);
; 477  : 
; 478  : 		// Release resources:
; 479  : 		RegCloseKey (hk);
; 480  : 	}
; 481  : 
; 482  : 	// Update Legacy if we find them.
; 483  : 	DWORD dwValue;
; 484  : 
; 485  : 	if (m_pLegacySPScreenOff)
; 486  : 	{
; 487  : 		m_pLegacySPScreenOff->AckNotification ();
; 488  : 		if (m_pLegacySPScreenOff->GetRegValue (_T ("Display"), &dwValue))
; 489  : 		{	// Found SmartPhone Legacy Value. Use it.
; 490  : 			m_dwACUserIdleTimeout = m_dwBattUserIdleTimeout = dwValue;
; 491  : 		}
; 492  : 	}
; 493  : 
; 494  : 	if (m_pLegacyBacklightOff)
; 495  : 	{
; 496  : 		m_pLegacyBacklightOff->AckNotification ();
; 497  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("BatteryTimeout"), &dwValue))
; 498  : 		{	// Legacy Backlight Off Registry value.
; 499  : 			m_dwBattBacklightTimeout = dwValue;
; 500  : 		}
; 501  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldBatteryTimeout"), &dwValue))
; 502  : 		{
; 503  : 			m_dwBattBacklightTimeout = INFINITE;
; 504  : 			m_dwBattUserIdleTimeout = INFINITE;
; 505  : 		}
; 506  : 
; 507  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("ACTimeout"), &dwValue))
; 508  : 		{	// Legacy Backlight Off Registry value.
; 509  : 			m_dwACBacklightTimeout = dwValue;
; 510  : 		}
; 511  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldACTimeout"), &dwValue))
; 512  : 		{
; 513  : 			m_dwACBacklightTimeout = INFINITE;
; 514  : 			m_dwACUserIdleTimeout = INFINITE;
; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 519  : 			  (_T
; 520  : 			   ("%s: ACSuspendTimeout %d, ACResumingSuspendTimeout %d,  ACBacklightTimeout %d, ACUserIdleTimeout %d \r\n"),
; 521  : 			   pszFname, m_dwACSuspendTimeout, m_dwACResumingSuspendTimeout, m_dwACBacklightTimeout,
; 522  : 			   m_dwACUserIdleTimeout));
; 523  : 	PMLOGMSG (ZONE_INIT
; 524  : 			  || ZONE_PLATFORM,
; 525  : 			  (_T
; 526  : 			   ("%s: BattSuspendTimeout %d, BattResumingSuspendTimeout %d , BattBacklightTimeout %d, BattUserIdleTimeout%d \r\n"),
; 527  : 			   pszFname, m_dwBattSuspendTimeout, m_dwBattResumingSuspendTimeout,
; 528  : 			   m_dwBattBacklightTimeout, m_dwBattUserIdleTimeout));
; 529  : }
; 530  : 
; 531  : DWORD
; 532  : PowerStateManager::GetSuspendTimeOut ()
; 533  : {
; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);
; 536  : }
; 537  : 
; 538  : DWORD
; 539  : PowerStateManager::GetResumingSuspendTimeout ()
; 540  : {
; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);
; 543  : }
; 544  : 
; 545  : DWORD
; 546  : PowerStateManager::GetBackLightTimeout ()
; 547  : {
; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  0000e	4a12		 ldr         r2,|$LN21@ResetUserI| ; =|gSystemPowerStatus|
  00010	7d13		 ldrb        r3,[r2,#0x14]
  00012	b913		 cbnz        r3,|$LN9@ResetUserI|
  00014	f8d0 3274	 ldr         r3,[r0,#0x274]
  00018	e001		 b           |$LN10@ResetUserI|
  0001a		 |$LN9@ResetUserI|
  0001a	f8d0 3264	 ldr         r3,[r0,#0x264]
  0001e		 |$LN10@ResetUserI|

; 298  : 	{
; 299  : 		m_dwCurBacklightTimeout = GetBackLightTimeout ();

  0001e	f8c0 3288	 str         r3,[r0,#0x288]

; 550  : }
; 551  : 
; 552  : DWORD
; 553  : PowerStateManager::GetUserIdleTimeOut ()
; 554  : {
; 555  : 	return (gSystemPowerStatus.bACLineStatus ==
; 556  : 			AC_LINE_OFFLINE ? m_dwBattUserIdleTimeout : m_dwACUserIdleTimeout);

  00022	7d13		 ldrb        r3,[r2,#0x14]
  00024	b913		 cbnz        r3,|$LN13@ResetUserI|
  00026	f8d0 3278	 ldr         r3,[r0,#0x278]
  0002a	e001		 b           |$LN14@ResetUserI|
  0002c		 |$LN13@ResetUserI|
  0002c	f8d0 3268	 ldr         r3,[r0,#0x268]
  00030		 |$LN14@ResetUserI|

; 300  : 		m_dwCurUserIdleTimeout = GetUserIdleTimeOut ();

  00030	f8c0 328c	 str         r3,[r0,#0x28C]

; 301  : 	}
; 302  : 	else

  00034	e003		 b           |$LN3@ResetUserI|
  00036		 |$LN4@ResetUserI|

; 303  : 	{
; 304  : 		m_dwCurBacklightTimeout = INFINITE;

  00036	f8c0 4288	 str         r4,[r0,#0x288]

; 305  : 		m_dwCurUserIdleTimeout = INFINITE;

  0003a	f8c0 428c	 str         r4,[r0,#0x28C]
  0003e		 |$LN3@ResetUserI|

; 306  : 	}
; 307  : 	if (m_dwCurBacklightTimeout == 0)

  0003e	f8d0 3288	 ldr         r3,[r0,#0x288]
  00042	b90b		 cbnz        r3,|$LN2@ResetUserI|

; 308  : 		m_dwCurBacklightTimeout = INFINITE;

  00044	f8c0 4288	 str         r4,[r0,#0x288]
  00048		 |$LN2@ResetUserI|

; 309  : 	if (m_dwCurUserIdleTimeout == 0)

  00048	f8d0 328c	 ldr         r3,[r0,#0x28C]
  0004c	b90b		 cbnz        r3,|$LN1@ResetUserI|

; 310  : 		m_dwCurUserIdleTimeout = INFINITE;

  0004e	f8c0 428c	 str         r4,[r0,#0x28C]
  00052		 |$LN1@ResetUserI|
  00052		 |$M19|

; 311  : }

  00052	e8bd 8818	 pop         {r3,r4,r11,pc}
  00056		 |$LN22@ResetUserI|
  00056		 |$M23|
  00056	defe		 __debugbreak
  00058		 |$LN20@ResetUserI|
  00058		 |$LN21@ResetUserI|
  00058	0000 0000	 DCD         |gSystemPowerStatus|
  0005c		 |$M17|

			 ENDP  ; |?ResetUserIdleTimeout@PowerStateManager@@UAAXH@Z|, PowerStateManager::ResetUserIdleTimeout

	EXPORT	|?ReAdjustTimeOuts@PowerStateManager@@UAAXXZ| ; PowerStateManager::ReAdjustTimeOuts

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?ReAdjustTimeOuts@PowerStateManager@@UAAXXZ| DCD imagerel |$LN38@ReAdjustTi|
	DCD	0x31612d
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?ReAdjustTimeOuts@PowerStateManager@@UAAXXZ| PROC ; PowerStateManager::ReAdjustTimeOuts

; 276  : {

  00000		 |$LN38@ReAdjustTi|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M36|

; 536  : }
; 537  : 
; 538  : DWORD
; 539  : PowerStateManager::GetResumingSuspendTimeout ()
; 540  : {
; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);
; 543  : }
; 544  : 
; 545  : DWORD
; 546  : PowerStateManager::GetBackLightTimeout ()
; 547  : {
; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  00008	4c23		 ldr         r4,|$LN41@ReAdjustTi| ; =|gSystemPowerStatus|
  0000a	7d21		 ldrb        r1,[r4,#0x14]
  0000c	b911		 cbnz        r1,|$LN11@ReAdjustTi|
  0000e	f8d0 2274	 ldr         r2,[r0,#0x274]
  00012	e001		 b           |$LN12@ReAdjustTi|
  00014		 |$LN11@ReAdjustTi|
  00014	f8d0 2264	 ldr         r2,[r0,#0x264]
  00018		 |$LN12@ReAdjustTi|

; 277  : 	if (m_dwCurBacklightTimeout > GetBackLightTimeout ())

  00018	f8d0 3288	 ldr         r3,[r0,#0x288]
  0001c	f06f 0500	 mvn         r5,#0
  00020	4293		 cmp         r3,r2
  00022	d90a		 bls         |$LN33@ReAdjustTi|

; 536  : }
; 537  : 
; 538  : DWORD
; 539  : PowerStateManager::GetResumingSuspendTimeout ()
; 540  : {
; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);
; 543  : }
; 544  : 
; 545  : DWORD
; 546  : PowerStateManager::GetBackLightTimeout ()
; 547  : {
; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  00024	b911		 cbnz        r1,|$LN15@ReAdjustTi|
  00026	f8d0 3274	 ldr         r3,[r0,#0x274]
  0002a	e001		 b           |$LN16@ReAdjustTi|
  0002c		 |$LN15@ReAdjustTi|
  0002c	f8d0 3264	 ldr         r3,[r0,#0x264]
  00030		 |$LN16@ReAdjustTi|

; 278  : 	{
; 279  : 		if ((m_dwCurBacklightTimeout = GetBackLightTimeout ()) == 0)

  00030	f8c0 3288	 str         r3,[r0,#0x288]
  00034	b90b		 cbnz        r3,|$LN33@ReAdjustTi|

; 280  : 			m_dwCurBacklightTimeout = INFINITE;

  00036	f8c0 5288	 str         r5,[r0,#0x288]
  0003a		 |$LN33@ReAdjustTi|

; 536  : }
; 537  : 
; 538  : DWORD
; 539  : PowerStateManager::GetResumingSuspendTimeout ()
; 540  : {
; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);
; 543  : }
; 544  : 
; 545  : DWORD
; 546  : PowerStateManager::GetBackLightTimeout ()
; 547  : {
; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  0003a	7d21		 ldrb        r1,[r4,#0x14]

; 293  : 
; 294  : void
; 295  : PowerStateManager::ResetUserIdleTimeout (BOOL fIdle)
; 296  : {
; 297  : 	if (fIdle)
; 298  : 	{
; 299  : 		m_dwCurBacklightTimeout = GetBackLightTimeout ();
; 300  : 		m_dwCurUserIdleTimeout = GetUserIdleTimeOut ();
; 301  : 	}
; 302  : 	else
; 303  : 	{
; 304  : 		m_dwCurBacklightTimeout = INFINITE;
; 305  : 		m_dwCurUserIdleTimeout = INFINITE;
; 306  : 	}
; 307  : 	if (m_dwCurBacklightTimeout == 0)
; 308  : 		m_dwCurBacklightTimeout = INFINITE;
; 309  : 	if (m_dwCurUserIdleTimeout == 0)
; 310  : 		m_dwCurUserIdleTimeout = INFINITE;
; 311  : }
; 312  : 
; 313  : void
; 314  : PowerStateManager::ResetSystemIdleTimeTimeout (BOOL fIdle)
; 315  : {
; 316  : 	m_dwCurSuspendTimeout = (fIdle ? GetSuspendTimeOut () : INFINITE);
; 317  : 	if (m_dwCurSuspendTimeout == 0)
; 318  : 		m_dwCurSuspendTimeout = INFINITE;
; 319  : }
; 320  : 
; 321  : void
; 322  : PowerStateManager::SubtractTimeout (DWORD dwTicks)
; 323  : {
; 324  : 	if (m_dwCurSuspendTimeout != INFINITE)
; 325  : 		m_dwCurSuspendTimeout =
; 326  : 			(m_dwCurSuspendTimeout > dwTicks ? m_dwCurSuspendTimeout - dwTicks : 0);
; 327  : 	if (m_dwCurResumingSuspendTimeout != INFINITE)
; 328  : 		m_dwCurResumingSuspendTimeout =
; 329  : 			(m_dwCurResumingSuspendTimeout > dwTicks ? m_dwCurResumingSuspendTimeout - dwTicks : 0);
; 330  : 	if (m_dwCurBacklightTimeout != INFINITE)
; 331  : 		m_dwCurBacklightTimeout =
; 332  : 			(m_dwCurBacklightTimeout > dwTicks ? m_dwCurBacklightTimeout - dwTicks : 0);
; 333  : 	if (m_dwCurUserIdleTimeout != INFINITE)
; 334  : 		m_dwCurUserIdleTimeout =
; 335  : 			(m_dwCurUserIdleTimeout > dwTicks ? m_dwCurUserIdleTimeout - dwTicks : 0);
; 336  : }
; 337  : 
; 338  : DWORD
; 339  : PowerStateManager::GetSmallestTimeout (PTIMEOUT_ITEM pTimeoutItem)
; 340  : {
; 341  : 	DWORD dwReturn = INFINITE;
; 342  : 	TIMEOUT_ITEM activeEvent = NoTimeoutItem;
; 343  : 
; 344  : 	if (dwReturn > m_dwCurSuspendTimeout)
; 345  : 	{
; 346  : 		dwReturn = m_dwCurSuspendTimeout;
; 347  : 		activeEvent = SuspendTimeout;
; 348  : 	}
; 349  : 	if (dwReturn > m_dwCurResumingSuspendTimeout)
; 350  : 	{
; 351  : 		dwReturn = m_dwCurResumingSuspendTimeout;
; 352  : 		activeEvent = ResumingSuspendTimeout;
; 353  : 	}
; 354  : 	if (dwReturn > m_dwCurBacklightTimeout)
; 355  : 	{
; 356  : 		dwReturn = m_dwCurBacklightTimeout;
; 357  : 		activeEvent = BacklightTimeout;
; 358  : 	}
; 359  : 	if (dwReturn > m_dwCurUserIdleTimeout)
; 360  : 	{
; 361  : 		dwReturn = m_dwCurUserIdleTimeout;
; 362  : 		activeEvent = UserActivityTimeout;
; 363  : 	}
; 364  : 	if (pTimeoutItem)
; 365  : 	{
; 366  : 		*pTimeoutItem = activeEvent;
; 367  : 	}
; 368  : 	return dwReturn;
; 369  : }
; 370  : 
; 371  : LPCTSTR
; 372  : PowerStateManager::ActivityStateToSystemState (PLATFORM_ACTIVITY_STATE platActiveState)
; 373  : {
; 374  : 	PowerState *curState = m_pPowerStateList;
; 375  : 
; 376  : 	while (curState)
; 377  : 	{
; 378  : 		if (curState->GetState () == platActiveState)
; 379  : 			return curState->GetStateString ();
; 380  : 		else
; 381  : 			curState = curState->GetNextPowerState ();
; 382  : 	}
; 383  : 	return NULL;
; 384  : }
; 385  : 
; 386  : PLATFORM_ACTIVITY_STATE
; 387  : PowerStateManager::SystemStateToActivityState (LPCTSTR lpState)
; 388  : {
; 389  : 	if (lpState == NULL)
; 390  : 		return UnknownState;
; 391  : 	PowerState *curState = m_pPowerStateList;
; 392  : 
; 393  : 	while (curState)
; 394  : 	{
; 395  : 		if (_tcsicmp (curState->GetStateString (), lpState) == 0)
; 396  : 			return curState->GetState ();
; 397  : 		else
; 398  : 			curState = curState->GetNextPowerState ();
; 399  : 	}
; 400  : 	return UnknownState;
; 401  : }
; 402  : 
; 403  : HANDLE
; 404  : PowerStateManager::GetEventHandle (DWORD dwIndex)
; 405  : {
; 406  : 	switch (dwIndex)
; 407  : 	{
; 408  : 	  case PM_SHUTDOWN_EVENT:
; 409  : 		  return ghevPmShutdown;
; 410  : 	  case PM_RELOAD_ACTIVITY_TIMEOUTS_EVENT:
; 411  : 		  return ghevReloadActivityTimeouts;
; 412  : 	  case PM_MSGQUEUE_EVENT:
; 413  : 		  return m_hqNotify;
; 414  : 	  case PM_RESTART_TIMER_EVENT:
; 415  : 		  return ghevRestartTimers;
; 416  : 	  case PM_SYSTEM_API_EVENT:
; 417  : 		  return GetAPISignalHandle ();
; 418  : 	  case PM_BOOTPHASE2_EVENT:
; 419  : 		  return m_hevBootPhase2;
; 420  : 	}
; 421  : 	return NULL;
; 422  : }
; 423  : 
; 424  : void
; 425  : PowerStateManager::DisablePhase2Event ()
; 426  : {
; 427  : 	if (m_hevBootPhase2)
; 428  : 	{
; 429  : 		CloseHandle (m_hevBootPhase2);
; 430  : 		m_hevBootPhase2 = NULL;
; 431  : 	}
; 432  : }
; 433  : 
; 434  : void
; 435  : PowerStateManager::PlatformLoadTimeouts ()
; 436  : {
; 437  : 	DWORD dwStatus;
; 438  : 	TCHAR szPath[MAX_PATH];
; 439  : 	HKEY hk;
; 440  : 
; 441  : 	SETFNAME (_T ("PowerStateManager::PlatformLoadTimeouts"));
; 442  : 
; 443  : 	// Assume default values:
; 444  : 	m_dwACSuspendTimeout = DEF_ACSUSPENDTIMEOUT * 1000;
; 445  : 	m_dwACResumingSuspendTimeout = DEF_ACRESUMINGSUSPENDTIMEOUT * 1000;
; 446  : 	m_dwACBacklightTimeout = DEF_ACBACKLIGHTTIMEOUT * 1000;
; 447  : 	m_dwACUserIdleTimeout = DEF_ACUSERIDLETIMEOUT * 1000;
; 448  : 
; 449  : 	m_dwBattSuspendTimeout = DEF_BATTSUSPENDTIMEOUT * 1000;
; 450  : 	m_dwBattResumingSuspendTimeout = DEF_BATTRESUMINGSUSPENDTIMEOUT * 1000;
; 451  : 	m_dwBattBacklightTimeout = DEF_BATTBACKLIGHTTIMEOUT * 1000;
; 452  : 	m_dwBattUserIdleTimeout = DEF_BATTUSERIDLETIMEOUT * 1000;
; 453  : 
; 454  : 	// Get timeout thresholds for transitions between states:
; 455  : 	StringCchPrintf (szPath, MAX_PATH, _T ("%s\\%s"), PWRMGR_REG_KEY, _T ("Timeouts"));
; 456  : 	dwStatus = RegOpenKeyEx (HKEY_LOCAL_MACHINE, szPath, 0, 0, &hk);
; 457  : 	if (dwStatus == ERROR_SUCCESS)
; 458  : 	{
; 459  : 		// Read system power state timeouts:
; 460  : 		m_dwACSuspendTimeout =
; 461  : 			RegReadStateTimeout (hk, _T ("ACSuspendTimeout"), DEF_ACSUSPENDTIMEOUT);
; 462  : 		m_dwACResumingSuspendTimeout =
; 463  : 			RegReadStateTimeout (hk, _T ("ACResumingSuspendTimeout"), DEF_ACRESUMINGSUSPENDTIMEOUT);
; 464  : 		m_dwACBacklightTimeout =
; 465  : 			RegReadStateTimeout (hk, _T ("ACBacklightTimeout"), DEF_ACBACKLIGHTTIMEOUT);
; 466  : 		m_dwACUserIdleTimeout = RegReadStateTimeout (hk, _T ("ACUserIdle"), DEF_ACUSERIDLETIMEOUT);
; 467  : 
; 468  : 		m_dwBattSuspendTimeout =
; 469  : 			RegReadStateTimeout (hk, _T ("BattSuspendTimeout"), DEF_BATTSUSPENDTIMEOUT);
; 470  : 		m_dwBattResumingSuspendTimeout =
; 471  : 			RegReadStateTimeout (hk, _T ("BattResumingSuspendTimeout"),
; 472  : 								 DEF_BATTRESUMINGSUSPENDTIMEOUT);
; 473  : 		m_dwBattBacklightTimeout =
; 474  : 			RegReadStateTimeout (hk, _T ("BattBacklightTimeout"), DEF_BATTBACKLIGHTTIMEOUT);
; 475  : 		m_dwBattUserIdleTimeout =
; 476  : 			RegReadStateTimeout (hk, _T ("BattUserIdle"), DEF_BATTUSERIDLETIMEOUT);
; 477  : 
; 478  : 		// Release resources:
; 479  : 		RegCloseKey (hk);
; 480  : 	}
; 481  : 
; 482  : 	// Update Legacy if we find them.
; 483  : 	DWORD dwValue;
; 484  : 
; 485  : 	if (m_pLegacySPScreenOff)
; 486  : 	{
; 487  : 		m_pLegacySPScreenOff->AckNotification ();
; 488  : 		if (m_pLegacySPScreenOff->GetRegValue (_T ("Display"), &dwValue))
; 489  : 		{	// Found SmartPhone Legacy Value. Use it.
; 490  : 			m_dwACUserIdleTimeout = m_dwBattUserIdleTimeout = dwValue;
; 491  : 		}
; 492  : 	}
; 493  : 
; 494  : 	if (m_pLegacyBacklightOff)
; 495  : 	{
; 496  : 		m_pLegacyBacklightOff->AckNotification ();
; 497  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("BatteryTimeout"), &dwValue))
; 498  : 		{	// Legacy Backlight Off Registry value.
; 499  : 			m_dwBattBacklightTimeout = dwValue;
; 500  : 		}
; 501  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldBatteryTimeout"), &dwValue))
; 502  : 		{
; 503  : 			m_dwBattBacklightTimeout = INFINITE;
; 504  : 			m_dwBattUserIdleTimeout = INFINITE;
; 505  : 		}
; 506  : 
; 507  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("ACTimeout"), &dwValue))
; 508  : 		{	// Legacy Backlight Off Registry value.
; 509  : 			m_dwACBacklightTimeout = dwValue;
; 510  : 		}
; 511  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldACTimeout"), &dwValue))
; 512  : 		{
; 513  : 			m_dwACBacklightTimeout = INFINITE;
; 514  : 			m_dwACUserIdleTimeout = INFINITE;
; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 519  : 			  (_T
; 520  : 			   ("%s: ACSuspendTimeout %d, ACResumingSuspendTimeout %d,  ACBacklightTimeout %d, ACUserIdleTimeout %d \r\n"),
; 521  : 			   pszFname, m_dwACSuspendTimeout, m_dwACResumingSuspendTimeout, m_dwACBacklightTimeout,
; 522  : 			   m_dwACUserIdleTimeout));
; 523  : 	PMLOGMSG (ZONE_INIT
; 524  : 			  || ZONE_PLATFORM,
; 525  : 			  (_T
; 526  : 			   ("%s: BattSuspendTimeout %d, BattResumingSuspendTimeout %d , BattBacklightTimeout %d, BattUserIdleTimeout%d \r\n"),
; 527  : 			   pszFname, m_dwBattSuspendTimeout, m_dwBattResumingSuspendTimeout,
; 528  : 			   m_dwBattBacklightTimeout, m_dwBattUserIdleTimeout));
; 529  : }
; 530  : 
; 531  : DWORD
; 532  : PowerStateManager::GetSuspendTimeOut ()
; 533  : {
; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);

  0003c	b911		 cbnz        r1,|$LN19@ReAdjustTi|
  0003e	f8d0 226c	 ldr         r2,[r0,#0x26C]
  00042	e001		 b           |$LN20@ReAdjustTi|
  00044		 |$LN19@ReAdjustTi|
  00044	f8d0 225c	 ldr         r2,[r0,#0x25C]
  00048		 |$LN20@ReAdjustTi|

; 281  : 	}
; 282  : 	if (m_dwCurSuspendTimeout > GetSuspendTimeOut ())

  00048	f8d0 3280	 ldr         r3,[r0,#0x280]
  0004c	4293		 cmp         r3,r2
  0004e	d90a		 bls         |$LN34@ReAdjustTi|

; 293  : 
; 294  : void
; 295  : PowerStateManager::ResetUserIdleTimeout (BOOL fIdle)
; 296  : {
; 297  : 	if (fIdle)
; 298  : 	{
; 299  : 		m_dwCurBacklightTimeout = GetBackLightTimeout ();
; 300  : 		m_dwCurUserIdleTimeout = GetUserIdleTimeOut ();
; 301  : 	}
; 302  : 	else
; 303  : 	{
; 304  : 		m_dwCurBacklightTimeout = INFINITE;
; 305  : 		m_dwCurUserIdleTimeout = INFINITE;
; 306  : 	}
; 307  : 	if (m_dwCurBacklightTimeout == 0)
; 308  : 		m_dwCurBacklightTimeout = INFINITE;
; 309  : 	if (m_dwCurUserIdleTimeout == 0)
; 310  : 		m_dwCurUserIdleTimeout = INFINITE;
; 311  : }
; 312  : 
; 313  : void
; 314  : PowerStateManager::ResetSystemIdleTimeTimeout (BOOL fIdle)
; 315  : {
; 316  : 	m_dwCurSuspendTimeout = (fIdle ? GetSuspendTimeOut () : INFINITE);
; 317  : 	if (m_dwCurSuspendTimeout == 0)
; 318  : 		m_dwCurSuspendTimeout = INFINITE;
; 319  : }
; 320  : 
; 321  : void
; 322  : PowerStateManager::SubtractTimeout (DWORD dwTicks)
; 323  : {
; 324  : 	if (m_dwCurSuspendTimeout != INFINITE)
; 325  : 		m_dwCurSuspendTimeout =
; 326  : 			(m_dwCurSuspendTimeout > dwTicks ? m_dwCurSuspendTimeout - dwTicks : 0);
; 327  : 	if (m_dwCurResumingSuspendTimeout != INFINITE)
; 328  : 		m_dwCurResumingSuspendTimeout =
; 329  : 			(m_dwCurResumingSuspendTimeout > dwTicks ? m_dwCurResumingSuspendTimeout - dwTicks : 0);
; 330  : 	if (m_dwCurBacklightTimeout != INFINITE)
; 331  : 		m_dwCurBacklightTimeout =
; 332  : 			(m_dwCurBacklightTimeout > dwTicks ? m_dwCurBacklightTimeout - dwTicks : 0);
; 333  : 	if (m_dwCurUserIdleTimeout != INFINITE)
; 334  : 		m_dwCurUserIdleTimeout =
; 335  : 			(m_dwCurUserIdleTimeout > dwTicks ? m_dwCurUserIdleTimeout - dwTicks : 0);
; 336  : }
; 337  : 
; 338  : DWORD
; 339  : PowerStateManager::GetSmallestTimeout (PTIMEOUT_ITEM pTimeoutItem)
; 340  : {
; 341  : 	DWORD dwReturn = INFINITE;
; 342  : 	TIMEOUT_ITEM activeEvent = NoTimeoutItem;
; 343  : 
; 344  : 	if (dwReturn > m_dwCurSuspendTimeout)
; 345  : 	{
; 346  : 		dwReturn = m_dwCurSuspendTimeout;
; 347  : 		activeEvent = SuspendTimeout;
; 348  : 	}
; 349  : 	if (dwReturn > m_dwCurResumingSuspendTimeout)
; 350  : 	{
; 351  : 		dwReturn = m_dwCurResumingSuspendTimeout;
; 352  : 		activeEvent = ResumingSuspendTimeout;
; 353  : 	}
; 354  : 	if (dwReturn > m_dwCurBacklightTimeout)
; 355  : 	{
; 356  : 		dwReturn = m_dwCurBacklightTimeout;
; 357  : 		activeEvent = BacklightTimeout;
; 358  : 	}
; 359  : 	if (dwReturn > m_dwCurUserIdleTimeout)
; 360  : 	{
; 361  : 		dwReturn = m_dwCurUserIdleTimeout;
; 362  : 		activeEvent = UserActivityTimeout;
; 363  : 	}
; 364  : 	if (pTimeoutItem)
; 365  : 	{
; 366  : 		*pTimeoutItem = activeEvent;
; 367  : 	}
; 368  : 	return dwReturn;
; 369  : }
; 370  : 
; 371  : LPCTSTR
; 372  : PowerStateManager::ActivityStateToSystemState (PLATFORM_ACTIVITY_STATE platActiveState)
; 373  : {
; 374  : 	PowerState *curState = m_pPowerStateList;
; 375  : 
; 376  : 	while (curState)
; 377  : 	{
; 378  : 		if (curState->GetState () == platActiveState)
; 379  : 			return curState->GetStateString ();
; 380  : 		else
; 381  : 			curState = curState->GetNextPowerState ();
; 382  : 	}
; 383  : 	return NULL;
; 384  : }
; 385  : 
; 386  : PLATFORM_ACTIVITY_STATE
; 387  : PowerStateManager::SystemStateToActivityState (LPCTSTR lpState)
; 388  : {
; 389  : 	if (lpState == NULL)
; 390  : 		return UnknownState;
; 391  : 	PowerState *curState = m_pPowerStateList;
; 392  : 
; 393  : 	while (curState)
; 394  : 	{
; 395  : 		if (_tcsicmp (curState->GetStateString (), lpState) == 0)
; 396  : 			return curState->GetState ();
; 397  : 		else
; 398  : 			curState = curState->GetNextPowerState ();
; 399  : 	}
; 400  : 	return UnknownState;
; 401  : }
; 402  : 
; 403  : HANDLE
; 404  : PowerStateManager::GetEventHandle (DWORD dwIndex)
; 405  : {
; 406  : 	switch (dwIndex)
; 407  : 	{
; 408  : 	  case PM_SHUTDOWN_EVENT:
; 409  : 		  return ghevPmShutdown;
; 410  : 	  case PM_RELOAD_ACTIVITY_TIMEOUTS_EVENT:
; 411  : 		  return ghevReloadActivityTimeouts;
; 412  : 	  case PM_MSGQUEUE_EVENT:
; 413  : 		  return m_hqNotify;
; 414  : 	  case PM_RESTART_TIMER_EVENT:
; 415  : 		  return ghevRestartTimers;
; 416  : 	  case PM_SYSTEM_API_EVENT:
; 417  : 		  return GetAPISignalHandle ();
; 418  : 	  case PM_BOOTPHASE2_EVENT:
; 419  : 		  return m_hevBootPhase2;
; 420  : 	}
; 421  : 	return NULL;
; 422  : }
; 423  : 
; 424  : void
; 425  : PowerStateManager::DisablePhase2Event ()
; 426  : {
; 427  : 	if (m_hevBootPhase2)
; 428  : 	{
; 429  : 		CloseHandle (m_hevBootPhase2);
; 430  : 		m_hevBootPhase2 = NULL;
; 431  : 	}
; 432  : }
; 433  : 
; 434  : void
; 435  : PowerStateManager::PlatformLoadTimeouts ()
; 436  : {
; 437  : 	DWORD dwStatus;
; 438  : 	TCHAR szPath[MAX_PATH];
; 439  : 	HKEY hk;
; 440  : 
; 441  : 	SETFNAME (_T ("PowerStateManager::PlatformLoadTimeouts"));
; 442  : 
; 443  : 	// Assume default values:
; 444  : 	m_dwACSuspendTimeout = DEF_ACSUSPENDTIMEOUT * 1000;
; 445  : 	m_dwACResumingSuspendTimeout = DEF_ACRESUMINGSUSPENDTIMEOUT * 1000;
; 446  : 	m_dwACBacklightTimeout = DEF_ACBACKLIGHTTIMEOUT * 1000;
; 447  : 	m_dwACUserIdleTimeout = DEF_ACUSERIDLETIMEOUT * 1000;
; 448  : 
; 449  : 	m_dwBattSuspendTimeout = DEF_BATTSUSPENDTIMEOUT * 1000;
; 450  : 	m_dwBattResumingSuspendTimeout = DEF_BATTRESUMINGSUSPENDTIMEOUT * 1000;
; 451  : 	m_dwBattBacklightTimeout = DEF_BATTBACKLIGHTTIMEOUT * 1000;
; 452  : 	m_dwBattUserIdleTimeout = DEF_BATTUSERIDLETIMEOUT * 1000;
; 453  : 
; 454  : 	// Get timeout thresholds for transitions between states:
; 455  : 	StringCchPrintf (szPath, MAX_PATH, _T ("%s\\%s"), PWRMGR_REG_KEY, _T ("Timeouts"));
; 456  : 	dwStatus = RegOpenKeyEx (HKEY_LOCAL_MACHINE, szPath, 0, 0, &hk);
; 457  : 	if (dwStatus == ERROR_SUCCESS)
; 458  : 	{
; 459  : 		// Read system power state timeouts:
; 460  : 		m_dwACSuspendTimeout =
; 461  : 			RegReadStateTimeout (hk, _T ("ACSuspendTimeout"), DEF_ACSUSPENDTIMEOUT);
; 462  : 		m_dwACResumingSuspendTimeout =
; 463  : 			RegReadStateTimeout (hk, _T ("ACResumingSuspendTimeout"), DEF_ACRESUMINGSUSPENDTIMEOUT);
; 464  : 		m_dwACBacklightTimeout =
; 465  : 			RegReadStateTimeout (hk, _T ("ACBacklightTimeout"), DEF_ACBACKLIGHTTIMEOUT);
; 466  : 		m_dwACUserIdleTimeout = RegReadStateTimeout (hk, _T ("ACUserIdle"), DEF_ACUSERIDLETIMEOUT);
; 467  : 
; 468  : 		m_dwBattSuspendTimeout =
; 469  : 			RegReadStateTimeout (hk, _T ("BattSuspendTimeout"), DEF_BATTSUSPENDTIMEOUT);
; 470  : 		m_dwBattResumingSuspendTimeout =
; 471  : 			RegReadStateTimeout (hk, _T ("BattResumingSuspendTimeout"),
; 472  : 								 DEF_BATTRESUMINGSUSPENDTIMEOUT);
; 473  : 		m_dwBattBacklightTimeout =
; 474  : 			RegReadStateTimeout (hk, _T ("BattBacklightTimeout"), DEF_BATTBACKLIGHTTIMEOUT);
; 475  : 		m_dwBattUserIdleTimeout =
; 476  : 			RegReadStateTimeout (hk, _T ("BattUserIdle"), DEF_BATTUSERIDLETIMEOUT);
; 477  : 
; 478  : 		// Release resources:
; 479  : 		RegCloseKey (hk);
; 480  : 	}
; 481  : 
; 482  : 	// Update Legacy if we find them.
; 483  : 	DWORD dwValue;
; 484  : 
; 485  : 	if (m_pLegacySPScreenOff)
; 486  : 	{
; 487  : 		m_pLegacySPScreenOff->AckNotification ();
; 488  : 		if (m_pLegacySPScreenOff->GetRegValue (_T ("Display"), &dwValue))
; 489  : 		{	// Found SmartPhone Legacy Value. Use it.
; 490  : 			m_dwACUserIdleTimeout = m_dwBattUserIdleTimeout = dwValue;
; 491  : 		}
; 492  : 	}
; 493  : 
; 494  : 	if (m_pLegacyBacklightOff)
; 495  : 	{
; 496  : 		m_pLegacyBacklightOff->AckNotification ();
; 497  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("BatteryTimeout"), &dwValue))
; 498  : 		{	// Legacy Backlight Off Registry value.
; 499  : 			m_dwBattBacklightTimeout = dwValue;
; 500  : 		}
; 501  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldBatteryTimeout"), &dwValue))
; 502  : 		{
; 503  : 			m_dwBattBacklightTimeout = INFINITE;
; 504  : 			m_dwBattUserIdleTimeout = INFINITE;
; 505  : 		}
; 506  : 
; 507  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("ACTimeout"), &dwValue))
; 508  : 		{	// Legacy Backlight Off Registry value.
; 509  : 			m_dwACBacklightTimeout = dwValue;
; 510  : 		}
; 511  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldACTimeout"), &dwValue))
; 512  : 		{
; 513  : 			m_dwACBacklightTimeout = INFINITE;
; 514  : 			m_dwACUserIdleTimeout = INFINITE;
; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 519  : 			  (_T
; 520  : 			   ("%s: ACSuspendTimeout %d, ACResumingSuspendTimeout %d,  ACBacklightTimeout %d, ACUserIdleTimeout %d \r\n"),
; 521  : 			   pszFname, m_dwACSuspendTimeout, m_dwACResumingSuspendTimeout, m_dwACBacklightTimeout,
; 522  : 			   m_dwACUserIdleTimeout));
; 523  : 	PMLOGMSG (ZONE_INIT
; 524  : 			  || ZONE_PLATFORM,
; 525  : 			  (_T
; 526  : 			   ("%s: BattSuspendTimeout %d, BattResumingSuspendTimeout %d , BattBacklightTimeout %d, BattUserIdleTimeout%d \r\n"),
; 527  : 			   pszFname, m_dwBattSuspendTimeout, m_dwBattResumingSuspendTimeout,
; 528  : 			   m_dwBattBacklightTimeout, m_dwBattUserIdleTimeout));
; 529  : }
; 530  : 
; 531  : DWORD
; 532  : PowerStateManager::GetSuspendTimeOut ()
; 533  : {
; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);

  00050	b911		 cbnz        r1,|$LN23@ReAdjustTi|
  00052	f8d0 326c	 ldr         r3,[r0,#0x26C]
  00056	e001		 b           |$LN24@ReAdjustTi|
  00058		 |$LN23@ReAdjustTi|
  00058	f8d0 325c	 ldr         r3,[r0,#0x25C]
  0005c		 |$LN24@ReAdjustTi|

; 283  : 	{
; 284  : 		if ((m_dwCurSuspendTimeout = GetSuspendTimeOut ()) == 0)

  0005c	f8c0 3280	 str         r3,[r0,#0x280]
  00060	b90b		 cbnz        r3,|$LN34@ReAdjustTi|

; 285  : 			m_dwCurSuspendTimeout = INFINITE;

  00062	f8c0 5280	 str         r5,[r0,#0x280]
  00066		 |$LN34@ReAdjustTi|

; 536  : }
; 537  : 
; 538  : DWORD
; 539  : PowerStateManager::GetResumingSuspendTimeout ()
; 540  : {
; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);
; 543  : }
; 544  : 
; 545  : DWORD
; 546  : PowerStateManager::GetBackLightTimeout ()
; 547  : {
; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  00066	7d21		 ldrb        r1,[r4,#0x14]

; 550  : }
; 551  : 
; 552  : DWORD
; 553  : PowerStateManager::GetUserIdleTimeOut ()
; 554  : {
; 555  : 	return (gSystemPowerStatus.bACLineStatus ==
; 556  : 			AC_LINE_OFFLINE ? m_dwBattUserIdleTimeout : m_dwACUserIdleTimeout);

  00068	b911		 cbnz        r1,|$LN27@ReAdjustTi|
  0006a	f8d0 2278	 ldr         r2,[r0,#0x278]
  0006e	e001		 b           |$LN28@ReAdjustTi|
  00070		 |$LN27@ReAdjustTi|
  00070	f8d0 2268	 ldr         r2,[r0,#0x268]
  00074		 |$LN28@ReAdjustTi|

; 286  : 	}
; 287  : 	if (m_dwCurUserIdleTimeout > GetUserIdleTimeOut ())

  00074	f8d0 328c	 ldr         r3,[r0,#0x28C]
  00078	4293		 cmp         r3,r2
  0007a	d90a		 bls         |$LN1@ReAdjustTi|

; 550  : }
; 551  : 
; 552  : DWORD
; 553  : PowerStateManager::GetUserIdleTimeOut ()
; 554  : {
; 555  : 	return (gSystemPowerStatus.bACLineStatus ==
; 556  : 			AC_LINE_OFFLINE ? m_dwBattUserIdleTimeout : m_dwACUserIdleTimeout);

  0007c	b911		 cbnz        r1,|$LN31@ReAdjustTi|
  0007e	f8d0 3278	 ldr         r3,[r0,#0x278]
  00082	e001		 b           |$LN32@ReAdjustTi|
  00084		 |$LN31@ReAdjustTi|
  00084	f8d0 3268	 ldr         r3,[r0,#0x268]
  00088		 |$LN32@ReAdjustTi|

; 288  : 	{
; 289  : 		if ((m_dwCurUserIdleTimeout = GetUserIdleTimeOut ()) == 0)

  00088	f8c0 328c	 str         r3,[r0,#0x28C]
  0008c	b90b		 cbnz        r3,|$LN1@ReAdjustTi|

; 290  : 			m_dwCurUserIdleTimeout = INFINITE;

  0008e	f8c0 528c	 str         r5,[r0,#0x28C]
  00092		 |$LN1@ReAdjustTi|
  00092		 |$M39|

; 291  : 	}
; 292  : }

  00092	e8bd 8830	 pop         {r4,r5,r11,pc}
  00096		 |$LN42@ReAdjustTi|
  00096		 |$M43|
  00096	defe		 __debugbreak
  00098		 |$LN40@ReAdjustTi|
  00098		 |$LN41@ReAdjustTi|
  00098	0000 0000	 DCD         |gSystemPowerStatus|
  0009c		 |$M37|

			 ENDP  ; |?ReAdjustTimeOuts@PowerStateManager@@UAAXXZ|, PowerStateManager::ReAdjustTimeOuts

	EXPORT	|?ReInitTimeOuts@PowerStateManager@@UAAXH@Z| ; PowerStateManager::ReInitTimeOuts

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?ReInitTimeOuts@PowerStateManager@@UAAXH@Z| DCD imagerel |$LN27@ReInitTime|
	DCD	0x3160e5
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?ReInitTimeOuts@PowerStateManager@@UAAXH@Z| PROC ; PowerStateManager::ReInitTimeOuts

; 258  : {

  00000		 |$LN27@ReInitTime|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M25|

; 259  : 	m_dwCurResumingSuspendTimeout =
; 260  : 		(fIgnoreSuspendResume ? INFINITE : GetResumingSuspendTimeout ());

  00008	4c1a		 ldr         r4,|$LN30@ReInitTime| ; =|gSystemPowerStatus|
  0000a	f06f 0500	 mvn         r5,#0
  0000e	b109		 cbz         r1,|$LN6@ReInitTime|
  00010	462b		 mov         r3,r5
  00012	e006		 b           |$LN11@ReInitTime|
  00014		 |$LN6@ReInitTime|

; 536  : }
; 537  : 
; 538  : DWORD
; 539  : PowerStateManager::GetResumingSuspendTimeout ()
; 540  : {
; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);

  00014	7d23		 ldrb        r3,[r4,#0x14]
  00016	b913		 cbnz        r3,|$LN10@ReInitTime|
  00018	f8d0 3270	 ldr         r3,[r0,#0x270]
  0001c	e001		 b           |$LN11@ReInitTime|
  0001e		 |$LN10@ReInitTime|
  0001e	f8d0 3260	 ldr         r3,[r0,#0x260]
  00022		 |$LN11@ReInitTime|

; 259  : 	m_dwCurResumingSuspendTimeout =
; 260  : 		(fIgnoreSuspendResume ? INFINITE : GetResumingSuspendTimeout ());

  00022	f8c0 3284	 str         r3,[r0,#0x284]

; 273  : 
; 274  : void
; 275  : PowerStateManager::ReAdjustTimeOuts ()
; 276  : {
; 277  : 	if (m_dwCurBacklightTimeout > GetBackLightTimeout ())
; 278  : 	{
; 279  : 		if ((m_dwCurBacklightTimeout = GetBackLightTimeout ()) == 0)
; 280  : 			m_dwCurBacklightTimeout = INFINITE;
; 281  : 	}
; 282  : 	if (m_dwCurSuspendTimeout > GetSuspendTimeOut ())
; 283  : 	{
; 284  : 		if ((m_dwCurSuspendTimeout = GetSuspendTimeOut ()) == 0)
; 285  : 			m_dwCurSuspendTimeout = INFINITE;
; 286  : 	}
; 287  : 	if (m_dwCurUserIdleTimeout > GetUserIdleTimeOut ())
; 288  : 	{
; 289  : 		if ((m_dwCurUserIdleTimeout = GetUserIdleTimeOut ()) == 0)
; 290  : 			m_dwCurUserIdleTimeout = INFINITE;
; 291  : 	}
; 292  : }
; 293  : 
; 294  : void
; 295  : PowerStateManager::ResetUserIdleTimeout (BOOL fIdle)
; 296  : {
; 297  : 	if (fIdle)
; 298  : 	{
; 299  : 		m_dwCurBacklightTimeout = GetBackLightTimeout ();
; 300  : 		m_dwCurUserIdleTimeout = GetUserIdleTimeOut ();
; 301  : 	}
; 302  : 	else
; 303  : 	{
; 304  : 		m_dwCurBacklightTimeout = INFINITE;
; 305  : 		m_dwCurUserIdleTimeout = INFINITE;
; 306  : 	}
; 307  : 	if (m_dwCurBacklightTimeout == 0)
; 308  : 		m_dwCurBacklightTimeout = INFINITE;
; 309  : 	if (m_dwCurUserIdleTimeout == 0)
; 310  : 		m_dwCurUserIdleTimeout = INFINITE;
; 311  : }
; 312  : 
; 313  : void
; 314  : PowerStateManager::ResetSystemIdleTimeTimeout (BOOL fIdle)
; 315  : {
; 316  : 	m_dwCurSuspendTimeout = (fIdle ? GetSuspendTimeOut () : INFINITE);
; 317  : 	if (m_dwCurSuspendTimeout == 0)
; 318  : 		m_dwCurSuspendTimeout = INFINITE;
; 319  : }
; 320  : 
; 321  : void
; 322  : PowerStateManager::SubtractTimeout (DWORD dwTicks)
; 323  : {
; 324  : 	if (m_dwCurSuspendTimeout != INFINITE)
; 325  : 		m_dwCurSuspendTimeout =
; 326  : 			(m_dwCurSuspendTimeout > dwTicks ? m_dwCurSuspendTimeout - dwTicks : 0);
; 327  : 	if (m_dwCurResumingSuspendTimeout != INFINITE)
; 328  : 		m_dwCurResumingSuspendTimeout =
; 329  : 			(m_dwCurResumingSuspendTimeout > dwTicks ? m_dwCurResumingSuspendTimeout - dwTicks : 0);
; 330  : 	if (m_dwCurBacklightTimeout != INFINITE)
; 331  : 		m_dwCurBacklightTimeout =
; 332  : 			(m_dwCurBacklightTimeout > dwTicks ? m_dwCurBacklightTimeout - dwTicks : 0);
; 333  : 	if (m_dwCurUserIdleTimeout != INFINITE)
; 334  : 		m_dwCurUserIdleTimeout =
; 335  : 			(m_dwCurUserIdleTimeout > dwTicks ? m_dwCurUserIdleTimeout - dwTicks : 0);
; 336  : }
; 337  : 
; 338  : DWORD
; 339  : PowerStateManager::GetSmallestTimeout (PTIMEOUT_ITEM pTimeoutItem)
; 340  : {
; 341  : 	DWORD dwReturn = INFINITE;
; 342  : 	TIMEOUT_ITEM activeEvent = NoTimeoutItem;
; 343  : 
; 344  : 	if (dwReturn > m_dwCurSuspendTimeout)
; 345  : 	{
; 346  : 		dwReturn = m_dwCurSuspendTimeout;
; 347  : 		activeEvent = SuspendTimeout;
; 348  : 	}
; 349  : 	if (dwReturn > m_dwCurResumingSuspendTimeout)
; 350  : 	{
; 351  : 		dwReturn = m_dwCurResumingSuspendTimeout;
; 352  : 		activeEvent = ResumingSuspendTimeout;
; 353  : 	}
; 354  : 	if (dwReturn > m_dwCurBacklightTimeout)
; 355  : 	{
; 356  : 		dwReturn = m_dwCurBacklightTimeout;
; 357  : 		activeEvent = BacklightTimeout;
; 358  : 	}
; 359  : 	if (dwReturn > m_dwCurUserIdleTimeout)
; 360  : 	{
; 361  : 		dwReturn = m_dwCurUserIdleTimeout;
; 362  : 		activeEvent = UserActivityTimeout;
; 363  : 	}
; 364  : 	if (pTimeoutItem)
; 365  : 	{
; 366  : 		*pTimeoutItem = activeEvent;
; 367  : 	}
; 368  : 	return dwReturn;
; 369  : }
; 370  : 
; 371  : LPCTSTR
; 372  : PowerStateManager::ActivityStateToSystemState (PLATFORM_ACTIVITY_STATE platActiveState)
; 373  : {
; 374  : 	PowerState *curState = m_pPowerStateList;
; 375  : 
; 376  : 	while (curState)
; 377  : 	{
; 378  : 		if (curState->GetState () == platActiveState)
; 379  : 			return curState->GetStateString ();
; 380  : 		else
; 381  : 			curState = curState->GetNextPowerState ();
; 382  : 	}
; 383  : 	return NULL;
; 384  : }
; 385  : 
; 386  : PLATFORM_ACTIVITY_STATE
; 387  : PowerStateManager::SystemStateToActivityState (LPCTSTR lpState)
; 388  : {
; 389  : 	if (lpState == NULL)
; 390  : 		return UnknownState;
; 391  : 	PowerState *curState = m_pPowerStateList;
; 392  : 
; 393  : 	while (curState)
; 394  : 	{
; 395  : 		if (_tcsicmp (curState->GetStateString (), lpState) == 0)
; 396  : 			return curState->GetState ();
; 397  : 		else
; 398  : 			curState = curState->GetNextPowerState ();
; 399  : 	}
; 400  : 	return UnknownState;
; 401  : }
; 402  : 
; 403  : HANDLE
; 404  : PowerStateManager::GetEventHandle (DWORD dwIndex)
; 405  : {
; 406  : 	switch (dwIndex)
; 407  : 	{
; 408  : 	  case PM_SHUTDOWN_EVENT:
; 409  : 		  return ghevPmShutdown;
; 410  : 	  case PM_RELOAD_ACTIVITY_TIMEOUTS_EVENT:
; 411  : 		  return ghevReloadActivityTimeouts;
; 412  : 	  case PM_MSGQUEUE_EVENT:
; 413  : 		  return m_hqNotify;
; 414  : 	  case PM_RESTART_TIMER_EVENT:
; 415  : 		  return ghevRestartTimers;
; 416  : 	  case PM_SYSTEM_API_EVENT:
; 417  : 		  return GetAPISignalHandle ();
; 418  : 	  case PM_BOOTPHASE2_EVENT:
; 419  : 		  return m_hevBootPhase2;
; 420  : 	}
; 421  : 	return NULL;
; 422  : }
; 423  : 
; 424  : void
; 425  : PowerStateManager::DisablePhase2Event ()
; 426  : {
; 427  : 	if (m_hevBootPhase2)
; 428  : 	{
; 429  : 		CloseHandle (m_hevBootPhase2);
; 430  : 		m_hevBootPhase2 = NULL;
; 431  : 	}
; 432  : }
; 433  : 
; 434  : void
; 435  : PowerStateManager::PlatformLoadTimeouts ()
; 436  : {
; 437  : 	DWORD dwStatus;
; 438  : 	TCHAR szPath[MAX_PATH];
; 439  : 	HKEY hk;
; 440  : 
; 441  : 	SETFNAME (_T ("PowerStateManager::PlatformLoadTimeouts"));
; 442  : 
; 443  : 	// Assume default values:
; 444  : 	m_dwACSuspendTimeout = DEF_ACSUSPENDTIMEOUT * 1000;
; 445  : 	m_dwACResumingSuspendTimeout = DEF_ACRESUMINGSUSPENDTIMEOUT * 1000;
; 446  : 	m_dwACBacklightTimeout = DEF_ACBACKLIGHTTIMEOUT * 1000;
; 447  : 	m_dwACUserIdleTimeout = DEF_ACUSERIDLETIMEOUT * 1000;
; 448  : 
; 449  : 	m_dwBattSuspendTimeout = DEF_BATTSUSPENDTIMEOUT * 1000;
; 450  : 	m_dwBattResumingSuspendTimeout = DEF_BATTRESUMINGSUSPENDTIMEOUT * 1000;
; 451  : 	m_dwBattBacklightTimeout = DEF_BATTBACKLIGHTTIMEOUT * 1000;
; 452  : 	m_dwBattUserIdleTimeout = DEF_BATTUSERIDLETIMEOUT * 1000;
; 453  : 
; 454  : 	// Get timeout thresholds for transitions between states:
; 455  : 	StringCchPrintf (szPath, MAX_PATH, _T ("%s\\%s"), PWRMGR_REG_KEY, _T ("Timeouts"));
; 456  : 	dwStatus = RegOpenKeyEx (HKEY_LOCAL_MACHINE, szPath, 0, 0, &hk);
; 457  : 	if (dwStatus == ERROR_SUCCESS)
; 458  : 	{
; 459  : 		// Read system power state timeouts:
; 460  : 		m_dwACSuspendTimeout =
; 461  : 			RegReadStateTimeout (hk, _T ("ACSuspendTimeout"), DEF_ACSUSPENDTIMEOUT);
; 462  : 		m_dwACResumingSuspendTimeout =
; 463  : 			RegReadStateTimeout (hk, _T ("ACResumingSuspendTimeout"), DEF_ACRESUMINGSUSPENDTIMEOUT);
; 464  : 		m_dwACBacklightTimeout =
; 465  : 			RegReadStateTimeout (hk, _T ("ACBacklightTimeout"), DEF_ACBACKLIGHTTIMEOUT);
; 466  : 		m_dwACUserIdleTimeout = RegReadStateTimeout (hk, _T ("ACUserIdle"), DEF_ACUSERIDLETIMEOUT);
; 467  : 
; 468  : 		m_dwBattSuspendTimeout =
; 469  : 			RegReadStateTimeout (hk, _T ("BattSuspendTimeout"), DEF_BATTSUSPENDTIMEOUT);
; 470  : 		m_dwBattResumingSuspendTimeout =
; 471  : 			RegReadStateTimeout (hk, _T ("BattResumingSuspendTimeout"),
; 472  : 								 DEF_BATTRESUMINGSUSPENDTIMEOUT);
; 473  : 		m_dwBattBacklightTimeout =
; 474  : 			RegReadStateTimeout (hk, _T ("BattBacklightTimeout"), DEF_BATTBACKLIGHTTIMEOUT);
; 475  : 		m_dwBattUserIdleTimeout =
; 476  : 			RegReadStateTimeout (hk, _T ("BattUserIdle"), DEF_BATTUSERIDLETIMEOUT);
; 477  : 
; 478  : 		// Release resources:
; 479  : 		RegCloseKey (hk);
; 480  : 	}
; 481  : 
; 482  : 	// Update Legacy if we find them.
; 483  : 	DWORD dwValue;
; 484  : 
; 485  : 	if (m_pLegacySPScreenOff)
; 486  : 	{
; 487  : 		m_pLegacySPScreenOff->AckNotification ();
; 488  : 		if (m_pLegacySPScreenOff->GetRegValue (_T ("Display"), &dwValue))
; 489  : 		{	// Found SmartPhone Legacy Value. Use it.
; 490  : 			m_dwACUserIdleTimeout = m_dwBattUserIdleTimeout = dwValue;
; 491  : 		}
; 492  : 	}
; 493  : 
; 494  : 	if (m_pLegacyBacklightOff)
; 495  : 	{
; 496  : 		m_pLegacyBacklightOff->AckNotification ();
; 497  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("BatteryTimeout"), &dwValue))
; 498  : 		{	// Legacy Backlight Off Registry value.
; 499  : 			m_dwBattBacklightTimeout = dwValue;
; 500  : 		}
; 501  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldBatteryTimeout"), &dwValue))
; 502  : 		{
; 503  : 			m_dwBattBacklightTimeout = INFINITE;
; 504  : 			m_dwBattUserIdleTimeout = INFINITE;
; 505  : 		}
; 506  : 
; 507  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("ACTimeout"), &dwValue))
; 508  : 		{	// Legacy Backlight Off Registry value.
; 509  : 			m_dwACBacklightTimeout = dwValue;
; 510  : 		}
; 511  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldACTimeout"), &dwValue))
; 512  : 		{
; 513  : 			m_dwACBacklightTimeout = INFINITE;
; 514  : 			m_dwACUserIdleTimeout = INFINITE;
; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 519  : 			  (_T
; 520  : 			   ("%s: ACSuspendTimeout %d, ACResumingSuspendTimeout %d,  ACBacklightTimeout %d, ACUserIdleTimeout %d \r\n"),
; 521  : 			   pszFname, m_dwACSuspendTimeout, m_dwACResumingSuspendTimeout, m_dwACBacklightTimeout,
; 522  : 			   m_dwACUserIdleTimeout));
; 523  : 	PMLOGMSG (ZONE_INIT
; 524  : 			  || ZONE_PLATFORM,
; 525  : 			  (_T
; 526  : 			   ("%s: BattSuspendTimeout %d, BattResumingSuspendTimeout %d , BattBacklightTimeout %d, BattUserIdleTimeout%d \r\n"),
; 527  : 			   pszFname, m_dwBattSuspendTimeout, m_dwBattResumingSuspendTimeout,
; 528  : 			   m_dwBattBacklightTimeout, m_dwBattUserIdleTimeout));
; 529  : }
; 530  : 
; 531  : DWORD
; 532  : PowerStateManager::GetSuspendTimeOut ()
; 533  : {
; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);

  00026	7d23		 ldrb        r3,[r4,#0x14]
  00028	b913		 cbnz        r3,|$LN14@ReInitTime|
  0002a	f8d0 226c	 ldr         r2,[r0,#0x26C]
  0002e	e001		 b           |$LN15@ReInitTime|
  00030		 |$LN14@ReInitTime|
  00030	f8d0 225c	 ldr         r2,[r0,#0x25C]
  00034		 |$LN15@ReInitTime|

; 261  : 	m_dwCurSuspendTimeout = GetSuspendTimeOut ();

  00034	f8c0 2280	 str         r2,[r0,#0x280]

; 543  : }
; 544  : 
; 545  : DWORD
; 546  : PowerStateManager::GetBackLightTimeout ()
; 547  : {
; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  00038	7d23		 ldrb        r3,[r4,#0x14]
  0003a	b913		 cbnz        r3,|$LN18@ReInitTime|
  0003c	f8d0 1274	 ldr         r1,[r0,#0x274]
  00040	e001		 b           |$LN19@ReInitTime|
  00042		 |$LN18@ReInitTime|
  00042	f8d0 1264	 ldr         r1,[r0,#0x264]
  00046		 |$LN19@ReInitTime|

; 262  : 	m_dwCurBacklightTimeout = GetBackLightTimeout ();

  00046	f8c0 1288	 str         r1,[r0,#0x288]

; 550  : }
; 551  : 
; 552  : DWORD
; 553  : PowerStateManager::GetUserIdleTimeOut ()
; 554  : {
; 555  : 	return (gSystemPowerStatus.bACLineStatus ==
; 556  : 			AC_LINE_OFFLINE ? m_dwBattUserIdleTimeout : m_dwACUserIdleTimeout);

  0004a	7d23		 ldrb        r3,[r4,#0x14]
  0004c	b913		 cbnz        r3,|$LN22@ReInitTime|
  0004e	f8d0 3278	 ldr         r3,[r0,#0x278]
  00052	e001		 b           |$LN23@ReInitTime|
  00054		 |$LN22@ReInitTime|
  00054	f8d0 3268	 ldr         r3,[r0,#0x268]
  00058		 |$LN23@ReInitTime|

; 263  : 	m_dwCurUserIdleTimeout = GetUserIdleTimeOut ();

  00058	f8c0 328c	 str         r3,[r0,#0x28C]

; 264  : 
; 265  : 	// If timer is not set, then it is not supported.
; 266  : 	if (m_dwCurBacklightTimeout == 0)

  0005c	b909		 cbnz        r1,|$LN3@ReInitTime|

; 267  : 		m_dwCurBacklightTimeout = INFINITE;

  0005e	f8c0 5288	 str         r5,[r0,#0x288]
  00062		 |$LN3@ReInitTime|

; 268  : 	if (m_dwCurUserIdleTimeout == 0)

  00062	b90b		 cbnz        r3,|$LN2@ReInitTime|

; 269  : 		m_dwCurUserIdleTimeout = INFINITE;

  00064	f8c0 528c	 str         r5,[r0,#0x28C]
  00068		 |$LN2@ReInitTime|

; 270  : 	if (m_dwCurSuspendTimeout == 0)

  00068	b90a		 cbnz        r2,|$LN1@ReInitTime|

; 271  : 		m_dwCurSuspendTimeout = INFINITE;

  0006a	f8c0 5280	 str         r5,[r0,#0x280]
  0006e		 |$LN1@ReInitTime|
  0006e		 |$M28|

; 272  : }

  0006e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00072		 |$LN31@ReInitTime|
  00072		 |$M32|
  00072	defe		 __debugbreak
  00074		 |$LN29@ReInitTime|
  00074		 |$LN30@ReInitTime|
  00074	0000 0000	 DCD         |gSystemPowerStatus|
  00078		 |$M26|

			 ENDP  ; |?ReInitTimeOuts@PowerStateManager@@UAAXH@Z|, PowerStateManager::ReInitTimeOuts

	EXPORT	|??1NotifyRegKey@@QAA@XZ|		; NotifyRegKey::~NotifyRegKey

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??1NotifyRegKey@@QAA@XZ| DCD imagerel |$LN12@NotifyRegK|
	DCD	0xfd30604d
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1NotifyRegKey@@QAA@XZ| PROC		; NotifyRegKey::~NotifyRegKey

; 132  : 	{

  00000		 |$LN12@NotifyRegK|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M10|
  00008	4604		 mov         r4,r0

; 133  : 		if (m_hNotifyEvent != INVALID_HANDLE_VALUE)

  0000a	6860		 ldr         r0,[r4,#4]
  0000c	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00010	d001		 beq         |$LN1@NotifyRegK|

; 134  : 			CloseHandle (m_hNotifyEvent);

  00012	f000 f800	 bl          CloseHandle
  00016		 |$LN1@NotifyRegK|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  00016	6820		 ldr         r0,[r4]
  00018	b118		 cbz         r0,|$LN6@NotifyRegK|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  0001a	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  0001e	2300		 movs        r3,#0
  00020	6023		 str         r3,[r4]
  00022		 |$LN6@NotifyRegK|
  00022		 |$M13|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 135  : 	}

  00022	e8bd 8818	 pop         {r3,r4,r11,pc}
  00026		 |$M11|

			 ENDP  ; |??1NotifyRegKey@@QAA@XZ|, NotifyRegKey::~NotifyRegKey

	EXPORT	|??0NotifyRegKey@@QAA@PAUHKEY__@@PBG@Z|	; NotifyRegKey::NotifyRegKey
	IMPORT	|CeFindFirstRegChange|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0NotifyRegKey@@QAA@PAUHKEY__@@PBG@Z| DCD imagerel |$LN15@NotifyRegK|
	DCD	0xfd736081
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0NotifyRegKey@@QAA@PAUHKEY__@@PBG@Z| PROC ; NotifyRegKey::NotifyRegKey

; 124  : 	{

  00000		 |$LN15@NotifyRegK|
  00000	e92d 48fc	 push        {r2-r7,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M13|
  00008	4615		 mov         r5,r2
  0000a	4604		 mov         r4,r0
; File c:\wince800\public\common\oak\inc\cregedit.h

; 44   :         m_hDevKey = NULL;

  0000c	2700		 movs        r7,#0
  0000e	6027		 str         r7,[r4]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 124  : 	{

  00010	460e		 mov         r6,r1
; File c:\wince800\public\common\oak\inc\cregedit.h

; 45   :         if( pszRegPath )

  00012	b145		 cbz         r5,|$LN4@NotifyRegK|

; 46   :         {
; 47   :             if( RegOpenKeyEx( hKey, pszRegPath, 0, 0, &m_hDevKey ) != ERROR_SUCCESS )

  00014	2300		 movs        r3,#0
  00016	2200		 movs        r2,#0
  00018	4629		 mov         r1,r5
  0001a	4630		 mov         r0,r6
  0001c	9400		 str         r4,[sp]
  0001e	f000 f800	 bl          RegOpenKeyExW
  00022	b100		 cbz         r0,|$LN4@NotifyRegK|

; 48   :             {
; 49   :                 m_hDevKey = NULL;

  00024	6027		 str         r7,[r4]
  00026		 |$LN4@NotifyRegK|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 126  : 		if (GetHKey () != NULL)

  00026	6820		 ldr         r0,[r4]
  00028	f06f 0300	 mvn         r3,#0
  0002c	6063		 str         r3,[r4,#4]
  0002e	b120		 cbz         r0,|$LN1@NotifyRegK|

; 127  : 		{
; 128  : 			m_hNotifyEvent = CeFindFirstRegChange (GetHKey (), TRUE, REG_NOTIFY_CHANGE_LAST_SET);

  00030	2204		 movs        r2,#4
  00032	2101		 movs        r1,#1
  00034	f000 f800	 bl          CeFindFirstRegChange
  00038	6060		 str         r0,[r4,#4]
  0003a		 |$LN1@NotifyRegK|

; 129  : 		}
; 130  : 	}

  0003a	4620		 mov         r0,r4
  0003c		 |$M16|
  0003c	e8bd 88fc	 pop         {r2-r7,r11,pc}
  00040		 |$M14|

			 ENDP  ; |??0NotifyRegKey@@QAA@PAUHKEY__@@PBG@Z|, NotifyRegKey::NotifyRegKey

	EXPORT	|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@EFOLCMFD@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@ONLBCKCN@?$AAB?$AAa?$AAt?$AAt?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@EJHDCKBI@?$AAB?$AAa?$AAt?$AAt?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@JHEKGCLH@?$AAB?$AAa?$AAt?$AAt?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@OPCBLDNA@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@BDFEBKKE@?$AAA?$AAC?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@GPCHDDGG@?$AAA?$AAC?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@MOJOBHAI@?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@LFNKHDIA@?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@DMMGCODP@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@PELGLPFE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@PHAMGDO@?$AAO?$AAl?$AAd?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@PJBHBNNG@?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@GNGPINPK@?$AAO?$AAl?$AAd?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1MM@BEOOFGNN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@CGCIHKLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAL?$AAo?$AAa?$AAd?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1NK@BONKCGGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAR@| [ DATA ] ; `string'
	EXPORT	|?PlatformLoadTimeouts@PowerStateManager@@UAAXXZ| ; PowerStateManager::PlatformLoadTimeouts
	IMPORT	|StringCchPrintfW|
	IMPORT	|?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z| ; RegReadStateTimeout

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?PlatformLoadTimeouts@PowerStateManager@@UAAXXZ| DCD imagerel |$LN24@PlatformLo|
	DCD	imagerel |$unwind2$?PlatformLoadTimeouts@PowerStateManager@@UAAXXZ|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?PlatformLoadTimeouts@PowerStateManager@@UAAXXZ| DCD 0x443000ec
	DCD	0x1e887e8
	DCD	0xff30a8fc
	DCD	0x30a801e8
	DCD	0xff
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffed

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NK@BONKCGGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAR@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "B", 0x0, "a", 0x0, "t"
	DCB	0x0, "t", 0x0, "S", 0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "B", 0x0, "a", 0x0, "t", 0x0, "t"
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, "S", 0x0, "u", 0x0, "s", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "T", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, ",", 0x0, " ", 0x0, "B", 0x0, "a"
	DCB	0x0, "t", 0x0, "t", 0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "l", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "t", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "U", 0x0, "s", 0x0, "e"
	DCB	0x0, "r", 0x0, "I", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@CGCIHKLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAL?$AAo?$AAa?$AAd?$AAT@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "a", 0x0, "n"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":"
	DCB	0x0, "P", 0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, "m", 0x0, "L", 0x0, "o", 0x0, "a", 0x0, "d"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, "s", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MM@BEOOFGNN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "A", 0x0, "C", 0x0, "S"
	DCB	0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "A", 0x0, "C", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "u"
	DCB	0x0, "m", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, "S", 0x0, "u"
	DCB	0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, " "
	DCB	0x0, "A", 0x0, "C", 0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "l", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "t", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "A"
	DCB	0x0, "C", 0x0, "U", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, "T", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@GNGPINPK@?$AAO?$AAl?$AAd?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "O"
	DCB	0x0, "l", 0x0, "d", 0x0, "A", 0x0, "C", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@PJBHBNNG@?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@PHAMGDO@?$AAO?$AAl?$AAd?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "O"
	DCB	0x0, "l", 0x0, "d", 0x0, "B", 0x0, "a", 0x0, "t", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "y", 0x0, "T", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@PELGLPFE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "y"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@DMMGCODP@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?$AA@| DCB "D", 0x0
	DCB	"i", 0x0, "s", 0x0, "p", 0x0, "l", 0x0, "a", 0x0, "y", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@LFNKHDIA@?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "S", 0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@MOJOBHAI@?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, "S", 0x0, "u", 0x0, "s"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@GPCHDDGG@?$AAA?$AAC?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l"
	DCB	0x0, "i", 0x0, "g", 0x0, "h", 0x0, "t", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@BDFEBKKE@?$AAA?$AAC?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "U", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@OPCBLDNA@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "S", 0x0, "u", 0x0, "s"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@JHEKGCLH@?$AAB?$AAa?$AAt?$AAt?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "u", 0x0, "m", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, "S"
	DCB	0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@EJHDCKBI@?$AAB?$AAa?$AAt?$AAt?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "B", 0x0, "a", 0x0, "c"
	DCB	0x0, "k", 0x0, "l", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "t"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@ONLBCKCN@?$AAB?$AAa?$AAt?$AAt?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "U", 0x0, "s", 0x0, "e"
	DCB	0x0, "r", 0x0, "I", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@EFOLCMFD@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$AA@| DCB "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, "s", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "\\"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "\\"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "\\", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@| DCB "%", 0x0
	DCB	"s", 0x0, "\\", 0x0, "%", 0x0, "s", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?PlatformLoadTimeouts@PowerStateManager@@UAAXXZ| PROC ; PowerStateManager::PlatformLoadTimeouts

; 436  : {

  00000		 |$LN24@PlatformLo|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d1c	 subw        sp,sp,#0x21C
  00010		 |$M22|

; 437  : 	DWORD dwStatus;
; 438  : 	TCHAR szPath[MAX_PATH];
; 439  : 	HKEY hk;
; 440  : 
; 441  : 	SETFNAME (_T ("PowerStateManager::PlatformLoadTimeouts"));
; 442  : 
; 443  : 	// Assume default values:
; 444  : 	m_dwACSuspendTimeout = DEF_ACSUSPENDTIMEOUT * 1000;

  00010	4b87		 ldr         r3,|$LN49@PlatformLo| ; =0x927c0

; 445  : 	m_dwACResumingSuspendTimeout = DEF_ACRESUMINGSUSPENDTIMEOUT * 1000;

  00012	f643 2298	 mov         r2,#0x3A98
  00016	f8c0 2260	 str         r2,[r0,#0x260]
  0001a	f8c0 325c	 str         r3,[r0,#0x25C]

; 446  : 	m_dwACBacklightTimeout = DEF_ACBACKLIGHTTIMEOUT * 1000;
; 447  : 	m_dwACUserIdleTimeout = DEF_ACUSERIDLETIMEOUT * 1000;

  0001e	4b83		 ldr         r3,|$LN48@PlatformLo| ; =0x1d4c0
  00020	f64e 2160	 mov         r1,#0xEA60

; 448  : 
; 449  : 	m_dwBattSuspendTimeout = DEF_BATTSUSPENDTIMEOUT * 1000;
; 450  : 	m_dwBattResumingSuspendTimeout = DEF_BATTRESUMINGSUSPENDTIMEOUT * 1000;

  00024	f8c0 2270	 str         r2,[r0,#0x270]
  00028	f8c0 3268	 str         r3,[r0,#0x268]
  0002c	4b7e		 ldr         r3,|$LN47@PlatformLo| ; =0x493e0

; 451  : 	m_dwBattBacklightTimeout = DEF_BATTBACKLIGHTTIMEOUT * 1000;
; 452  : 	m_dwBattUserIdleTimeout = DEF_BATTUSERIDLETIMEOUT * 1000;
; 453  : 
; 454  : 	// Get timeout thresholds for transitions between states:
; 455  : 	StringCchPrintf (szPath, MAX_PATH, _T ("%s\\%s"), PWRMGR_REG_KEY, _T ("Timeouts"));

  0002e	4a7d		 ldr         r2,|$LN46@PlatformLo| ; =|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@|
  00030	4604		 mov         r4,r0
  00032	f8c0 326c	 str         r3,[r0,#0x26C]
  00036	f247 5330	 mov         r3,#0x7530
  0003a	f8c0 3274	 str         r3,[r0,#0x274]
  0003e	4b78		 ldr         r3,|$LN45@PlatformLo| ; =|??_C@_1BC@EFOLCMFD@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$AA@|
  00040	f8c0 1264	 str         r1,[r0,#0x264]
  00044	f8c0 1278	 str         r1,[r0,#0x278]
  00048	9300		 str         r3,[sp]
  0004a	4b74		 ldr         r3,|$LN44@PlatformLo| ; =|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  0004c	f44f 7182	 mov         r1,#0x104
  00050	a804		 add         r0,sp,#0x10
  00052	f000 f800	 bl          StringCchPrintfW

; 456  : 	dwStatus = RegOpenKeyEx (HKEY_LOCAL_MACHINE, szPath, 0, 0, &hk);

  00056	ab02		 add         r3,sp,#8
  00058	9300		 str         r3,[sp]
  0005a	2301		 movs        r3,#1
  0005c	07d8		 lsls        r0,r3,#0x1F
  0005e	3002		 adds        r0,#2
  00060	a904		 add         r1,sp,#0x10
  00062	2300		 movs        r3,#0
  00064	2200		 movs        r2,#0
  00066	f000 f800	 bl          RegOpenKeyExW

; 457  : 	if (dwStatus == ERROR_SUCCESS)

  0006a	bbe0		 cbnz        r0,|$LN10@PlatformLo|

; 458  : 	{
; 459  : 		// Read system power state timeouts:
; 460  : 		m_dwACSuspendTimeout =
; 461  : 			RegReadStateTimeout (hk, _T ("ACSuspendTimeout"), DEF_ACSUSPENDTIMEOUT);

  0006c	496a		 ldr         r1,|$LN43@PlatformLo| ; =|??_C@_1CC@LFNKHDIA@?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  0006e	9802		 ldr         r0,[sp,#8]
  00070	f44f 7216	 mov         r2,#0x258
  00074	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|

; 462  : 		m_dwACResumingSuspendTimeout =
; 463  : 			RegReadStateTimeout (hk, _T ("ACResumingSuspendTimeout"), DEF_ACRESUMINGSUSPENDTIMEOUT);

  00078	4966		 ldr         r1,|$LN42@PlatformLo| ; =|??_C@_1DC@MOJOBHAI@?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  0007a	f8c4 025c	 str         r0,[r4,#0x25C]
  0007e	9802		 ldr         r0,[sp,#8]
  00080	220f		 movs        r2,#0xF
  00082	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|

; 464  : 		m_dwACBacklightTimeout =
; 465  : 			RegReadStateTimeout (hk, _T ("ACBacklightTimeout"), DEF_ACBACKLIGHTTIMEOUT);

  00086	4962		 ldr         r1,|$LN41@PlatformLo| ; =|??_C@_1CG@GPCHDDGG@?$AAA?$AAC?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00088	f8c4 0260	 str         r0,[r4,#0x260]
  0008c	9802		 ldr         r0,[sp,#8]
  0008e	223c		 movs        r2,#0x3C
  00090	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|

; 466  : 		m_dwACUserIdleTimeout = RegReadStateTimeout (hk, _T ("ACUserIdle"), DEF_ACUSERIDLETIMEOUT);

  00094	495d		 ldr         r1,|$LN40@PlatformLo| ; =|??_C@_1BG@BDFEBKKE@?$AAA?$AAC?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  00096	f8c4 0264	 str         r0,[r4,#0x264]
  0009a	9802		 ldr         r0,[sp,#8]
  0009c	2278		 movs        r2,#0x78
  0009e	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|

; 467  : 
; 468  : 		m_dwBattSuspendTimeout =
; 469  : 			RegReadStateTimeout (hk, _T ("BattSuspendTimeout"), DEF_BATTSUSPENDTIMEOUT);

  000a2	4959		 ldr         r1,|$LN39@PlatformLo| ; =|??_C@_1CG@OPCBLDNA@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  000a4	f8c4 0268	 str         r0,[r4,#0x268]
  000a8	9802		 ldr         r0,[sp,#8]
  000aa	f44f 7296	 mov         r2,#0x12C
  000ae	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|

; 470  : 		m_dwBattResumingSuspendTimeout =
; 471  : 			RegReadStateTimeout (hk, _T ("BattResumingSuspendTimeout"),
; 472  : 								 DEF_BATTRESUMINGSUSPENDTIMEOUT);

  000b2	4954		 ldr         r1,|$LN38@PlatformLo| ; =|??_C@_1DG@JHEKGCLH@?$AAB?$AAa?$AAt?$AAt?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  000b4	f8c4 026c	 str         r0,[r4,#0x26C]
  000b8	9802		 ldr         r0,[sp,#8]
  000ba	220f		 movs        r2,#0xF
  000bc	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|

; 473  : 		m_dwBattBacklightTimeout =
; 474  : 			RegReadStateTimeout (hk, _T ("BattBacklightTimeout"), DEF_BATTBACKLIGHTTIMEOUT);

  000c0	494f		 ldr         r1,|$LN37@PlatformLo| ; =|??_C@_1CK@EJHDCKBI@?$AAB?$AAa?$AAt?$AAt?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  000c2	f8c4 0270	 str         r0,[r4,#0x270]
  000c6	9802		 ldr         r0,[sp,#8]
  000c8	221e		 movs        r2,#0x1E
  000ca	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|

; 475  : 		m_dwBattUserIdleTimeout =
; 476  : 			RegReadStateTimeout (hk, _T ("BattUserIdle"), DEF_BATTUSERIDLETIMEOUT);

  000ce	494b		 ldr         r1,|$LN36@PlatformLo| ; =|??_C@_1BK@ONLBCKCN@?$AAB?$AAa?$AAt?$AAt?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  000d0	f8c4 0274	 str         r0,[r4,#0x274]
  000d4	9802		 ldr         r0,[sp,#8]
  000d6	223c		 movs        r2,#0x3C
  000d8	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|
  000dc	f8c4 0278	 str         r0,[r4,#0x278]

; 477  : 
; 478  : 		// Release resources:
; 479  : 		RegCloseKey (hk);

  000e0	9802		 ldr         r0,[sp,#8]
  000e2	f000 f800	 bl          RegCloseKey
  000e6		 |$LN10@PlatformLo|

; 480  : 	}
; 481  : 
; 482  : 	// Update Legacy if we find them.
; 483  : 	DWORD dwValue;
; 484  : 
; 485  : 	if (m_pLegacySPScreenOff)

  000e6	f8d4 3250	 ldr         r3,[r4,#0x250]
  000ea	b173		 cbz         r3,|$LN8@PlatformLo|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 160  : 		return CeFindNextRegChange (m_hNotifyEvent);

  000ec	6858		 ldr         r0,[r3,#4]
  000ee	f000 f800	 bl          CeFindNextRegChange
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 488  : 		if (m_pLegacySPScreenOff->GetRegValue (_T ("Display"), &dwValue))

  000f2	4941		 ldr         r1,|$LN35@PlatformLo| ; =|??_C@_1BA@DMMGCODP@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?$AA@|
  000f4	f8d4 0250	 ldr         r0,[r4,#0x250]
  000f8	aa03		 add         r2,sp,#0xC
  000fa	f000 f800	 bl          |?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z|
  000fe	b120		 cbz         r0,|$LN8@PlatformLo|

; 489  : 		{	// Found SmartPhone Legacy Value. Use it.
; 490  : 			m_dwACUserIdleTimeout = m_dwBattUserIdleTimeout = dwValue;

  00100	9b03		 ldr         r3,[sp,#0xC]
  00102	f8c4 3278	 str         r3,[r4,#0x278]
  00106	f8c4 3268	 str         r3,[r4,#0x268]
  0010a		 |$LN8@PlatformLo|

; 491  : 		}
; 492  : 	}
; 493  : 
; 494  : 	if (m_pLegacyBacklightOff)

  0010a	f8d4 3254	 ldr         r3,[r4,#0x254]
  0010e	b383		 cbz         r3,|$LN1@PlatformLo|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 160  : 		return CeFindNextRegChange (m_hNotifyEvent);

  00110	6858		 ldr         r0,[r3,#4]
  00112	f000 f800	 bl          CeFindNextRegChange
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 497  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("BatteryTimeout"), &dwValue))

  00116	4937		 ldr         r1,|$LN34@PlatformLo| ; =|??_C@_1BO@PELGLPFE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00118	f8d4 0254	 ldr         r0,[r4,#0x254]
  0011c	aa03		 add         r2,sp,#0xC
  0011e	f000 f800	 bl          |?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z|
  00122	f06f 0500	 mvn         r5,#0
  00126	b118		 cbz         r0,|$LN6@PlatformLo|

; 498  : 		{	// Legacy Backlight Off Registry value.
; 499  : 			m_dwBattBacklightTimeout = dwValue;

  00128	9b03		 ldr         r3,[sp,#0xC]
  0012a	f8c4 3274	 str         r3,[r4,#0x274]
  0012e	e00a		 b           |$LN4@PlatformLo|
  00130		 |$LN6@PlatformLo|

; 500  : 		}
; 501  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldBatteryTimeout"), &dwValue))

  00130	492f		 ldr         r1,|$LN33@PlatformLo| ; =|??_C@_1CE@PHAMGDO@?$AAO?$AAl?$AAd?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00132	f8d4 0254	 ldr         r0,[r4,#0x254]
  00136	aa03		 add         r2,sp,#0xC
  00138	f000 f800	 bl          |?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z|
  0013c	b118		 cbz         r0,|$LN4@PlatformLo|

; 502  : 		{
; 503  : 			m_dwBattBacklightTimeout = INFINITE;

  0013e	f8c4 5274	 str         r5,[r4,#0x274]

; 504  : 			m_dwBattUserIdleTimeout = INFINITE;

  00142	f8c4 5278	 str         r5,[r4,#0x278]
  00146		 |$LN4@PlatformLo|

; 505  : 		}
; 506  : 
; 507  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("ACTimeout"), &dwValue))

  00146	4929		 ldr         r1,|$LN32@PlatformLo| ; =|??_C@_1BE@PJBHBNNG@?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00148	f8d4 0254	 ldr         r0,[r4,#0x254]
  0014c	aa03		 add         r2,sp,#0xC
  0014e	f000 f800	 bl          |?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z|
  00152	b118		 cbz         r0,|$LN3@PlatformLo|

; 508  : 		{	// Legacy Backlight Off Registry value.
; 509  : 			m_dwACBacklightTimeout = dwValue;

  00154	9b03		 ldr         r3,[sp,#0xC]
  00156	f8c4 3264	 str         r3,[r4,#0x264]
  0015a	e00a		 b           |$LN1@PlatformLo|
  0015c		 |$LN3@PlatformLo|

; 510  : 		}
; 511  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldACTimeout"), &dwValue))

  0015c	4922		 ldr         r1,|$LN31@PlatformLo| ; =|??_C@_1BK@GNGPINPK@?$AAO?$AAl?$AAd?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  0015e	f8d4 0254	 ldr         r0,[r4,#0x254]
  00162	aa03		 add         r2,sp,#0xC
  00164	f000 f800	 bl          |?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z|
  00168	b118		 cbz         r0,|$LN1@PlatformLo|

; 512  : 		{
; 513  : 			m_dwACBacklightTimeout = INFINITE;

  0016a	f8c4 5264	 str         r5,[r4,#0x264]

; 514  : 			m_dwACUserIdleTimeout = INFINITE;

  0016e	f8c4 5268	 str         r5,[r4,#0x268]
  00172		 |$LN1@PlatformLo|

; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 519  : 			  (_T
; 520  : 			   ("%s: ACSuspendTimeout %d, ACResumingSuspendTimeout %d,  ACBacklightTimeout %d, ACUserIdleTimeout %d \r\n"),
; 521  : 			   pszFname, m_dwACSuspendTimeout, m_dwACResumingSuspendTimeout, m_dwACBacklightTimeout,
; 522  : 			   m_dwACUserIdleTimeout));

  00172	4d1c		 ldr         r5,|$LN30@PlatformLo| ; =|dpCurSettings|
  00174	f8d5 3440	 ldr         r3,[r5,#0x440]
  00178	f013 0f04	 tst         r3,#4
  0017c	d102		 bne         |$LN13@PlatformLo|
  0017e	f413 6f80	 tst         r3,#0x400
  00182	d00f		 beq         |$LN14@PlatformLo|
  00184		 |$LN13@PlatformLo|
  00184	f8d4 3268	 ldr         r3,[r4,#0x268]
  00188	f8d4 225c	 ldr         r2,[r4,#0x25C]
  0018c	4814		 ldr         r0,|$LN29@PlatformLo| ; =|??_C@_1MM@BEOOFGNN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm@|
  0018e	9301		 str         r3,[sp,#4]
  00190	f8d4 3264	 ldr         r3,[r4,#0x264]
  00194	4910		 ldr         r1,|$LN27@PlatformLo| ; =|??_C@_1FA@CGCIHKLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAL?$AAo?$AAa?$AAd?$AAT@|
  00196	9300		 str         r3,[sp]
  00198	f8d4 3260	 ldr         r3,[r4,#0x260]
  0019c	f000 f800	 bl          CeLogMsg
  001a0	f8d5 3440	 ldr         r3,[r5,#0x440]
  001a4		 |$LN14@PlatformLo|

; 523  : 	PMLOGMSG (ZONE_INIT
; 524  : 			  || ZONE_PLATFORM,
; 525  : 			  (_T
; 526  : 			   ("%s: BattSuspendTimeout %d, BattResumingSuspendTimeout %d , BattBacklightTimeout %d, BattUserIdleTimeout%d \r\n"),
; 527  : 			   pszFname, m_dwBattSuspendTimeout, m_dwBattResumingSuspendTimeout,
; 528  : 			   m_dwBattBacklightTimeout, m_dwBattUserIdleTimeout));

  001a4	f013 0f04	 tst         r3,#4
  001a8	d102		 bne         |$LN15@PlatformLo|
  001aa	f413 6f80	 tst         r3,#0x400
  001ae	d00d		 beq         |$LN16@PlatformLo|
  001b0		 |$LN15@PlatformLo|
  001b0	f8d4 3278	 ldr         r3,[r4,#0x278]
  001b4	f8d4 226c	 ldr         r2,[r4,#0x26C]
  001b8	4808		 ldr         r0,|$LN28@PlatformLo| ; =|??_C@_1NK@BONKCGGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAR@|
  001ba	9301		 str         r3,[sp,#4]
  001bc	f8d4 3274	 ldr         r3,[r4,#0x274]
  001c0	4905		 ldr         r1,|$LN27@PlatformLo| ; =|??_C@_1FA@CGCIHKLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAL?$AAo?$AAa?$AAd?$AAT@|
  001c2	9300		 str         r3,[sp]
  001c4	f8d4 3270	 ldr         r3,[r4,#0x270]
  001c8	f000 f800	 bl          CeLogMsg
  001cc		 |$LN16@PlatformLo|
  001cc		 |$M25|

; 529  : }

  001cc	f20d 2d1c	 addw        sp,sp,#0x21C
  001d0	f000 f800	 bl          __security_pop_cookie
  001d4	e8bd 8830	 pop         {r4,r5,r11,pc}
  001d8		 |$LN26@PlatformLo|
  001d8		 |$LN27@PlatformLo|
  001d8	0000 0000	 DCD         |??_C@_1FA@CGCIHKLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAL?$AAo?$AAa?$AAd?$AAT@|
  001dc		 |$LN28@PlatformLo|
  001dc	0000 0000	 DCD         |??_C@_1NK@BONKCGGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAR@|
  001e0		 |$LN29@PlatformLo|
  001e0	0000 0000	 DCD         |??_C@_1MM@BEOOFGNN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm@|
  001e4		 |$LN30@PlatformLo|
  001e4	0000 0000	 DCD         |dpCurSettings|
  001e8		 |$LN31@PlatformLo|
  001e8	0000 0000	 DCD         |??_C@_1BK@GNGPINPK@?$AAO?$AAl?$AAd?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  001ec		 |$LN32@PlatformLo|
  001ec	0000 0000	 DCD         |??_C@_1BE@PJBHBNNG@?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  001f0		 |$LN33@PlatformLo|
  001f0	0000 0000	 DCD         |??_C@_1CE@PHAMGDO@?$AAO?$AAl?$AAd?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  001f4		 |$LN34@PlatformLo|
  001f4	0000 0000	 DCD         |??_C@_1BO@PELGLPFE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  001f8		 |$LN35@PlatformLo|
  001f8	0000 0000	 DCD         |??_C@_1BA@DMMGCODP@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?$AA@|
  001fc		 |$LN36@PlatformLo|
  001fc	0000 0000	 DCD         |??_C@_1BK@ONLBCKCN@?$AAB?$AAa?$AAt?$AAt?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  00200		 |$LN37@PlatformLo|
  00200	0000 0000	 DCD         |??_C@_1CK@EJHDCKBI@?$AAB?$AAa?$AAt?$AAt?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00204		 |$LN38@PlatformLo|
  00204	0000 0000	 DCD         |??_C@_1DG@JHEKGCLH@?$AAB?$AAa?$AAt?$AAt?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00208		 |$LN39@PlatformLo|
  00208	0000 0000	 DCD         |??_C@_1CG@OPCBLDNA@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  0020c		 |$LN40@PlatformLo|
  0020c	0000 0000	 DCD         |??_C@_1BG@BDFEBKKE@?$AAA?$AAC?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  00210		 |$LN41@PlatformLo|
  00210	0000 0000	 DCD         |??_C@_1CG@GPCHDDGG@?$AAA?$AAC?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00214		 |$LN42@PlatformLo|
  00214	0000 0000	 DCD         |??_C@_1DC@MOJOBHAI@?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00218		 |$LN43@PlatformLo|
  00218	0000 0000	 DCD         |??_C@_1CC@LFNKHDIA@?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  0021c		 |$LN44@PlatformLo|
  0021c	0000 0000	 DCD         |??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  00220		 |$LN45@PlatformLo|
  00220	0000 0000	 DCD         |??_C@_1BC@EFOLCMFD@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$AA@|
  00224		 |$LN46@PlatformLo|
  00224	0000 0000	 DCD         |??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@|
  00228		 |$LN47@PlatformLo|
  00228	93e0 0004	 DCD         0x493e0
  0022c		 |$LN48@PlatformLo|
  0022c	d4c0 0001	 DCD         0x1d4c0
  00230		 |$LN49@PlatformLo|
  00230	27c0 0009	 DCD         0x927c0
  00234		 |$M23|

			 ENDP  ; |?PlatformLoadTimeouts@PowerStateManager@@UAAXXZ|, PowerStateManager::PlatformLoadTimeouts

	EXPORT	|??_C@_1EE@KHKCGJBK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AAT?$AAi?$AAm?$AAe?$AAr?$AAR?$AAe?$AAs?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?ThreadRun@PowerStateManager@@UAAKXZ|	; PowerStateManager::ThreadRun
	EXPORT	|??_7PowerStateManager@@6B@| [ DATA ]	; PowerStateManager::`vftable'
	EXPORT	|??0PowerStateManager@@QAA@XZ|		; PowerStateManager::PowerStateManager
	IMPORT	|OpenEventW|
	IMPORT	|PmPolicyCreateNotificationQueue|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateManager@@QAA@XZ| DCD imagerel |$LN6@PowerState|
	DCD	0xfd3060f1

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateManager@@6B@| DCD |?SystemStateToActivityState@PowerStateManager@@UAA?AW4PLATFORM_ACTIVITY_STATE@@PBG@Z| ; PowerStateManager::`vftable'
	DCD	|?ActivityStateToSystemState@PowerStateManager@@UAAPBGW4PLATFORM_ACTIVITY_STATE@@@Z|
	DCD	|?ReInitTimeOuts@PowerStateManager@@UAAXH@Z|
	DCD	|?ReAdjustTimeOuts@PowerStateManager@@UAAXXZ|
	DCD	|?ResetUserIdleTimeout@PowerStateManager@@UAAXH@Z|
	DCD	|?ResetSystemIdleTimeTimeout@PowerStateManager@@UAAXH@Z|
	DCD	|?SubtractTimeout@PowerStateManager@@UAAXK@Z|
	DCD	|?GetSmallestTimeout@PowerStateManager@@UAAKPAW4TIMEOUT_ITEM@@@Z|
	DCD	|?DisablePhase2Event@PowerStateManager@@UAAXXZ|
	DCD	|?ThreadRun@PowerStateManager@@UAAKXZ|
	DCD	|?PlatformLoadTimeouts@PowerStateManager@@UAAXXZ|
	DCD	|?CreatePowerStateList@PowerStateManager@@UAAHXZ|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "/"
	DCB	0x0, "B", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, "P", 0x0, "h"
	DCB	0x0, "a", 0x0, "s", 0x0, "e", 0x0, "2", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "M", 0x0, "a"
	DCB	0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, "/"
	DCB	0x0, "R", 0x0, "e", 0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d"
	DCB	0x0, "A", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i"
	DCB	0x0, "t", 0x0, "y", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@KHKCGJBK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AAT?$AAi?$AAm?$AAe?$AAr?$AAR?$AAe?$AAs?$AAe@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "M", 0x0, "a"
	DCB	0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, "/"
	DCB	0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m"
	DCB	0x0, "I", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "r", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateManager@@QAA@XZ| PROC	; PowerStateManager::PowerStateManager

; 98   : {

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PMSystemAPI@@QAA@XZ|
  0000e	4b1f		 ldr         r3,|$LN14@PowerState| ; =|??_7PowerStateManager@@6B@|

; 99   : 	// Create events
; 100  : 	m_hevBootPhase2 = OpenEvent (EVENT_ALL_ACCESS, FALSE, _T ("SYSTEM/BootPhase2"));

  00010	4a1d		 ldr         r2,|$LN13@PowerState| ; =|??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@|
  00012	481c		 ldr         r0,|$LN12@PowerState| ; =0x1f0003
  00014	2100		 movs        r1,#0
  00016	6023		 str         r3,[r4]
  00018	f000 f800	 bl          OpenEventW

; 101  : 
; 102  : 	m_hevReloadActivityTimeouts =
; 103  : 		CreateEvent (NULL, FALSE, FALSE, _T ("PowerManager/ReloadActivityTimeouts"));

  0001c	4b18		 ldr         r3,|$LN11@PowerState| ; =|??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@|
  0001e	f8c4 0238	 str         r0,[r4,#0x238]
  00022	2000		 movs        r0,#0
  00024	2200		 movs        r2,#0
  00026	2100		 movs        r1,#0
  00028	f000 f800	 bl          CreateEventW
  0002c	f8c4 023c	 str         r0,[r4,#0x23C]

; 104  : 	m_hevRestartTimers = CreateEvent (NULL, FALSE, FALSE, NULL);

  00030	2000		 movs        r0,#0
  00032	2300		 movs        r3,#0
  00034	2200		 movs        r2,#0
  00036	2100		 movs        r1,#0
  00038	f000 f800	 bl          CreateEventW

; 105  : 	m_hevSystemIdleTimerReset =
; 106  : 		CreateEvent (NULL, FALSE, FALSE, _T ("PowerManager/SystemIdleTimerReset"));

  0003c	4b0f		 ldr         r3,|$LN10@PowerState| ; =|??_C@_1EE@KHKCGJBK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AAT?$AAi?$AAm?$AAe?$AAr?$AAR?$AAe?$AAs?$AAe@|
  0003e	f8c4 0240	 str         r0,[r4,#0x240]
  00042	2000		 movs        r0,#0
  00044	2200		 movs        r2,#0
  00046	2100		 movs        r1,#0
  00048	f000 f800	 bl          CreateEventW
  0004c	f8c4 0244	 str         r0,[r4,#0x244]

; 107  : 	m_hqNotify = PmPolicyCreateNotificationQueue ();

  00050	f000 f800	 bl          PmPolicyCreateNotificationQueue

; 108  : 	// Using Global Event
; 109  : 	m_hevPmShutdown = ghevPmShutdown;

  00054	4b08		 ldr         r3,|$LN9@PowerState| ; =|ghevPmShutdown|
  00056	f8c4 024c	 str         r0,[r4,#0x24C]

; 110  : 
; 111  : 	m_pPowerStateList = NULL;
; 112  : 
; 113  : 	m_dwUnattendedModeRef = 0;
; 114  : 	m_pLegacySPScreenOff = NULL;
; 115  : 	m_pLegacyBacklightOff = NULL;
; 116  : }

  0005a	4620		 mov         r0,r4
  0005c	681b		 ldr         r3,[r3]
  0005e	f8c4 3248	 str         r3,[r4,#0x248]
  00062	2300		 movs        r3,#0
  00064	f8c4 327c	 str         r3,[r4,#0x27C]
  00068	f8c4 3290	 str         r3,[r4,#0x290]
  0006c	f8c4 3250	 str         r3,[r4,#0x250]
  00070	f8c4 3254	 str         r3,[r4,#0x254]
  00074		 |$M7|
  00074	e8bd 8818	 pop         {r3,r4,r11,pc}
  00078		 |$LN8@PowerState|
  00078		 |$LN9@PowerState|
  00078	0000 0000	 DCD         |ghevPmShutdown|
  0007c		 |$LN10@PowerState|
  0007c	0000 0000	 DCD         |??_C@_1EE@KHKCGJBK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AAT?$AAi?$AAm?$AAe?$AAr?$AAR?$AAe?$AAs?$AAe@|
  00080		 |$LN11@PowerState|
  00080	0000 0000	 DCD         |??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@|
  00084		 |$LN12@PowerState|
  00084	0003 001f	 DCD         0x1f0003
  00088		 |$LN13@PowerState|
  00088	0000 0000	 DCD         |??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@|
  0008c		 |$LN14@PowerState|
  0008c	0000 0000	 DCD         |??_7PowerStateManager@@6B@|
  00090		 |$M5|

			 ENDP  ; |??0PowerStateManager@@QAA@XZ|, PowerStateManager::PowerStateManager

	EXPORT	|??_C@_1GI@IPJOIKEB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@PCNICJCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@BIAJPGEI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi@| [ DATA ] ; `string'
	EXPORT	|?GetFirstPowerState@PowerStateManager@@QAAPAVPowerState@@XZ| ; PowerStateManager::GetFirstPowerState
	IMPORT	|WaitForMultipleObjects|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?GetFirstPowerState@PowerStateManager@@QAAPAVPowerState@@XZ| DCD imagerel |$LN35@GetFirstPo|
	DCD	0xfdb26131

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@BIAJPGEI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "u"
	DCB	0x0, "t", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, " "
	DCB	0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "s", 0x0, "i", 0x0, "g", 0x0, "n", 0x0, "a", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@PCNICJCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "a", 0x0, "n"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":"
	DCB	0x0, "G", 0x0, "e", 0x0, "t", 0x0, "F", 0x0, "i", 0x0, "r"
	DCB	0x0, "s", 0x0, "t", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@IPJOIKEB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "W", 0x0, "a", 0x0, "i"
	DCB	0x0, "t", 0x0, "F", 0x0, "o", 0x0, "r", 0x0, "M", 0x0, "u"
	DCB	0x0, "l", 0x0, "t", 0x0, "i", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "O", 0x0, "b", 0x0, "j", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetFirstPowerState@PowerStateManager@@QAAPAVPowerState@@XZ| PROC ; PowerStateManager::GetFirstPowerState

; 580  : {

  00000		 |$LN35@GetFirstPo|
  00000	e92d 487e	 push        {r1-r6,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M33|

; 581  : 	SETFNAME (_T ("PowerStateManager::GetFirstPowerState"));
; 582  : 	PowerState *curState = NULL;
; 583  : 	HANDLE hEvents[2];
; 584  : 
; 585  : 	hEvents[0] = ghevPmShutdown;

  00008	4b28		 ldr         r3,|$LN43@GetFirstPo| ; =|ghevPmShutdown|
  0000a	4605		 mov         r5,r0
  0000c	2400		 movs        r4,#0
  0000e	681b		 ldr         r3,[r3]

; 586  : 	hEvents[1] = GetAPISignalHandle ();
; 587  : 	DWORD dwStatus = WaitForMultipleObjects (2, hEvents, FALSE, INFINITE);

  00010	4669		 mov         r1,sp
  00012	2200		 movs        r2,#0
  00014	9300		 str         r3,[sp]
  00016	6aab		 ldr         r3,[r5,#0x28]
  00018	2002		 movs        r0,#2
  0001a	9301		 str         r3,[sp,#4]
  0001c	43e3		 mvns        r3,r4
  0001e	f000 f800	 bl          WaitForMultipleObjects

; 611  : 	  default:
; 612  : 		  PMLOGMSG (ZONE_INIT
; 613  : 					|| ZONE_WARN, (_T ("%s: WaitForMultipleObjects() returned %d, exiting\r\n"),
; 614  : 								   pszFname, dwStatus));

  00022	4b21		 ldr         r3,|$LN42@GetFirstPo| ; =|dpCurSettings|
  00024	4602		 mov         r2,r0
  00026	f8d3 3440	 ldr         r3,[r3,#0x440]
  0002a	b342		 cbz         r2,|$LN7@GetFirstPo|

; 588  : 
; 589  : 	switch (dwStatus)

  0002c	2a01		 cmp         r2,#1
  0002e	d00a		 beq         |$LN6@GetFirstPo|

; 611  : 	  default:
; 612  : 		  PMLOGMSG (ZONE_INIT
; 613  : 					|| ZONE_WARN, (_T ("%s: WaitForMultipleObjects() returned %d, exiting\r\n"),
; 614  : 								   pszFname, dwStatus));

  00030	f013 0f04	 tst         r3,#4
  00034	d102		 bne         |$LN16@GetFirstPo|
  00036	f013 0f02	 tst         r3,#2
  0003a	d02a		 beq         |$LN13@GetFirstPo|
  0003c		 |$LN16@GetFirstPo|
  0003c	4917		 ldr         r1,|$LN39@GetFirstPo| ; =|??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@|
  0003e	4819		 ldr         r0,|$LN41@GetFirstPo| ; =|??_C@_1GI@IPJOIKEB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@|
  00040	f000 f800	 bl          CeLogMsg

; 615  : 		  break;

  00044	e025		 b           |$LN13@GetFirstPo|
  00046		 |$LN6@GetFirstPo|

; 594  : 		  break;
; 595  : 	  case (WAIT_OBJECT_0 + 1):
; 596  : 		  {
; 597  : 			  PMLOGMSG (ZONE_INIT, (_T ("%s: initialization complete\r\n"), pszFname));

  00046	f013 0f04	 tst         r3,#4
  0004a	d003		 beq         |$LN14@GetFirstPo|
  0004c	4913		 ldr         r1,|$LN39@GetFirstPo| ; =|??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@|
  0004e	4814		 ldr         r0,|$LN40@GetFirstPo| ; =|??_C@_1DM@PCNICJCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00050	f000 f800	 bl          CeLogMsg
  00054		 |$LN14@GetFirstPo|

; 598  : 			  PLATFORM_ACTIVITY_STATE apiState = RequestedSystemPowerState ();

  00054	4628		 mov         r0,r5
  00056	f000 f800	 bl          |?RequestedSystemPowerState@PMSystemAPI@@QAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|

; 599  : 
; 600  : 			  curState = m_pPowerStateList;

  0005a	f8d5 427c	 ldr         r4,[r5,#0x27C]
  0005e	4606		 mov         r6,r0
  00060	e006		 b           |$LN31@GetFirstPo|
  00062		 |$LL5@GetFirstPo|

; 602  : 			  {
; 603  : 				  if (curState->GetState () == apiState)

  00062	6823		 ldr         r3,[r4]
  00064	4620		 mov         r0,r4
  00066	695b		 ldr         r3,[r3,#0x14]
  00068	4798		 blx         r3
  0006a	42b0		 cmp         r0,r6
  0006c	d002		 beq         |$LN30@GetFirstPo|

; 604  : 					  break;
; 605  : 				  else
; 606  : 					  curState = curState->GetNextPowerState ();

  0006e	6964		 ldr         r4,[r4,#0x14]
  00070		 |$LN31@GetFirstPo|

; 601  : 			  while (curState)

  00070	2c00		 cmp         r4,#0
  00072	d1f6		 bne         |$LL5@GetFirstPo|
  00074		 |$LN30@GetFirstPo|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  00074	6ae8		 ldr         r0,[r5,#0x2C]
  00076	2103		 movs        r1,#3
  00078	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 610  : 		  break;

  0007c	e009		 b           |$LN13@GetFirstPo|
  0007e		 |$LN7@GetFirstPo|

; 590  : 	{
; 591  : 	  case (WAIT_OBJECT_0 + 0):
; 592  : 		  PMLOGMSG (ZONE_INIT
; 593  : 					|| ZONE_WARN, (_T ("%s: shutdown event signaled, exiting\r\n"), pszFname));

  0007e	f013 0f04	 tst         r3,#4
  00082	d102		 bne         |$LN12@GetFirstPo|
  00084	f013 0f02	 tst         r3,#2
  00088	d003		 beq         |$LN13@GetFirstPo|
  0008a		 |$LN12@GetFirstPo|
  0008a	4904		 ldr         r1,|$LN39@GetFirstPo| ; =|??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@|
  0008c	4802		 ldr         r0,|$LN38@GetFirstPo| ; =|??_C@_1EO@BIAJPGEI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi@|
  0008e	f000 f800	 bl          CeLogMsg
  00092		 |$LN13@GetFirstPo|

; 616  : 	}
; 617  : 	return curState;
; 618  : }

  00092	4620		 mov         r0,r4
  00094		 |$M36|
  00094	e8bd 887e	 pop         {r1-r6,r11,pc}
  00098		 |$LN37@GetFirstPo|
  00098		 |$LN38@GetFirstPo|
  00098	0000 0000	 DCD         |??_C@_1EO@BIAJPGEI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi@|
  0009c		 |$LN39@GetFirstPo|
  0009c	0000 0000	 DCD         |??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@|
  000a0		 |$LN40@GetFirstPo|
  000a0	0000 0000	 DCD         |??_C@_1DM@PCNICJCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  000a4		 |$LN41@GetFirstPo|
  000a4	0000 0000	 DCD         |??_C@_1GI@IPJOIKEB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@|
  000a8		 |$LN42@GetFirstPo|
  000a8	0000 0000	 DCD         |dpCurSettings|
  000ac		 |$LN43@GetFirstPo|
  000ac	0000 0000	 DCD         |ghevPmShutdown|
  000b0		 |$M34|

			 ENDP  ; |?GetFirstPowerState@PowerStateManager@@QAAPAVPowerState@@XZ|, PowerStateManager::GetFirstPowerState

	EXPORT	|??_C@_1EM@CFJHILCA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAt?$AAo?$AA?5?$AA?$CC?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@DEDGDBDG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@JJGHMLFM@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?SetSystemState@PowerStateManager@@AAAPAVPowerState@@PAV2@@Z| ; PowerStateManager::SetSystemState

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?SetSystemState@PowerStateManager@@AAAPAVPowerState@@PAV2@@Z| DCD imagerel |$LN23@SetSystemS|
	DCD	0x35614d

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@JJGHMLFM@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "n", 0x0, "s", 0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o"
	DCB	0x0, "r", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@DEDGDBDG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "a", 0x0, "n"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@CFJHILCA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAt?$AAo?$AA?5?$AA?$CC?$AA?$CF@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, "f", 0x0, "r"
	DCB	0x0, "o", 0x0, "m", 0x0, " ", 0x0, """", 0x0, "%", 0x0, "s"
	DCB	0x0, """", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, """"
	DCB	0x0, "%", 0x0, "s", 0x0, """", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?SetSystemState@PowerStateManager@@AAAPAVPowerState@@PAV2@@Z| PROC ; PowerStateManager::SetSystemState

; 747  : {

  00000		 |$LN23@SetSystemS|
  00000	e92d 4bf0	 push        {r4-r9,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M21|
  00008	460d		 mov         r5,r1

; 748  : 	SETFNAME (_T ("PowerStateManager::SetSystemState"));
; 749  : 	if (pCurPowerState != NULL)

  0000a	2d00		 cmp         r5,#0
  0000c	4681		 mov         r9,r0
  0000e	d047		 beq         |$LN6@SetSystemS|

; 750  : 	{
; 751  : 		PLATFORM_ACTIVITY_STATE curState = pCurPowerState->GetState ();

  00010	682b		 ldr         r3,[r5]
  00012	4608		 mov         r0,r1
  00014	695b		 ldr         r3,[r3,#0x14]
  00016	4798		 blx         r3
  00018	f8df 8098	 ldr         r8,|$LN29@SetSystemS| ; =|dpCurSettings|
  0001c	4604		 mov         r4,r0
  0001e		 |$LL8@SetSystemS|

; 752  : 		PLATFORM_ACTIVITY_STATE newState = curState;
; 753  : 
; 754  : 		do
; 755  : 		{	// Switch to new stable state.
; 756  : 			newState = pCurPowerState->GetLastNewState ();

  0001e	682b		 ldr         r3,[r5]
  00020	4628		 mov         r0,r5
  00022	6a1b		 ldr         r3,[r3,#0x20]
  00024	4798		 blx         r3
  00026	4607		 mov         r7,r0

; 757  : 			if (newState != curState)

  00028	42a7		 cmp         r7,r4
  0002a	d039		 beq         |$LN6@SetSystemS|

; 758  : 			{
; 759  : 				PowerState *pNewPowerState = GetStateObject (newState);

  0002c	4601		 mov         r1,r0
  0002e	4648		 mov         r0,r9
  00030	f000 f800	 bl          |?GetStateObject@PowerStateManager@@QAAPAVPowerState@@W4PLATFORM_ACTIVITY_STATE@@@Z|
  00034	4606		 mov         r6,r0

; 760  : 
; 761  : 				if (pNewPowerState == NULL)

  00036	b33e		 cbz         r6,|$LN19@SetSystemS|

; 765  : 					ASSERT (FALSE);
; 766  : 					newState = curState;
; 767  : 				}
; 768  : 				else if (pNewPowerState != pCurPowerState)

  00038	42ae		 cmp         r6,r5
  0003a	d021		 beq         |$LN2@SetSystemS|

; 769  : 				{
; 770  : 					PMLOGMSG (ZONE_INIT
; 771  : 							  || ZONE_PLATFORM, (_T ("%s: state change from \"%s\" to \"%s\" \r\n"),
; 772  : 												 pszFname, pCurPowerState->GetStateString (),
; 773  : 												 pNewPowerState->GetStateString ()));

  0003c	f8d8 3440	 ldr         r3,[r8,#0x440]
  00040	f013 0f04	 tst         r3,#4
  00044	d102		 bne         |$LN14@SetSystemS|
  00046	f413 6f80	 tst         r3,#0x400
  0004a	d00e		 beq         |$LN15@SetSystemS|
  0004c		 |$LN14@SetSystemS|
  0004c	6833		 ldr         r3,[r6]
  0004e	4630		 mov         r0,r6
  00050	699b		 ldr         r3,[r3,#0x18]
  00052	4798		 blx         r3
  00054	682b		 ldr         r3,[r5]
  00056	4604		 mov         r4,r0
  00058	4628		 mov         r0,r5
  0005a	699b		 ldr         r3,[r3,#0x18]
  0005c	4798		 blx         r3
  0005e	4914		 ldr         r1,|$LN28@SetSystemS| ; =|??_C@_1EE@DEDGDBDG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt@|
  00060	4602		 mov         r2,r0
  00062	4812		 ldr         r0,|$LN27@SetSystemS| ; =|??_C@_1EM@CFJHILCA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAt?$AAo?$AA?5?$AA?$CC?$AA?$CF@|
  00064	4623		 mov         r3,r4
  00066	f000 f800	 bl          CeLogMsg
  0006a		 |$LN15@SetSystemS|

; 774  : 					pCurPowerState = pNewPowerState;
; 775  : 					pCurPowerState->EnterState ();

  0006a	6833		 ldr         r3,[r6]
  0006c	4630		 mov         r0,r6
  0006e	4635		 mov         r5,r6
  00070	685b		 ldr         r3,[r3,#4]
  00072	4798		 blx         r3

; 776  : 
; 777  : 					// Update to new state:
; 778  : 					curState = newState;
; 779  : 					newState = pCurPowerState->GetLastNewState ();

  00074	6833		 ldr         r3,[r6]
  00076	4630		 mov         r0,r6
  00078	463c		 mov         r4,r7
  0007a	6a1b		 ldr         r3,[r3,#0x20]
  0007c	4798		 blx         r3

; 780  : 				}
; 781  : 				else

  0007e	e000		 b           |$LN7@SetSystemS|
  00080		 |$LN2@SetSystemS|

; 782  : 					newState = curState;

  00080	4620		 mov         r0,r4
  00082		 |$LN7@SetSystemS|

; 783  : 			}
; 784  : 		} while (newState != curState);	    // Change to stable state.

  00082	42a0		 cmp         r0,r4
  00084	d1cb		 bne         |$LL8@SetSystemS|
  00086	e00b		 b           |$LN6@SetSystemS|
  00088		 |$LN19@SetSystemS|

; 762  : 				{	// Wrong state or unsupported state.
; 763  : 					PMLOGMSG (ZONE_WARN
; 764  : 							  || ZONE_PLATFORM, (_T ("Unsupported state %d \r\n"), newState));

  00088	f8d8 3440	 ldr         r3,[r8,#0x440]
  0008c	f013 0f02	 tst         r3,#2
  00090	d102		 bne         |$LN12@SetSystemS|
  00092	f413 6f80	 tst         r3,#0x400
  00096	d003		 beq         |$LN6@SetSystemS|
  00098		 |$LN12@SetSystemS|
  00098	4803		 ldr         r0,|$LN26@SetSystemS| ; =|??_C@_1DA@JJGHMLFM@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  0009a	4639		 mov         r1,r7
  0009c	f000 f800	 bl          CeLogMsg
  000a0		 |$LN6@SetSystemS|

; 785  : 
; 786  : 		ASSERT (pCurPowerState != NULL);
; 787  : 	}
; 788  : 	return pCurPowerState;
; 789  : }

  000a0	4628		 mov         r0,r5
  000a2		 |$M24|
  000a2	e8bd 8bf0	 pop         {r4-r9,r11,pc}
  000a6		 |$LN30@SetSystemS|
  000a6		 |$M31|
  000a6	defe		 __debugbreak
  000a8		 |$LN25@SetSystemS|
  000a8		 |$LN26@SetSystemS|
  000a8	0000 0000	 DCD         |??_C@_1DA@JJGHMLFM@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  000ac		 |$LN27@SetSystemS|
  000ac	0000 0000	 DCD         |??_C@_1EM@CFJHILCA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAt?$AAo?$AA?5?$AA?$CC?$AA?$CF@|
  000b0		 |$LN28@SetSystemS|
  000b0	0000 0000	 DCD         |??_C@_1EE@DEDGDBDG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt@|
  000b4		 |$LN29@SetSystemS|
  000b4	0000 0000	 DCD         |dpCurSettings|
  000b8		 |$M22|

			 ENDP  ; |?SetSystemState@PowerStateManager@@AAAPAVPowerState@@PAV2@@Z|, PowerStateManager::SetSystemState

	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateOff@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateOff@@UAAPAXI@Z| PROC	; PowerStateOff::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateOff@@UAAPAXI@Z|, PowerStateOff::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateOn@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateOn@@UAAPAXI@Z| PROC	; PowerStateOn::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateOn@@UAAPAXI@Z|, PowerStateOn::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateUserIdle@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateUserIdle@@UAAPAXI@Z| PROC ; PowerStateUserIdle::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateUserIdle@@UAAPAXI@Z|, PowerStateUserIdle::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateUnattended@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateUnattended@@UAAPAXI@Z| PROC ; PowerStateUnattended::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateUnattended@@UAAPAXI@Z|, PowerStateUnattended::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateResuming@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateResuming@@UAAPAXI@Z| PROC ; PowerStateResuming::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateResuming@@UAAPAXI@Z|, PowerStateResuming::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateSuspend@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateSuspend@@UAAPAXI@Z| PROC ; PowerStateSuspend::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateSuspend@@UAAPAXI@Z|, PowerStateSuspend::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateScreenOff@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateScreenOff@@UAAPAXI@Z| PROC ; PowerStateScreenOff::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateScreenOff@@UAAPAXI@Z|, PowerStateScreenOff::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateBacklightOff@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateBacklightOff@@UAAPAXI@Z| PROC ; PowerStateBacklightOff::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateBacklightOff@@UAAPAXI@Z|, PowerStateBacklightOff::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateColdReboot@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateColdReboot@@UAAPAXI@Z| PROC ; PowerStateColdReboot::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateColdReboot@@UAAPAXI@Z|, PowerStateColdReboot::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateReboot@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateReboot@@UAAPAXI@Z| PROC	; PowerStateReboot::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateReboot@@UAAPAXI@Z|, PowerStateReboot::`scalar deleting destructor'

	EXPORT	|??_GNotifyRegKey@@QAAPAXI@Z|		; NotifyRegKey::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GNotifyRegKey@@QAAPAXI@Z| DCD imagerel |$LN15@scalar|
	DCD	0x31606d
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GNotifyRegKey@@QAAPAXI@Z| PROC	; NotifyRegKey::`scalar deleting destructor'
  00000		 |$LN15@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M13|
  00008	4604		 mov         r4,r0
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 133  : 		if (m_hNotifyEvent != INVALID_HANDLE_VALUE)

  0000a	6860		 ldr         r0,[r4,#4]
  0000c	460d		 mov         r5,r1
  0000e	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00012	d001		 beq         |$LN4@scalar|

; 134  : 			CloseHandle (m_hNotifyEvent);

  00014	f000 f800	 bl          CloseHandle
  00018		 |$LN4@scalar|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  00018	6820		 ldr         r0,[r4]
  0001a	b118		 cbz         r0,|$LN9@scalar|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  0001c	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  00020	2300		 movs        r3,#0
  00022	6023		 str         r3,[r4]
  00024		 |$LN9@scalar|
  00024	f015 0f01	 tst         r5,#1
  00028	d002		 beq         |$LN1@scalar|
  0002a	4620		 mov         r0,r4
  0002c	f000 f800	 bl          |??3@YAXPAX@Z|
  00030		 |$LN1@scalar|
  00030	4620		 mov         r0,r4
  00032		 |$M16|
  00032	e8bd 8830	 pop         {r4,r5,r11,pc}
  00036		 |$M14|

			 ENDP  ; |??_GNotifyRegKey@@QAAPAXI@Z|, NotifyRegKey::`scalar deleting destructor'

	EXPORT	|??1PowerStateManager@@QAA@XZ|		; PowerStateManager::~PowerStateManager
	IMPORT	|PmPolicyCloseNotificationQueue|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??1PowerStateManager@@QAA@XZ| DCD imagerel |$LN48@PowerState|
	DCD	0xfd326161
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateManager@@QAA@XZ| PROC	; PowerStateManager::~PowerStateManager

; 119  : {

  00000		 |$LN48@PowerState|
  00000	e92d 4878	 push        {r3-r6,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M46|
  00008	4b29		 ldr         r3,|$LN51@PowerState| ; =|??_7PowerStateManager@@6B@|
  0000a	4604		 mov         r4,r0
  0000c	6023		 str         r3,[r4]

; 120  : 	while (m_pPowerStateList != NULL)

  0000e	f8d0 327c	 ldr         r3,[r0,#0x27C]
  00012	b163		 cbz         r3,|$LN8@PowerState|
  00014		 |$LL9@PowerState|

; 121  : 	{
; 122  : 		PowerState *pNextState = m_pPowerStateList->GetNextPowerState ();

  00014	f8d4 327c	 ldr         r3,[r4,#0x27C]
  00018	695d		 ldr         r5,[r3,#0x14]

; 123  : 		delete m_pPowerStateList;

  0001a	b123		 cbz         r3,|$LN12@PowerState|
  0001c	4618		 mov         r0,r3
  0001e	681b		 ldr         r3,[r3]
  00020	2101		 movs        r1,#1
  00022	681b		 ldr         r3,[r3]
  00024	4798		 blx         r3
  00026		 |$LN12@PowerState|

; 124  : 
; 125  : 		m_pPowerStateList = pNextState;

  00026	f8c4 527c	 str         r5,[r4,#0x27C]
  0002a	2d00		 cmp         r5,#0
  0002c	d1f2		 bne         |$LL9@PowerState|
  0002e		 |$LN8@PowerState|

; 126  : 	}
; 127  : 	if (m_hevReloadActivityTimeouts)

  0002e	f8d4 023c	 ldr         r0,[r4,#0x23C]
  00032	b108		 cbz         r0,|$LN7@PowerState|

; 128  : 		CloseHandle (m_hevReloadActivityTimeouts);

  00034	f000 f800	 bl          CloseHandle
  00038		 |$LN7@PowerState|

; 129  : 	if (m_hevRestartTimers)

  00038	f8d4 0240	 ldr         r0,[r4,#0x240]
  0003c	b108		 cbz         r0,|$LN6@PowerState|

; 130  : 		CloseHandle (m_hevRestartTimers);

  0003e	f000 f800	 bl          CloseHandle
  00042		 |$LN6@PowerState|

; 131  : 	if (m_hevSystemIdleTimerReset)

  00042	f8d4 0244	 ldr         r0,[r4,#0x244]
  00046	b108		 cbz         r0,|$LN5@PowerState|

; 132  : 		CloseHandle (m_hevSystemIdleTimerReset);

  00048	f000 f800	 bl          CloseHandle
  0004c		 |$LN5@PowerState|

; 133  : 	if (m_hevBootPhase2)

  0004c	f8d4 0238	 ldr         r0,[r4,#0x238]
  00050	b108		 cbz         r0,|$LN4@PowerState|

; 134  : 		CloseHandle (m_hevBootPhase2);

  00052	f000 f800	 bl          CloseHandle
  00056		 |$LN4@PowerState|

; 135  : 	if (m_hqNotify)

  00056	f8d4 024c	 ldr         r0,[r4,#0x24C]
  0005a	b108		 cbz         r0,|$LN3@PowerState|

; 136  : 		PmPolicyCloseNotificationQueue (m_hqNotify);

  0005c	f000 f800	 bl          PmPolicyCloseNotificationQueue
  00060		 |$LN3@PowerState|

; 137  : 	if (m_pLegacySPScreenOff)

  00060	f8d4 5250	 ldr         r5,[r4,#0x250]
  00064	2600		 movs        r6,#0
  00066	b16d		 cbz         r5,|$LN20@PowerState|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 133  : 		if (m_hNotifyEvent != INVALID_HANDLE_VALUE)

  00068	6868		 ldr         r0,[r5,#4]
  0006a	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  0006e	d001		 beq         |$LN23@PowerState|

; 134  : 			CloseHandle (m_hNotifyEvent);

  00070	f000 f800	 bl          CloseHandle
  00074		 |$LN23@PowerState|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  00074	6828		 ldr         r0,[r5]
  00076	b110		 cbz         r0,|$LN28@PowerState|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  00078	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  0007c	602e		 str         r6,[r5]
  0007e		 |$LN28@PowerState|
  0007e	4628		 mov         r0,r5
  00080	f000 f800	 bl          |??3@YAXPAX@Z|
  00084		 |$LN20@PowerState|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 140  : 	if (m_pLegacyBacklightOff)

  00084	f8d4 5254	 ldr         r5,[r4,#0x254]
  00088	b16d		 cbz         r5,|$LN31@PowerState|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 133  : 		if (m_hNotifyEvent != INVALID_HANDLE_VALUE)

  0008a	6868		 ldr         r0,[r5,#4]
  0008c	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00090	d001		 beq         |$LN34@PowerState|

; 134  : 			CloseHandle (m_hNotifyEvent);

  00092	f000 f800	 bl          CloseHandle
  00096		 |$LN34@PowerState|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  00096	6828		 ldr         r0,[r5]
  00098	b110		 cbz         r0,|$LN39@PowerState|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  0009a	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  0009e	602e		 str         r6,[r5]
  000a0		 |$LN39@PowerState|
  000a0	4628		 mov         r0,r5
  000a2	f000 f800	 bl          |??3@YAXPAX@Z|
  000a6		 |$LN31@PowerState|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 142  : }

  000a6	4620		 mov         r0,r4
  000a8	f000 f800	 bl          |??1PMSystemAPI@@QAA@XZ|
  000ac		 |$M49|
  000ac	e8bd 8878	 pop         {r3-r6,r11,pc}
  000b0		 |$LN50@PowerState|
  000b0		 |$LN51@PowerState|
  000b0	0000 0000	 DCD         |??_7PowerStateManager@@6B@|
  000b4		 |$M47|

			 ENDP  ; |??1PowerStateManager@@QAA@XZ|, PowerStateManager::~PowerStateManager

	EXPORT	|??_C@_1CG@FDJPJCCG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@MGKPHPG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?ReInitLegacyRegistry@PowerStateManager@@AAAHXZ| ; PowerStateManager::ReInitLegacyRegistry

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?ReInitLegacyRegistry@PowerStateManager@@AAAHXZ| DCD imagerel |$LN96@ReInitLega|
	DCD	0xfdb46215

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@MGKPHPG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "P", 0x0, "a", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, "\\"
	DCB	0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i"
	DCB	0x0, "g", 0x0, "h", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@FDJPJCCG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "P", 0x0, "a", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, "\\"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?ReInitLegacyRegistry@PowerStateManager@@AAAHXZ| PROC ; PowerStateManager::ReInitLegacyRegistry

; 188  : {

  00000		 |$LN96@ReInitLega|
  00000	e92d 49fe	 push        {r1-r8,r11,lr}
  00004	f20d 0b20	 addw        r11,sp,#0x20
  00008		 |$M94|

; 189  : 	if (m_pLegacySPScreenOff != NULL)

  00008	f8d0 4250	 ldr         r4,[r0,#0x250]
  0000c	2700		 movs        r7,#0
  0000e	4605		 mov         r5,r0
  00010	b16c		 cbz         r4,|$LN19@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 133  : 		if (m_hNotifyEvent != INVALID_HANDLE_VALUE)

  00012	6860		 ldr         r0,[r4,#4]
  00014	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00018	d001		 beq         |$LN22@ReInitLega|

; 134  : 			CloseHandle (m_hNotifyEvent);

  0001a	f000 f800	 bl          CloseHandle
  0001e		 |$LN22@ReInitLega|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  0001e	6820		 ldr         r0,[r4]
  00020	b110		 cbz         r0,|$LN27@ReInitLega|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  00022	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  00026	6027		 str         r7,[r4]
  00028		 |$LN27@ReInitLega|
  00028	4620		 mov         r0,r4
  0002a	f000 f800	 bl          |??3@YAXPAX@Z|
  0002e		 |$LN19@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 192  : 	m_pLegacySPScreenOff = new NotifyRegKey (HKEY_CURRENT_USER, TEXT ("ControlPanel\\Power"));

  0002e	2008		 movs        r0,#8
  00030	f000 f800	 bl          |??2@YAPAXI@Z|
  00034	2301		 movs        r3,#1
  00036	4604		 mov         r4,r0
  00038	07de		 lsls        r6,r3,#0x1F
  0003a	f06f 0800	 mvn         r8,#0
  0003e	b19c		 cbz         r4,|$LN9@ReInitLega|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 47   :             if( RegOpenKeyEx( hKey, pszRegPath, 0, 0, &m_hDevKey ) != ERROR_SUCCESS )

  00040	4933		 ldr         r1,|$LN100@ReInitLega| ; =|??_C@_1CG@FDJPJCCG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@|
  00042	2300		 movs        r3,#0
  00044	2200		 movs        r2,#0
  00046	1c70		 adds        r0,r6,#1
  00048	6027		 str         r7,[r4]
  0004a	9400		 str         r4,[sp]
  0004c	f000 f800	 bl          RegOpenKeyExW
  00050	b100		 cbz         r0,|$LN33@ReInitLega|

; 48   :             {
; 49   :                 m_hDevKey = NULL;

  00052	6027		 str         r7,[r4]
  00054		 |$LN33@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 126  : 		if (GetHKey () != NULL)

  00054	6820		 ldr         r0,[r4]
  00056	f8c4 8004	 str         r8,[r4,#4]
  0005a	b130		 cbz         r0,|$LN10@ReInitLega|

; 127  : 		{
; 128  : 			m_hNotifyEvent = CeFindFirstRegChange (GetHKey (), TRUE, REG_NOTIFY_CHANGE_LAST_SET);

  0005c	2204		 movs        r2,#4
  0005e	2101		 movs        r1,#1
  00060	f000 f800	 bl          CeFindFirstRegChange
  00064	6060		 str         r0,[r4,#4]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 192  : 	m_pLegacySPScreenOff = new NotifyRegKey (HKEY_CURRENT_USER, TEXT ("ControlPanel\\Power"));

  00066	e000		 b           |$LN10@ReInitLega|
  00068		 |$LN9@ReInitLega|
  00068	2400		 movs        r4,#0
  0006a		 |$LN10@ReInitLega|
  0006a	f8c5 4250	 str         r4,[r5,#0x250]

; 193  : 	if (m_pLegacySPScreenOff && !m_pLegacySPScreenOff->Init ())

  0006e	b16c		 cbz         r4,|$LN3@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 138  : 		return m_hNotifyEvent != INVALID_HANDLE_VALUE;

  00070	6863		 ldr         r3,[r4,#4]
  00072	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00076	d109		 bne         |$LN3@ReInitLega|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  00078	6820		 ldr         r0,[r4]
  0007a	b110		 cbz         r0,|$LN53@ReInitLega|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  0007c	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  00080	6027		 str         r7,[r4]
  00082		 |$LN53@ReInitLega|
  00082	4620		 mov         r0,r4
  00084	f000 f800	 bl          |??3@YAXPAX@Z|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 196  : 		m_pLegacySPScreenOff = NULL;

  00088	f8c5 7250	 str         r7,[r5,#0x250]
  0008c		 |$LN3@ReInitLega|

; 197  : 	}
; 198  : 
; 199  : 	if (m_pLegacyBacklightOff != NULL)

  0008c	f8d5 4254	 ldr         r4,[r5,#0x254]
  00090	b16c		 cbz         r4,|$LN56@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 133  : 		if (m_hNotifyEvent != INVALID_HANDLE_VALUE)

  00092	6860		 ldr         r0,[r4,#4]
  00094	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00098	d001		 beq         |$LN59@ReInitLega|

; 134  : 			CloseHandle (m_hNotifyEvent);

  0009a	f000 f800	 bl          CloseHandle
  0009e		 |$LN59@ReInitLega|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  0009e	6820		 ldr         r0,[r4]
  000a0	b110		 cbz         r0,|$LN64@ReInitLega|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  000a2	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  000a6	6027		 str         r7,[r4]
  000a8		 |$LN64@ReInitLega|
  000a8	4620		 mov         r0,r4
  000aa	f000 f800	 bl          |??3@YAXPAX@Z|
  000ae		 |$LN56@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 202  : 	m_pLegacyBacklightOff = new NotifyRegKey (HKEY_CURRENT_USER, TEXT ("ControlPanel\\Backlight"));

  000ae	2008		 movs        r0,#8
  000b0	f000 f800	 bl          |??2@YAPAXI@Z|
  000b4	4604		 mov         r4,r0
  000b6	b19c		 cbz         r4,|$LN15@ReInitLega|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 47   :             if( RegOpenKeyEx( hKey, pszRegPath, 0, 0, &m_hDevKey ) != ERROR_SUCCESS )

  000b8	4914		 ldr         r1,|$LN99@ReInitLega| ; =|??_C@_1CO@MGKPHPG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@|
  000ba	2300		 movs        r3,#0
  000bc	2200		 movs        r2,#0
  000be	1c70		 adds        r0,r6,#1
  000c0	6027		 str         r7,[r4]
  000c2	9400		 str         r4,[sp]
  000c4	f000 f800	 bl          RegOpenKeyExW
  000c8	b100		 cbz         r0,|$LN70@ReInitLega|

; 48   :             {
; 49   :                 m_hDevKey = NULL;

  000ca	6027		 str         r7,[r4]
  000cc		 |$LN70@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 126  : 		if (GetHKey () != NULL)

  000cc	6820		 ldr         r0,[r4]
  000ce	f8c4 8004	 str         r8,[r4,#4]
  000d2	b130		 cbz         r0,|$LN16@ReInitLega|

; 127  : 		{
; 128  : 			m_hNotifyEvent = CeFindFirstRegChange (GetHKey (), TRUE, REG_NOTIFY_CHANGE_LAST_SET);

  000d4	2204		 movs        r2,#4
  000d6	2101		 movs        r1,#1
  000d8	f000 f800	 bl          CeFindFirstRegChange
  000dc	6060		 str         r0,[r4,#4]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 202  : 	m_pLegacyBacklightOff = new NotifyRegKey (HKEY_CURRENT_USER, TEXT ("ControlPanel\\Backlight"));

  000de	e000		 b           |$LN16@ReInitLega|
  000e0		 |$LN15@ReInitLega|
  000e0	2400		 movs        r4,#0
  000e2		 |$LN16@ReInitLega|
  000e2	f8c5 4254	 str         r4,[r5,#0x254]

; 203  : 	if (m_pLegacyBacklightOff && !m_pLegacyBacklightOff->Init ())

  000e6	b16c		 cbz         r4,|$LN1@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 138  : 		return m_hNotifyEvent != INVALID_HANDLE_VALUE;

  000e8	6863		 ldr         r3,[r4,#4]
  000ea	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  000ee	d109		 bne         |$LN1@ReInitLega|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  000f0	6820		 ldr         r0,[r4]
  000f2	b110		 cbz         r0,|$LN90@ReInitLega|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  000f4	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  000f8	6027		 str         r7,[r4]
  000fa		 |$LN90@ReInitLega|
  000fa	4620		 mov         r0,r4
  000fc	f000 f800	 bl          |??3@YAXPAX@Z|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 207  : 		m_pLegacyBacklightOff = NULL;

  00100	f8c5 7254	 str         r7,[r5,#0x254]
  00104		 |$LN1@ReInitLega|

; 208  : 	}
; 209  : 	return TRUE;

  00104	2001		 movs        r0,#1
  00106		 |$M97|

; 210  : }

  00106	e8bd 89fe	 pop         {r1-r8,r11,pc}
  0010a		 |$LN101@ReInitLega|
  0010a		 |$M102|
  0010a	defe		 __debugbreak
  0010c		 |$LN98@ReInitLega|
  0010c		 |$LN99@ReInitLega|
  0010c	0000 0000	 DCD         |??_C@_1CO@MGKPHPG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@|
  00110		 |$LN100@ReInitLega|
  00110	0000 0000	 DCD         |??_C@_1CG@FDJPJCCG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@|
  00114		 |$M95|

			 ENDP  ; |?ReInitLegacyRegistry@PowerStateManager@@AAAHXZ|, PowerStateManager::ReInitLegacyRegistry

	EXPORT	|??_C@_1DG@EIDJHANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@JBHNPNO@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|?PMExt_GetNotificationHandle@@YAHAAKQAPAX@Z| ; PMExt_GetNotificationHandle
	IMPORT	|?PMExt_EventNotification@@YAXW4PLATFORM_ACTIVITY_EVENT@@@Z| ; PMExt_EventNotification

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?ThreadRun@PowerStateManager@@UAAKXZ| DCD imagerel |$LN75@ThreadRun|
	DCD	imagerel |$unwind2$?ThreadRun@PowerStateManager@@UAAKXZ|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?ThreadRun@PowerStateManager@@UAAKXZ| DCD 0x108000d0
	DCD	0x2e000a5
	DCD	0xffdffc43

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@JBHNPNO@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "a", 0x0, "n"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":"
	DCB	0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "R", 0x0, "u", 0x0, "n", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@EIDJHANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "a", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?ThreadRun@PowerStateManager@@UAAKXZ| PROC ; PowerStateManager::ThreadRun

; 622  : {

  00000		 |$LN75@ThreadRun|
  00000	e92d 4ff0	 push        {r4-r11,lr}
  00004	f20d 0b1c	 addw        r11,sp,#0x1C
  00008	b0c3		 sub         sp,sp,#0x10C
  0000a		 |$M73|

; 623  : 	SETFNAME (_T ("PowerStateManager::ThreadRun"));
; 624  : 
; 625  : 	// Assume that the first state is PowerStateOn. 
; 626  : 	if (m_pPowerStateList)

  0000a	f8d0 327c	 ldr         r3,[r0,#0x27C]
  0000e	4605		 mov         r5,r0
  00010	2b00		 cmp         r3,#0
  00012	f000 8098	 beq         |$LN53@ThreadRun|

; 627  : 	{
; 628  : 		// Get first SetSystemPower from the device to make the initial power state correct.
; 629  : 		PowerState *pCurPowerState = GetFirstPowerState ();

  00016	f000 f800	 bl          |?GetFirstPowerState@PowerStateManager@@QAAPAVPowerState@@XZ|
  0001a	4606		 mov         r6,r0

; 630  : 
; 631  : 		if (pCurPowerState != NULL)

  0001c	2e00		 cmp         r6,#0
  0001e	f000 8092	 beq         |$LN53@ThreadRun|

; 632  : 		{
; 633  : 			pCurPowerState->EnterState ();

  00022	6833		 ldr         r3,[r6]
  00024	685b		 ldr         r3,[r3,#4]
  00026	4798		 blx         r3

; 634  : 			BOOL fDone = FALSE;

  00028	f04f 0900	 mov         r9,#0
  0002c	f10d 0a08	 add         r10,sp,#8
  00030	aa02		 add         r2,sp,#8
  00032	f44f 5880	 mov         r8,#0x1000
  00036		 |$LL23@ThreadRun|

; 637  : 			while (!fDone && pCurPowerState)

  00036	2e00		 cmp         r6,#0
  00038	f000 8085	 beq         |$LN53@ThreadRun|

; 638  : 			{
; 639  : 				HANDLE hEvents[MAXIMUM_WAIT_OBJECTS];
; 640  : 				DWORD dwNumOfLegacyEvent = 0;
; 641  : 
; 642  : 				if (m_pLegacySPScreenOff)

  0003c	f8d5 3250	 ldr         r3,[r5,#0x250]
  00040	2700		 movs        r7,#0
  00042	b113		 cbz         r3,|$LN21@ThreadRun|

; 643  : 				{
; 644  : 					hEvents[dwNumOfLegacyEvent] = m_pLegacySPScreenOff->GetNotificationHandle ();

  00044	685b		 ldr         r3,[r3,#4]

; 645  : 					dwNumOfLegacyEvent++;

  00046	2701		 movs        r7,#1
  00048	9302		 str         r3,[sp,#8]
  0004a		 |$LN21@ThreadRun|

; 646  : 				}
; 647  : 				if (m_pLegacyBacklightOff)

  0004a	f8d5 3254	 ldr         r3,[r5,#0x254]
  0004e	b11b		 cbz         r3,|$LN20@ThreadRun|

; 648  : 				{
; 649  : 					hEvents[dwNumOfLegacyEvent] = m_pLegacyBacklightOff->GetNotificationHandle ();

  00050	685b		 ldr         r3,[r3,#4]
  00052	f84a 3027	 str         r3,[r10,r7,lsl #2]

; 650  : 					dwNumOfLegacyEvent++;

  00056	3701		 adds        r7,#1
  00058		 |$LN20@ThreadRun|

; 651  : 				}
; 652  : 				DWORD dwNumOfExtEvent = MAXIMUM_WAIT_OBJECTS - dwNumOfLegacyEvent;

  00058	f1d7 0340	 rsbs        r3,r7,#0x40

; 653  : 
; 654  : 				if (!PMExt_GetNotificationHandle (dwNumOfExtEvent, hEvents + dwNumOfLegacyEvent))

  0005c	eb02 0187	 add         r1,r2,r7,lsl #2
  00060	4668		 mov         r0,sp
  00062	9300		 str         r3,[sp]
  00064	f000 f800	 bl          |?PMExt_GetNotificationHandle@@YAHAAKQAPAX@Z|
  00068	b910		 cbnz        r0,|$LN52@ThreadRun|

; 655  : 					dwNumOfExtEvent = 0;

  0006a	2200		 movs        r2,#0
  0006c	9200		 str         r2,[sp]
  0006e	e000		 b           |$LN19@ThreadRun|
  00070		 |$LN52@ThreadRun|
  00070	9a00		 ldr         r2,[sp]
  00072		 |$LN19@ThreadRun|

; 656  : 
; 657  : 				ASSERT (dwNumOfExtEvent + dwNumOfLegacyEvent < MAXIMUM_WAIT_OBJECTS);
; 658  : 
; 659  : 				PLATFORM_ACTIVITY_EVENT activityEvent =
; 660  : 					pCurPowerState->WaitForEvent (INFINITE, dwNumOfExtEvent + dwNumOfLegacyEvent,
; 661  : 												  hEvents);

  00072	6834		 ldr         r4,[r6]
  00074	ab02		 add         r3,sp,#8
  00076	19d2		 adds        r2,r2,r7
  00078	68e4		 ldr         r4,[r4,#0xC]
  0007a	f06f 0100	 mvn         r1,#0
  0007e	4630		 mov         r0,r6
  00080	47a0		 blx         r4

; 662  : 				PMLOGMSG (ZONE_PLATFORM,
; 663  : 						  (_T ("%s: activityEvent = %d  \r\n"), pszFname, activityEvent));

  00082	4b49		 ldr         r3,|$LN80@ThreadRun| ; =|dpCurSettings|
  00084	4604		 mov         r4,r0
  00086	f8d3 3440	 ldr         r3,[r3,#0x440]
  0008a	f413 6f80	 tst         r3,#0x400
  0008e	d004		 beq         |$LN28@ThreadRun|
  00090	4944		 ldr         r1,|$LN79@ThreadRun| ; =|??_C@_1DK@JBHNPNO@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?$AA@|
  00092	4602		 mov         r2,r0
  00094	4842		 ldr         r0,|$LN78@ThreadRun| ; =|??_C@_1DG@EIDJHANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  00096	f000 f800	 bl          CeLogMsg
  0009a		 |$LN28@ThreadRun|

; 664  : 				if (activityEvent >= ExternedEvent
; 665  : 					&& activityEvent <
; 666  : 					(PLATFORM_ACTIVITY_EVENT) (ExternedEvent + dwNumOfLegacyEvent))

  0009a	f5b4 5f80	 cmp         r4,#0x1000
  0009e	db12		 blt         |$LN18@ThreadRun|
  000a0	eb07 0308	 add         r3,r7,r8
  000a4	429c		 cmp         r4,r3
  000a6	da0e		 bge         |$LN18@ThreadRun|

; 667  : 				{	// Legacy registry Event.
; 668  : 					PlatformLoadTimeouts ();	// No break we need run ReInitTimeouts.

  000a8	682b		 ldr         r3,[r5]
  000aa	4628		 mov         r0,r5
  000ac	6a9b		 ldr         r3,[r3,#0x28]
  000ae	4798		 blx         r3

; 669  : 					ReInitTimeOuts (TRUE);

  000b0	682b		 ldr         r3,[r5]
  000b2	2101		 movs        r1,#1
  000b4	4628		 mov         r0,r5
  000b6	689b		 ldr         r3,[r3,#8]
  000b8	4798		 blx         r3

; 670  : 					pCurPowerState->DefaultEventHandle (RestartTimeouts);

  000ba	6833		 ldr         r3,[r6]
  000bc	2108		 movs        r1,#8
  000be	4630		 mov         r0,r6
  000c0	691b		 ldr         r3,[r3,#0x10]
  000c2	4798		 blx         r3

; 671  : 				}
; 672  : 				else if (activityEvent >=

  000c4	e02f		 b           |$LN15@ThreadRun|
  000c6		 |$LN18@ThreadRun|

; 673  : 						 (PLATFORM_ACTIVITY_EVENT) (ExternedEvent + dwNumOfLegacyEvent)
; 674  : 						 && activityEvent <
; 675  : 						 (PLATFORM_ACTIVITY_EVENT) (ExternedEvent + dwNumOfLegacyEvent +
; 676  : 													dwNumOfExtEvent))

  000c6	eb07 0308	 add         r3,r7,r8
  000ca	429c		 cmp         r4,r3
  000cc	db08		 blt         |$LN16@ThreadRun|
  000ce	9b00		 ldr         r3,[sp]
  000d0	19db		 adds        r3,r3,r7
  000d2	4443		 add         r3,r3,r8
  000d4	429c		 cmp         r4,r3
  000d6	da03		 bge         |$LN16@ThreadRun|

; 677  : 				{
; 678  : 					PMExt_EventNotification ((PLATFORM_ACTIVITY_EVENT)
; 679  : 											 (activityEvent - ExternedEvent - dwNumOfLegacyEvent +
; 680  : 											  PowerManagerExt));

  000d8	1be3		 subs        r3,r4,r7
  000da	f6a3 0000	 subw        r0,r3,#0x800

; 681  : 				}
; 682  : 				else

  000de	e020		 b           |$LN54@ThreadRun|
  000e0		 |$LN16@ThreadRun|

; 683  : 				{
; 684  : 					switch (activityEvent)

  000e0	1f62		 subs        r2,r4,#5
  000e2	2a0c		 cmp         r2,#0xC
  000e4	d817		 bhi         |$LN3@ThreadRun|
  000e6	e8df f002	 tbb         [pc,r2]
  000ea		 |$LN59@ThreadRun|
  000ea		 |$LN58@ThreadRun|
  000ea		 |$LN60@ThreadRun|
  000ea	4c		 DCB         0x4c
  000eb		 |$LN61@ThreadRun|
  000eb	53		 DCB         0x53
  000ec		 |$LN62@ThreadRun|
  000ec	16		 DCB         0x16
  000ed		 |$LN63@ThreadRun|
  000ed	11		 DCB         0x11
  000ee		 |$LN64@ThreadRun|
  000ee	11		 DCB         0x11
  000ef		 |$LN65@ThreadRun|
  000ef	16		 DCB         0x16
  000f0		 |$LN66@ThreadRun|
  000f0	11		 DCB         0x11
  000f1		 |$LN67@ThreadRun|
  000f1	32		 DCB         0x32
  000f2		 |$LN68@ThreadRun|
  000f2	07		 DCB         0x7
  000f3		 |$LN69@ThreadRun|
  000f3	0d		 DCB         0xd
  000f4		 |$LN70@ThreadRun|
  000f4	11		 DCB         0x11
  000f5		 |$LN71@ThreadRun|
  000f5	11		 DCB         0x11
  000f6		 |$LN72@ThreadRun|
  000f6	0a		 DCB         0xa
  000f7		 |$LN81@ThreadRun|
  000f7	0a		 DCB         0xa
  000f8		 |$LN12@ThreadRun|

; 685  : 					{
; 686  : 					  case PmShutDown:
; 687  : 						  fDone = TRUE;

  000f8	f04f 0901	 mov         r9,#1

; 688  : 						  break;

  000fc	e010		 b           |$LN13@ThreadRun|
  000fe		 |$LN11@ThreadRun|

; 689  : 					  case BootPhaseChanged:
; 690  : 						  ReInitLegacyRegistry ();	// No break because we need do following as well.

  000fe	4628		 mov         r0,r5
  00100	f000 f800	 bl          |?ReInitLegacyRegistry@PowerStateManager@@AAAHXZ|
  00104		 |$LN10@ThreadRun|

; 691  : 					  case PmReloadActivityTimeouts:
; 692  : 						  PlatformLoadTimeouts ();	// No break we need run ReInitTimeouts.

  00104	682b		 ldr         r3,[r5]
  00106	4628		 mov         r0,r5
  00108	6a9b		 ldr         r3,[r3,#0x28]
  0010a	4798		 blx         r3
  0010c		 |$LN9@ThreadRun|

; 693  : 					  case RestartTimeouts:
; 694  : 					  case PowerSourceChange:
; 695  : 					  case SystemPowerStateChange:
; 696  : 					  case PowerButtonPressed:
; 697  : 					  case AppButtonPressed:
; 698  : 						  ReInitTimeOuts (TRUE);

  0010c	682b		 ldr         r3,[r5]
  0010e	2101		 movs        r1,#1
  00110	4628		 mov         r0,r5
  00112	689b		 ldr         r3,[r3,#8]
  00114	4798		 blx         r3
  00116		 |$LN3@ThreadRun|

; 725  : 					  default:
; 726  : 						  pCurPowerState->DefaultEventHandle (activityEvent);

  00116	4621		 mov         r1,r4
  00118		 |$LN56@ThreadRun|
  00118	6833		 ldr         r3,[r6]
  0011a	691b		 ldr         r3,[r3,#0x10]
  0011c		 |$LN55@ThreadRun|
  0011c	4630		 mov         r0,r6
  0011e	4798		 blx         r3
  00120		 |$LN13@ThreadRun|

; 727  : 						  break;
; 728  : 					}
; 729  : 					PMExt_EventNotification (activityEvent);

  00120	4620		 mov         r0,r4
  00122		 |$LN54@ThreadRun|
  00122	f000 f800	 bl          |?PMExt_EventNotification@@YAXW4PLATFORM_ACTIVITY_EVENT@@@Z|
  00126		 |$LN15@ThreadRun|

; 730  : 				}
; 731  : 				pCurPowerState = SetSystemState (pCurPowerState);

  00126	4631		 mov         r1,r6
  00128	4628		 mov         r0,r5
  0012a	f000 f800	 bl          |?SetSystemState@PowerStateManager@@AAAPAVPowerState@@PAV2@@Z|
  0012e	4606		 mov         r6,r0

; 732  : 				ASSERT (pCurPowerState != NULL);
; 733  : 				if (activityEvent == SystemPowerStateAPI)

  00130	2c0c		 cmp         r4,#0xC
  00132	d103		 bne         |$LN48@ThreadRun|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  00134	6ae8		 ldr         r0,[r5,#0x2C]
  00136	2103		 movs        r1,#3
  00138	f000 f800	 bl          EventModify
  0013c		 |$LN48@ThreadRun|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 637  : 			while (!fDone && pCurPowerState)

  0013c	f1b9 0f00	 cmp         r9,#0
  00140	aa02		 add         r2,sp,#8
  00142	f43f af78	 beq         |$LL23@ThreadRun|
  00146		 |$LN53@ThreadRun|

; 734  : 				{
; 735  : 					RequestComplete ();
; 736  : 				}
; 737  : 			}
; 738  : 		}
; 739  : 		else
; 740  : 			ASSERT (FALSE);
; 741  : 	}
; 742  : 	return 0;

  00146	2000		 movs        r0,#0
  00148		 |$M76|

; 743  : }

  00148	b043		 add         sp,sp,#0x10C
  0014a	e8bd 8ff0	 pop         {r4-r11,pc}
  0014e		 |$LN8@ThreadRun|

; 699  : 						  pCurPowerState->DefaultEventHandle (activityEvent);
; 700  : 						  break;
; 701  : 					  case SystemPowerStateAPI:
; 702  : 						  {
; 703  : 							  PLATFORM_ACTIVITY_STATE apiState = RequestedSystemPowerState ();

  0014e	4628		 mov         r0,r5
  00150	f000 f800	 bl          |?RequestedSystemPowerState@PMSystemAPI@@QAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
  00154	4607		 mov         r7,r0

; 704  : 							  PowerState *pNewPowerState = GetStateObject (apiState);

  00156	4601		 mov         r1,r0
  00158	4628		 mov         r0,r5
  0015a	f000 f800	 bl          |?GetStateObject@PowerStateManager@@QAAPAVPowerState@@W4PLATFORM_ACTIVITY_STATE@@@Z|
  0015e	4603		 mov         r3,r0

; 705  : 
; 706  : 							  if (pNewPowerState && !pNewPowerState->AppsCanRequestState ())

  00160	b15b		 cbz         r3,|$LN7@ThreadRun|
  00162	681b		 ldr         r3,[r3]
  00164	6a9b		 ldr         r3,[r3,#0x28]
  00166	4798		 blx         r3
  00168	b938		 cbnz        r0,|$LN7@ThreadRun|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  0016a	6ae8		 ldr         r0,[r5,#0x2C]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 876  : 		m_dwResult = dwStatus;

  0016c	2357		 movs        r3,#0x57
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  0016e	2103		 movs        r1,#3
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 876  : 		m_dwResult = dwStatus;

  00170	622b		 str         r3,[r5,#0x20]
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  00172	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 709  : 								  activityEvent = NoActivity;

  00176	2400		 movs        r4,#0

; 710  : 							  }
; 711  : 							  else

  00178	e7d2		 b           |$LN13@ThreadRun|
  0017a		 |$LN7@ThreadRun|

; 712  : 							  {
; 713  : 								  pCurPowerState->SetSystemAPIState (apiState);

  0017a	6833		 ldr         r3,[r6]
  0017c	4639		 mov         r1,r7
  0017e	6a5b		 ldr         r3,[r3,#0x24]

; 714  : 							  }
; 715  : 							  break;

  00180	e7cc		 b           |$LN55@ThreadRun|
  00182		 |$LN5@ThreadRun|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 238  : 		return (++m_dwUnattendedModeRef);

  00182	f8d5 3290	 ldr         r3,[r5,#0x290]
  00186	3301		 adds        r3,#1
  00188	f8c5 3290	 str         r3,[r5,#0x290]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 719  : 						  pCurPowerState->DefaultEventHandle (EnterUnattendedModeRequest);

  0018c	2105		 movs        r1,#5

; 720  : 						  break;

  0018e	e7c3		 b           |$LN56@ThreadRun|
  00190		 |$LN4@ThreadRun|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 242  :         if (m_dwUnattendedModeRef)

  00190	f8d5 3290	 ldr         r3,[r5,#0x290]
  00194	b113		 cbz         r3,|$LN42@ThreadRun|

; 243  :         {
; 244  : 			return (--m_dwUnattendedModeRef);

  00196	3b01		 subs        r3,#1
  00198	f8c5 3290	 str         r3,[r5,#0x290]
  0019c		 |$LN42@ThreadRun|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 723  : 						  pCurPowerState->DefaultEventHandle (LeaveUnattendedModeRequest);

  0019c	2106		 movs        r1,#6

; 724  : 						  break;

  0019e	e7bb		 b           |$LN56@ThreadRun|
  001a0		 |$LN77@ThreadRun|
  001a0		 |$LN78@ThreadRun|
  001a0	0000 0000	 DCD         |??_C@_1DG@EIDJHANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  001a4		 |$LN79@ThreadRun|
  001a4	0000 0000	 DCD         |??_C@_1DK@JBHNPNO@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?$AA@|
  001a8		 |$LN80@ThreadRun|
  001a8	0000 0000	 DCD         |dpCurSettings|
  001ac		 |$M74|

			 ENDP  ; |?ThreadRun@PowerStateManager@@UAAKXZ|, PowerStateManager::ThreadRun

	EXPORT	|??_C@_1EE@IBGMJHLC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?5?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@OHBGJCLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@LBCAIPMI@?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@IMOGCHJK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAm?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAQ?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@OPDIHCD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AAs?$AA?5?$AAn?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@CJBDBNJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAy?$AAs@| [ DATA ] ; `string'
	EXPORT	|?Init@PowerStateManager@@QAAHXZ|	; PowerStateManager::Init
	IMPORT	|ActivityTimerFindByName|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?Init@PowerStateManager@@QAAHXZ| DCD imagerel |$LN25@Init|
	DCD	0xfd306161

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@CJBDBNJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAy?$AAs@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "e"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@OPDIHCD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AAs?$AA?5?$AAn?$AAo@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "U", 0x0, "s", 0x0, "e"
	DCB	0x0, "r", 0x0, "A", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v"
	DCB	0x0, "i", 0x0, "t", 0x0, "y", 0x0, " ", 0x0, "t", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "e", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "u"
	DCB	0x0, "n", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@IMOGCHJK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAm?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAQ?$AAu@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "P", 0x0, "m", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "i", 0x0, "c", 0x0, "y", 0x0, "C"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "N"
	DCB	0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "i", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "Q"
	DCB	0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@LBCAIPMI@?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?$AA@| DCB "U"
	DCB	0x0, "s", 0x0, "e", 0x0, "r", 0x0, "A", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@OHBGJCLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "a", 0x0, "n"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@IBGMJHLC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?5?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, "P", 0x0, "M"
	DCB	0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m"
	DCB	0x0, "A", 0x0, "P", 0x0, "I", 0x0, ":", 0x0, ":", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Init@PowerStateManager@@QAAHXZ| PROC	; PowerStateManager::Init

; 214  : {

  00000		 |$LN25@Init|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M23|

; 215  :     ///=========================================================
; 216  :     /// Edits by Gard
; 217  :     // This is where the functions for pwrBtn should be called.
; 218  : 
; 219  : 
; 220  : 
; 221  : 
; 222  :     ///=========================================================
; 223  : 
; 224  : 	SETFNAME (_T ("PowerStateManager::Init"));
; 225  : 	if (ghevReloadActivityTimeouts == NULL || ghevRestartTimers == NULL || m_hqNotify == NULL)

  00008	4b31		 ldr         r3,|$LN36@Init|	; =|?ghevReloadActivityTimeouts@@3PAXA|
  0000a	4604		 mov         r4,r0
  0000c	681b		 ldr         r3,[r3]
  0000e	2b00		 cmp         r3,#0
  00010	d041		 beq         |$LN5@Init|
  00012	4b2e		 ldr         r3,|$LN35@Init|	; =|?ghevRestartTimers@@3PAXA|
  00014	681b		 ldr         r3,[r3]
  00016	b3f3		 cbz         r3,|$LN5@Init|
  00018	f8d0 324c	 ldr         r3,[r0,#0x24C]
  0001c	b3db		 cbz         r3,|$LN5@Init|

; 255  : 
; 256  : void
; 257  : PowerStateManager::ReInitTimeOuts (BOOL fIgnoreSuspendResume)
; 258  : {
; 259  : 	m_dwCurResumingSuspendTimeout =
; 260  : 		(fIgnoreSuspendResume ? INFINITE : GetResumingSuspendTimeout ());
; 261  : 	m_dwCurSuspendTimeout = GetSuspendTimeOut ();
; 262  : 	m_dwCurBacklightTimeout = GetBackLightTimeout ();
; 263  : 	m_dwCurUserIdleTimeout = GetUserIdleTimeOut ();
; 264  : 
; 265  : 	// If timer is not set, then it is not supported.
; 266  : 	if (m_dwCurBacklightTimeout == 0)
; 267  : 		m_dwCurBacklightTimeout = INFINITE;
; 268  : 	if (m_dwCurUserIdleTimeout == 0)
; 269  : 		m_dwCurUserIdleTimeout = INFINITE;
; 270  : 	if (m_dwCurSuspendTimeout == 0)
; 271  : 		m_dwCurSuspendTimeout = INFINITE;
; 272  : }
; 273  : 
; 274  : void
; 275  : PowerStateManager::ReAdjustTimeOuts ()
; 276  : {
; 277  : 	if (m_dwCurBacklightTimeout > GetBackLightTimeout ())
; 278  : 	{
; 279  : 		if ((m_dwCurBacklightTimeout = GetBackLightTimeout ()) == 0)
; 280  : 			m_dwCurBacklightTimeout = INFINITE;
; 281  : 	}
; 282  : 	if (m_dwCurSuspendTimeout > GetSuspendTimeOut ())
; 283  : 	{
; 284  : 		if ((m_dwCurSuspendTimeout = GetSuspendTimeOut ()) == 0)
; 285  : 			m_dwCurSuspendTimeout = INFINITE;
; 286  : 	}
; 287  : 	if (m_dwCurUserIdleTimeout > GetUserIdleTimeOut ())
; 288  : 	{
; 289  : 		if ((m_dwCurUserIdleTimeout = GetUserIdleTimeOut ()) == 0)
; 290  : 			m_dwCurUserIdleTimeout = INFINITE;
; 291  : 	}
; 292  : }
; 293  : 
; 294  : void
; 295  : PowerStateManager::ResetUserIdleTimeout (BOOL fIdle)
; 296  : {
; 297  : 	if (fIdle)
; 298  : 	{
; 299  : 		m_dwCurBacklightTimeout = GetBackLightTimeout ();
; 300  : 		m_dwCurUserIdleTimeout = GetUserIdleTimeOut ();
; 301  : 	}
; 302  : 	else
; 303  : 	{
; 304  : 		m_dwCurBacklightTimeout = INFINITE;
; 305  : 		m_dwCurUserIdleTimeout = INFINITE;
; 306  : 	}
; 307  : 	if (m_dwCurBacklightTimeout == 0)
; 308  : 		m_dwCurBacklightTimeout = INFINITE;
; 309  : 	if (m_dwCurUserIdleTimeout == 0)
; 310  : 		m_dwCurUserIdleTimeout = INFINITE;
; 311  : }
; 312  : 
; 313  : void
; 314  : PowerStateManager::ResetSystemIdleTimeTimeout (BOOL fIdle)
; 315  : {
; 316  : 	m_dwCurSuspendTimeout = (fIdle ? GetSuspendTimeOut () : INFINITE);
; 317  : 	if (m_dwCurSuspendTimeout == 0)
; 318  : 		m_dwCurSuspendTimeout = INFINITE;
; 319  : }
; 320  : 
; 321  : void
; 322  : PowerStateManager::SubtractTimeout (DWORD dwTicks)
; 323  : {
; 324  : 	if (m_dwCurSuspendTimeout != INFINITE)
; 325  : 		m_dwCurSuspendTimeout =
; 326  : 			(m_dwCurSuspendTimeout > dwTicks ? m_dwCurSuspendTimeout - dwTicks : 0);
; 327  : 	if (m_dwCurResumingSuspendTimeout != INFINITE)
; 328  : 		m_dwCurResumingSuspendTimeout =
; 329  : 			(m_dwCurResumingSuspendTimeout > dwTicks ? m_dwCurResumingSuspendTimeout - dwTicks : 0);
; 330  : 	if (m_dwCurBacklightTimeout != INFINITE)
; 331  : 		m_dwCurBacklightTimeout =
; 332  : 			(m_dwCurBacklightTimeout > dwTicks ? m_dwCurBacklightTimeout - dwTicks : 0);
; 333  : 	if (m_dwCurUserIdleTimeout != INFINITE)
; 334  : 		m_dwCurUserIdleTimeout =
; 335  : 			(m_dwCurUserIdleTimeout > dwTicks ? m_dwCurUserIdleTimeout - dwTicks : 0);
; 336  : }
; 337  : 
; 338  : DWORD
; 339  : PowerStateManager::GetSmallestTimeout (PTIMEOUT_ITEM pTimeoutItem)
; 340  : {
; 341  : 	DWORD dwReturn = INFINITE;
; 342  : 	TIMEOUT_ITEM activeEvent = NoTimeoutItem;
; 343  : 
; 344  : 	if (dwReturn > m_dwCurSuspendTimeout)
; 345  : 	{
; 346  : 		dwReturn = m_dwCurSuspendTimeout;
; 347  : 		activeEvent = SuspendTimeout;
; 348  : 	}
; 349  : 	if (dwReturn > m_dwCurResumingSuspendTimeout)
; 350  : 	{
; 351  : 		dwReturn = m_dwCurResumingSuspendTimeout;
; 352  : 		activeEvent = ResumingSuspendTimeout;
; 353  : 	}
; 354  : 	if (dwReturn > m_dwCurBacklightTimeout)
; 355  : 	{
; 356  : 		dwReturn = m_dwCurBacklightTimeout;
; 357  : 		activeEvent = BacklightTimeout;
; 358  : 	}
; 359  : 	if (dwReturn > m_dwCurUserIdleTimeout)
; 360  : 	{
; 361  : 		dwReturn = m_dwCurUserIdleTimeout;
; 362  : 		activeEvent = UserActivityTimeout;
; 363  : 	}
; 364  : 	if (pTimeoutItem)
; 365  : 	{
; 366  : 		*pTimeoutItem = activeEvent;
; 367  : 	}
; 368  : 	return dwReturn;
; 369  : }
; 370  : 
; 371  : LPCTSTR
; 372  : PowerStateManager::ActivityStateToSystemState (PLATFORM_ACTIVITY_STATE platActiveState)
; 373  : {
; 374  : 	PowerState *curState = m_pPowerStateList;
; 375  : 
; 376  : 	while (curState)
; 377  : 	{
; 378  : 		if (curState->GetState () == platActiveState)
; 379  : 			return curState->GetStateString ();
; 380  : 		else
; 381  : 			curState = curState->GetNextPowerState ();
; 382  : 	}
; 383  : 	return NULL;
; 384  : }
; 385  : 
; 386  : PLATFORM_ACTIVITY_STATE
; 387  : PowerStateManager::SystemStateToActivityState (LPCTSTR lpState)
; 388  : {
; 389  : 	if (lpState == NULL)
; 390  : 		return UnknownState;
; 391  : 	PowerState *curState = m_pPowerStateList;
; 392  : 
; 393  : 	while (curState)
; 394  : 	{
; 395  : 		if (_tcsicmp (curState->GetStateString (), lpState) == 0)
; 396  : 			return curState->GetState ();
; 397  : 		else
; 398  : 			curState = curState->GetNextPowerState ();
; 399  : 	}
; 400  : 	return UnknownState;
; 401  : }
; 402  : 
; 403  : HANDLE
; 404  : PowerStateManager::GetEventHandle (DWORD dwIndex)
; 405  : {
; 406  : 	switch (dwIndex)
; 407  : 	{
; 408  : 	  case PM_SHUTDOWN_EVENT:
; 409  : 		  return ghevPmShutdown;
; 410  : 	  case PM_RELOAD_ACTIVITY_TIMEOUTS_EVENT:
; 411  : 		  return ghevReloadActivityTimeouts;
; 412  : 	  case PM_MSGQUEUE_EVENT:
; 413  : 		  return m_hqNotify;
; 414  : 	  case PM_RESTART_TIMER_EVENT:
; 415  : 		  return ghevRestartTimers;
; 416  : 	  case PM_SYSTEM_API_EVENT:
; 417  : 		  return GetAPISignalHandle ();
; 418  : 	  case PM_BOOTPHASE2_EVENT:
; 419  : 		  return m_hevBootPhase2;
; 420  : 	}
; 421  : 	return NULL;
; 422  : }
; 423  : 
; 424  : void
; 425  : PowerStateManager::DisablePhase2Event ()
; 426  : {
; 427  : 	if (m_hevBootPhase2)
; 428  : 	{
; 429  : 		CloseHandle (m_hevBootPhase2);
; 430  : 		m_hevBootPhase2 = NULL;
; 431  : 	}
; 432  : }
; 433  : 
; 434  : void
; 435  : PowerStateManager::PlatformLoadTimeouts ()
; 436  : {
; 437  : 	DWORD dwStatus;
; 438  : 	TCHAR szPath[MAX_PATH];
; 439  : 	HKEY hk;
; 440  : 
; 441  : 	SETFNAME (_T ("PowerStateManager::PlatformLoadTimeouts"));
; 442  : 
; 443  : 	// Assume default values:
; 444  : 	m_dwACSuspendTimeout = DEF_ACSUSPENDTIMEOUT * 1000;
; 445  : 	m_dwACResumingSuspendTimeout = DEF_ACRESUMINGSUSPENDTIMEOUT * 1000;
; 446  : 	m_dwACBacklightTimeout = DEF_ACBACKLIGHTTIMEOUT * 1000;
; 447  : 	m_dwACUserIdleTimeout = DEF_ACUSERIDLETIMEOUT * 1000;
; 448  : 
; 449  : 	m_dwBattSuspendTimeout = DEF_BATTSUSPENDTIMEOUT * 1000;
; 450  : 	m_dwBattResumingSuspendTimeout = DEF_BATTRESUMINGSUSPENDTIMEOUT * 1000;
; 451  : 	m_dwBattBacklightTimeout = DEF_BATTBACKLIGHTTIMEOUT * 1000;
; 452  : 	m_dwBattUserIdleTimeout = DEF_BATTUSERIDLETIMEOUT * 1000;
; 453  : 
; 454  : 	// Get timeout thresholds for transitions between states:
; 455  : 	StringCchPrintf (szPath, MAX_PATH, _T ("%s\\%s"), PWRMGR_REG_KEY, _T ("Timeouts"));
; 456  : 	dwStatus = RegOpenKeyEx (HKEY_LOCAL_MACHINE, szPath, 0, 0, &hk);
; 457  : 	if (dwStatus == ERROR_SUCCESS)
; 458  : 	{
; 459  : 		// Read system power state timeouts:
; 460  : 		m_dwACSuspendTimeout =
; 461  : 			RegReadStateTimeout (hk, _T ("ACSuspendTimeout"), DEF_ACSUSPENDTIMEOUT);
; 462  : 		m_dwACResumingSuspendTimeout =
; 463  : 			RegReadStateTimeout (hk, _T ("ACResumingSuspendTimeout"), DEF_ACRESUMINGSUSPENDTIMEOUT);
; 464  : 		m_dwACBacklightTimeout =
; 465  : 			RegReadStateTimeout (hk, _T ("ACBacklightTimeout"), DEF_ACBACKLIGHTTIMEOUT);
; 466  : 		m_dwACUserIdleTimeout = RegReadStateTimeout (hk, _T ("ACUserIdle"), DEF_ACUSERIDLETIMEOUT);
; 467  : 
; 468  : 		m_dwBattSuspendTimeout =
; 469  : 			RegReadStateTimeout (hk, _T ("BattSuspendTimeout"), DEF_BATTSUSPENDTIMEOUT);
; 470  : 		m_dwBattResumingSuspendTimeout =
; 471  : 			RegReadStateTimeout (hk, _T ("BattResumingSuspendTimeout"),
; 472  : 								 DEF_BATTRESUMINGSUSPENDTIMEOUT);
; 473  : 		m_dwBattBacklightTimeout =
; 474  : 			RegReadStateTimeout (hk, _T ("BattBacklightTimeout"), DEF_BATTBACKLIGHTTIMEOUT);
; 475  : 		m_dwBattUserIdleTimeout =
; 476  : 			RegReadStateTimeout (hk, _T ("BattUserIdle"), DEF_BATTUSERIDLETIMEOUT);
; 477  : 
; 478  : 		// Release resources:
; 479  : 		RegCloseKey (hk);
; 480  : 	}
; 481  : 
; 482  : 	// Update Legacy if we find them.
; 483  : 	DWORD dwValue;
; 484  : 
; 485  : 	if (m_pLegacySPScreenOff)
; 486  : 	{
; 487  : 		m_pLegacySPScreenOff->AckNotification ();
; 488  : 		if (m_pLegacySPScreenOff->GetRegValue (_T ("Display"), &dwValue))
; 489  : 		{	// Found SmartPhone Legacy Value. Use it.
; 490  : 			m_dwACUserIdleTimeout = m_dwBattUserIdleTimeout = dwValue;
; 491  : 		}
; 492  : 	}
; 493  : 
; 494  : 	if (m_pLegacyBacklightOff)
; 495  : 	{
; 496  : 		m_pLegacyBacklightOff->AckNotification ();
; 497  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("BatteryTimeout"), &dwValue))
; 498  : 		{	// Legacy Backlight Off Registry value.
; 499  : 			m_dwBattBacklightTimeout = dwValue;
; 500  : 		}
; 501  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldBatteryTimeout"), &dwValue))
; 502  : 		{
; 503  : 			m_dwBattBacklightTimeout = INFINITE;
; 504  : 			m_dwBattUserIdleTimeout = INFINITE;
; 505  : 		}
; 506  : 
; 507  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("ACTimeout"), &dwValue))
; 508  : 		{	// Legacy Backlight Off Registry value.
; 509  : 			m_dwACBacklightTimeout = dwValue;
; 510  : 		}
; 511  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldACTimeout"), &dwValue))
; 512  : 		{
; 513  : 			m_dwACBacklightTimeout = INFINITE;
; 514  : 			m_dwACUserIdleTimeout = INFINITE;
; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 519  : 			  (_T
; 520  : 			   ("%s: ACSuspendTimeout %d, ACResumingSuspendTimeout %d,  ACBacklightTimeout %d, ACUserIdleTimeout %d \r\n"),
; 521  : 			   pszFname, m_dwACSuspendTimeout, m_dwACResumingSuspendTimeout, m_dwACBacklightTimeout,
; 522  : 			   m_dwACUserIdleTimeout));
; 523  : 	PMLOGMSG (ZONE_INIT
; 524  : 			  || ZONE_PLATFORM,
; 525  : 			  (_T
; 526  : 			   ("%s: BattSuspendTimeout %d, BattResumingSuspendTimeout %d , BattBacklightTimeout %d, BattUserIdleTimeout%d \r\n"),
; 527  : 			   pszFname, m_dwBattSuspendTimeout, m_dwBattResumingSuspendTimeout,
; 528  : 			   m_dwBattBacklightTimeout, m_dwBattUserIdleTimeout));
; 529  : }
; 530  : 
; 531  : DWORD
; 532  : PowerStateManager::GetSuspendTimeOut ()
; 533  : {
; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);
; 536  : }
; 537  : 
; 538  : DWORD
; 539  : PowerStateManager::GetResumingSuspendTimeout ()
; 540  : {
; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);
; 543  : }
; 544  : 
; 545  : DWORD
; 546  : PowerStateManager::GetBackLightTimeout ()
; 547  : {
; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);
; 550  : }
; 551  : 
; 552  : DWORD
; 553  : PowerStateManager::GetUserIdleTimeOut ()
; 554  : {
; 555  : 	return (gSystemPowerStatus.bACLineStatus ==
; 556  : 			AC_LINE_OFFLINE ? m_dwBattUserIdleTimeout : m_dwACUserIdleTimeout);
; 557  : }
; 558  : 
; 559  : PowerState *
; 560  : PowerStateManager::GetStateObject (PLATFORM_ACTIVITY_STATE newState)
; 561  : {
; 562  : 	if (m_pPowerStateList != NULL)
; 563  : 	{
; 564  : 		PowerState *pCurState = m_pPowerStateList;
; 565  : 
; 566  : 		while (pCurState)
; 567  : 		{
; 568  : 			if (pCurState->GetState () == newState)
; 569  : 			{
; 570  : 				return pCurState;
; 571  : 			}
; 572  : 			pCurState = pCurState->GetNextPowerState ();
; 573  : 		}
; 574  : 	}
; 575  : 	return NULL;
; 576  : }
; 577  : 
; 578  : PowerState *
; 579  : PowerStateManager::GetFirstPowerState ()
; 580  : {
; 581  : 	SETFNAME (_T ("PowerStateManager::GetFirstPowerState"));
; 582  : 	PowerState *curState = NULL;
; 583  : 	HANDLE hEvents[2];
; 584  : 
; 585  : 	hEvents[0] = ghevPmShutdown;
; 586  : 	hEvents[1] = GetAPISignalHandle ();
; 587  : 	DWORD dwStatus = WaitForMultipleObjects (2, hEvents, FALSE, INFINITE);
; 588  : 
; 589  : 	switch (dwStatus)
; 590  : 	{
; 591  : 	  case (WAIT_OBJECT_0 + 0):
; 592  : 		  PMLOGMSG (ZONE_INIT
; 593  : 					|| ZONE_WARN, (_T ("%s: shutdown event signaled, exiting\r\n"), pszFname));
; 594  : 		  break;
; 595  : 	  case (WAIT_OBJECT_0 + 1):
; 596  : 		  {
; 597  : 			  PMLOGMSG (ZONE_INIT, (_T ("%s: initialization complete\r\n"), pszFname));
; 598  : 			  PLATFORM_ACTIVITY_STATE apiState = RequestedSystemPowerState ();
; 599  : 
; 600  : 			  curState = m_pPowerStateList;
; 601  : 			  while (curState)
; 602  : 			  {
; 603  : 				  if (curState->GetState () == apiState)
; 604  : 					  break;
; 605  : 				  else
; 606  : 					  curState = curState->GetNextPowerState ();
; 607  : 			  }
; 608  : 			  RequestComplete ();
; 609  : 		  }
; 610  : 		  break;
; 611  : 	  default:
; 612  : 		  PMLOGMSG (ZONE_INIT
; 613  : 					|| ZONE_WARN, (_T ("%s: WaitForMultipleObjects() returned %d, exiting\r\n"),
; 614  : 								   pszFname, dwStatus));
; 615  : 		  break;
; 616  : 	}
; 617  : 	return curState;
; 618  : }
; 619  : 
; 620  : DWORD
; 621  : PowerStateManager::ThreadRun ()
; 622  : {
; 623  : 	SETFNAME (_T ("PowerStateManager::ThreadRun"));
; 624  : 
; 625  : 	// Assume that the first state is PowerStateOn. 
; 626  : 	if (m_pPowerStateList)
; 627  : 	{
; 628  : 		// Get first SetSystemPower from the device to make the initial power state correct.
; 629  : 		PowerState *pCurPowerState = GetFirstPowerState ();
; 630  : 
; 631  : 		if (pCurPowerState != NULL)
; 632  : 		{
; 633  : 			pCurPowerState->EnterState ();
; 634  : 			BOOL fDone = FALSE;
; 635  : 
; 636  : 			// Create Legacy Registry modify notification event array.
; 637  : 			while (!fDone && pCurPowerState)
; 638  : 			{
; 639  : 				HANDLE hEvents[MAXIMUM_WAIT_OBJECTS];
; 640  : 				DWORD dwNumOfLegacyEvent = 0;
; 641  : 
; 642  : 				if (m_pLegacySPScreenOff)
; 643  : 				{
; 644  : 					hEvents[dwNumOfLegacyEvent] = m_pLegacySPScreenOff->GetNotificationHandle ();
; 645  : 					dwNumOfLegacyEvent++;
; 646  : 				}
; 647  : 				if (m_pLegacyBacklightOff)
; 648  : 				{
; 649  : 					hEvents[dwNumOfLegacyEvent] = m_pLegacyBacklightOff->GetNotificationHandle ();
; 650  : 					dwNumOfLegacyEvent++;
; 651  : 				}
; 652  : 				DWORD dwNumOfExtEvent = MAXIMUM_WAIT_OBJECTS - dwNumOfLegacyEvent;
; 653  : 
; 654  : 				if (!PMExt_GetNotificationHandle (dwNumOfExtEvent, hEvents + dwNumOfLegacyEvent))
; 655  : 					dwNumOfExtEvent = 0;
; 656  : 
; 657  : 				ASSERT (dwNumOfExtEvent + dwNumOfLegacyEvent < MAXIMUM_WAIT_OBJECTS);
; 658  : 
; 659  : 				PLATFORM_ACTIVITY_EVENT activityEvent =
; 660  : 					pCurPowerState->WaitForEvent (INFINITE, dwNumOfExtEvent + dwNumOfLegacyEvent,
; 661  : 												  hEvents);
; 662  : 				PMLOGMSG (ZONE_PLATFORM,
; 663  : 						  (_T ("%s: activityEvent = %d  \r\n"), pszFname, activityEvent));
; 664  : 				if (activityEvent >= ExternedEvent
; 665  : 					&& activityEvent <
; 666  : 					(PLATFORM_ACTIVITY_EVENT) (ExternedEvent + dwNumOfLegacyEvent))
; 667  : 				{	// Legacy registry Event.
; 668  : 					PlatformLoadTimeouts ();	// No break we need run ReInitTimeouts.
; 669  : 					ReInitTimeOuts (TRUE);
; 670  : 					pCurPowerState->DefaultEventHandle (RestartTimeouts);
; 671  : 				}
; 672  : 				else if (activityEvent >=
; 673  : 						 (PLATFORM_ACTIVITY_EVENT) (ExternedEvent + dwNumOfLegacyEvent)
; 674  : 						 && activityEvent <
; 675  : 						 (PLATFORM_ACTIVITY_EVENT) (ExternedEvent + dwNumOfLegacyEvent +
; 676  : 													dwNumOfExtEvent))
; 677  : 				{
; 678  : 					PMExt_EventNotification ((PLATFORM_ACTIVITY_EVENT)
; 679  : 											 (activityEvent - ExternedEvent - dwNumOfLegacyEvent +
; 680  : 											  PowerManagerExt));
; 681  : 				}
; 682  : 				else
; 683  : 				{
; 684  : 					switch (activityEvent)
; 685  : 					{
; 686  : 					  case PmShutDown:
; 687  : 						  fDone = TRUE;
; 688  : 						  break;
; 689  : 					  case BootPhaseChanged:
; 690  : 						  ReInitLegacyRegistry ();	// No break because we need do following as well.
; 691  : 					  case PmReloadActivityTimeouts:
; 692  : 						  PlatformLoadTimeouts ();	// No break we need run ReInitTimeouts.
; 693  : 					  case RestartTimeouts:
; 694  : 					  case PowerSourceChange:
; 695  : 					  case SystemPowerStateChange:
; 696  : 					  case PowerButtonPressed:
; 697  : 					  case AppButtonPressed:
; 698  : 						  ReInitTimeOuts (TRUE);
; 699  : 						  pCurPowerState->DefaultEventHandle (activityEvent);
; 700  : 						  break;
; 701  : 					  case SystemPowerStateAPI:
; 702  : 						  {
; 703  : 							  PLATFORM_ACTIVITY_STATE apiState = RequestedSystemPowerState ();
; 704  : 							  PowerState *pNewPowerState = GetStateObject (apiState);
; 705  : 
; 706  : 							  if (pNewPowerState && !pNewPowerState->AppsCanRequestState ())
; 707  : 							  {
; 708  : 								  RequestComplete (ERROR_INVALID_PARAMETER);
; 709  : 								  activityEvent = NoActivity;
; 710  : 							  }
; 711  : 							  else
; 712  : 							  {
; 713  : 								  pCurPowerState->SetSystemAPIState (apiState);
; 714  : 							  }
; 715  : 							  break;
; 716  : 						  }
; 717  : 					  case EnterUnattendedModeRequest:
; 718  : 						  IncUnattendedRefCount ();
; 719  : 						  pCurPowerState->DefaultEventHandle (EnterUnattendedModeRequest);
; 720  : 						  break;
; 721  : 					  case LeaveUnattendedModeRequest:
; 722  : 						  DecUnattendedRefCount ();
; 723  : 						  pCurPowerState->DefaultEventHandle (LeaveUnattendedModeRequest);
; 724  : 						  break;
; 725  : 					  default:
; 726  : 						  pCurPowerState->DefaultEventHandle (activityEvent);
; 727  : 						  break;
; 728  : 					}
; 729  : 					PMExt_EventNotification (activityEvent);
; 730  : 				}
; 731  : 				pCurPowerState = SetSystemState (pCurPowerState);
; 732  : 				ASSERT (pCurPowerState != NULL);
; 733  : 				if (activityEvent == SystemPowerStateAPI)
; 734  : 				{
; 735  : 					RequestComplete ();
; 736  : 				}
; 737  : 			}
; 738  : 		}
; 739  : 		else
; 740  : 			ASSERT (FALSE);
; 741  : 	}
; 742  : 	return 0;
; 743  : }
; 744  : 
; 745  : PowerState *
; 746  : PowerStateManager::SetSystemState (PowerState * pCurPowerState)
; 747  : {
; 748  : 	SETFNAME (_T ("PowerStateManager::SetSystemState"));
; 749  : 	if (pCurPowerState != NULL)
; 750  : 	{
; 751  : 		PLATFORM_ACTIVITY_STATE curState = pCurPowerState->GetState ();
; 752  : 		PLATFORM_ACTIVITY_STATE newState = curState;
; 753  : 
; 754  : 		do
; 755  : 		{	// Switch to new stable state.
; 756  : 			newState = pCurPowerState->GetLastNewState ();
; 757  : 			if (newState != curState)
; 758  : 			{
; 759  : 				PowerState *pNewPowerState = GetStateObject (newState);
; 760  : 
; 761  : 				if (pNewPowerState == NULL)
; 762  : 				{	// Wrong state or unsupported state.
; 763  : 					PMLOGMSG (ZONE_WARN
; 764  : 							  || ZONE_PLATFORM, (_T ("Unsupported state %d \r\n"), newState));
; 765  : 					ASSERT (FALSE);
; 766  : 					newState = curState;
; 767  : 				}
; 768  : 				else if (pNewPowerState != pCurPowerState)
; 769  : 				{
; 770  : 					PMLOGMSG (ZONE_INIT
; 771  : 							  || ZONE_PLATFORM, (_T ("%s: state change from \"%s\" to \"%s\" \r\n"),
; 772  : 												 pszFname, pCurPowerState->GetStateString (),
; 773  : 												 pNewPowerState->GetStateString ()));
; 774  : 					pCurPowerState = pNewPowerState;
; 775  : 					pCurPowerState->EnterState ();
; 776  : 
; 777  : 					// Update to new state:
; 778  : 					curState = newState;
; 779  : 					newState = pCurPowerState->GetLastNewState ();
; 780  : 				}
; 781  : 				else
; 782  : 					newState = curState;
; 783  : 			}
; 784  : 		} while (newState != curState);	    // Change to stable state.
; 785  : 
; 786  : 		ASSERT (pCurPowerState != NULL);
; 787  : 	}
; 788  : 	return pCurPowerState;
; 789  : }
; 790  : 
; 791  : //////////////////////////////////////////////////////////////////////////////
; 792  : //
; 793  : // PMSystemAPI
; 794  : //
; 795  : // PMSystemAPI is the base class for PowerStateManager; it implements 
; 796  : // the serialization logic for state transitions and event-handling code 
; 797  : // for the main Power Manager event loop.
; 798  : //
; 799  : //////////////////////////////////////////////////////////////////////////////
; 800  : 
; 801  : // Help function.
; 802  : PMSystemAPI::PMSystemAPI ()
; 803  : {
; 804  : 	m_szStateName[0] = 0;
; 805  : 	m_dwStateHint = 0;
; 806  : 	m_dwOptions = 0;
; 807  : 
; 808  : 	m_hEmpty = CreateEvent (NULL, FALSE, TRUE, NULL);
; 809  : 	m_hNotEmpty = CreateEvent (NULL, TRUE, FALSE, NULL);
; 810  : 	m_hComplete = CreateEvent (NULL, TRUE, FALSE, NULL);
; 811  : }
; 812  : 
; 813  : BOOL
; 814  : PMSystemAPI::Init ()
; 815  : {
; 816  : 	return (m_hEmpty != NULL && m_hNotEmpty != NULL && m_hComplete != NULL);

  0001e	6a63		 ldr         r3,[r4,#0x24]
  00020	b38b		 cbz         r3,|$LN19@Init|
  00022	6aa3		 ldr         r3,[r4,#0x28]
  00024	b37b		 cbz         r3,|$LN19@Init|
  00026	6ae3		 ldr         r3,[r4,#0x2C]
  00028	b36b		 cbz         r3,|$LN19@Init|

; 234  : 	}
; 235  : 	m_pUserActivity = ActivityTimerFindByName (_T ("UserActivity"));

  0002a	4827		 ldr         r0,|$LN34@Init|	; =|??_C@_1BK@LBCAIPMI@?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?$AA@|
  0002c	f000 f800	 bl          ActivityTimerFindByName
  00030	f8c4 0258	 str         r0,[r4,#0x258]

; 236  : 
; 237  : 	// Check that all of our activity events exist:
; 238  : 	if (m_pUserActivity == NULL || m_pUserActivity->hevActive == NULL
; 239  : 		|| m_pUserActivity->hevInactive == NULL)

  00034	b1f8		 cbz         r0,|$LN2@Init|
  00036	6903		 ldr         r3,[r0,#0x10]
  00038	b1eb		 cbz         r3,|$LN2@Init|
  0003a	6943		 ldr         r3,[r0,#0x14]
  0003c	b1db		 cbz         r3,|$LN2@Init|

; 243  : 	}
; 244  : 	if (m_hqNotify == NULL)

  0003e	f8d4 324c	 ldr         r3,[r4,#0x24C]
  00042	b93b		 cbnz        r3,|$LN1@Init|

; 245  : 	{
; 246  : 		PMLOGMSG (ZONE_WARN, (_T ("%s: PmPolicyCreateNotificationQueue() failed\r\n"), pszFname));

  00044	4b1c		 ldr         r3,|$LN30@Init|	; =|dpCurSettings|
  00046	f8d3 3440	 ldr         r3,[r3,#0x440]
  0004a	f013 0f02	 tst         r3,#2
  0004e	d02c		 beq         |$LN9@Init|
  00050	481c		 ldr         r0,|$LN33@Init|	; =|??_C@_1FO@IMOGCHJK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAm?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAQ?$AAu@|

; 247  : 		return FALSE;

  00052	e027		 b           |$LN21@Init|
  00054		 |$LN1@Init|

; 248  : 	}
; 249  : 
; 250  : 	ReInitLegacyRegistry ();

  00054	4620		 mov         r0,r4
  00056	f000 f800	 bl          |?ReInitLegacyRegistry@PowerStateManager@@AAAHXZ|

; 251  : 	PlatformLoadTimeouts ();

  0005a	6823		 ldr         r3,[r4]
  0005c	4620		 mov         r0,r4
  0005e	6a9b		 ldr         r3,[r3,#0x28]
  00060	4798		 blx         r3

; 252  : 	ReInitTimeOuts (TRUE);

  00062	6823		 ldr         r3,[r4]
  00064	2101		 movs        r1,#1
  00066	4620		 mov         r0,r4
  00068	689b		 ldr         r3,[r3,#8]
  0006a	4798		 blx         r3

; 253  : 	return CreatePowerStateList ();

  0006c	6823		 ldr         r3,[r4]
  0006e	4620		 mov         r0,r4
  00070	6adb		 ldr         r3,[r3,#0x2C]
  00072	4798		 blx         r3
  00074	e01a		 b           |$LN7@Init|
  00076		 |$LN2@Init|

; 240  : 	{
; 241  : 		PMLOGMSG (ZONE_WARN, (_T ("%s: UserActivity timer events not found\r\n"), pszFname));

  00076	4b10		 ldr         r3,|$LN30@Init|	; =|dpCurSettings|
  00078	f8d3 3440	 ldr         r3,[r3,#0x440]
  0007c	f013 0f02	 tst         r3,#2
  00080	d013		 beq         |$LN9@Init|
  00082	480f		 ldr         r0,|$LN32@Init|	; =|??_C@_1FE@OPDIHCD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AAs?$AA?5?$AAn?$AAo@|

; 242  : 		return FALSE;

  00084	e00e		 b           |$LN21@Init|
  00086		 |$LN19@Init|

; 229  : 	}
; 230  : 	if (!PMSystemAPI::Init ())
; 231  : 	{
; 232  : 		PMLOGMSG (ZONE_WARN, (_T ("%s:  PMSystemAPI::Init() failed\r\n"), pszFname));

  00086	4b0c		 ldr         r3,|$LN30@Init|	; =|dpCurSettings|
  00088	f8d3 3440	 ldr         r3,[r3,#0x440]
  0008c	f013 0f02	 tst         r3,#2
  00090	d00b		 beq         |$LN9@Init|
  00092	480a		 ldr         r0,|$LN31@Init|	; =|??_C@_1EE@IBGMJHLC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?5?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN@|

; 233  : 		return FALSE;

  00094	e006		 b           |$LN21@Init|
  00096		 |$LN5@Init|

; 226  : 	{
; 227  : 		PMLOGMSG (ZONE_WARN, (_T ("%s: CreateEvent() failed for system event\r\n"), pszFname));

  00096	4b08		 ldr         r3,|$LN30@Init|	; =|dpCurSettings|
  00098	f8d3 3440	 ldr         r3,[r3,#0x440]
  0009c	f013 0f02	 tst         r3,#2
  000a0	d003		 beq         |$LN9@Init|
  000a2	4804		 ldr         r0,|$LN29@Init|	; =|??_C@_1FI@CJBDBNJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAy?$AAs@|
  000a4		 |$LN21@Init|
  000a4	4902		 ldr         r1,|$LN28@Init|	; =|??_C@_1DA@OHBGJCLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  000a6	f000 f800	 bl          CeLogMsg
  000aa		 |$LN9@Init|

; 228  : 		return FALSE;

  000aa	2000		 movs        r0,#0
  000ac		 |$LN7@Init|
  000ac		 |$M26|

; 254  : }

  000ac	e8bd 8818	 pop         {r3,r4,r11,pc}
  000b0		 |$LN27@Init|
  000b0		 |$LN28@Init|
  000b0	0000 0000	 DCD         |??_C@_1DA@OHBGJCLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  000b4		 |$LN29@Init|
  000b4	0000 0000	 DCD         |??_C@_1FI@CJBDBNJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAy?$AAs@|
  000b8		 |$LN30@Init|
  000b8	0000 0000	 DCD         |dpCurSettings|
  000bc		 |$LN31@Init|
  000bc	0000 0000	 DCD         |??_C@_1EE@IBGMJHLC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?5?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN@|
  000c0		 |$LN32@Init|
  000c0	0000 0000	 DCD         |??_C@_1FE@OPDIHCD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AAs?$AA?5?$AAn?$AAo@|
  000c4		 |$LN33@Init|
  000c4	0000 0000	 DCD         |??_C@_1FO@IMOGCHJK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAm?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAQ?$AAu@|
  000c8		 |$LN34@Init|
  000c8	0000 0000	 DCD         |??_C@_1BK@LBCAIPMI@?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?$AA@|
  000cc		 |$LN35@Init|
  000cc	0000 0000	 DCD         |?ghevRestartTimers@@3PAXA|
  000d0		 |$LN36@Init|
  000d0	0000 0000	 DCD         |?ghevReloadActivityTimeouts@@3PAXA|
  000d4		 |$M24|

			 ENDP  ; |?Init@PowerStateManager@@QAAHXZ|, PowerStateManager::Init

	END
