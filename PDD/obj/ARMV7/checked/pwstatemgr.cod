; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.114 

	TTL	C:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
	THUMB

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|ResetEvent|
	IMPORT	|EventModify|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |ResetEvent| PROC

; 232  :     return EventModify(h,EVENT_RESET);

  00000	2102		 movs        r1,#2
  00002		 |$M4|
  00002	f000 9000	 b           EventModify

			 ENDP  ; |ResetEvent|

	EXPORT	|SetEvent|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |SetEvent| PROC

; 244  :     return EventModify(h,EVENT_SET);

  00000	2103		 movs        r1,#3
  00002		 |$M4|
  00002	f000 9000	 b           EventModify

			 ENDP  ; |SetEvent|

	EXPORT	|GetCurrentThreadId|
	IMPORT	|__GetUserKData|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |GetCurrentThreadId| PROC

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00000	2008		 movs        r0,#8
  00002		 |$M4|
  00002	f000 9000	 b           __GetUserKData

			 ENDP  ; |GetCurrentThreadId|

	EXPORT	|GetCurrentProcessId|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |GetCurrentProcessId| PROC

; 376  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  00000	200c		 movs        r0,#0xC
  00002		 |$M4|
  00002	f000 9000	 b           __GetUserKData

			 ENDP  ; |GetCurrentProcessId|

	IMPORT	|__security_push_cookie|
	IMPORT	|__security_pop_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|StringCchLengthW|
	IMPORT	|CeLogData|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$CeLogMsg| DCD imagerel |$LN8@CeLogMsg|
	DCD	imagerel |$unwind2$CeLogMsg|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$CeLogMsg| DCD 0x44b00032
	DCD	0x1e889e8
	DCD	0x400a8fb
	DCD	0x8801e8ff
	DCD	0xff05ef00
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffe5
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\celog.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |CeLogMsg| PROC

; 1208 : {

  00000		 |$LN8@CeLogMsg|
  00000	b40f		 push        {r0-r3}
  00002	e92d 4800	 push        {r11,lr}
  00006	46eb		 mov         r11,sp
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d24	 subw        sp,sp,#0x224
  00010		 |$M6|
  00010	4602		 mov         r2,r0

; 1209 :     va_list arglist;
; 1210 :     WCHAR   szTemp[MAX_PATH];
; 1211 :     size_t  cchLen;
; 1212 :     HRESULT hr;
; 1213 : 
; 1214 :     // Compose a single string using the input args
; 1215 :     va_start(arglist, szFormat);
; 1216 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00012	a806		 add         r0,sp,#0x18
  00014	ab8d		 add         r3,sp,#0x234
  00016	f44f 7182	 mov         r1,#0x104
  0001a	928c		 str         r2,[sp,#0x230]
  0001c	f000 f800	 bl          StringCchVPrintfW

; 1217 :     if (SUCCEEDED(hr)) {

  00020	2800		 cmp         r0,#0
  00022	db17		 blt         |$LN1@CeLogMsg|

; 1218 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00024	aa04		 add         r2,sp,#0x10
  00026	a806		 add         r0,sp,#0x18
  00028	f44f 7182	 mov         r1,#0x104
  0002c	f000 f800	 bl          StringCchLengthW

; 1219 :         if (SUCCEEDED(hr)) {

  00030	2800		 cmp         r0,#0
  00032	db0f		 blt         |$LN1@CeLogMsg|

; 1220 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1221 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  00034	f04f 4380	 mov         r3,#0x40000000
  00038	9301		 str         r3,[sp,#4]
  0003a	9b04		 ldr         r3,[sp,#0x10]
  0003c	2200		 movs        r2,#0
  0003e	9203		 str         r2,[sp,#0xC]
  00040	3301		 adds        r3,#1
  00042	005b		 lsls        r3,r3,#1
  00044	9202		 str         r2,[sp,#8]
  00046	9200		 str         r2,[sp]
  00048	aa06		 add         r2,sp,#0x18
  0004a	214a		 movs        r1,#0x4A
  0004c	b29b		 uxth        r3,r3
  0004e	2001		 movs        r0,#1
  00050	f000 f800	 bl          CeLogData
  00054		 |$LN1@CeLogMsg|
  00054		 |$M9|

; 1222 :         }
; 1223 :     }
; 1224 : }

  00054	f20d 2d24	 addw        sp,sp,#0x224
  00058	f000 f800	 bl          __security_pop_cookie
  0005c	f85d bb04	 pop         {r11}
  00060	f85d fb14	 ldr         pc,[sp],#0x14
  00064		 |$M7|

			 ENDP  ; |CeLogMsg|

	EXPORT	|??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z| ; CRegistryEdit::CRegistryEdit
	IMPORT	|RegOpenKeyExW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z| DCD imagerel |$LN8@CRegistryE|
	DCD	0xfd736059
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z| PROC ; CRegistryEdit::CRegistryEdit

; 42   :     CRegistryEdit( HKEY hKey, LPCTSTR pszRegPath )

  00000		 |$LN8@CRegistryE|
  00000	e92d 48fc	 push        {r2-r7,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M6|
  00008	4615		 mov         r5,r2
  0000a	4604		 mov         r4,r0

; 43   :     {
; 44   :         m_hDevKey = NULL;

  0000c	2700		 movs        r7,#0
  0000e	6027		 str         r7,[r4]

; 45   :         if( pszRegPath )

  00010	460e		 mov         r6,r1
  00012	b145		 cbz         r5,|$LN1@CRegistryE|

; 46   :         {
; 47   :             if( RegOpenKeyEx( hKey, pszRegPath, 0, 0, &m_hDevKey ) != ERROR_SUCCESS )

  00014	2300		 movs        r3,#0
  00016	2200		 movs        r2,#0
  00018	4629		 mov         r1,r5
  0001a	4630		 mov         r0,r6
  0001c	9400		 str         r4,[sp]
  0001e	f000 f800	 bl          RegOpenKeyExW
  00022	b100		 cbz         r0,|$LN1@CRegistryE|

; 48   :             {
; 49   :                 m_hDevKey = NULL;

  00024	6027		 str         r7,[r4]
  00026		 |$LN1@CRegistryE|

; 50   :             }
; 51   :         }
; 52   :     }

  00026	4620		 mov         r0,r4
  00028		 |$M9|
  00028	e8bd 88fc	 pop         {r2-r7,r11,pc}
  0002c		 |$M7|

			 ENDP  ; |??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z|, CRegistryEdit::CRegistryEdit

	EXPORT	|?CloseKey@CRegistryEdit@@QAAHXZ|	; CRegistryEdit::CloseKey
	IMPORT	|RegCloseKey|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?CloseKey@CRegistryEdit@@QAAHXZ| DCD imagerel |$LN7@CloseKey|
	DCD	0xfd306041
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?CloseKey@CRegistryEdit@@QAAHXZ| PROC	; CRegistryEdit::CloseKey

; 92   :     BOOL CloseKey() {

  00000		 |$LN7@CloseKey|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M5|
  00008	4604		 mov         r4,r0

; 93   :         if( m_hDevKey )

  0000a	6820		 ldr         r0,[r4]
  0000c	b128		 cbz         r0,|$LN1@CloseKey|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  0000e	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  00012	2300		 movs        r3,#0
  00014	6023		 str         r3,[r4]

; 97   :             return TRUE;

  00016	2001		 movs        r0,#1
  00018	e000		 b           |$LN2@CloseKey|
  0001a		 |$LN1@CloseKey|

; 98   :         }
; 99   :         return FALSE;

  0001a	2000		 movs        r0,#0
  0001c		 |$LN2@CloseKey|
  0001c		 |$M8|

; 100  :     }

  0001c	e8bd 8818	 pop         {r3,r4,r11,pc}
  00020		 |$M6|

			 ENDP  ; |?CloseKey@CRegistryEdit@@QAAHXZ|, CRegistryEdit::CloseKey

	EXPORT	|?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z| ; CRegistryEdit::GetRegValue
	IMPORT	|RegQueryValueExW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z| DCD imagerel |$LN8@GetRegValu|
	DCD	0xfdff8061
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z| PROC ; CRegistryEdit::GetRegValue

; 145  :     {

  00000		 |$LN8@GetRegValu|
  00000	b40f		 push        {r0-r3}
  00002	e92d 480f	 push        {r0-r3,r11,lr}
  00006	f20d 0b10	 addw        r11,sp,#0x10
  0000a		 |$M6|

; 146  :         DWORD dwType = 0;

  0000a	2300		 movs        r3,#0
  0000c	9302		 str         r3,[sp,#8]

; 147  :         LONG status = ::RegQueryValueEx( m_hDevKey,
; 148  :                                            lpcName,
; 149  :                                            NULL,
; 150  :                                            &dwType,
; 151  :                                            lpData,
; 152  :                                            &dwDataLen );

  0000e	6800		 ldr         r0,[r0]
  00010	ab09		 add         r3,sp,#0x24
  00012	9301		 str         r3,[sp,#4]
  00014	9200		 str         r2,[sp]
  00016	ab02		 add         r3,sp,#8
  00018	2200		 movs        r2,#0
  0001a	f000 f800	 bl          RegQueryValueExW

; 153  :         return ( status == ERROR_SUCCESS );

  0001e	b908		 cbnz        r0,|$LN3@GetRegValu|
  00020	2001		 movs        r0,#1
  00022	e000		 b           |$LN4@GetRegValu|
  00024		 |$LN3@GetRegValu|
  00024	2000		 movs        r0,#0
  00026		 |$LN4@GetRegValu|
  00026		 |$M9|

; 154  :     }

  00026	b004		 add         sp,sp,#0x10
  00028	f85d bb04	 pop         {r11}
  0002c	f85d fb14	 ldr         pc,[sp],#0x14
  00030		 |$M7|

			 ENDP  ; |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|, CRegistryEdit::GetRegValue

	EXPORT	|?GetHKey@CRegistryEdit@@QAAPAUHKEY__@@XZ| ; CRegistryEdit::GetHKey
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetHKey@CRegistryEdit@@QAAPAUHKEY__@@XZ| PROC ; CRegistryEdit::GetHKey

; 203  :         return m_hDevKey;

  00000	6800		 ldr         r0,[r0]
  00002		 |$M4|

; 204  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetHKey@CRegistryEdit@@QAAPAUHKEY__@@XZ|, CRegistryEdit::GetHKey

	EXPORT	|??0CLockObject@@QAA@XZ|		; CLockObject::CLockObject
	IMPORT	|InitializeCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0CLockObject@@QAA@XZ| DCD imagerel |$LN6@CLockObjec|
	DCD	0xfd306029
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\csync.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0CLockObject@@QAA@XZ| PROC		; CLockObject::CLockObject

; 36   :     CLockObject()

  00000		 |$LN6@CLockObjec|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0

; 37   :     {
; 38   :         InitializeCriticalSection( &m_CSection );

  0000a	f000 f800	 bl          InitializeCriticalSection

; 39   :     };

  0000e	4620		 mov         r0,r4
  00010		 |$M7|
  00010	e8bd 8818	 pop         {r3,r4,r11,pc}
  00014		 |$M5|

			 ENDP  ; |??0CLockObject@@QAA@XZ|, CLockObject::CLockObject

	EXPORT	|??1CLockObject@@QAA@XZ|		; CLockObject::~CLockObject
	IMPORT	|DeleteCriticalSection|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\csync.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1CLockObject@@QAA@XZ| PROC		; CLockObject::~CLockObject

; 41   :     {

  00000		 |$M4|

; 42   :         DeleteCriticalSection( &m_CSection );

  00000	f000 9000	 b           DeleteCriticalSection

			 ENDP  ; |??1CLockObject@@QAA@XZ|, CLockObject::~CLockObject

	EXPORT	|?Lock@CLockObject@@QAAXXZ|		; CLockObject::Lock
	IMPORT	|EnterCriticalSection|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\csync.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Lock@CLockObject@@QAAXXZ| PROC	; CLockObject::Lock

; 45   :     {

  00000		 |$M4|

; 46   :         EnterCriticalSection( &m_CSection );

  00000	f000 9000	 b           EnterCriticalSection

			 ENDP  ; |?Lock@CLockObject@@QAAXXZ|, CLockObject::Lock

	EXPORT	|?Unlock@CLockObject@@QAAXXZ|		; CLockObject::Unlock
	IMPORT	|LeaveCriticalSection|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\csync.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Unlock@CLockObject@@QAAXXZ| PROC	; CLockObject::Unlock

; 49   :     {

  00000		 |$M4|

; 50   :         LeaveCriticalSection( &m_CSection );

  00000	f000 9000	 b           LeaveCriticalSection

			 ENDP  ; |?Unlock@CLockObject@@QAAXXZ|, CLockObject::Unlock

	EXPORT	|?GetNextPowerState@PowerState@@QAAPAV1@XZ| ; PowerState::GetNextPowerState
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetNextPowerState@PowerState@@QAAPAV1@XZ| PROC ; PowerState::GetNextPowerState

; 169  : 		return m_pNextPowerState;

  00000	6940		 ldr         r0,[r0,#0x14]
  00002		 |$M4|

; 170  : 	};

  00002	4770		 bx          lr

			 ENDP  ; |?GetNextPowerState@PowerState@@QAAPAV1@XZ|, PowerState::GetNextPowerState

	EXPORT	|?GetState@PowerStateOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateOff::GetState
	EXPORT	|?GetStateString@PowerStateOff@@UAAPBGXZ| ; PowerStateOff::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateOff@@UAAKKK@Z| ; PowerStateOff::StateValidateRegistry
	EXPORT	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerState::GetLastNewState
	EXPORT	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z| ; PowerState::SetSystemAPIState
	EXPORT	|?AppsCanRequestState@PowerState@@UAAHXZ| ; PowerState::AppsCanRequestState
	EXPORT	|??_7PowerStateOff@@6B@| [ DATA ]	; PowerStateOff::`vftable'
	EXPORT	|??0PowerStateOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateOff::PowerStateOff
	IMPORT	|??_EPowerStateOff@@UAAPAXI@Z|, WEAK |??_GPowerStateOff@@UAAPAXI@Z| ; PowerStateOff::`vector deleting destructor', PowerStateOff::`scalar deleting destructor'
	IMPORT	|?EnterState@PowerStateOff@@UAAXXZ|	; PowerStateOff::EnterState
	IMPORT	|?Init@PowerState@@UAAHXZ|		; PowerState::Init
	IMPORT	|?WaitForEvent@PowerStateOff@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateOff::WaitForEvent
	IMPORT	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z| ; PowerState::DefaultEventHandle
	IMPORT	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ| ; PowerState::MsgQueueEvent
	IMPORT	|??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z| ; PowerState::PowerState

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateOff@@6B@| DCD |??_EPowerStateOff@@UAAPAXI@Z| ; PowerStateOff::`vftable'
	DCD	|?EnterState@PowerStateOff@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateOff@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateOff@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateOff@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerState@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateOff::PowerStateOff

; 194  :     PowerStateOff (PowerStateManager * pPwrStateMgr, PowerState * pNextPowerState = NULL)

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateOff@@6B@|
  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateOff@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateOff::PowerStateOff

	EXPORT	|?GetState@PowerStateOn@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateOn::GetState
	EXPORT	|?GetStateString@PowerStateOn@@UAAPBGXZ| ; PowerStateOn::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateOn@@UAAKKK@Z| ; PowerStateOn::StateValidateRegistry
	EXPORT	|?AppsCanRequestState@PowerStateOn@@UAAHXZ| ; PowerStateOn::AppsCanRequestState
	EXPORT	|??_7PowerStateOn@@6B@| [ DATA ]	; PowerStateOn::`vftable'
	EXPORT	|??0PowerStateOn@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateOn::PowerStateOn
	IMPORT	|??_EPowerStateOn@@UAAPAXI@Z|, WEAK |??_GPowerStateOn@@UAAPAXI@Z| ; PowerStateOn::`vector deleting destructor', PowerStateOn::`scalar deleting destructor'
	IMPORT	|?EnterState@PowerState@@UAAXXZ|	; PowerState::EnterState
	IMPORT	|?WaitForEvent@PowerStateOn@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateOn::WaitForEvent

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateOn@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateOn@@6B@| DCD |??_EPowerStateOn@@UAAPAXI@Z| ; PowerStateOn::`vftable'
	DCD	|?EnterState@PowerState@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateOn@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateOn@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateOn@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateOn@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerStateOn@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateOn@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateOn::PowerStateOn

; 227  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateOn@@6B@|

; 228  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateOn@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateOn@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateOn::PowerStateOn

	EXPORT	|?GetState@PowerStateUserIdle@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateUserIdle::GetState
	EXPORT	|?GetStateString@PowerStateUserIdle@@UAAPBGXZ| ; PowerStateUserIdle::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateUserIdle@@UAAKKK@Z| ; PowerStateUserIdle::StateValidateRegistry
	EXPORT	|?AppsCanRequestState@PowerStateUserIdle@@UAAHXZ| ; PowerStateUserIdle::AppsCanRequestState
	EXPORT	|??_7PowerStateUserIdle@@6B@| [ DATA ]	; PowerStateUserIdle::`vftable'
	EXPORT	|??0PowerStateUserIdle@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateUserIdle::PowerStateUserIdle
	IMPORT	|??_EPowerStateUserIdle@@UAAPAXI@Z|, WEAK |??_GPowerStateUserIdle@@UAAPAXI@Z| ; PowerStateUserIdle::`vector deleting destructor', PowerStateUserIdle::`scalar deleting destructor'
	IMPORT	|?WaitForEvent@PowerStateUserIdle@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateUserIdle::WaitForEvent

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateUserIdle@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateUserIdle@@6B@| DCD |??_EPowerStateUserIdle@@UAAPAXI@Z| ; PowerStateUserIdle::`vftable'
	DCD	|?EnterState@PowerState@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateUserIdle@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateUserIdle@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateUserIdle@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateUserIdle@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerStateUserIdle@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateUserIdle@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateUserIdle::PowerStateUserIdle

; 263  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateUserIdle@@6B@|

; 264  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateUserIdle@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateUserIdle@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateUserIdle::PowerStateUserIdle

	EXPORT	|?GetState@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateUnattended::GetState
	EXPORT	|?GetStateString@PowerStateUnattended@@UAAPBGXZ| ; PowerStateUnattended::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateUnattended@@UAAKKK@Z| ; PowerStateUnattended::StateValidateRegistry
	EXPORT	|??_7PowerStateUnattended@@6B@| [ DATA ] ; PowerStateUnattended::`vftable'
	EXPORT	|??0PowerStateUnattended@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateUnattended::PowerStateUnattended
	IMPORT	|??_EPowerStateUnattended@@UAAPAXI@Z|, WEAK |??_GPowerStateUnattended@@UAAPAXI@Z| ; PowerStateUnattended::`vector deleting destructor', PowerStateUnattended::`scalar deleting destructor'
	IMPORT	|?EnterState@PowerStateUnattended@@UAAXXZ| ; PowerStateUnattended::EnterState
	IMPORT	|?WaitForEvent@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateUnattended::WaitForEvent
	IMPORT	|?DefaultEventHandle@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z| ; PowerStateUnattended::DefaultEventHandle
	IMPORT	|?GetLastNewState@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateUnattended::GetLastNewState

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateUnattended@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateUnattended@@6B@| DCD |??_EPowerStateUnattended@@UAAPAXI@Z| ; PowerStateUnattended::`vftable'
	DCD	|?EnterState@PowerStateUnattended@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateUnattended@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateUnattended@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerState@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateUnattended@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateUnattended::PowerStateUnattended

; 299  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateUnattended@@6B@|

; 300  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateUnattended@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateUnattended@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateUnattended::PowerStateUnattended

	EXPORT	|?GetState@PowerStateResuming@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateResuming::GetState
	EXPORT	|?GetStateString@PowerStateResuming@@UAAPBGXZ| ; PowerStateResuming::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateResuming@@UAAKKK@Z| ; PowerStateResuming::StateValidateRegistry
	EXPORT	|??_7PowerStateResuming@@6B@| [ DATA ]	; PowerStateResuming::`vftable'
	EXPORT	|??0PowerStateResuming@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateResuming::PowerStateResuming
	IMPORT	|??_EPowerStateResuming@@UAAPAXI@Z|, WEAK |??_GPowerStateResuming@@UAAPAXI@Z| ; PowerStateResuming::`vector deleting destructor', PowerStateResuming::`scalar deleting destructor'
	IMPORT	|?EnterState@PowerStateResuming@@UAAXXZ| ; PowerStateResuming::EnterState
	IMPORT	|?WaitForEvent@PowerStateResuming@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateResuming::WaitForEvent

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateResuming@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateResuming@@6B@| DCD |??_EPowerStateResuming@@UAAPAXI@Z| ; PowerStateResuming::`vftable'
	DCD	|?EnterState@PowerStateResuming@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateResuming@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateResuming@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateResuming@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateResuming@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerState@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateResuming@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateResuming::PowerStateResuming

; 334  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateResuming@@6B@|

; 335  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateResuming@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateResuming@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateResuming::PowerStateResuming

	EXPORT	|?WaitForEvent@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateSuspend::WaitForEvent
	EXPORT	|?GetState@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateSuspend::GetState
	EXPORT	|?GetStateString@PowerStateSuspend@@UAAPBGXZ| ; PowerStateSuspend::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateSuspend@@UAAKKK@Z| ; PowerStateSuspend::StateValidateRegistry
	EXPORT	|?AppsCanRequestState@PowerStateSuspend@@UAAHXZ| ; PowerStateSuspend::AppsCanRequestState
	EXPORT	|??_7PowerStateSuspend@@6B@| [ DATA ]	; PowerStateSuspend::`vftable'
	EXPORT	|??0PowerStateSuspend@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateSuspend::PowerStateSuspend
	IMPORT	|??_EPowerStateSuspend@@UAAPAXI@Z|, WEAK |??_GPowerStateSuspend@@UAAPAXI@Z| ; PowerStateSuspend::`vector deleting destructor', PowerStateSuspend::`scalar deleting destructor'
	IMPORT	|?EnterState@PowerStateSuspend@@UAAXXZ|	; PowerStateSuspend::EnterState

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateSuspend@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateSuspend@@6B@| DCD |??_EPowerStateSuspend@@UAAPAXI@Z| ; PowerStateSuspend::`vftable'
	DCD	|?EnterState@PowerStateSuspend@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateSuspend@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateSuspend@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerStateSuspend@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateSuspend@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateSuspend::PowerStateSuspend

; 366  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateSuspend@@6B@|

; 367  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateSuspend@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateSuspend@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateSuspend::PowerStateSuspend

	EXPORT	|?GetState@PowerStateScreenOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateScreenOff::GetState
	EXPORT	|?GetStateString@PowerStateScreenOff@@UAAPBGXZ| ; PowerStateScreenOff::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateScreenOff@@UAAKKK@Z| ; PowerStateScreenOff::StateValidateRegistry
	EXPORT	|?AppsCanRequestState@PowerStateScreenOff@@UAAHXZ| ; PowerStateScreenOff::AppsCanRequestState
	EXPORT	|??_7PowerStateScreenOff@@6B@| [ DATA ]	; PowerStateScreenOff::`vftable'
	EXPORT	|??0PowerStateScreenOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateScreenOff::PowerStateScreenOff
	IMPORT	|??_EPowerStateScreenOff@@UAAPAXI@Z|, WEAK |??_GPowerStateScreenOff@@UAAPAXI@Z| ; PowerStateScreenOff::`vector deleting destructor', PowerStateScreenOff::`scalar deleting destructor'
	IMPORT	|?WaitForEvent@PowerStateScreenOff@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateScreenOff::WaitForEvent

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateScreenOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateScreenOff@@6B@| DCD |??_EPowerStateScreenOff@@UAAPAXI@Z| ; PowerStateScreenOff::`vftable'
	DCD	|?EnterState@PowerState@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateScreenOff@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateScreenOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateScreenOff@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateScreenOff@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerStateScreenOff@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateScreenOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateScreenOff::PowerStateScreenOff

; 406  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateScreenOff@@6B@|

; 407  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateScreenOff@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateScreenOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateScreenOff::PowerStateScreenOff

	EXPORT	|?GetState@PowerStateBacklightOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateBacklightOff::GetState
	EXPORT	|?GetStateString@PowerStateBacklightOff@@UAAPBGXZ| ; PowerStateBacklightOff::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateBacklightOff@@UAAKKK@Z| ; PowerStateBacklightOff::StateValidateRegistry
	EXPORT	|??_7PowerStateBacklightOff@@6B@| [ DATA ] ; PowerStateBacklightOff::`vftable'
	EXPORT	|??0PowerStateBacklightOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateBacklightOff::PowerStateBacklightOff
	IMPORT	|??_EPowerStateBacklightOff@@UAAPAXI@Z|, WEAK |??_GPowerStateBacklightOff@@UAAPAXI@Z| ; PowerStateBacklightOff::`vector deleting destructor', PowerStateBacklightOff::`scalar deleting destructor'
	IMPORT	|?WaitForEvent@PowerStateBacklightOff@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateBacklightOff::WaitForEvent

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateBacklightOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateBacklightOff@@6B@| DCD |??_EPowerStateBacklightOff@@UAAPAXI@Z| ; PowerStateBacklightOff::`vftable'
	DCD	|?EnterState@PowerState@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateBacklightOff@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateBacklightOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateBacklightOff@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateBacklightOff@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerState@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateBacklightOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateBacklightOff::PowerStateBacklightOff

; 442  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateBacklightOff@@6B@|

; 443  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateBacklightOff@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateBacklightOff@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateBacklightOff::PowerStateBacklightOff

	EXPORT	|?EnterState@PowerStateColdReboot@@UAAXXZ| ; PowerStateColdReboot::EnterState
	EXPORT	|?WaitForEvent@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateColdReboot::WaitForEvent
	EXPORT	|?GetState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateColdReboot::GetState
	EXPORT	|?GetStateString@PowerStateColdReboot@@UAAPBGXZ| ; PowerStateColdReboot::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateColdReboot@@UAAKKK@Z| ; PowerStateColdReboot::StateValidateRegistry
	EXPORT	|?GetLastNewState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateColdReboot::GetLastNewState
	EXPORT	|?AppsCanRequestState@PowerStateColdReboot@@UAAHXZ| ; PowerStateColdReboot::AppsCanRequestState
	EXPORT	|??_7PowerStateColdReboot@@6B@| [ DATA ] ; PowerStateColdReboot::`vftable'
	EXPORT	|??0PowerStateColdReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateColdReboot::PowerStateColdReboot
	IMPORT	|??_EPowerStateColdReboot@@UAAPAXI@Z|, WEAK |??_GPowerStateColdReboot@@UAAPAXI@Z| ; PowerStateColdReboot::`vector deleting destructor', PowerStateColdReboot::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateColdReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateColdReboot@@6B@| DCD |??_EPowerStateColdReboot@@UAAPAXI@Z| ; PowerStateColdReboot::`vftable'
	DCD	|?EnterState@PowerStateColdReboot@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateColdReboot@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateColdReboot@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerStateColdReboot@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateColdReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateColdReboot::PowerStateColdReboot

; 475  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateColdReboot@@6B@|

; 476  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateColdReboot@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateColdReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateColdReboot::PowerStateColdReboot

	EXPORT	|?EnterState@PowerStateReboot@@UAAXXZ|	; PowerStateReboot::EnterState
	EXPORT	|?WaitForEvent@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| ; PowerStateReboot::WaitForEvent
	EXPORT	|?GetState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateReboot::GetState
	EXPORT	|?GetStateString@PowerStateReboot@@UAAPBGXZ| ; PowerStateReboot::GetStateString
	EXPORT	|?StateValidateRegistry@PowerStateReboot@@UAAKKK@Z| ; PowerStateReboot::StateValidateRegistry
	EXPORT	|?GetLastNewState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PowerStateReboot::GetLastNewState
	EXPORT	|?AppsCanRequestState@PowerStateReboot@@UAAHXZ| ; PowerStateReboot::AppsCanRequestState
	EXPORT	|??_7PowerStateReboot@@6B@| [ DATA ]	; PowerStateReboot::`vftable'
	EXPORT	|??0PowerStateReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| ; PowerStateReboot::PowerStateReboot
	IMPORT	|??_EPowerStateReboot@@UAAPAXI@Z|, WEAK |??_GPowerStateReboot@@UAAPAXI@Z| ; PowerStateReboot::`vector deleting destructor', PowerStateReboot::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| DCD imagerel |$LN6@PowerState|
	DCD	0xfd306031

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateReboot@@6B@| DCD |??_EPowerStateReboot@@UAAPAXI@Z| ; PowerStateReboot::`vftable'
	DCD	|?EnterState@PowerStateReboot@@UAAXXZ|
	DCD	|?Init@PowerState@@UAAHXZ|
	DCD	|?WaitForEvent@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|
	DCD	|?DefaultEventHandle@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W4PLATFORM_ACTIVITY_EVENT@@@Z|
	DCD	|?GetState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?GetStateString@PowerStateReboot@@UAAPBGXZ|
	DCD	|?StateValidateRegistry@PowerStateReboot@@UAAKKK@Z|
	DCD	|?GetLastNewState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
	DCD	|?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|
	DCD	|?AppsCanRequestState@PowerStateReboot@@UAAHXZ|
	DCD	|?MsgQueueEvent@PowerState@@MAA?AW4PLATFORM_ACTIVITY_EVENT@@XZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0PowerStateReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z| PROC ; PowerStateReboot::PowerStateReboot

; 523  : 	{

  00000		 |$LN6@PowerState|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0000e	4b02		 ldr         r3,|$LN9@PowerState| ; =|??_7PowerStateReboot@@6B@|

; 524  :     }

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014		 |$M7|
  00014	e8bd 8818	 pop         {r3,r4,r11,pc}
  00018		 |$LN8@PowerState|
  00018		 |$LN9@PowerState|
  00018	0000 0000	 DCD         |??_7PowerStateReboot@@6B@|
  0001c		 |$M5|

			 ENDP  ; |??0PowerStateReboot@@QAA@PAVPowerStateManager@@PAVPowerState@@@Z|, PowerStateReboot::PowerStateReboot

	EXPORT	|?GetAPISignalHandle@PMSystemAPI@@QAAPAXXZ| ; PMSystemAPI::GetAPISignalHandle
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetAPISignalHandle@PMSystemAPI@@QAAPAXXZ| PROC ; PMSystemAPI::GetAPISignalHandle

; 95   : 		return m_hNotEmpty;

  00000	6a80		 ldr         r0,[r0,#0x28]
  00002		 |$M4|

; 96   : 	};

  00002	4770		 bx          lr

			 ENDP  ; |?GetAPISignalHandle@PMSystemAPI@@QAAPAXXZ|, PMSystemAPI::GetAPISignalHandle

	EXPORT	|?Init@NotifyRegKey@@QAAHXZ|		; NotifyRegKey::Init
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Init@NotifyRegKey@@QAAHXZ| PROC	; NotifyRegKey::Init

; 138  : 		return m_hNotifyEvent != INVALID_HANDLE_VALUE;

  00000	6843		 ldr         r3,[r0,#4]
  00002	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00006	d001		 beq         |$LN3@Init|
  00008	2001		 movs        r0,#1
  0000a		 |$M6|

; 139  : 	};

  0000a	4770		 bx          lr
  0000c		 |$LN3@Init|

; 138  : 		return m_hNotifyEvent != INVALID_HANDLE_VALUE;

  0000c	2000		 movs        r0,#0
  0000e		 |$M7|

; 139  : 	};

  0000e	4770		 bx          lr

			 ENDP  ; |?Init@NotifyRegKey@@QAAHXZ|, NotifyRegKey::Init

	EXPORT	|?AckNotification@NotifyRegKey@@QAAHXZ|	; NotifyRegKey::AckNotification
	IMPORT	|CeFindNextRegChange|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AckNotification@NotifyRegKey@@QAAHXZ| PROC ; NotifyRegKey::AckNotification

; 160  : 		return CeFindNextRegChange (m_hNotifyEvent);

  00000	6840		 ldr         r0,[r0,#4]
  00002		 |$M4|
  00002	f000 9000	 b           CeFindNextRegChange

			 ENDP  ; |?AckNotification@NotifyRegKey@@QAAHXZ|, NotifyRegKey::AckNotification

	EXPORT	|?GetNotificationHandle@NotifyRegKey@@QAAPAXXZ| ; NotifyRegKey::GetNotificationHandle
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetNotificationHandle@NotifyRegKey@@QAAPAXXZ| PROC ; NotifyRegKey::GetNotificationHandle

; 164  : 		return m_hNotifyEvent;

  00000	6840		 ldr         r0,[r0,#4]
  00002		 |$M4|

; 165  : 	};

  00002	4770		 bx          lr

			 ENDP  ; |?GetNotificationHandle@NotifyRegKey@@QAAPAXXZ|, NotifyRegKey::GetNotificationHandle

	EXPORT	|?IncUnattendedRefCount@PowerStateManager@@QAAKXZ| ; PowerStateManager::IncUnattendedRefCount
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?IncUnattendedRefCount@PowerStateManager@@QAAKXZ| PROC ; PowerStateManager::IncUnattendedRefCount

; 238  : 		return (++m_dwUnattendedModeRef);

  00000	f8d0 3290	 ldr         r3,[r0,#0x290]
  00004	4602		 mov         r2,r0
  00006	1c58		 adds        r0,r3,#1
  00008	f8c2 0290	 str         r0,[r2,#0x290]
  0000c		 |$M4|

; 239  :     }

  0000c	4770		 bx          lr

			 ENDP  ; |?IncUnattendedRefCount@PowerStateManager@@QAAKXZ|, PowerStateManager::IncUnattendedRefCount

	EXPORT	|?DecUnattendedRefCount@PowerStateManager@@QAAKXZ| ; PowerStateManager::DecUnattendedRefCount
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?DecUnattendedRefCount@PowerStateManager@@QAAKXZ| PROC ; PowerStateManager::DecUnattendedRefCount

; 242  :         if (m_dwUnattendedModeRef)

  00000	f8d0 2290	 ldr         r2,[r0,#0x290]
  00004	4603		 mov         r3,r0
  00006	b11a		 cbz         r2,|$LN2@DecUnatten|

; 243  :         {
; 244  : 			return (--m_dwUnattendedModeRef);

  00008	1e50		 subs        r0,r2,#1
  0000a	f8c3 0290	 str         r0,[r3,#0x290]
  0000e		 |$M6|

; 249  :         }
; 250  :     }

  0000e	4770		 bx          lr
  00010		 |$LN2@DecUnatten|

; 245  :         }
; 246  :         else
; 247  :         {
; 248  : 			return 0;

  00010	2000		 movs        r0,#0
  00012		 |$M7|

; 249  :         }
; 250  :     }

  00012	4770		 bx          lr

			 ENDP  ; |?DecUnattendedRefCount@PowerStateManager@@QAAKXZ|, PowerStateManager::DecUnattendedRefCount

	EXPORT	|?SubtractTimeout@PowerStateManager@@UAAXK@Z| ; PowerStateManager::SubtractTimeout
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00064			 AREA	 |.text|, CODE, THUMB

  00064		 |?SubtractTimeout@PowerStateManager@@UAAXK@Z| PROC ; PowerStateManager::SubtractTimeout

; 324  : 	if (m_dwCurSuspendTimeout != INFINITE)

  00064	f8d0 3280	 ldr         r3,[r0,#0x280]
  00068	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  0006c	d006		 beq         |$LN4@SubtractTi|

; 325  : 		m_dwCurSuspendTimeout =
; 326  : 			(m_dwCurSuspendTimeout > dwTicks ? m_dwCurSuspendTimeout - dwTicks : 0);

  0006e	428b		 cmp         r3,r1
  00070	d901		 bls         |$LN7@SubtractTi|
  00072	1a5b		 subs        r3,r3,r1
  00074	e000		 b           |$LN8@SubtractTi|
  00076		 |$LN7@SubtractTi|
  00076	2300		 movs        r3,#0
  00078		 |$LN8@SubtractTi|
  00078	f8c0 3280	 str         r3,[r0,#0x280]
  0007c		 |$LN4@SubtractTi|

; 327  : 	if (m_dwCurResumingSuspendTimeout != INFINITE)

  0007c	f8d0 3284	 ldr         r3,[r0,#0x284]
  00080	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00084	d006		 beq         |$LN3@SubtractTi|

; 328  : 		m_dwCurResumingSuspendTimeout =
; 329  : 			(m_dwCurResumingSuspendTimeout > dwTicks ? m_dwCurResumingSuspendTimeout - dwTicks : 0);

  00086	428b		 cmp         r3,r1
  00088	d901		 bls         |$LN9@SubtractTi|
  0008a	1a5b		 subs        r3,r3,r1
  0008c	e000		 b           |$LN10@SubtractTi|
  0008e		 |$LN9@SubtractTi|
  0008e	2300		 movs        r3,#0
  00090		 |$LN10@SubtractTi|
  00090	f8c0 3284	 str         r3,[r0,#0x284]
  00094		 |$LN3@SubtractTi|

; 330  : 	if (m_dwCurBacklightTimeout != INFINITE)

  00094	f8d0 3288	 ldr         r3,[r0,#0x288]
  00098	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  0009c	d006		 beq         |$LN2@SubtractTi|

; 331  : 		m_dwCurBacklightTimeout =
; 332  : 			(m_dwCurBacklightTimeout > dwTicks ? m_dwCurBacklightTimeout - dwTicks : 0);

  0009e	428b		 cmp         r3,r1
  000a0	d901		 bls         |$LN11@SubtractTi|
  000a2	1a5b		 subs        r3,r3,r1
  000a4	e000		 b           |$LN12@SubtractTi|
  000a6		 |$LN11@SubtractTi|
  000a6	2300		 movs        r3,#0
  000a8		 |$LN12@SubtractTi|
  000a8	f8c0 3288	 str         r3,[r0,#0x288]
  000ac		 |$LN2@SubtractTi|

; 333  : 	if (m_dwCurUserIdleTimeout != INFINITE)

  000ac	f8d0 328c	 ldr         r3,[r0,#0x28C]
  000b0	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  000b4	d006		 beq         |$LN1@SubtractTi|

; 334  : 		m_dwCurUserIdleTimeout =
; 335  : 			(m_dwCurUserIdleTimeout > dwTicks ? m_dwCurUserIdleTimeout - dwTicks : 0);

  000b6	428b		 cmp         r3,r1
  000b8	d901		 bls         |$LN13@SubtractTi|
  000ba	1a5b		 subs        r3,r3,r1
  000bc	e000		 b           |$LN14@SubtractTi|
  000be		 |$LN13@SubtractTi|
  000be	2300		 movs        r3,#0
  000c0		 |$LN14@SubtractTi|
  000c0	f8c0 328c	 str         r3,[r0,#0x28C]
  000c4		 |$LN1@SubtractTi|
  000c4		 |$M16|

; 336  : }

  000c4	4770		 bx          lr

			 ENDP  ; |?SubtractTimeout@PowerStateManager@@UAAXK@Z|, PowerStateManager::SubtractTimeout

	EXPORT	|?GetSmallestTimeout@PowerStateManager@@UAAKPAW4TIMEOUT_ITEM@@@Z| ; PowerStateManager::GetSmallestTimeout

  00008			 AREA	 |.pdata|, PDATA
|$pdata1$?GetSmallestTimeout@PowerStateManager@@UAAKPAW4TIMEOUT_ITEM@@@Z| DCD imagerel |$LN11@GetSmalles|
	DCD	0xfd306095
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  000c6			 AREA	 |.text|, CODE, THUMB

  000c8		 |?GetSmallestTimeout@PowerStateManager@@UAAKPAW4TIMEOUT_ITEM@@@Z| PROC ; PowerStateManager::GetSmallestTimeout

; 340  : {

  000c8		 |$LN11@GetSmalles|
  000c8	e92d 4818	 push        {r3,r4,r11,lr}
  000cc	f20d 0b08	 addw        r11,sp,#8
  000d0		 |$M9|
  000d0	4604		 mov         r4,r0

; 341  : 	DWORD dwReturn = INFINITE;
; 342  : 	TIMEOUT_ITEM activeEvent = NoTimeoutItem;
; 343  : 
; 344  : 	if (dwReturn > m_dwCurSuspendTimeout)

  000d2	f8d4 2280	 ldr         r2,[r4,#0x280]
  000d6	f06f 0000	 mvn         r0,#0
  000da	2300		 movs        r3,#0
  000dc	f1b2 3fff	 cmp         r2,#0xFFFFFFFF
  000e0	d201		 bcs         |$LN5@GetSmalles|

; 345  : 	{
; 346  : 		dwReturn = m_dwCurSuspendTimeout;

  000e2	4610		 mov         r0,r2

; 347  : 		activeEvent = SuspendTimeout;

  000e4	2301		 movs        r3,#1
  000e6		 |$LN5@GetSmalles|

; 348  : 	}
; 349  : 	if (dwReturn > m_dwCurResumingSuspendTimeout)

  000e6	f8d4 2284	 ldr         r2,[r4,#0x284]
  000ea	4290		 cmp         r0,r2
  000ec	d901		 bls         |$LN4@GetSmalles|

; 350  : 	{
; 351  : 		dwReturn = m_dwCurResumingSuspendTimeout;

  000ee	4610		 mov         r0,r2

; 352  : 		activeEvent = ResumingSuspendTimeout;

  000f0	2302		 movs        r3,#2
  000f2		 |$LN4@GetSmalles|

; 353  : 	}
; 354  : 	if (dwReturn > m_dwCurBacklightTimeout)

  000f2	f8d4 2288	 ldr         r2,[r4,#0x288]
  000f6	4290		 cmp         r0,r2
  000f8	d901		 bls         |$LN3@GetSmalles|

; 355  : 	{
; 356  : 		dwReturn = m_dwCurBacklightTimeout;

  000fa	4610		 mov         r0,r2

; 357  : 		activeEvent = BacklightTimeout;

  000fc	2303		 movs        r3,#3
  000fe		 |$LN3@GetSmalles|

; 358  : 	}
; 359  : 	if (dwReturn > m_dwCurUserIdleTimeout)

  000fe	f8d4 228c	 ldr         r2,[r4,#0x28C]
  00102	4290		 cmp         r0,r2
  00104	d901		 bls         |$LN2@GetSmalles|

; 360  : 	{
; 361  : 		dwReturn = m_dwCurUserIdleTimeout;

  00106	4610		 mov         r0,r2

; 362  : 		activeEvent = UserActivityTimeout;

  00108	2304		 movs        r3,#4
  0010a		 |$LN2@GetSmalles|

; 363  : 	}
; 364  : 	if (pTimeoutItem)

  0010a	b101		 cbz         r1,|$LN1@GetSmalles|

; 365  : 	{
; 366  : 		*pTimeoutItem = activeEvent;

  0010c	600b		 str         r3,[r1]
  0010e		 |$LN1@GetSmalles|
  0010e		 |$M12|

; 367  : 	}
; 368  : 	return dwReturn;
; 369  : }

  0010e	e8bd 8818	 pop         {r3,r4,r11,pc}
  00112		 |$M10|

			 ENDP  ; |?GetSmallestTimeout@PowerStateManager@@UAAKPAW4TIMEOUT_ITEM@@@Z|, PowerStateManager::GetSmallestTimeout

	EXPORT	|?DisablePhase2Event@PowerStateManager@@UAAXXZ| ; PowerStateManager::DisablePhase2Event
	IMPORT	|CloseHandle|

  00010			 AREA	 |.pdata|, PDATA
|$pdata1$?DisablePhase2Event@PowerStateManager@@UAAXXZ| DCD imagerel |$LN7@DisablePha|
	DCD	0xfd30603d
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00112			 AREA	 |.text|, CODE, THUMB

  00114		 |?DisablePhase2Event@PowerStateManager@@UAAXXZ| PROC ; PowerStateManager::DisablePhase2Event

; 426  : {

  00114		 |$LN7@DisablePha|
  00114	e92d 4818	 push        {r3,r4,r11,lr}
  00118	f20d 0b08	 addw        r11,sp,#8
  0011c		 |$M5|
  0011c	4604		 mov         r4,r0

; 427  : 	if (m_hevBootPhase2)

  0011e	f8d0 0238	 ldr         r0,[r0,#0x238]
  00122	b120		 cbz         r0,|$LN1@DisablePha|

; 428  : 	{
; 429  : 		CloseHandle (m_hevBootPhase2);

  00124	f000 f800	 bl          CloseHandle

; 430  : 		m_hevBootPhase2 = NULL;

  00128	2300		 movs        r3,#0
  0012a	f8c4 3238	 str         r3,[r4,#0x238]
  0012e		 |$LN1@DisablePha|
  0012e		 |$M8|

; 431  : 	}
; 432  : }

  0012e	e8bd 8818	 pop         {r3,r4,r11,pc}
  00132		 |$M6|

			 ENDP  ; |?DisablePhase2Event@PowerStateManager@@UAAXXZ|, PowerStateManager::DisablePhase2Event

	EXPORT	|?GetSuspendTimeOut@PowerStateManager@@QAAKXZ| ; PowerStateManager::GetSuspendTimeOut
	IMPORT	|gSystemPowerStatus|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00132			 AREA	 |.text|, CODE, THUMB

  00134		 |?GetSuspendTimeOut@PowerStateManager@@QAAKXZ| PROC ; PowerStateManager::GetSuspendTimeOut

; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);

  00134	4b04		 ldr         r3,|$LN9@GetSuspend| ; =|gSystemPowerStatus|
  00136	7d1b		 ldrb        r3,[r3,#0x14]
  00138	b913		 cbnz        r3,|$LN3@GetSuspend|
  0013a	f8d0 026c	 ldr         r0,[r0,#0x26C]
  0013e		 |$M6|

; 536  : }

  0013e	4770		 bx          lr
  00140		 |$LN3@GetSuspend|

; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);

  00140	f8d0 025c	 ldr         r0,[r0,#0x25C]
  00144		 |$M7|

; 536  : }

  00144	4770		 bx          lr
  00146		 |$LN10@GetSuspend|
  00146		 |$M11|
  00146	defe		 __debugbreak
  00148		 |$LN8@GetSuspend|
  00148		 |$LN9@GetSuspend|
  00148	0000 0000	 DCD         |gSystemPowerStatus|

			 ENDP  ; |?GetSuspendTimeOut@PowerStateManager@@QAAKXZ|, PowerStateManager::GetSuspendTimeOut

	EXPORT	|?GetResumingSuspendTimeout@PowerStateManager@@QAAKXZ| ; PowerStateManager::GetResumingSuspendTimeout
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  0014c			 AREA	 |.text|, CODE, THUMB

  0014c		 |?GetResumingSuspendTimeout@PowerStateManager@@QAAKXZ| PROC ; PowerStateManager::GetResumingSuspendTimeout

; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);

  0014c	4b04		 ldr         r3,|$LN9@GetResumin| ; =|gSystemPowerStatus|
  0014e	7d1b		 ldrb        r3,[r3,#0x14]
  00150	b913		 cbnz        r3,|$LN3@GetResumin|
  00152	f8d0 0270	 ldr         r0,[r0,#0x270]
  00156		 |$M6|

; 543  : }

  00156	4770		 bx          lr
  00158		 |$LN3@GetResumin|

; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);

  00158	f8d0 0260	 ldr         r0,[r0,#0x260]
  0015c		 |$M7|

; 543  : }

  0015c	4770		 bx          lr
  0015e		 |$LN10@GetResumin|
  0015e		 |$M11|
  0015e	defe		 __debugbreak
  00160		 |$LN8@GetResumin|
  00160		 |$LN9@GetResumin|
  00160	0000 0000	 DCD         |gSystemPowerStatus|

			 ENDP  ; |?GetResumingSuspendTimeout@PowerStateManager@@QAAKXZ|, PowerStateManager::GetResumingSuspendTimeout

	EXPORT	|?GetBackLightTimeout@PowerStateManager@@QAAKXZ| ; PowerStateManager::GetBackLightTimeout
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00164			 AREA	 |.text|, CODE, THUMB

  00164		 |?GetBackLightTimeout@PowerStateManager@@QAAKXZ| PROC ; PowerStateManager::GetBackLightTimeout

; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  00164	4b04		 ldr         r3,|$LN9@GetBackLig| ; =|gSystemPowerStatus|
  00166	7d1b		 ldrb        r3,[r3,#0x14]
  00168	b913		 cbnz        r3,|$LN3@GetBackLig|
  0016a	f8d0 0274	 ldr         r0,[r0,#0x274]
  0016e		 |$M6|

; 550  : }

  0016e	4770		 bx          lr
  00170		 |$LN3@GetBackLig|

; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  00170	f8d0 0264	 ldr         r0,[r0,#0x264]
  00174		 |$M7|

; 550  : }

  00174	4770		 bx          lr
  00176		 |$LN10@GetBackLig|
  00176		 |$M11|
  00176	defe		 __debugbreak
  00178		 |$LN8@GetBackLig|
  00178		 |$LN9@GetBackLig|
  00178	0000 0000	 DCD         |gSystemPowerStatus|

			 ENDP  ; |?GetBackLightTimeout@PowerStateManager@@QAAKXZ|, PowerStateManager::GetBackLightTimeout

	EXPORT	|?GetUserIdleTimeOut@PowerStateManager@@QAAKXZ| ; PowerStateManager::GetUserIdleTimeOut
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  0017c			 AREA	 |.text|, CODE, THUMB

  0017c		 |?GetUserIdleTimeOut@PowerStateManager@@QAAKXZ| PROC ; PowerStateManager::GetUserIdleTimeOut

; 555  : 	return (gSystemPowerStatus.bACLineStatus ==
; 556  : 			AC_LINE_OFFLINE ? m_dwBattUserIdleTimeout : m_dwACUserIdleTimeout);

  0017c	4b04		 ldr         r3,|$LN9@GetUserIdl| ; =|gSystemPowerStatus|
  0017e	7d1b		 ldrb        r3,[r3,#0x14]
  00180	b913		 cbnz        r3,|$LN3@GetUserIdl|
  00182	f8d0 0278	 ldr         r0,[r0,#0x278]
  00186		 |$M6|

; 557  : }

  00186	4770		 bx          lr
  00188		 |$LN3@GetUserIdl|

; 555  : 	return (gSystemPowerStatus.bACLineStatus ==
; 556  : 			AC_LINE_OFFLINE ? m_dwBattUserIdleTimeout : m_dwACUserIdleTimeout);

  00188	f8d0 0268	 ldr         r0,[r0,#0x268]
  0018c		 |$M7|

; 557  : }

  0018c	4770		 bx          lr
  0018e		 |$LN10@GetUserIdl|
  0018e		 |$M11|
  0018e	defe		 __debugbreak
  00190		 |$LN8@GetUserIdl|
  00190		 |$LN9@GetUserIdl|
  00190	0000 0000	 DCD         |gSystemPowerStatus|

			 ENDP  ; |?GetUserIdleTimeOut@PowerStateManager@@QAAKXZ|, PowerStateManager::GetUserIdleTimeOut

	EXPORT	|?Init@PMSystemAPI@@QAAHXZ|		; PMSystemAPI::Init
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00194			 AREA	 |.text|, CODE, THUMB

  00194		 |?Init@PMSystemAPI@@QAAHXZ| PROC	; PMSystemAPI::Init

; 816  : 	return (m_hEmpty != NULL && m_hNotEmpty != NULL && m_hComplete != NULL);

  00194	6a43		 ldr         r3,[r0,#0x24]
  00196	b12b		 cbz         r3,|$LN3@Init|
  00198	6a83		 ldr         r3,[r0,#0x28]
  0019a	b11b		 cbz         r3,|$LN3@Init|
  0019c	6ac3		 ldr         r3,[r0,#0x2C]
  0019e	b10b		 cbz         r3,|$LN3@Init|
  001a0	2001		 movs        r0,#1
  001a2		 |$M6|

; 817  : }

  001a2	4770		 bx          lr
  001a4		 |$LN3@Init|

; 816  : 	return (m_hEmpty != NULL && m_hNotEmpty != NULL && m_hComplete != NULL);

  001a4	2000		 movs        r0,#0
  001a6		 |$M7|

; 817  : }

  001a6	4770		 bx          lr

			 ENDP  ; |?Init@PMSystemAPI@@QAAHXZ|, PMSystemAPI::Init

	EXPORT	|?RequestComplete@PMSystemAPI@@QAAXK@Z|	; PMSystemAPI::RequestComplete
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  001a8			 AREA	 |.text|, CODE, THUMB

  001a8		 |?RequestComplete@PMSystemAPI@@QAAXK@Z| PROC ; PMSystemAPI::RequestComplete

; 875  : 	if (ERROR_SUCCESS != dwStatus)

  001a8	b101		 cbz         r1,|$LN1@RequestCom|

; 876  : 		m_dwResult = dwStatus;

  001aa	6201		 str         r1,[r0,#0x20]
  001ac		 |$LN1@RequestCom|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  001ac	6ac0		 ldr         r0,[r0,#0x2C]
  001ae	2103		 movs        r1,#3
  001b0		 |$M7|
  001b0	f000 9000	 b           EventModify

			 ENDP  ; |?RequestComplete@PMSystemAPI@@QAAXK@Z|, PMSystemAPI::RequestComplete

	EXPORT	|??1CRegistryEdit@@QAA@XZ|		; CRegistryEdit::~CRegistryEdit

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??1CRegistryEdit@@QAA@XZ| DCD imagerel |$LN9@CRegistryE|
	DCD	0xfd306035
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1CRegistryEdit@@QAA@XZ| PROC	; CRegistryEdit::~CRegistryEdit

; 89   :     {

  00000		 |$LN9@CRegistryE|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	4604		 mov         r4,r0

; 92   :     BOOL CloseKey() {
; 93   :         if( m_hDevKey )

  0000a	6820		 ldr         r0,[r4]
  0000c	b118		 cbz         r0,|$LN3@CRegistryE|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  0000e	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  00012	2300		 movs        r3,#0
  00014	6023		 str         r3,[r4]
  00016		 |$LN3@CRegistryE|
  00016		 |$M10|

; 90   :         CloseKey();
; 91   :     }

  00016	e8bd 8818	 pop         {r3,r4,r11,pc}
  0001a		 |$M8|

			 ENDP  ; |??1CRegistryEdit@@QAA@XZ|, CRegistryEdit::~CRegistryEdit

	EXPORT	|?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z| ; NotifyRegKey::GetRegValue

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z| DCD imagerel |$LN17@GetRegValu|
	DCD	0x17000ad
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z| PROC ; NotifyRegKey::GetRegValue

; 141  : 	{

  00000		 |$LN17@GetRegValu|
  00000	e92d 4810	 push        {r4,r11,lr}
  00004	f20d 0b04	 addw        r11,sp,#4
  00008	b085		 sub         sp,sp,#0x14
  0000a		 |$M15|

; 142  : 		DWORD dwValue = 0;

  0000a	2300		 movs        r3,#0
  0000c	9302		 str         r3,[sp,#8]

; 143  : 
; 144  : 		if (CRegistryEdit::GetRegValue (lpcName, (PBYTE) & dwValue, sizeof (dwValue)))

  0000e	2304		 movs        r3,#4
  00010	9303		 str         r3,[sp,#0xC]
; File c:\wince800\public\common\oak\inc\cregedit.h

; 146  :         DWORD dwType = 0;

  00012	2300		 movs        r3,#0
  00014	9304		 str         r3,[sp,#0x10]

; 152  :                                            &dwDataLen );

  00016	ab03		 add         r3,sp,#0xC
  00018	9301		 str         r3,[sp,#4]
  0001a	6800		 ldr         r0,[r0]
  0001c	ab02		 add         r3,sp,#8
  0001e	9300		 str         r3,[sp]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 141  : 	{

  00020	4614		 mov         r4,r2
; File c:\wince800\public\common\oak\inc\cregedit.h

; 152  :                                            &dwDataLen );

  00022	ab04		 add         r3,sp,#0x10
  00024	2200		 movs        r2,#0
  00026	f000 f800	 bl          RegQueryValueExW

; 153  :         return ( status == ERROR_SUCCESS );

  0002a	b980		 cbnz        r0,|$LN4@GetRegValu|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 146  : 			if (lpdwData)

  0002c	b16c		 cbz         r4,|$LN3@GetRegValu|

; 147  : 			{
; 148  : 				if (dwValue >= INFINITE / 1000)

  0002e	4b0a		 ldr         r3,|$LN20@GetRegValu| ; =0x418937
  00030	9a02		 ldr         r2,[sp,#8]
  00032	429a		 cmp         r2,r3
  00034	d300		 bcc         |$LN2@GetRegValu|

; 149  : 					dwValue = INFINITE / 1000;

  00036	461a		 mov         r2,r3
  00038		 |$LN2@GetRegValu|

; 150  : 
; 151  : 				*lpdwData = (dwValue != 0 ? dwValue * 1000 : INFINITE);

  00038	b122		 cbz         r2,|$LN7@GetRegValu|
  0003a	f44f 737a	 mov         r3,#0x3E8
  0003e	fb02 f303	 mul         r3,r2,r3
  00042	e001		 b           |$LN8@GetRegValu|
  00044		 |$LN7@GetRegValu|
  00044	f06f 0300	 mvn         r3,#0
  00048		 |$LN8@GetRegValu|
  00048	6023		 str         r3,[r4]
  0004a		 |$LN3@GetRegValu|

; 152  : 			}
; 153  : 			return TRUE;

  0004a	2001		 movs        r0,#1
  0004c	e000		 b           |$LN1@GetRegValu|
  0004e		 |$LN4@GetRegValu|

; 154  : 		}
; 155  : 		else
; 156  : 			return FALSE;

  0004e	2000		 movs        r0,#0
  00050		 |$LN1@GetRegValu|
  00050		 |$M18|

; 157  : 	}

  00050	b005		 add         sp,sp,#0x14
  00052	e8bd 8810	 pop         {r4,r11,pc}
  00056		 |$LN21@GetRegValu|
  00056		 |$M22|
  00056	defe		 __debugbreak
  00058		 |$LN19@GetRegValu|
  00058		 |$LN20@GetRegValu|
  00058	8937 0041	 DCD         0x418937
  0005c		 |$M16|

			 ENDP  ; |?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z|, NotifyRegKey::GetRegValue

	EXPORT	|??_7PMSystemAPI@@6B@| [ DATA ]		; PMSystemAPI::`vftable'
	EXPORT	|??1PMSystemAPI@@QAA@XZ|		; PMSystemAPI::~PMSystemAPI
	IMPORT	|_purecall|

  00018			 AREA	 |.pdata|, PDATA
|$pdata1$??1PMSystemAPI@@QAA@XZ| DCD imagerel |$LN11@PMSystemAP|
	DCD	0xfd306061

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PMSystemAPI@@6B@| DCD |_purecall|			; PMSystemAPI::`vftable'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  001b4			 AREA	 |.text|, CODE, THUMB

  001b4		 |??1PMSystemAPI@@QAA@XZ| PROC		; PMSystemAPI::~PMSystemAPI

; 820  : {

  001b4		 |$LN11@PMSystemAP|
  001b4	e92d 4818	 push        {r3,r4,r11,lr}
  001b8	f20d 0b08	 addw        r11,sp,#8
  001bc		 |$M9|
  001bc	4604		 mov         r4,r0

; 821  : 	if (m_hEmpty)

  001be	6a60		 ldr         r0,[r4,#0x24]
  001c0	4b08		 ldr         r3,|$LN14@PMSystemAP| ; =|??_7PMSystemAPI@@6B@|
  001c2	6023		 str         r3,[r4]
  001c4	b108		 cbz         r0,|$LN3@PMSystemAP|

; 822  : 		CloseHandle (m_hEmpty);

  001c6	f000 f800	 bl          CloseHandle
  001ca		 |$LN3@PMSystemAP|

; 823  : 	if (m_hNotEmpty)

  001ca	6aa0		 ldr         r0,[r4,#0x28]
  001cc	b108		 cbz         r0,|$LN2@PMSystemAP|

; 824  : 		CloseHandle (m_hNotEmpty);

  001ce	f000 f800	 bl          CloseHandle
  001d2		 |$LN2@PMSystemAP|

; 825  : 	if (m_hComplete)

  001d2	6ae0		 ldr         r0,[r4,#0x2C]
  001d4	b108		 cbz         r0,|$LN1@PMSystemAP|

; 826  : 		CloseHandle (m_hComplete);

  001d6	f000 f800	 bl          CloseHandle
  001da		 |$LN1@PMSystemAP|
; File c:\wince800\public\common\oak\inc\csync.h

; 42   :         DeleteCriticalSection( &m_CSection );

  001da	1d20		 adds        r0,r4,#4
  001dc	f000 f800	 bl          DeleteCriticalSection
  001e0		 |$M12|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 827  : }

  001e0	e8bd 8818	 pop         {r3,r4,r11,pc}
  001e4		 |$LN13@PMSystemAP|
  001e4		 |$LN14@PMSystemAP|
  001e4	0000 0000	 DCD         |??_7PMSystemAPI@@6B@|
  001e8		 |$M10|

			 ENDP  ; |??1PMSystemAPI@@QAA@XZ|, PMSystemAPI::~PMSystemAPI

	EXPORT	|??0PMSystemAPI@@QAA@XZ|		; PMSystemAPI::PMSystemAPI
	IMPORT	|CreateEventW|

  00020			 AREA	 |.pdata|, PDATA
|$pdata1$??0PMSystemAPI@@QAA@XZ| DCD imagerel |$LN8@PMSystemAP|
	DCD	0xfd306095
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  001e8			 AREA	 |.text|, CODE, THUMB

  001e8		 |??0PMSystemAPI@@QAA@XZ| PROC		; PMSystemAPI::PMSystemAPI

; 803  : {

  001e8		 |$LN8@PMSystemAP|
  001e8	e92d 4818	 push        {r3,r4,r11,lr}
  001ec	f20d 0b08	 addw        r11,sp,#8
  001f0		 |$M6|
  001f0	4604		 mov         r4,r0
; File c:\wince800\public\common\oak\inc\csync.h

; 38   :         InitializeCriticalSection( &m_CSection );

  001f2	1d20		 adds        r0,r4,#4
  001f4	f000 f800	 bl          InitializeCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 803  : {

  001f8	4b0e		 ldr         r3,|$LN11@PMSystemAP| ; =|??_7PMSystemAPI@@6B@|

; 804  : 	m_szStateName[0] = 0;
; 805  : 	m_dwStateHint = 0;
; 806  : 	m_dwOptions = 0;
; 807  : 
; 808  : 	m_hEmpty = CreateEvent (NULL, FALSE, TRUE, NULL);

  001fa	2201		 movs        r2,#1
  001fc	2100		 movs        r1,#0
  001fe	6023		 str         r3,[r4]
  00200	2300		 movs        r3,#0
  00202	8623		 strh        r3,[r4,#0x30]
  00204	2000		 movs        r0,#0
  00206	61a3		 str         r3,[r4,#0x18]
  00208	61e3		 str         r3,[r4,#0x1C]
  0020a	f000 f800	 bl          CreateEventW
  0020e	6260		 str         r0,[r4,#0x24]

; 809  : 	m_hNotEmpty = CreateEvent (NULL, TRUE, FALSE, NULL);

  00210	2000		 movs        r0,#0
  00212	2300		 movs        r3,#0
  00214	2200		 movs        r2,#0
  00216	2101		 movs        r1,#1
  00218	f000 f800	 bl          CreateEventW
  0021c	62a0		 str         r0,[r4,#0x28]

; 810  : 	m_hComplete = CreateEvent (NULL, TRUE, FALSE, NULL);

  0021e	2300		 movs        r3,#0
  00220	2200		 movs        r2,#0
  00222	2101		 movs        r1,#1
  00224	2000		 movs        r0,#0
  00226	f000 f800	 bl          CreateEventW
  0022a	62e0		 str         r0,[r4,#0x2C]

; 811  : }

  0022c	4620		 mov         r0,r4
  0022e		 |$M9|
  0022e	e8bd 8818	 pop         {r3,r4,r11,pc}
  00232		 |$LN12@PMSystemAP|
  00232		 |$M13|
  00232	defe		 __debugbreak
  00234		 |$LN10@PMSystemAP|
  00234		 |$LN11@PMSystemAP|
  00234	0000 0000	 DCD         |??_7PMSystemAPI@@6B@|
  00238		 |$M7|

			 ENDP  ; |??0PMSystemAPI@@QAA@XZ|, PMSystemAPI::PMSystemAPI

	EXPORT	|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@GLGOFLAA@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@IDNLAEOI@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@| [ DATA ] ; `string'
	EXPORT	|?SendSystemPowerState@PMSystemAPI@@QAAKPBGKK@Z| ; PMSystemAPI::SendSystemPowerState
	IMPORT	|__C_specific_handler|
	IMPORT	|WaitForSingleObject|
	IMPORT	|dpCurSettings|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|StringCchCopyW|
	IMPORT	|CaptureDumpFileOnDevice|

  00028			 AREA	 |.pdata|, PDATA
|$pdata1$?SendSystemPowerState@PMSystemAPI@@QAAKPBGKK@Z| DCD imagerel |$LN46@SendSystem|
	DCD	imagerel |$unwind2$?SendSystemPowerState@PMSystemAPI@@QAAKPBGKK@Z|

  0001c			 AREA	 |.xdata|, DATA
	%	4
|$unwind2$?SendSystemPowerState@PMSystemAPI@@QAAKPBGKK@Z| DCD 0x33300095
	DCD	0xf8affcc7
	DCD	0x5efff04
	DCD	0xff
	DCD	imagerel |__C_specific_handler|
	DCD	0x1
	DCD	imagerel |$LN23@SendSystem|
	DCD	imagerel |$LN24@SendSystem|
	DCD	0x1
	DCD	imagerel |$LN20@SendSystem|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "p", 0x0, "y", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "n", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@IDNLAEOI@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@| DCB "c"
	DCB	0x0, ":", 0x0, "\\", 0x0, "w", 0x0, "i", 0x0, "n", 0x0, "c"
	DCB	0x0, "e", 0x0, "8", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "p"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "\\", 0x0, "r", 0x0, "r", 0x0, "m", 0x0, "_"
	DCB	0x0, "p", 0x0, "p", 0x0, "c", 0x0, "_", 0x0, "w", 0x0, "i"
	DCB	0x0, "n", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "s", 0x0, "\\"
	DCB	0x0, "s", 0x0, "r", 0x0, "c", 0x0, "\\", 0x0, "d", 0x0, "r"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, "\\"
	DCB	0x0, "p", 0x0, "m", 0x0, "\\", 0x0, "p", 0x0, "d", 0x0, "d"
	DCB	0x0, "\\", 0x0, "p", 0x0, "w", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, "g", 0x0, "r", 0x0, "."
	DCB	0x0, "c", 0x0, "p", 0x0, "p", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U", 0x0
	DCB	"n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "E", 0x0, "B"
	DCB	0x0, "U", 0x0, "G", 0x0, "C", 0x0, "H", 0x0, "K", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@GLGOFLAA@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt@| DCB "P"
	DCB	0x0, "M", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "m", 0x0, "A", 0x0, "P", 0x0, "I", 0x0, ":", 0x0, ":"
	DCB	0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "S", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "n", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ","
	DCB	0x0, " ", 0x0, "h", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "n", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@| DCB "<", 0x0
	DCB	"N", 0x0, "U", 0x0, "L", 0x0, "L", 0x0, ">", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00238			 AREA	 |.text|, CODE, THUMB

  00238		 |?SendSystemPowerState@PMSystemAPI@@QAAKPBGKK@Z| PROC ; PMSystemAPI::SendSystemPowerState

; 882  : {

  00238		 |$LN46@SendSystem|
  00238	b40f		 push        {r0-r3}
  0023a	e92d 4ff8	 push        {r3-r11,lr}
  0023e	f20d 0b20	 addw        r11,sp,#0x20
  00242	466f		 mov         r7,sp
  00244	b082		 sub         sp,sp,#8
  00246		 |$LN44@SendSystem|
  00246	4698		 mov         r8,r3
  00248	637b		 str         r3,[r7,#0x34]
  0024a	4691		 mov         r9,r2
  0024c	633a		 str         r2,[r7,#0x30]
  0024e	460e		 mov         r6,r1
  00250	4605		 mov         r5,r0
  00252	62bd		 str         r5,[r7,#0x28]

; 883  : 	DWORD dwReturn = WaitForSingleObject (m_hEmpty, INFINITE);

  00254	6a68		 ldr         r0,[r5,#0x24]
  00256	f06f 0100	 mvn         r1,#0
  0025a	f000 f800	 bl          WaitForSingleObject
  0025e	4682		 mov         r10,r0

; 884  : 
; 885  : 	SETFNAME (_T ("PMSystemAPI::SendSystemPowerState"));
; 886  : 	PMLOGMSG (ZONE_API, (_T ("+%s: name %s, hint 0x%08x, options 0x%08x, fInternal %d\r\n"),
; 887  : 						 pszFname, pwsState != NULL ? pwsState : _T ("<NULL>"), dwStateHint,
; 888  : 						 dwOptions));

  00260	4c45		 ldr         r4,|$LN55@SendSystem| ; =|dpCurSettings|
  00262	f8d4 4440	 ldr         r4,[r4,#0x440]
  00266	f414 6f00	 tst         r4,#0x800
  0026a	d015		 beq         |$LN10@SendSystem|
  0026c	4c44		 ldr         r4,|$LN57@SendSystem| ; =|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@|
  0026e	b10e		 cbz         r6,|$LN6@SendSystem|
  00270	4632		 mov         r2,r6
  00272	e000		 b           |$LN7@SendSystem|
  00274		 |$LN6@SendSystem|
  00274	4622		 mov         r2,r4
  00276		 |$LN7@SendSystem|
  00276	f8cd 8000	 str         r8,[sp]
  0027a	464b		 mov         r3,r9
  0027c	493d		 ldr         r1,|$LN54@SendSystem| ; =|??_C@_1EE@GLGOFLAA@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt@|
  0027e	483f		 ldr         r0,|$LN56@SendSystem| ; =|??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@|
  00280	f000 f800	 bl          NKDbgPrintfW
  00284	b106		 cbz         r6,|$LN8@SendSystem|
  00286	4634		 mov         r4,r6
  00288		 |$LN8@SendSystem|
  00288	f8cd 8000	 str         r8,[sp]
  0028c	464b		 mov         r3,r9
  0028e	4622		 mov         r2,r4
  00290	4938		 ldr         r1,|$LN54@SendSystem| ; =|??_C@_1EE@GLGOFLAA@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt@|
  00292	483a		 ldr         r0,|$LN56@SendSystem| ; =|??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@|
  00294	f000 f800	 bl          CeLogMsg
  00298		 |$LN10@SendSystem|

; 889  : 	ASSERT (dwReturn == WAIT_OBJECT_0);

  00298	f1ba 0f00	 cmp         r10,#0
  0029c	d007		 beq         |$LN42@SendSystem|
  0029e	f240 3379	 mov         r3,#0x379
  002a2	4a32		 ldr         r2,|$LN52@SendSystem| ; =|??_C@_1IO@IDNLAEOI@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  002a4	4930		 ldr         r1,|$LN51@SendSystem| ; =|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  002a6	482f		 ldr         r0,|$LN50@SendSystem| ; =|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  002a8	f000 f800	 bl          NKDbgPrintfW
  002ac	defe		 __debugbreak
  002ae		 |$LN42@SendSystem|
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  002ae	1d28		 adds        r0,r5,#4
  002b0	f000 f800	 bl          EnterCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 891  : 	ResetEvent (m_hComplete);

  002b4	6ae8		 ldr         r0,[r5,#0x2C]
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 232  :     return EventModify(h,EVENT_RESET);

  002b6	2102		 movs        r1,#2
  002b8	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 892  : 	m_dwResult = ERROR_SUCCESS;

  002bc	2300		 movs        r3,#0
  002be	622b		 str         r3,[r5,#0x20]

; 893  : 	m_szStateName[0] = 0;

  002c0	862b		 strh        r3,[r5,#0x30]

; 894  : 	if (pwsState)

  002c2	b1e6		 cbz         r6,|$LN25@SendSystem|
  002c4		 |$LN23@SendSystem|

; 895  : 	{
; 896  : 		__try
; 897  : 		{
; 898  : 			StringCchCopy (m_szStateName, MAX_PATH, pwsState);

  002c4	f44f 7182	 mov         r1,#0x104
  002c8	f115 0030	 adds        r0,r5,#0x30
  002cc	4632		 mov         r2,r6
  002ce	f000 f800	 bl          StringCchCopyW
  002d2		 |$LN24@SendSystem|

; 899  : 		}

  002d2	e014		 b           |$LN25@SendSystem|
  002d4		 |$LN20@SendSystem|

; 900  : 		__except (EXCEPTION_EXECUTE_HANDLER)
; 901  : 		{
; 902  : 			PMLOGMSG (ZONE_WARN, (_T ("%s: exception copying state name\r\n"), pszFname));

  002d4	4b28		 ldr         r3,|$LN55@SendSystem| ; =|dpCurSettings|
  002d6	f8d3 3440	 ldr         r3,[r3,#0x440]
  002da	f013 0f02	 tst         r3,#2
  002de	d007		 beq         |$LN14@SendSystem|
  002e0	4924		 ldr         r1,|$LN54@SendSystem| ; =|??_C@_1EE@GLGOFLAA@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt@|
  002e2	4823		 ldr         r0,|$LN53@SendSystem| ; =|??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  002e4	f000 f800	 bl          NKDbgPrintfW
  002e8	4922		 ldr         r1,|$LN54@SendSystem| ; =|??_C@_1EE@GLGOFLAA@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt@|
  002ea	4821		 ldr         r0,|$LN53@SendSystem| ; =|??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  002ec	f000 f800	 bl          CeLogMsg
  002f0		 |$LN14@SendSystem|

; 903  : 			m_szStateName[0] = 0;

  002f0	2300		 movs        r3,#0
  002f2	6abd		 ldr         r5,[r7,#0x28]
  002f4	862b		 strh        r3,[r5,#0x30]
  002f6	f8d7 8034	 ldr         r8,[r7,#0x34]
  002fa	f8d7 9030	 ldr         r9,[r7,#0x30]
  002fe		 |$LN25@SendSystem|

; 904  : 			dwReturn = ERROR_INVALID_PARAMETER;
; 905  : 		}
; 906  : 	}
; 907  : 	m_dwStateHint = dwStateHint;

  002fe	f8c5 9018	 str         r9,[r5,#0x18]

; 908  : 	m_dwOptions = dwOptions;

  00302	f8c5 801c	 str         r8,[r5,#0x1C]
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  00306	6aa8		 ldr         r0,[r5,#0x28]
  00308	2103		 movs        r1,#3
  0030a	f000 f800	 bl          EventModify
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  0030e	1d28		 adds        r0,r5,#4
  00310	f000 f800	 bl          LeaveCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 911  : 	dwReturn = WaitForSingleObject (m_hComplete, INFINITE);

  00314	6ae8		 ldr         r0,[r5,#0x2C]
  00316	f06f 0100	 mvn         r1,#0
  0031a	f000 f800	 bl          WaitForSingleObject

; 912  : 	ASSERT (dwReturn == WAIT_OBJECT_0);

  0031e	b138		 cbz         r0,|$LN17@SendSystem|
  00320	f44f 7364	 mov         r3,#0x390
  00324	4a11		 ldr         r2,|$LN52@SendSystem| ; =|??_C@_1IO@IDNLAEOI@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  00326	4910		 ldr         r1,|$LN51@SendSystem| ; =|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00328	480e		 ldr         r0,|$LN50@SendSystem| ; =|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  0032a	f000 f800	 bl          NKDbgPrintfW
  0032e	defe		 __debugbreak
  00330		 |$LN17@SendSystem|

; 913  : 	dwReturn = m_dwResult;

  00330	6a2e		 ldr         r6,[r5,#0x20]
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  00332	6a68		 ldr         r0,[r5,#0x24]
  00334	2103		 movs        r1,#3
  00336	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 916  : 	if ((ERROR_SUCCESS == dwReturn) && ((dwOptions & POWER_DUMPDW) != 0))

  0033a	b96e		 cbnz        r6,|$LN1@SendSystem|
  0033c	f418 5f00	 tst         r8,#0x2000
  00340	d00a		 beq         |$LN1@SendSystem|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00342	2008		 movs        r0,#8
  00344	f000 f800	 bl          __GetUserKData
  00348	4604		 mov         r4,r0

; 373  : }
; 374  : 
; 375  : _inline DWORD GetCurrentProcessId(void) {
; 376  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  0034a	200c		 movs        r0,#0xC
  0034c	f000 f800	 bl          __GetUserKData
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 918  : 		CaptureDumpFileOnDevice (GetCurrentProcessId (), GetCurrentThreadId (), NULL);

  00350	2200		 movs        r2,#0
  00352	4621		 mov         r1,r4
  00354	f000 f800	 bl          CaptureDumpFileOnDevice
  00358		 |$LN1@SendSystem|

; 919  : 	}
; 920  : 	return dwReturn;
; 921  : }

  00358	4630		 mov         r0,r6
  0035a		 |$M48|
  0035a	e8bd 0ffe	 pop         {r1-r11}
  0035e	f85d fb14	 ldr         pc,[sp],#0x14
  00362		 |$LN58@SendSystem|
  00362		 |$M59|
  00362	defe		 __debugbreak
  00364		 |$LN49@SendSystem|
  00364		 |$LN50@SendSystem|
  00364	0000 0000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00368		 |$LN51@SendSystem|
  00368	0000 0000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  0036c		 |$LN52@SendSystem|
  0036c	0000 0000	 DCD         |??_C@_1IO@IDNLAEOI@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  00370		 |$LN53@SendSystem|
  00370	0000 0000	 DCD         |??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  00374		 |$LN54@SendSystem|
  00374	0000 0000	 DCD         |??_C@_1EE@GLGOFLAA@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAS?$AAe?$AAn?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt@|
  00378		 |$LN55@SendSystem|
  00378	0000 0000	 DCD         |dpCurSettings|
  0037c		 |$LN56@SendSystem|
  0037c	0000 0000	 DCD         |??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@|
  00380		 |$LN57@SendSystem|
  00380	0000 0000	 DCD         |??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@|

			 ENDP  ; |?SendSystemPowerState@PMSystemAPI@@QAAKPBGKK@Z|, PMSystemAPI::SendSystemPowerState

  00384		 |$LN45@SendSystem|
	EXPORT	|??_C@_1HI@IEMHGFEB@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@JANJPGKN@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@EHLGAGMB@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAs?$AA?5?$AAm?$AA_?$AAh?$AAN?$AAo?$AAt?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAS?$AAe@| [ DATA ] ; `string'
	EXPORT	|?RequestedSystemPowerState@PMSystemAPI@@QAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| ; PMSystemAPI::RequestedSystemPowerState
	IMPORT	|PlatformMapPowerStateHint|

  00030			 AREA	 |.pdata|, PDATA
|$pdata1$?RequestedSystemPowerState@PMSystemAPI@@QAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| DCD imagerel |$LN24@RequestedS|
	DCD	0xfd736199

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@EHLGAGMB@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAs?$AA?5?$AAm?$AA_?$AAh?$AAN?$AAo?$AAt?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAS?$AAe@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "s", 0x0, " ", 0x0, "m", 0x0, "_"
	DCB	0x0, "h", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, "E", 0x0, "m"
	DCB	0x0, "p", 0x0, "t", 0x0, "y", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "S"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "d", 0x0, "w", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@JANJPGKN@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe@| DCB "P"
	DCB	0x0, "M", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "m", 0x0, "A", 0x0, "P", 0x0, "I", 0x0, ":", 0x0, ":"
	DCB	0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@IEMHGFEB@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "n", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, """", 0x0, "%", 0x0, "s"
	DCB	0x0, """", 0x0, ",", 0x0, " ", 0x0, "h", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "o", 0x0, "p"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "f", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "n", 0x0, "a", 0x0, "l", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00384			 AREA	 |.text|, CODE, THUMB

  00384		 |?RequestedSystemPowerState@PMSystemAPI@@QAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PMSystemAPI::RequestedSystemPowerState

; 831  : {

  00384		 |$LN24@RequestedS|
  00384	e92d 48fc	 push        {r2-r7,r11,lr}
  00388	f20d 0b18	 addw        r11,sp,#0x18
  0038c		 |$M22|
  0038c	4604		 mov         r4,r0
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  0038e	1d20		 adds        r0,r4,#4
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 832  : 	PLATFORM_ACTIVITY_STATE activeState = UnknownState;

  00390	f06f 0600	 mvn         r6,#0
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  00394	f000 f800	 bl          EnterCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 836  : 	if (WaitForSingleObject (m_hNotEmpty, 0) == WAIT_OBJECT_0)

  00398	6aa0		 ldr         r0,[r4,#0x28]
  0039a	2100		 movs        r1,#0
  0039c	f000 f800	 bl          WaitForSingleObject
  003a0	2800		 cmp         r0,#0
  003a2	d143		 bne         |$LN5@RequestedS|

; 837  : 	{  // Signaled.
; 838  : 		DWORD dwStatus = ERROR_SUCCESS;
; 839  : 
; 840  : 		PMLOGMSG (ZONE_API, (_T ("+%s: name \"%s\", hint 0x%08x, options 0x%08x, fInternal %d\r\n"),
; 841  : 							 pszFname, m_szStateName, m_dwStateHint, m_dwOptions));

  003a4	4f2b		 ldr         r7,|$LN28@RequestedS| ; =|dpCurSettings|
  003a6	2500		 movs        r5,#0
  003a8	f8d7 3440	 ldr         r3,[r7,#0x440]
  003ac	f413 6f00	 tst         r3,#0x800
  003b0	d011		 beq         |$LN8@RequestedS|
  003b2	69e3		 ldr         r3,[r4,#0x1C]
  003b4	4929		 ldr         r1,|$LN30@RequestedS| ; =|??_C@_1EO@JANJPGKN@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe@|
  003b6	482a		 ldr         r0,|$LN31@RequestedS| ; =|??_C@_1HI@IEMHGFEB@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt@|
  003b8	9300		 str         r3,[sp]
  003ba	69a3		 ldr         r3,[r4,#0x18]
  003bc	f114 0230	 adds        r2,r4,#0x30
  003c0	f000 f800	 bl          NKDbgPrintfW
  003c4	69e3		 ldr         r3,[r4,#0x1C]
  003c6	4925		 ldr         r1,|$LN30@RequestedS| ; =|??_C@_1EO@JANJPGKN@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe@|
  003c8	4825		 ldr         r0,|$LN31@RequestedS| ; =|??_C@_1HI@IEMHGFEB@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt@|
  003ca	9300		 str         r3,[sp]
  003cc	69a3		 ldr         r3,[r4,#0x18]
  003ce	f114 0230	 adds        r2,r4,#0x30
  003d2	f000 f800	 bl          CeLogMsg
  003d6		 |$LN8@RequestedS|

; 842  : 
; 843  : 		// If the user passes a null state name, use the hints flag to try to find a match.
; 844  : 		if (m_szStateName[0] == 0)

  003d6	8e23		 ldrh        r3,[r4,#0x30]
  003d8	b943		 cbnz        r3,|$LN20@RequestedS|

; 845  : 		{
; 846  : 			// Try to match the hint flag to a system state
; 847  : 			dwStatus = PlatformMapPowerStateHint (m_dwStateHint, m_szStateName, _countof (m_szStateName));

  003da	69a0		 ldr         r0,[r4,#0x18]
  003dc	f44f 7282	 mov         r2,#0x104
  003e0	f114 0130	 adds        r1,r4,#0x30
  003e4	f000 f800	 bl          PlatformMapPowerStateHint
  003e8	4605		 mov         r5,r0

; 848  : 		}
; 849  : 
; 850  : 		// Go ahead and do the update?
; 851  : 		if (dwStatus == ERROR_SUCCESS)

  003ea	b955		 cbnz        r5,|$LN2@RequestedS|
  003ec		 |$LN20@RequestedS|

; 852  : 		{
; 853  : 			activeState = SystemStateToActivityState (m_szStateName);

  003ec	6823		 ldr         r3,[r4]
  003ee	f114 0130	 adds        r1,r4,#0x30
  003f2	4620		 mov         r0,r4
  003f4	681b		 ldr         r3,[r3]
  003f6	4798		 blx         r3
  003f8	4606		 mov         r6,r0

; 854  : 			if (activeState == UnknownState)

  003fa	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  003fe	d100		 bne         |$LN2@RequestedS|

; 855  : 			{
; 856  : 				dwStatus = ERROR_INVALID_PARAMETER;

  00400	2557		 movs        r5,#0x57
  00402		 |$LN2@RequestedS|

; 857  : 			}
; 858  : 		}
; 859  : 
; 860  : 		PMLOGMSG (ZONE_API, (_T ("-%s: returning dwStatus %d\r\n"), pszFname, dwStatus));

  00402	f8d7 3440	 ldr         r3,[r7,#0x440]
  00406	f413 6f00	 tst         r3,#0x800
  0040a	d009		 beq         |$LN10@RequestedS|
  0040c	4913		 ldr         r1,|$LN30@RequestedS| ; =|??_C@_1EO@JANJPGKN@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe@|
  0040e	4812		 ldr         r0,|$LN29@RequestedS| ; =|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00410	462a		 mov         r2,r5
  00412	f000 f800	 bl          NKDbgPrintfW
  00416	4911		 ldr         r1,|$LN30@RequestedS| ; =|??_C@_1EO@JANJPGKN@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe@|
  00418	480f		 ldr         r0,|$LN29@RequestedS| ; =|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0041a	462a		 mov         r2,r5
  0041c	f000 f800	 bl          CeLogMsg
  00420		 |$LN10@RequestedS|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 232  :     return EventModify(h,EVENT_RESET);

  00420	6aa0		 ldr         r0,[r4,#0x28]
  00422	2102		 movs        r1,#2
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 861  : 		m_dwResult = dwStatus;

  00424	6225		 str         r5,[r4,#0x20]
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 232  :     return EventModify(h,EVENT_RESET);

  00426	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 864  : 	else

  0042a	e00b		 b           |$LN12@RequestedS|
  0042c		 |$LN5@RequestedS|

; 865  : 	{
; 866  : 		PMLOGMSG (ZONE_ERROR, (_T ("-%s: Fails m_hNotEmpty is not Set \r\n")));

  0042c	4b09		 ldr         r3,|$LN28@RequestedS| ; =|dpCurSettings|
  0042e	f8d3 3440	 ldr         r3,[r3,#0x440]
  00432	f013 0f01	 tst         r3,#1
  00436	d005		 beq         |$LN12@RequestedS|
  00438	4805		 ldr         r0,|$LN27@RequestedS| ; =|??_C@_1EK@EHLGAGMB@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAs?$AA?5?$AAm?$AA_?$AAh?$AAN?$AAo?$AAt?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAS?$AAe@|
  0043a	f000 f800	 bl          NKDbgPrintfW
  0043e	4804		 ldr         r0,|$LN27@RequestedS| ; =|??_C@_1EK@EHLGAGMB@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAs?$AA?5?$AAm?$AA_?$AAh?$AAN?$AAo?$AAt?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAS?$AAe@|
  00440	f000 f800	 bl          CeLogMsg
  00444		 |$LN12@RequestedS|
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  00444	1d20		 adds        r0,r4,#4
  00446	f000 f800	 bl          LeaveCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 870  : }

  0044a	4630		 mov         r0,r6
  0044c		 |$M25|
  0044c	e8bd 88fc	 pop         {r2-r7,r11,pc}
  00450		 |$LN26@RequestedS|
  00450		 |$LN27@RequestedS|
  00450	0000 0000	 DCD         |??_C@_1EK@EHLGAGMB@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAs?$AA?5?$AAm?$AA_?$AAh?$AAN?$AAo?$AAt?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAS?$AAe@|
  00454		 |$LN28@RequestedS|
  00454	0000 0000	 DCD         |dpCurSettings|
  00458		 |$LN29@RequestedS|
  00458	0000 0000	 DCD         |??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0045c		 |$LN30@RequestedS|
  0045c	0000 0000	 DCD         |??_C@_1EO@JANJPGKN@?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAe?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe@|
  00460		 |$LN31@RequestedS|
  00460	0000 0000	 DCD         |??_C@_1HI@IEMHGFEB@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt@|
  00464		 |$M23|

			 ENDP  ; |?RequestedSystemPowerState@PMSystemAPI@@QAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PMSystemAPI::RequestedSystemPowerState

	EXPORT	|?GetStateObject@PowerStateManager@@QAAPAVPowerState@@W4PLATFORM_ACTIVITY_STATE@@@Z| ; PowerStateManager::GetStateObject

  00038			 AREA	 |.pdata|, PDATA
|$pdata1$?GetStateObject@PowerStateManager@@QAAPAVPowerState@@W4PLATFORM_ACTIVITY_STATE@@@Z| DCD imagerel |$LN17@GetStateOb|
	DCD	0x316055
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00464			 AREA	 |.text|, CODE, THUMB

  00464		 |?GetStateObject@PowerStateManager@@QAAPAVPowerState@@W4PLATFORM_ACTIVITY_STATE@@@Z| PROC ; PowerStateManager::GetStateObject

; 561  : {

  00464		 |$LN17@GetStateOb|
  00464	e92d 4830	 push        {r4,r5,r11,lr}
  00468	f20d 0b08	 addw        r11,sp,#8
  0046c		 |$M15|

; 562  : 	if (m_pPowerStateList != NULL)

  0046c	f8d0 427c	 ldr         r4,[r0,#0x27C]
  00470	460d		 mov         r5,r1
  00472	e006		 b           |$LN13@GetStateOb|
  00474		 |$LL3@GetStateOb|

; 567  : 		{
; 568  : 			if (pCurState->GetState () == newState)

  00474	6823		 ldr         r3,[r4]
  00476	4620		 mov         r0,r4
  00478	695b		 ldr         r3,[r3,#0x14]
  0047a	4798		 blx         r3
  0047c	42a8		 cmp         r0,r5
  0047e	d003		 beq         |$LN5@GetStateOb|

; 569  : 			{
; 570  : 				return pCurState;
; 571  : 			}
; 572  : 			pCurState = pCurState->GetNextPowerState ();

  00480	6964		 ldr         r4,[r4,#0x14]
  00482		 |$LN13@GetStateOb|

; 563  : 	{
; 564  : 		PowerState *pCurState = m_pPowerStateList;
; 565  : 
; 566  : 		while (pCurState)

  00482	2c00		 cmp         r4,#0
  00484	d1f6		 bne         |$LL3@GetStateOb|

; 573  : 		}
; 574  : 	}
; 575  : 	return NULL;

  00486	2400		 movs        r4,#0
  00488		 |$LN5@GetStateOb|

; 576  : }

  00488	4620		 mov         r0,r4
  0048a		 |$M18|
  0048a	e8bd 8830	 pop         {r4,r5,r11,pc}
  0048e		 |$M16|

			 ENDP  ; |?GetStateObject@PowerStateManager@@QAAPAVPowerState@@W4PLATFORM_ACTIVITY_STATE@@@Z|, PowerStateManager::GetStateObject

	EXPORT	|?SystemStateToActivityState@PowerStateManager@@UAA?AW4PLATFORM_ACTIVITY_STATE@@PBG@Z| ; PowerStateManager::SystemStateToActivityState
	IMPORT	|_wcsicmp|

  00040			 AREA	 |.pdata|, PDATA
|$pdata1$?SystemStateToActivityState@PowerStateManager@@UAA?AW4PLATFORM_ACTIVITY_STATE@@PBG@Z| DCD imagerel |$LN17@SystemStat|
	DCD	0x316075
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  0048e			 AREA	 |.text|, CODE, THUMB

  00490		 |?SystemStateToActivityState@PowerStateManager@@UAA?AW4PLATFORM_ACTIVITY_STATE@@PBG@Z| PROC ; PowerStateManager::SystemStateToActivityState

; 388  : {

  00490		 |$LN17@SystemStat|
  00490	e92d 4830	 push        {r4,r5,r11,lr}
  00494	f20d 0b08	 addw        r11,sp,#8
  00498		 |$M15|
  00498	460d		 mov         r5,r1

; 389  : 	if (lpState == NULL)

  0049a	b16d		 cbz         r5,|$LN3@SystemStat|

; 390  : 		return UnknownState;
; 391  : 	PowerState *curState = m_pPowerStateList;

  0049c	f8d0 427c	 ldr         r4,[r0,#0x27C]
  004a0	e008		 b           |$LN13@SystemStat|
  004a2		 |$LL4@SystemStat|

; 394  : 	{
; 395  : 		if (_tcsicmp (curState->GetStateString (), lpState) == 0)

  004a2	6823		 ldr         r3,[r4]
  004a4	4620		 mov         r0,r4
  004a6	699b		 ldr         r3,[r3,#0x18]
  004a8	4798		 blx         r3
  004aa	4629		 mov         r1,r5
  004ac	f000 f800	 bl          _wcsicmp
  004b0	b130		 cbz         r0,|$LN11@SystemStat|

; 397  : 		else
; 398  : 			curState = curState->GetNextPowerState ();

  004b2	6964		 ldr         r4,[r4,#0x14]
  004b4		 |$LN13@SystemStat|

; 392  : 
; 393  : 	while (curState)

  004b4	2c00		 cmp         r4,#0
  004b6	d1f4		 bne         |$LL4@SystemStat|
  004b8		 |$LN3@SystemStat|

; 399  : 	}
; 400  : 	return UnknownState;

  004b8	f06f 0000	 mvn         r0,#0
  004bc		 |$LN6@SystemStat|
  004bc		 |$M18|

; 401  : }

  004bc	e8bd 8830	 pop         {r4,r5,r11,pc}
  004c0		 |$LN11@SystemStat|

; 396  : 			return curState->GetState ();

  004c0	6823		 ldr         r3,[r4]
  004c2	4620		 mov         r0,r4
  004c4	695b		 ldr         r3,[r3,#0x14]
  004c6	4798		 blx         r3
  004c8	e7f8		 b           |$LN6@SystemStat|
  004ca		 |$M16|

			 ENDP  ; |?SystemStateToActivityState@PowerStateManager@@UAA?AW4PLATFORM_ACTIVITY_STATE@@PBG@Z|, PowerStateManager::SystemStateToActivityState

	EXPORT	|?ActivityStateToSystemState@PowerStateManager@@UAAPBGW4PLATFORM_ACTIVITY_STATE@@@Z| ; PowerStateManager::ActivityStateToSystemState

  00048			 AREA	 |.pdata|, PDATA
|$pdata1$?ActivityStateToSystemState@PowerStateManager@@UAAPBGW4PLATFORM_ACTIVITY_STATE@@@Z| DCD imagerel |$LN16@ActivitySt|
	DCD	0x316065
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  004ca			 AREA	 |.text|, CODE, THUMB

  004cc		 |?ActivityStateToSystemState@PowerStateManager@@UAAPBGW4PLATFORM_ACTIVITY_STATE@@@Z| PROC ; PowerStateManager::ActivityStateToSystemState

; 373  : {

  004cc		 |$LN16@ActivitySt|
  004cc	e92d 4830	 push        {r4,r5,r11,lr}
  004d0	f20d 0b08	 addw        r11,sp,#8
  004d4		 |$M14|

; 374  : 	PowerState *curState = m_pPowerStateList;

  004d4	f8d0 427c	 ldr         r4,[r0,#0x27C]
  004d8	460d		 mov         r5,r1
  004da	e006		 b           |$LN12@ActivitySt|
  004dc		 |$LL4@ActivitySt|

; 377  : 	{
; 378  : 		if (curState->GetState () == platActiveState)

  004dc	6823		 ldr         r3,[r4]
  004de	4620		 mov         r0,r4
  004e0	695b		 ldr         r3,[r3,#0x14]
  004e2	4798		 blx         r3
  004e4	42a8		 cmp         r0,r5
  004e6	d005		 beq         |$LN10@ActivitySt|

; 380  : 		else
; 381  : 			curState = curState->GetNextPowerState ();

  004e8	6964		 ldr         r4,[r4,#0x14]
  004ea		 |$LN12@ActivitySt|

; 375  : 
; 376  : 	while (curState)

  004ea	2c00		 cmp         r4,#0
  004ec	d1f6		 bne         |$LL4@ActivitySt|

; 382  : 	}
; 383  : 	return NULL;

  004ee	2000		 movs        r0,#0
  004f0		 |$LN5@ActivitySt|
  004f0		 |$M17|

; 384  : }

  004f0	e8bd 8830	 pop         {r4,r5,r11,pc}
  004f4		 |$LN10@ActivitySt|

; 379  : 			return curState->GetStateString ();

  004f4	6823		 ldr         r3,[r4]
  004f6	4620		 mov         r0,r4
  004f8	699b		 ldr         r3,[r3,#0x18]
  004fa	4798		 blx         r3
  004fc	e7f8		 b           |$LN5@ActivitySt|
  004fe		 |$M15|

			 ENDP  ; |?ActivityStateToSystemState@PowerStateManager@@UAAPBGW4PLATFORM_ACTIVITY_STATE@@@Z|, PowerStateManager::ActivityStateToSystemState

	EXPORT	|??1PowerStateOff@@UAA@XZ|		; PowerStateOff::~PowerStateOff
	IMPORT	|??1PowerState@@UAA@XZ|			; PowerState::~PowerState
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateOff@@UAA@XZ| PROC	; PowerStateOff::~PowerStateOff
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateOff@@UAA@XZ|, PowerStateOff::~PowerStateOff

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateOff::GetState

; 202  :          return Off;

  00000	2009		 movs        r0,#9
  00002		 |$M4|

; 203  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateOff::GetState

	EXPORT	|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@| DCB "o", 0x0, "f", 0x0, "f", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateOff@@UAAPBGXZ| PROC ; PowerStateOff::GetStateString

; 206  :         return STRING_OFF;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@|
  00002		 |$M4|

; 207  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateOff@@UAAPBGXZ|, PowerStateOff::GetStateString

	IMPORT	|?StateValidateRegistry@PowerState@@UAAKKK@Z| ; PowerState::StateValidateRegistry
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateOff@@UAAKKK@Z| PROC ; PowerStateOff::StateValidateRegistry

; 210  :         return PowerState::StateValidateRegistry (4, POWER_STATE_OFF);

  00000	f44f 3200	 mov         r2,#0x20000
  00004	2104		 movs        r1,#4
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateOff@@UAAKKK@Z|, PowerStateOff::StateValidateRegistry

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerState::GetLastNewState

; 159  : 		return m_LastNewState;

  00000	6840		 ldr         r0,[r0,#4]
  00002		 |$M4|

; 160  : 	};

  00002	4770		 bx          lr

			 ENDP  ; |?GetLastNewState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerState::GetLastNewState

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z| PROC ; PowerState::SetSystemAPIState

; 163  : 		if (UnknownState != apiState)

  00000	f1b1 3fff	 cmp         r1,#0xFFFFFFFF
  00004	d000		 beq         |$LN1@SetSystemA|

; 164  : 			m_LastNewState = apiState;

  00006	6041		 str         r1,[r0,#4]
  00008		 |$LN1@SetSystemA|

; 165  : 		return m_LastNewState;

  00008	6840		 ldr         r0,[r0,#4]
  0000a		 |$M5|

; 166  : 	}

  0000a	4770		 bx          lr

			 ENDP  ; |?SetSystemAPIState@PowerState@@UAA?AW4PLATFORM_ACTIVITY_STATE@@W42@@Z|, PowerState::SetSystemAPIState

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AppsCanRequestState@PowerState@@UAAHXZ| PROC ; PowerState::AppsCanRequestState

; 173  : 		return FALSE;

  00000	2000		 movs        r0,#0
  00002		 |$M4|

; 174  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?AppsCanRequestState@PowerState@@UAAHXZ|, PowerState::AppsCanRequestState

	EXPORT	|??1PowerStateOn@@UAA@XZ|		; PowerStateOn::~PowerStateOn
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateOn@@UAA@XZ| PROC		; PowerStateOn::~PowerStateOn
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateOn@@UAA@XZ|, PowerStateOn::~PowerStateOn

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateOn@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateOn::GetState

; 236  : 		return On;

  00000	2000		 movs        r0,#0
  00002		 |$M4|

; 237  : 	};

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateOn@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateOn::GetState

	EXPORT	|??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@| DCB "o", 0x0, "n", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateOn@@UAAPBGXZ| PROC ; PowerStateOn::GetStateString

; 240  : 		return STRING_ON;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@|
  00002		 |$M4|

; 241  : 	};

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateOn@@UAAPBGXZ|, PowerStateOn::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateOn@@UAAKKK@Z| PROC ; PowerStateOn::StateValidateRegistry

; 244  : 		return PowerState::StateValidateRegistry (0, POWER_STATE_ON | POWER_STATE_BACKLIGHTON);

  00000	4a01		 ldr         r2,|$LN6@StateValid| ; =0x2010000
  00002	2100		 movs        r1,#0
  00004		 |$M4|
  00004	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|
  00008		 |$LN5@StateValid|
  00008		 |$LN6@StateValid|
  00008	0000 0201	 DCD         0x2010000

			 ENDP  ; |?StateValidateRegistry@PowerStateOn@@UAAKKK@Z|, PowerStateOn::StateValidateRegistry

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AppsCanRequestState@PowerStateOn@@UAAHXZ| PROC ; PowerStateOn::AppsCanRequestState

; 248  : 		return TRUE;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 249  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?AppsCanRequestState@PowerStateOn@@UAAHXZ|, PowerStateOn::AppsCanRequestState

	EXPORT	|??1PowerStateUserIdle@@UAA@XZ|		; PowerStateUserIdle::~PowerStateUserIdle
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateUserIdle@@UAA@XZ| PROC	; PowerStateUserIdle::~PowerStateUserIdle
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateUserIdle@@UAA@XZ|, PowerStateUserIdle::~PowerStateUserIdle

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateUserIdle@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateUserIdle::GetState

; 272  : 		return UserIdle;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 273  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateUserIdle@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateUserIdle::GetState

	EXPORT	|??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@| DCB "u"
	DCB	0x0, "s", 0x0, "e", 0x0, "r", 0x0, "i", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateUserIdle@@UAAPBGXZ| PROC ; PowerStateUserIdle::GetStateString

; 276  : 		return STRING_USERIDLE;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|
  00002		 |$M4|

; 277  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateUserIdle@@UAAPBGXZ|, PowerStateUserIdle::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateUserIdle@@UAAKKK@Z| PROC ; PowerStateUserIdle::StateValidateRegistry

; 280  : 		return PowerState::StateValidateRegistry (2, POWER_STATE_USERIDLE);

  00000	f04f 7280	 mov         r2,#0x1000000
  00004	2102		 movs        r1,#2
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateUserIdle@@UAAKKK@Z|, PowerStateUserIdle::StateValidateRegistry

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AppsCanRequestState@PowerStateUserIdle@@UAAHXZ| PROC ; PowerStateUserIdle::AppsCanRequestState

; 284  : 		return TRUE;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 285  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?AppsCanRequestState@PowerStateUserIdle@@UAAHXZ|, PowerStateUserIdle::AppsCanRequestState

	EXPORT	|??1PowerStateUnattended@@UAA@XZ|	; PowerStateUnattended::~PowerStateUnattended
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateUnattended@@UAA@XZ| PROC	; PowerStateUnattended::~PowerStateUnattended
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateUnattended@@UAA@XZ|, PowerStateUnattended::~PowerStateUnattended

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateUnattended::GetState

; 311  : 		return Unattended;

  00000	2002		 movs        r0,#2
  00002		 |$M4|

; 312  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateUnattended@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateUnattended::GetState

	EXPORT	|??_C@_1BG@PGILDLLG@?$AAu?$AAn?$AAa?$AAt?$AAt?$AAe?$AAn?$AAd?$AAe?$AAd?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@PGILDLLG@?$AAu?$AAn?$AAa?$AAt?$AAt?$AAe?$AAn?$AAd?$AAe?$AAd?$AA?$AA@| DCB "u"
	DCB	0x0, "n", 0x0, "a", 0x0, "t", 0x0, "t", 0x0, "e", 0x0, "n"
	DCB	0x0, "d", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateUnattended@@UAAPBGXZ| PROC ; PowerStateUnattended::GetStateString

; 315  : 		return STRING_UNATTENDED;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1BG@PGILDLLG@?$AAu?$AAn?$AAa?$AAt?$AAt?$AAe?$AAn?$AAd?$AAe?$AAd?$AA?$AA@|
  00002		 |$M4|

; 316  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1BG@PGILDLLG@?$AAu?$AAn?$AAa?$AAt?$AAt?$AAe?$AAn?$AAd?$AAe?$AAd?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateUnattended@@UAAPBGXZ|, PowerStateUnattended::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateUnattended@@UAAKKK@Z| PROC ; PowerStateUnattended::StateValidateRegistry

; 319  : 		return PowerState::StateValidateRegistry (4, POWER_STATE_UNATTENDED);

  00000	f44f 0280	 mov         r2,#0x400000
  00004	2104		 movs        r1,#4
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateUnattended@@UAAKKK@Z|, PowerStateUnattended::StateValidateRegistry

	EXPORT	|??1PowerStateResuming@@UAA@XZ|		; PowerStateResuming::~PowerStateResuming
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateResuming@@UAA@XZ| PROC	; PowerStateResuming::~PowerStateResuming
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateResuming@@UAA@XZ|, PowerStateResuming::~PowerStateResuming

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateResuming@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateResuming::GetState

; 343  : 		return Resuming;

  00000	2003		 movs        r0,#3
  00002		 |$M4|

; 344  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateResuming@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateResuming::GetState

	EXPORT	|??_C@_1BC@ECBFGKFC@?$AAr?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@ECBFGKFC@?$AAr?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AA?$AA@| DCB "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateResuming@@UAAPBGXZ| PROC ; PowerStateResuming::GetStateString

; 347  : 		return STRING_RESUMING;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1BC@ECBFGKFC@?$AAr?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AA?$AA@|
  00002		 |$M4|

; 348  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1BC@ECBFGKFC@?$AAr?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateResuming@@UAAPBGXZ|, PowerStateResuming::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateResuming@@UAAKKK@Z| PROC ; PowerStateResuming::StateValidateRegistry

; 351  : 		return PowerState::StateValidateRegistry (4, 0);

  00000	2200		 movs        r2,#0
  00002	2104		 movs        r1,#4
  00004		 |$M4|
  00004	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateResuming@@UAAKKK@Z|, PowerStateResuming::StateValidateRegistry

	EXPORT	|??1PowerStateSuspend@@UAA@XZ|		; PowerStateSuspend::~PowerStateSuspend
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateSuspend@@UAA@XZ| PROC	; PowerStateSuspend::~PowerStateSuspend
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateSuspend@@UAA@XZ|, PowerStateSuspend::~PowerStateSuspend

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?WaitForEvent@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| PROC ; PowerStateSuspend::WaitForEvent

; 374  : 		// Suspend is no wait
; 375  : 		return NoActivity;

  00000	2000		 movs        r0,#0
  00002		 |$M4|

; 376  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?WaitForEvent@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|, PowerStateSuspend::WaitForEvent

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateSuspend::GetState

; 379  : 		return Suspend;

  00000	2004		 movs        r0,#4
  00002		 |$M4|

; 380  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateSuspend@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateSuspend::GetState

	EXPORT	|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| DCB "s", 0x0
	DCB	"u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateSuspend@@UAAPBGXZ| PROC ; PowerStateSuspend::GetStateString

; 383  : 		return STRING_SUSPEND;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  00002		 |$M4|

; 384  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateSuspend@@UAAPBGXZ|, PowerStateSuspend::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateSuspend@@UAAKKK@Z| PROC ; PowerStateSuspend::StateValidateRegistry

; 387  : 		return PowerState::StateValidateRegistry (3, POWER_STATE_SUSPEND);

  00000	f44f 1200	 mov         r2,#0x200000
  00004	2103		 movs        r1,#3
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateSuspend@@UAAKKK@Z|, PowerStateSuspend::StateValidateRegistry

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AppsCanRequestState@PowerStateSuspend@@UAAHXZ| PROC ; PowerStateSuspend::AppsCanRequestState

; 391  : 		return TRUE;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 392  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?AppsCanRequestState@PowerStateSuspend@@UAAHXZ|, PowerStateSuspend::AppsCanRequestState

	EXPORT	|??1PowerStateScreenOff@@UAA@XZ|	; PowerStateScreenOff::~PowerStateScreenOff
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateScreenOff@@UAA@XZ| PROC	; PowerStateScreenOff::~PowerStateScreenOff
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateScreenOff@@UAA@XZ|, PowerStateScreenOff::~PowerStateScreenOff

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateScreenOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateScreenOff::GetState

; 415  : 		return ScreenOff;

  00000	2005		 movs        r0,#5
  00002		 |$M4|

; 416  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateScreenOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateScreenOff::GetState

	EXPORT	|??_C@_1BE@HLEAMJNI@?$AAs?$AAc?$AAr?$AAe?$AAe?$AAn?$AAo?$AAf?$AAf?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@HLEAMJNI@?$AAs?$AAc?$AAr?$AAe?$AAe?$AAn?$AAo?$AAf?$AAf?$AA?$AA@| DCB "s"
	DCB	0x0, "c", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, "o"
	DCB	0x0, "f", 0x0, "f", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateScreenOff@@UAAPBGXZ| PROC ; PowerStateScreenOff::GetStateString

; 419  : 		return STRING_SCREENOFF;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1BE@HLEAMJNI@?$AAs?$AAc?$AAr?$AAe?$AAe?$AAn?$AAo?$AAf?$AAf?$AA?$AA@|
  00002		 |$M4|

; 420  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1BE@HLEAMJNI@?$AAs?$AAc?$AAr?$AAe?$AAe?$AAn?$AAo?$AAf?$AAf?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateScreenOff@@UAAPBGXZ|, PowerStateScreenOff::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateScreenOff@@UAAKKK@Z| PROC ; PowerStateScreenOff::StateValidateRegistry

; 423  : 		return PowerState::StateValidateRegistry (4, POWER_STATE_IDLE);

  00000	f44f 1280	 mov         r2,#0x100000
  00004	2104		 movs        r1,#4
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateScreenOff@@UAAKKK@Z|, PowerStateScreenOff::StateValidateRegistry

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AppsCanRequestState@PowerStateScreenOff@@UAAHXZ| PROC ; PowerStateScreenOff::AppsCanRequestState

; 427  : 		return TRUE;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 428  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?AppsCanRequestState@PowerStateScreenOff@@UAAHXZ|, PowerStateScreenOff::AppsCanRequestState

	EXPORT	|??1PowerStateBacklightOff@@UAA@XZ|	; PowerStateBacklightOff::~PowerStateBacklightOff
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateBacklightOff@@UAA@XZ| PROC ; PowerStateBacklightOff::~PowerStateBacklightOff
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateBacklightOff@@UAA@XZ|, PowerStateBacklightOff::~PowerStateBacklightOff

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateBacklightOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateBacklightOff::GetState

; 451  : 		return BacklightOff;

  00000	2006		 movs        r0,#6
  00002		 |$M4|

; 452  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateBacklightOff@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateBacklightOff::GetState

	EXPORT	|??_C@_1BK@NPGJBFII@?$AAb?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAo?$AAf?$AAf?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@NPGJBFII@?$AAb?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAo?$AAf?$AAf?$AA?$AA@| DCB "b"
	DCB	0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i", 0x0, "g"
	DCB	0x0, "h", 0x0, "t", 0x0, "o", 0x0, "f", 0x0, "f", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateBacklightOff@@UAAPBGXZ| PROC ; PowerStateBacklightOff::GetStateString

; 455  : 		return STRING_BACKLIGHTOFF;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1BK@NPGJBFII@?$AAb?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAo?$AAf?$AAf?$AA?$AA@|
  00002		 |$M4|

; 456  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1BK@NPGJBFII@?$AAb?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAo?$AAf?$AAf?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateBacklightOff@@UAAPBGXZ|, PowerStateBacklightOff::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateBacklightOff@@UAAKKK@Z| PROC ; PowerStateBacklightOff::StateValidateRegistry

; 459  : 		return PowerState::StateValidateRegistry (0, POWER_STATE_ON);

  00000	f44f 3280	 mov         r2,#0x10000
  00004	2100		 movs        r1,#0
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateBacklightOff@@UAAKKK@Z|, PowerStateBacklightOff::StateValidateRegistry

	EXPORT	|??1PowerStateColdReboot@@UAA@XZ|	; PowerStateColdReboot::~PowerStateColdReboot
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateColdReboot@@UAA@XZ| PROC	; PowerStateColdReboot::~PowerStateColdReboot
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateColdReboot@@UAA@XZ|, PowerStateColdReboot::~PowerStateColdReboot

	IMPORT	|PmSetSystemPowerState_I|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?EnterState@PowerStateColdReboot@@UAAXXZ| DCD imagerel |$LN6@EnterState|
	DCD	0x3f6039
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?EnterState@PowerStateColdReboot@@UAAXXZ| PROC ; PowerStateColdReboot::EnterState

; 479  : 	{

  00000		 |$LN6@EnterState|
  00000	e92d 4800	 push        {r11,lr}
  00004	46eb		 mov         r11,sp
  00006		 |$M4|
  00006	4603		 mov         r3,r0

; 480  : 		PmSetSystemPowerState_I (GetStateString (), 0, 0, TRUE);

  00008	681b		 ldr         r3,[r3]
  0000a	699b		 ldr         r3,[r3,#0x18]
  0000c	4798		 blx         r3
  0000e	2301		 movs        r3,#1
  00010	2200		 movs        r2,#0
  00012	2100		 movs        r1,#0
  00014	f000 f800	 bl          PmSetSystemPowerState_I
  00018		 |$M7|

; 481  : 		// Because it wakeup by wakeup source So it automatic enter Resuming State.
; 482  : 	}

  00018	e8bd 8800	 pop         {r11,pc}
  0001c		 |$M5|

			 ENDP  ; |?EnterState@PowerStateColdReboot@@UAAXXZ|, PowerStateColdReboot::EnterState

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?WaitForEvent@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| PROC ; PowerStateColdReboot::WaitForEvent

; 487  : 		// Suspend is no wait
; 488  : 		return NoActivity;

  00000	2000		 movs        r0,#0
  00002		 |$M4|

; 489  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?WaitForEvent@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|, PowerStateColdReboot::WaitForEvent

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateColdReboot::GetState

; 492  : 		return ColdReboot;

  00000	2007		 movs        r0,#7
  00002		 |$M4|

; 493  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateColdReboot::GetState

	EXPORT	|??_C@_1BG@BDHACCND@?$AAc?$AAo?$AAl?$AAd?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@BDHACCND@?$AAc?$AAo?$AAl?$AAd?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| DCB "c"
	DCB	0x0, "o", 0x0, "l", 0x0, "d", 0x0, "r", 0x0, "e", 0x0, "b"
	DCB	0x0, "o", 0x0, "o", 0x0, "t", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateColdReboot@@UAAPBGXZ| PROC ; PowerStateColdReboot::GetStateString

; 500  : 		return STRING_ColdReboot;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1BG@BDHACCND@?$AAc?$AAo?$AAl?$AAd?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@|
  00002		 |$M4|

; 501  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1BG@BDHACCND@?$AAc?$AAo?$AAl?$AAd?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateColdReboot@@UAAPBGXZ|, PowerStateColdReboot::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateColdReboot@@UAAKKK@Z| PROC ; PowerStateColdReboot::StateValidateRegistry

; 504  : 		return PowerState::StateValidateRegistry (4, POWER_STATE_RESET);

  00000	f44f 0200	 mov         r2,#0x800000
  00004	2104		 movs        r1,#4
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateColdReboot@@UAAKKK@Z|, PowerStateColdReboot::StateValidateRegistry

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetLastNewState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateColdReboot::GetLastNewState

; 496  : 		return ColdReboot;;

  00000	2007		 movs        r0,#7
  00002		 |$M4|

; 497  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetLastNewState@PowerStateColdReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateColdReboot::GetLastNewState

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AppsCanRequestState@PowerStateColdReboot@@UAAHXZ| PROC ; PowerStateColdReboot::AppsCanRequestState

; 508  : 		return TRUE;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 509  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?AppsCanRequestState@PowerStateColdReboot@@UAAHXZ|, PowerStateColdReboot::AppsCanRequestState

	EXPORT	|??1PowerStateReboot@@UAA@XZ|		; PowerStateReboot::~PowerStateReboot
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1PowerStateReboot@@UAA@XZ| PROC	; PowerStateReboot::~PowerStateReboot
  00000		 |$M4|
  00000	f000 9000	 b           |??1PowerState@@UAA@XZ|

			 ENDP  ; |??1PowerStateReboot@@UAA@XZ|, PowerStateReboot::~PowerStateReboot


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?EnterState@PowerStateReboot@@UAAXXZ| DCD imagerel |$LN6@EnterState|
	DCD	0x3f6039
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?EnterState@PowerStateReboot@@UAAXXZ| PROC ; PowerStateReboot::EnterState

; 527  : 	{

  00000		 |$LN6@EnterState|
  00000	e92d 4800	 push        {r11,lr}
  00004	46eb		 mov         r11,sp
  00006		 |$M4|
  00006	4603		 mov         r3,r0

; 528  : 		PmSetSystemPowerState_I (GetStateString (), 0, 0, TRUE);

  00008	681b		 ldr         r3,[r3]
  0000a	699b		 ldr         r3,[r3,#0x18]
  0000c	4798		 blx         r3
  0000e	2301		 movs        r3,#1
  00010	2200		 movs        r2,#0
  00012	2100		 movs        r1,#0
  00014	f000 f800	 bl          PmSetSystemPowerState_I
  00018		 |$M7|

; 529  : 		// Because it wakeup by wakeup source So it automatic enter Resuming State.
; 530  : 	}

  00018	e8bd 8800	 pop         {r11,pc}
  0001c		 |$M5|

			 ENDP  ; |?EnterState@PowerStateReboot@@UAAXXZ|, PowerStateReboot::EnterState

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?WaitForEvent@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z| PROC ; PowerStateReboot::WaitForEvent

; 535  : 		// Suspend is no wait
; 536  : 		return NoActivity;

  00000	2000		 movs        r0,#0
  00002		 |$M4|

; 537  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?WaitForEvent@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_EVENT@@KKPAPAX@Z|, PowerStateReboot::WaitForEvent

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateReboot::GetState

; 540  : 		return Reboot;

  00000	2008		 movs        r0,#8
  00002		 |$M4|

; 541  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateReboot::GetState

	EXPORT	|??_C@_1O@FEJCAGNG@?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@FEJCAGNG@?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| DCB "r", 0x0, "e"
	DCB	0x0, "b", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetStateString@PowerStateReboot@@UAAPBGXZ| PROC ; PowerStateReboot::GetStateString

; 548  : 		return STRING_Reboot;

  00000	4800		 ldr         r0,|$LN6@GetStateSt| ; =|??_C@_1O@FEJCAGNG@?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@|
  00002		 |$M4|

; 549  :     }

  00002	4770		 bx          lr
  00004		 |$LN5@GetStateSt|
  00004		 |$LN6@GetStateSt|
  00004	0000 0000	 DCD         |??_C@_1O@FEJCAGNG@?$AAr?$AAe?$AAb?$AAo?$AAo?$AAt?$AA?$AA@|

			 ENDP  ; |?GetStateString@PowerStateReboot@@UAAPBGXZ|, PowerStateReboot::GetStateString

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?StateValidateRegistry@PowerStateReboot@@UAAKKK@Z| PROC ; PowerStateReboot::StateValidateRegistry

; 552  : 		return PowerState::StateValidateRegistry (4, POWER_STATE_RESET);

  00000	f44f 0200	 mov         r2,#0x800000
  00004	2104		 movs        r1,#4
  00006		 |$M4|
  00006	f000 9000	 b           |?StateValidateRegistry@PowerState@@UAAKKK@Z|

			 ENDP  ; |?StateValidateRegistry@PowerStateReboot@@UAAKKK@Z|, PowerStateReboot::StateValidateRegistry

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetLastNewState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ| PROC ; PowerStateReboot::GetLastNewState

; 544  : 		return Reboot;

  00000	2008		 movs        r0,#8
  00002		 |$M4|

; 545  :     }

  00002	4770		 bx          lr

			 ENDP  ; |?GetLastNewState@PowerStateReboot@@UAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|, PowerStateReboot::GetLastNewState

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?AppsCanRequestState@PowerStateReboot@@UAAHXZ| PROC ; PowerStateReboot::AppsCanRequestState

; 556  : 		return TRUE;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 557  : 	}

  00002	4770		 bx          lr

			 ENDP  ; |?AppsCanRequestState@PowerStateReboot@@UAAHXZ|, PowerStateReboot::AppsCanRequestState

	EXPORT	|?CreatePowerStateList@PowerStateManager@@UAAHXZ| ; PowerStateManager::CreatePowerStateList
	IMPORT	|??2@YAPAXI@Z|				; operator new

  00050			 AREA	 |.pdata|, PDATA
|$pdata1$?CreatePowerStateList@PowerStateManager@@UAAHXZ| DCD imagerel |$LN63@CreatePowe|
	DCD	imagerel |$unwind2$?CreatePowerStateList@PowerStateManager@@UAAHXZ|

  00048			 AREA	 |.xdata|, DATA
|$unwind2$?CreatePowerStateList@PowerStateManager@@UAAHXZ| DCD 0x108000d1
	DCD	0x2e000c6
	DCD	0xffdffc05
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  004fe			 AREA	 |.text|, CODE, THUMB

  00500		 |?CreatePowerStateList@PowerStateManager@@UAAHXZ| PROC ; PowerStateManager::CreatePowerStateList

; 157  : {

  00500		 |$LN63@CreatePowe|
  00500	e92d 4ff0	 push        {r4-r11,lr}
  00504	f20d 0b1c	 addw        r11,sp,#0x1C
  00508	b085		 sub         sp,sp,#0x14
  0050a		 |$M61|

; 158  :     if (m_pPowerStateList == NULL ) {

  0050a	f8d0 327c	 ldr         r3,[r0,#0x27C]
  0050e	4604		 mov         r4,r0
  00510	2b00		 cmp         r3,#0
  00512	f040 80ae	 bne         |$LN57@CreatePowe|

; 169  :             new PowerStateOff (this))))))))));

  00516	f44f 708c	 mov         r0,#0x118
  0051a	f000 f800	 bl          |??2@YAPAXI@Z|
  0051e	4605		 mov         r5,r0
  00520	2d00		 cmp         r5,#0
  00522	f000 80a2	 beq         |$LN27@CreatePowe|
  00526	f44f 708c	 mov         r0,#0x118
  0052a	f000 f800	 bl          |??2@YAPAXI@Z|
  0052e	4606		 mov         r6,r0
  00530	2e00		 cmp         r6,#0
  00532	f000 8091	 beq         |$LN25@CreatePowe|
  00536	f44f 708c	 mov         r0,#0x118
  0053a	f000 f800	 bl          |??2@YAPAXI@Z|
  0053e	4607		 mov         r7,r0
  00540	2f00		 cmp         r7,#0
  00542	f000 8080	 beq         |$LN23@CreatePowe|
  00546	f44f 708c	 mov         r0,#0x118
  0054a	f000 f800	 bl          |??2@YAPAXI@Z|
  0054e	4680		 mov         r8,r0
  00550	2800		 cmp         r0,#0
  00552	d06e		 beq         |$LN21@CreatePowe|
  00554	f44f 708c	 mov         r0,#0x118
  00558	f000 f800	 bl          |??2@YAPAXI@Z|
  0055c	4681		 mov         r9,r0
  0055e	2800		 cmp         r0,#0
  00560	d05c		 beq         |$LN19@CreatePowe|
  00562	f44f 708c	 mov         r0,#0x118
  00566	f000 f800	 bl          |??2@YAPAXI@Z|
  0056a	4682		 mov         r10,r0
  0056c	2800		 cmp         r0,#0
  0056e	d04a		 beq         |$LN17@CreatePowe|
  00570	f44f 708c	 mov         r0,#0x118
  00574	f000 f800	 bl          |??2@YAPAXI@Z|
  00578	9002		 str         r0,[sp,#8]
  0057a	b3d0		 cbz         r0,|$LN15@CreatePowe|
  0057c	f44f 708c	 mov         r0,#0x118
  00580	f000 f800	 bl          |??2@YAPAXI@Z|
  00584	9001		 str         r0,[sp,#4]
  00586	b348		 cbz         r0,|$LN13@CreatePowe|
  00588	f44f 708c	 mov         r0,#0x118
  0058c	f000 f800	 bl          |??2@YAPAXI@Z|
  00590	9000		 str         r0,[sp]
  00592	b1c0		 cbz         r0,|$LN11@CreatePowe|
  00594	f44f 708c	 mov         r0,#0x118
  00598	f000 f800	 bl          |??2@YAPAXI@Z|
  0059c	4603		 mov         r3,r0
  0059e	9303		 str         r3,[sp,#0xC]
  005a0	b13b		 cbz         r3,|$LN9@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 194  :     PowerStateOff (PowerStateManager * pPwrStateMgr, PowerState * pNextPowerState = NULL)

  005a2	2200		 movs        r2,#0
  005a4	4621		 mov         r1,r4
  005a6	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  005aa	4b4a		 ldr         r3,|$LN78@CreatePowe| ; =|??_7PowerStateOff@@6B@|
  005ac	9a03		 ldr         r2,[sp,#0xC]
  005ae	6013		 str         r3,[r2]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  005b0	e000		 b           |$LN10@CreatePowe|
  005b2		 |$LN9@CreatePowe|
  005b2	2200		 movs        r2,#0
  005b4		 |$LN10@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 523  : 	{

  005b4	9800		 ldr         r0,[sp]
  005b6	4621		 mov         r1,r4
  005b8	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  005bc	4b44		 ldr         r3,|$LN77@CreatePowe| ; =|??_7PowerStateReboot@@6B@|
  005be	9a00		 ldr         r2,[sp]
  005c0	6013		 str         r3,[r2]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  005c2	4613		 mov         r3,r2
  005c4	e000		 b           |$LN12@CreatePowe|
  005c6		 |$LN11@CreatePowe|
  005c6	2300		 movs        r3,#0
  005c8		 |$LN12@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 475  : 	{

  005c8	9801		 ldr         r0,[sp,#4]
  005ca	461a		 mov         r2,r3
  005cc	4621		 mov         r1,r4
  005ce	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  005d2	4b3e		 ldr         r3,|$LN76@CreatePowe| ; =|??_7PowerStateColdReboot@@6B@|
  005d4	9a01		 ldr         r2,[sp,#4]
  005d6	6013		 str         r3,[r2]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  005d8	4613		 mov         r3,r2
  005da	e000		 b           |$LN14@CreatePowe|
  005dc		 |$LN13@CreatePowe|
  005dc	2300		 movs        r3,#0
  005de		 |$LN14@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 366  : 	{

  005de	9802		 ldr         r0,[sp,#8]
  005e0	461a		 mov         r2,r3
  005e2	4621		 mov         r1,r4
  005e4	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  005e8	4b37		 ldr         r3,|$LN75@CreatePowe| ; =|??_7PowerStateSuspend@@6B@|
  005ea	9a02		 ldr         r2,[sp,#8]
  005ec	6013		 str         r3,[r2]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  005ee	4613		 mov         r3,r2
  005f0	e000		 b           |$LN16@CreatePowe|
  005f2		 |$LN15@CreatePowe|
  005f2	2300		 movs        r3,#0
  005f4		 |$LN16@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 334  : 	{

  005f4	461a		 mov         r2,r3
  005f6	4621		 mov         r1,r4
  005f8	4650		 mov         r0,r10
  005fa	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  005fe	4b31		 ldr         r3,|$LN74@CreatePowe| ; =|??_7PowerStateResuming@@6B@|
  00600	f8ca 3000	 str         r3,[r10]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  00604	e001		 b           |$LN18@CreatePowe|
  00606		 |$LN17@CreatePowe|
  00606	f04f 0a00	 mov         r10,#0
  0060a		 |$LN18@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 299  : 	{

  0060a	4652		 mov         r2,r10
  0060c	4621		 mov         r1,r4
  0060e	4648		 mov         r0,r9
  00610	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  00614	4b2a		 ldr         r3,|$LN73@CreatePowe| ; =|??_7PowerStateUnattended@@6B@|
  00616	f8c9 3000	 str         r3,[r9]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  0061a	e001		 b           |$LN20@CreatePowe|
  0061c		 |$LN19@CreatePowe|
  0061c	f04f 0900	 mov         r9,#0
  00620		 |$LN20@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 406  : 	{

  00620	464a		 mov         r2,r9
  00622	4621		 mov         r1,r4
  00624	4640		 mov         r0,r8
  00626	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  0062a	4b24		 ldr         r3,|$LN72@CreatePowe| ; =|??_7PowerStateScreenOff@@6B@|
  0062c	f8c8 3000	 str         r3,[r8]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  00630	e001		 b           |$LN22@CreatePowe|
  00632		 |$LN21@CreatePowe|
  00632	f04f 0800	 mov         r8,#0
  00636		 |$LN22@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 442  : 	{

  00636	4642		 mov         r2,r8
  00638	4621		 mov         r1,r4
  0063a	4638		 mov         r0,r7
  0063c	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  00640	4b1d		 ldr         r3,|$LN71@CreatePowe| ; =|??_7PowerStateBacklightOff@@6B@|
  00642	603b		 str         r3,[r7]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  00644	e000		 b           |$LN24@CreatePowe|
  00646		 |$LN23@CreatePowe|
  00646	2700		 movs        r7,#0
  00648		 |$LN24@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 263  : 	{

  00648	463a		 mov         r2,r7
  0064a	4621		 mov         r1,r4
  0064c	4630		 mov         r0,r6
  0064e	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  00652	4b18		 ldr         r3,|$LN70@CreatePowe| ; =|??_7PowerStateUserIdle@@6B@|
  00654	6033		 str         r3,[r6]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  00656	e000		 b           |$LN26@CreatePowe|
  00658		 |$LN25@CreatePowe|
  00658	2600		 movs        r6,#0
  0065a		 |$LN26@CreatePowe|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstates.h

; 227  : 	{

  0065a	4632		 mov         r2,r6
  0065c	4621		 mov         r1,r4
  0065e	4628		 mov         r0,r5
  00660	f000 f800	 bl          |??0PowerState@@QAA@PAVPowerStateManager@@PAV0@@Z|
  00664	4b12		 ldr         r3,|$LN69@CreatePowe| ; =|??_7PowerStateOn@@6B@|
  00666	602b		 str         r3,[r5]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 169  :             new PowerStateOff (this))))))))));

  00668	e000		 b           |$LN28@CreatePowe|
  0066a		 |$LN27@CreatePowe|
  0066a	2500		 movs        r5,#0
  0066c		 |$LN28@CreatePowe|
  0066c	f8c4 527c	 str         r5,[r4,#0x27C]

; 170  :     }
; 171  :     if (m_pPowerStateList != NULL) {

  00670	b1ad		 cbz         r5,|$LN59@CreatePowe|
  00672		 |$LN57@CreatePowe|

; 172  :         PowerState * pCurState = m_pPowerStateList;

  00672	f8d4 427c	 ldr         r4,[r4,#0x27C]
  00676	e005		 b           |$LN58@CreatePowe|
  00678		 |$LL4@CreatePowe|

; 174  :             if (!pCurState->Init()) {

  00678	6823		 ldr         r3,[r4]
  0067a	4620		 mov         r0,r4
  0067c	689b		 ldr         r3,[r3,#8]
  0067e	4798		 blx         r3
  00680	b130		 cbz         r0,|$LN54@CreatePowe|

; 177  :             }
; 178  :             pCurState = pCurState->GetNextPowerState();

  00682	6964		 ldr         r4,[r4,#0x14]
  00684		 |$LN58@CreatePowe|

; 173  :         while (pCurState) {

  00684	2c00		 cmp         r4,#0
  00686	d1f7		 bne         |$LL4@CreatePowe|

; 179  :         }
; 180  :         return TRUE;

  00688	2001		 movs        r0,#1
  0068a		 |$LN1@CreatePowe|
  0068a		 |$M64|

; 181  :     }
; 182  :     else
; 183  :         return FALSE;
; 184  : }

  0068a	b005		 add         sp,sp,#0x14
  0068c	e8bd 8ff0	 pop         {r4-r11,pc}
  00690		 |$LN54@CreatePowe|

; 175  :                 ASSERT(FALSE);

  00690	4a06		 ldr         r2,|$LN68@CreatePowe| ; =|??_C@_1IO@IDNLAEOI@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  00692	4905		 ldr         r1,|$LN67@CreatePowe| ; =|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00694	4803		 ldr         r0,|$LN66@CreatePowe| ; =|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00696	23af		 movs        r3,#0xAF
  00698	f000 f800	 bl          NKDbgPrintfW
  0069c	defe		 __debugbreak
  0069e		 |$LN59@CreatePowe|

; 176  :                 return FALSE;

  0069e	2000		 movs        r0,#0
  006a0	e7f3		 b           |$LN1@CreatePowe|
  006a2		 |$LN79@CreatePowe|
  006a2		 |$M80|
  006a2	defe		 __debugbreak
  006a4		 |$LN65@CreatePowe|
  006a4		 |$LN66@CreatePowe|
  006a4	0000 0000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  006a8		 |$LN67@CreatePowe|
  006a8	0000 0000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  006ac		 |$LN68@CreatePowe|
  006ac	0000 0000	 DCD         |??_C@_1IO@IDNLAEOI@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  006b0		 |$LN69@CreatePowe|
  006b0	0000 0000	 DCD         |??_7PowerStateOn@@6B@|
  006b4		 |$LN70@CreatePowe|
  006b4	0000 0000	 DCD         |??_7PowerStateUserIdle@@6B@|
  006b8		 |$LN71@CreatePowe|
  006b8	0000 0000	 DCD         |??_7PowerStateBacklightOff@@6B@|
  006bc		 |$LN72@CreatePowe|
  006bc	0000 0000	 DCD         |??_7PowerStateScreenOff@@6B@|
  006c0		 |$LN73@CreatePowe|
  006c0	0000 0000	 DCD         |??_7PowerStateUnattended@@6B@|
  006c4		 |$LN74@CreatePowe|
  006c4	0000 0000	 DCD         |??_7PowerStateResuming@@6B@|
  006c8		 |$LN75@CreatePowe|
  006c8	0000 0000	 DCD         |??_7PowerStateSuspend@@6B@|
  006cc		 |$LN76@CreatePowe|
  006cc	0000 0000	 DCD         |??_7PowerStateColdReboot@@6B@|
  006d0		 |$LN77@CreatePowe|
  006d0	0000 0000	 DCD         |??_7PowerStateReboot@@6B@|
  006d4		 |$LN78@CreatePowe|
  006d4	0000 0000	 DCD         |??_7PowerStateOff@@6B@|
  006d8		 |$M62|

			 ENDP  ; |?CreatePowerStateList@PowerStateManager@@UAAHXZ|, PowerStateManager::CreatePowerStateList

	EXPORT	|?GetEventHandle@PowerStateManager@@QAAPAXK@Z| ; PowerStateManager::GetEventHandle
	IMPORT	|?ghevRestartTimers@@3PAXA|		; ghevRestartTimers
	IMPORT	|?ghevReloadActivityTimeouts@@3PAXA|	; ghevReloadActivityTimeouts
	IMPORT	|ghevPmShutdown|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  006d8			 AREA	 |.text|, CODE, THUMB

  006d8		 |?GetEventHandle@PowerStateManager@@QAAPAXK@Z| PROC ; PowerStateManager::GetEventHandle

; 406  : 	switch (dwIndex)

  006d8	b1b9		 cbz         r1,|$LN6@GetEventHa|
  006da	2901		 cmp         r1,#1
  006dc	d013		 beq         |$LN5@GetEventHa|
  006de	2902		 cmp         r1,#2
  006e0	d00e		 beq         |$LN4@GetEventHa|
  006e2	2903		 cmp         r1,#3
  006e4	d00a		 beq         |$LN3@GetEventHa|
  006e6	2906		 cmp         r1,#6
  006e8	d006		 beq         |$LN2@GetEventHa|
  006ea	2907		 cmp         r1,#7
  006ec	d001		 beq         |$LN1@GetEventHa|

; 420  : 	}
; 421  : 	return NULL;

  006ee	2000		 movs        r0,#0
  006f0		 |$M15|

; 422  : }

  006f0	4770		 bx          lr
  006f2		 |$LN1@GetEventHa|

; 418  : 	  case PM_BOOTPHASE2_EVENT:
; 419  : 		  return m_hevBootPhase2;

  006f2	f8d0 0238	 ldr         r0,[r0,#0x238]
  006f6		 |$M16|

; 422  : }

  006f6	4770		 bx          lr
  006f8		 |$LN2@GetEventHa|

; 416  : 	  case PM_SYSTEM_API_EVENT:
; 417  : 		  return GetAPISignalHandle ();

  006f8	6a80		 ldr         r0,[r0,#0x28]
  006fa		 |$M17|

; 422  : }

  006fa	4770		 bx          lr
  006fc		 |$LN3@GetEventHa|

; 414  : 	  case PM_RESTART_TIMER_EVENT:
; 415  : 		  return ghevRestartTimers;

  006fc	4b06		 ldr         r3,|$LN23@GetEventHa| ; =|?ghevRestartTimers@@3PAXA|
  006fe	e005		 b           |$LN13@GetEventHa|
  00700		 |$LN4@GetEventHa|

; 412  : 	  case PM_MSGQUEUE_EVENT:
; 413  : 		  return m_hqNotify;

  00700	f8d0 024c	 ldr         r0,[r0,#0x24C]
  00704		 |$M18|

; 422  : }

  00704	4770		 bx          lr
  00706		 |$LN5@GetEventHa|

; 410  : 	  case PM_RELOAD_ACTIVITY_TIMEOUTS_EVENT:
; 411  : 		  return ghevReloadActivityTimeouts;

  00706	4b03		 ldr         r3,|$LN22@GetEventHa| ; =|?ghevReloadActivityTimeouts@@3PAXA|
  00708	e000		 b           |$LN13@GetEventHa|
  0070a		 |$LN6@GetEventHa|

; 407  : 	{
; 408  : 	  case PM_SHUTDOWN_EVENT:
; 409  : 		  return ghevPmShutdown;

  0070a	4b01		 ldr         r3,|$LN21@GetEventHa| ; =|ghevPmShutdown|
  0070c		 |$LN13@GetEventHa|
  0070c	6818		 ldr         r0,[r3]
  0070e		 |$M19|

; 422  : }

  0070e	4770		 bx          lr
  00710		 |$LN20@GetEventHa|
  00710		 |$LN21@GetEventHa|
  00710	0000 0000	 DCD         |ghevPmShutdown|
  00714		 |$LN22@GetEventHa|
  00714	0000 0000	 DCD         |?ghevReloadActivityTimeouts@@3PAXA|
  00718		 |$LN23@GetEventHa|
  00718	0000 0000	 DCD         |?ghevRestartTimers@@3PAXA|

			 ENDP  ; |?GetEventHandle@PowerStateManager@@QAAPAXK@Z|, PowerStateManager::GetEventHandle

	EXPORT	|?ResetSystemIdleTimeTimeout@PowerStateManager@@UAAXH@Z| ; PowerStateManager::ResetSystemIdleTimeTimeout
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  0071c			 AREA	 |.text|, CODE, THUMB

  0071c		 |?ResetSystemIdleTimeTimeout@PowerStateManager@@UAAXH@Z| PROC ; PowerStateManager::ResetSystemIdleTimeTimeout

; 316  : 	m_dwCurSuspendTimeout = (fIdle ? GetSuspendTimeOut () : INFINITE);

  0071c	f06f 0200	 mvn         r2,#0
  00720	b141		 cbz         r1,|$LN4@ResetSyste|

; 320  : 
; 321  : void
; 322  : PowerStateManager::SubtractTimeout (DWORD dwTicks)
; 323  : {
; 324  : 	if (m_dwCurSuspendTimeout != INFINITE)
; 325  : 		m_dwCurSuspendTimeout =
; 326  : 			(m_dwCurSuspendTimeout > dwTicks ? m_dwCurSuspendTimeout - dwTicks : 0);
; 327  : 	if (m_dwCurResumingSuspendTimeout != INFINITE)
; 328  : 		m_dwCurResumingSuspendTimeout =
; 329  : 			(m_dwCurResumingSuspendTimeout > dwTicks ? m_dwCurResumingSuspendTimeout - dwTicks : 0);
; 330  : 	if (m_dwCurBacklightTimeout != INFINITE)
; 331  : 		m_dwCurBacklightTimeout =
; 332  : 			(m_dwCurBacklightTimeout > dwTicks ? m_dwCurBacklightTimeout - dwTicks : 0);
; 333  : 	if (m_dwCurUserIdleTimeout != INFINITE)
; 334  : 		m_dwCurUserIdleTimeout =
; 335  : 			(m_dwCurUserIdleTimeout > dwTicks ? m_dwCurUserIdleTimeout - dwTicks : 0);
; 336  : }
; 337  : 
; 338  : DWORD
; 339  : PowerStateManager::GetSmallestTimeout (PTIMEOUT_ITEM pTimeoutItem)
; 340  : {
; 341  : 	DWORD dwReturn = INFINITE;
; 342  : 	TIMEOUT_ITEM activeEvent = NoTimeoutItem;
; 343  : 
; 344  : 	if (dwReturn > m_dwCurSuspendTimeout)
; 345  : 	{
; 346  : 		dwReturn = m_dwCurSuspendTimeout;
; 347  : 		activeEvent = SuspendTimeout;
; 348  : 	}
; 349  : 	if (dwReturn > m_dwCurResumingSuspendTimeout)
; 350  : 	{
; 351  : 		dwReturn = m_dwCurResumingSuspendTimeout;
; 352  : 		activeEvent = ResumingSuspendTimeout;
; 353  : 	}
; 354  : 	if (dwReturn > m_dwCurBacklightTimeout)
; 355  : 	{
; 356  : 		dwReturn = m_dwCurBacklightTimeout;
; 357  : 		activeEvent = BacklightTimeout;
; 358  : 	}
; 359  : 	if (dwReturn > m_dwCurUserIdleTimeout)
; 360  : 	{
; 361  : 		dwReturn = m_dwCurUserIdleTimeout;
; 362  : 		activeEvent = UserActivityTimeout;
; 363  : 	}
; 364  : 	if (pTimeoutItem)
; 365  : 	{
; 366  : 		*pTimeoutItem = activeEvent;
; 367  : 	}
; 368  : 	return dwReturn;
; 369  : }
; 370  : 
; 371  : LPCTSTR
; 372  : PowerStateManager::ActivityStateToSystemState (PLATFORM_ACTIVITY_STATE platActiveState)
; 373  : {
; 374  : 	PowerState *curState = m_pPowerStateList;
; 375  : 
; 376  : 	while (curState)
; 377  : 	{
; 378  : 		if (curState->GetState () == platActiveState)
; 379  : 			return curState->GetStateString ();
; 380  : 		else
; 381  : 			curState = curState->GetNextPowerState ();
; 382  : 	}
; 383  : 	return NULL;
; 384  : }
; 385  : 
; 386  : PLATFORM_ACTIVITY_STATE
; 387  : PowerStateManager::SystemStateToActivityState (LPCTSTR lpState)
; 388  : {
; 389  : 	if (lpState == NULL)
; 390  : 		return UnknownState;
; 391  : 	PowerState *curState = m_pPowerStateList;
; 392  : 
; 393  : 	while (curState)
; 394  : 	{
; 395  : 		if (_tcsicmp (curState->GetStateString (), lpState) == 0)
; 396  : 			return curState->GetState ();
; 397  : 		else
; 398  : 			curState = curState->GetNextPowerState ();
; 399  : 	}
; 400  : 	return UnknownState;
; 401  : }
; 402  : 
; 403  : HANDLE
; 404  : PowerStateManager::GetEventHandle (DWORD dwIndex)
; 405  : {
; 406  : 	switch (dwIndex)
; 407  : 	{
; 408  : 	  case PM_SHUTDOWN_EVENT:
; 409  : 		  return ghevPmShutdown;
; 410  : 	  case PM_RELOAD_ACTIVITY_TIMEOUTS_EVENT:
; 411  : 		  return ghevReloadActivityTimeouts;
; 412  : 	  case PM_MSGQUEUE_EVENT:
; 413  : 		  return m_hqNotify;
; 414  : 	  case PM_RESTART_TIMER_EVENT:
; 415  : 		  return ghevRestartTimers;
; 416  : 	  case PM_SYSTEM_API_EVENT:
; 417  : 		  return GetAPISignalHandle ();
; 418  : 	  case PM_BOOTPHASE2_EVENT:
; 419  : 		  return m_hevBootPhase2;
; 420  : 	}
; 421  : 	return NULL;
; 422  : }
; 423  : 
; 424  : void
; 425  : PowerStateManager::DisablePhase2Event ()
; 426  : {
; 427  : 	if (m_hevBootPhase2)
; 428  : 	{
; 429  : 		CloseHandle (m_hevBootPhase2);
; 430  : 		m_hevBootPhase2 = NULL;
; 431  : 	}
; 432  : }
; 433  : 
; 434  : void
; 435  : PowerStateManager::PlatformLoadTimeouts ()
; 436  : {
; 437  : 	DWORD dwStatus;
; 438  : 	TCHAR szPath[MAX_PATH];
; 439  : 	HKEY hk;
; 440  : 
; 441  : 	SETFNAME (_T ("PowerStateManager::PlatformLoadTimeouts"));
; 442  : 
; 443  : 	// Assume default values:
; 444  : 	m_dwACSuspendTimeout = DEF_ACSUSPENDTIMEOUT * 1000;
; 445  : 	m_dwACResumingSuspendTimeout = DEF_ACRESUMINGSUSPENDTIMEOUT * 1000;
; 446  : 	m_dwACBacklightTimeout = DEF_ACBACKLIGHTTIMEOUT * 1000;
; 447  : 	m_dwACUserIdleTimeout = DEF_ACUSERIDLETIMEOUT * 1000;
; 448  : 
; 449  : 	m_dwBattSuspendTimeout = DEF_BATTSUSPENDTIMEOUT * 1000;
; 450  : 	m_dwBattResumingSuspendTimeout = DEF_BATTRESUMINGSUSPENDTIMEOUT * 1000;
; 451  : 	m_dwBattBacklightTimeout = DEF_BATTBACKLIGHTTIMEOUT * 1000;
; 452  : 	m_dwBattUserIdleTimeout = DEF_BATTUSERIDLETIMEOUT * 1000;
; 453  : 
; 454  : 	// Get timeout thresholds for transitions between states:
; 455  : 	StringCchPrintf (szPath, MAX_PATH, _T ("%s\\%s"), PWRMGR_REG_KEY, _T ("Timeouts"));
; 456  : 	dwStatus = RegOpenKeyEx (HKEY_LOCAL_MACHINE, szPath, 0, 0, &hk);
; 457  : 	if (dwStatus == ERROR_SUCCESS)
; 458  : 	{
; 459  : 		// Read system power state timeouts:
; 460  : 		m_dwACSuspendTimeout =
; 461  : 			RegReadStateTimeout (hk, _T ("ACSuspendTimeout"), DEF_ACSUSPENDTIMEOUT);
; 462  : 		m_dwACResumingSuspendTimeout =
; 463  : 			RegReadStateTimeout (hk, _T ("ACResumingSuspendTimeout"), DEF_ACRESUMINGSUSPENDTIMEOUT);
; 464  : 		m_dwACBacklightTimeout =
; 465  : 			RegReadStateTimeout (hk, _T ("ACBacklightTimeout"), DEF_ACBACKLIGHTTIMEOUT);
; 466  : 		m_dwACUserIdleTimeout = RegReadStateTimeout (hk, _T ("ACUserIdle"), DEF_ACUSERIDLETIMEOUT);
; 467  : 
; 468  : 		m_dwBattSuspendTimeout =
; 469  : 			RegReadStateTimeout (hk, _T ("BattSuspendTimeout"), DEF_BATTSUSPENDTIMEOUT);
; 470  : 		m_dwBattResumingSuspendTimeout =
; 471  : 			RegReadStateTimeout (hk, _T ("BattResumingSuspendTimeout"),
; 472  : 								 DEF_BATTRESUMINGSUSPENDTIMEOUT);
; 473  : 		m_dwBattBacklightTimeout =
; 474  : 			RegReadStateTimeout (hk, _T ("BattBacklightTimeout"), DEF_BATTBACKLIGHTTIMEOUT);
; 475  : 		m_dwBattUserIdleTimeout =
; 476  : 			RegReadStateTimeout (hk, _T ("BattUserIdle"), DEF_BATTUSERIDLETIMEOUT);
; 477  : 
; 478  : 		// Release resources:
; 479  : 		RegCloseKey (hk);
; 480  : 	}
; 481  : 
; 482  : 	// Update Legacy if we find them.
; 483  : 	DWORD dwValue;
; 484  : 
; 485  : 	if (m_pLegacySPScreenOff)
; 486  : 	{
; 487  : 		m_pLegacySPScreenOff->AckNotification ();
; 488  : 		if (m_pLegacySPScreenOff->GetRegValue (_T ("Display"), &dwValue))
; 489  : 		{	// Found SmartPhone Legacy Value. Use it.
; 490  : 			m_dwACUserIdleTimeout = m_dwBattUserIdleTimeout = dwValue;
; 491  : 		}
; 492  : 	}
; 493  : 
; 494  : 	if (m_pLegacyBacklightOff)
; 495  : 	{
; 496  : 		m_pLegacyBacklightOff->AckNotification ();
; 497  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("BatteryTimeout"), &dwValue))
; 498  : 		{	// Legacy Backlight Off Registry value.
; 499  : 			m_dwBattBacklightTimeout = dwValue;
; 500  : 		}
; 501  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldBatteryTimeout"), &dwValue))
; 502  : 		{
; 503  : 			m_dwBattBacklightTimeout = INFINITE;
; 504  : 			m_dwBattUserIdleTimeout = INFINITE;
; 505  : 		}
; 506  : 
; 507  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("ACTimeout"), &dwValue))
; 508  : 		{	// Legacy Backlight Off Registry value.
; 509  : 			m_dwACBacklightTimeout = dwValue;
; 510  : 		}
; 511  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldACTimeout"), &dwValue))
; 512  : 		{
; 513  : 			m_dwACBacklightTimeout = INFINITE;
; 514  : 			m_dwACUserIdleTimeout = INFINITE;
; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 519  : 			  (_T
; 520  : 			   ("%s: ACSuspendTimeout %d, ACResumingSuspendTimeout %d,  ACBacklightTimeout %d, ACUserIdleTimeout %d \r\n"),
; 521  : 			   pszFname, m_dwACSuspendTimeout, m_dwACResumingSuspendTimeout, m_dwACBacklightTimeout,
; 522  : 			   m_dwACUserIdleTimeout));
; 523  : 	PMLOGMSG (ZONE_INIT
; 524  : 			  || ZONE_PLATFORM,
; 525  : 			  (_T
; 526  : 			   ("%s: BattSuspendTimeout %d, BattResumingSuspendTimeout %d , BattBacklightTimeout %d, BattUserIdleTimeout%d \r\n"),
; 527  : 			   pszFname, m_dwBattSuspendTimeout, m_dwBattResumingSuspendTimeout,
; 528  : 			   m_dwBattBacklightTimeout, m_dwBattUserIdleTimeout));
; 529  : }
; 530  : 
; 531  : DWORD
; 532  : PowerStateManager::GetSuspendTimeOut ()
; 533  : {
; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);

  00722	4b08		 ldr         r3,|$LN13@ResetSyste| ; =|gSystemPowerStatus|
  00724	7d1b		 ldrb        r3,[r3,#0x14]
  00726	b913		 cbnz        r3,|$LN8@ResetSyste|
  00728	f8d0 326c	 ldr         r3,[r0,#0x26C]
  0072c	e003		 b           |$LN5@ResetSyste|
  0072e		 |$LN8@ResetSyste|
  0072e	f8d0 325c	 ldr         r3,[r0,#0x25C]

; 316  : 	m_dwCurSuspendTimeout = (fIdle ? GetSuspendTimeOut () : INFINITE);

  00732	e000		 b           |$LN5@ResetSyste|
  00734		 |$LN4@ResetSyste|
  00734	4613		 mov         r3,r2
  00736		 |$LN5@ResetSyste|
  00736	f8c0 3280	 str         r3,[r0,#0x280]

; 317  : 	if (m_dwCurSuspendTimeout == 0)

  0073a	b90b		 cbnz        r3,|$LN1@ResetSyste|

; 318  : 		m_dwCurSuspendTimeout = INFINITE;

  0073c	f8c0 2280	 str         r2,[r0,#0x280]
  00740		 |$LN1@ResetSyste|
  00740		 |$M11|

; 319  : }

  00740	4770		 bx          lr
  00742		 |$LN14@ResetSyste|
  00742		 |$M15|
  00742	defe		 __debugbreak
  00744		 |$LN12@ResetSyste|
  00744		 |$LN13@ResetSyste|
  00744	0000 0000	 DCD         |gSystemPowerStatus|

			 ENDP  ; |?ResetSystemIdleTimeTimeout@PowerStateManager@@UAAXH@Z|, PowerStateManager::ResetSystemIdleTimeTimeout

	EXPORT	|?ResetUserIdleTimeout@PowerStateManager@@UAAXH@Z| ; PowerStateManager::ResetUserIdleTimeout

  00058			 AREA	 |.pdata|, PDATA
|$pdata1$?ResetUserIdleTimeout@PowerStateManager@@UAAXH@Z| DCD imagerel |$LN18@ResetUserI|
	DCD	0xfd3060ad
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00748			 AREA	 |.text|, CODE, THUMB

  00748		 |?ResetUserIdleTimeout@PowerStateManager@@UAAXH@Z| PROC ; PowerStateManager::ResetUserIdleTimeout

; 296  : {

  00748		 |$LN18@ResetUserI|
  00748	e92d 4818	 push        {r3,r4,r11,lr}
  0074c	f20d 0b08	 addw        r11,sp,#8
  00750		 |$M16|

; 297  : 	if (fIdle)

  00750	f06f 0400	 mvn         r4,#0
  00754	b199		 cbz         r1,|$LN4@ResetUserI|

; 312  : 
; 313  : void
; 314  : PowerStateManager::ResetSystemIdleTimeTimeout (BOOL fIdle)
; 315  : {
; 316  : 	m_dwCurSuspendTimeout = (fIdle ? GetSuspendTimeOut () : INFINITE);
; 317  : 	if (m_dwCurSuspendTimeout == 0)
; 318  : 		m_dwCurSuspendTimeout = INFINITE;
; 319  : }
; 320  : 
; 321  : void
; 322  : PowerStateManager::SubtractTimeout (DWORD dwTicks)
; 323  : {
; 324  : 	if (m_dwCurSuspendTimeout != INFINITE)
; 325  : 		m_dwCurSuspendTimeout =
; 326  : 			(m_dwCurSuspendTimeout > dwTicks ? m_dwCurSuspendTimeout - dwTicks : 0);
; 327  : 	if (m_dwCurResumingSuspendTimeout != INFINITE)
; 328  : 		m_dwCurResumingSuspendTimeout =
; 329  : 			(m_dwCurResumingSuspendTimeout > dwTicks ? m_dwCurResumingSuspendTimeout - dwTicks : 0);
; 330  : 	if (m_dwCurBacklightTimeout != INFINITE)
; 331  : 		m_dwCurBacklightTimeout =
; 332  : 			(m_dwCurBacklightTimeout > dwTicks ? m_dwCurBacklightTimeout - dwTicks : 0);
; 333  : 	if (m_dwCurUserIdleTimeout != INFINITE)
; 334  : 		m_dwCurUserIdleTimeout =
; 335  : 			(m_dwCurUserIdleTimeout > dwTicks ? m_dwCurUserIdleTimeout - dwTicks : 0);
; 336  : }
; 337  : 
; 338  : DWORD
; 339  : PowerStateManager::GetSmallestTimeout (PTIMEOUT_ITEM pTimeoutItem)
; 340  : {
; 341  : 	DWORD dwReturn = INFINITE;
; 342  : 	TIMEOUT_ITEM activeEvent = NoTimeoutItem;
; 343  : 
; 344  : 	if (dwReturn > m_dwCurSuspendTimeout)
; 345  : 	{
; 346  : 		dwReturn = m_dwCurSuspendTimeout;
; 347  : 		activeEvent = SuspendTimeout;
; 348  : 	}
; 349  : 	if (dwReturn > m_dwCurResumingSuspendTimeout)
; 350  : 	{
; 351  : 		dwReturn = m_dwCurResumingSuspendTimeout;
; 352  : 		activeEvent = ResumingSuspendTimeout;
; 353  : 	}
; 354  : 	if (dwReturn > m_dwCurBacklightTimeout)
; 355  : 	{
; 356  : 		dwReturn = m_dwCurBacklightTimeout;
; 357  : 		activeEvent = BacklightTimeout;
; 358  : 	}
; 359  : 	if (dwReturn > m_dwCurUserIdleTimeout)
; 360  : 	{
; 361  : 		dwReturn = m_dwCurUserIdleTimeout;
; 362  : 		activeEvent = UserActivityTimeout;
; 363  : 	}
; 364  : 	if (pTimeoutItem)
; 365  : 	{
; 366  : 		*pTimeoutItem = activeEvent;
; 367  : 	}
; 368  : 	return dwReturn;
; 369  : }
; 370  : 
; 371  : LPCTSTR
; 372  : PowerStateManager::ActivityStateToSystemState (PLATFORM_ACTIVITY_STATE platActiveState)
; 373  : {
; 374  : 	PowerState *curState = m_pPowerStateList;
; 375  : 
; 376  : 	while (curState)
; 377  : 	{
; 378  : 		if (curState->GetState () == platActiveState)
; 379  : 			return curState->GetStateString ();
; 380  : 		else
; 381  : 			curState = curState->GetNextPowerState ();
; 382  : 	}
; 383  : 	return NULL;
; 384  : }
; 385  : 
; 386  : PLATFORM_ACTIVITY_STATE
; 387  : PowerStateManager::SystemStateToActivityState (LPCTSTR lpState)
; 388  : {
; 389  : 	if (lpState == NULL)
; 390  : 		return UnknownState;
; 391  : 	PowerState *curState = m_pPowerStateList;
; 392  : 
; 393  : 	while (curState)
; 394  : 	{
; 395  : 		if (_tcsicmp (curState->GetStateString (), lpState) == 0)
; 396  : 			return curState->GetState ();
; 397  : 		else
; 398  : 			curState = curState->GetNextPowerState ();
; 399  : 	}
; 400  : 	return UnknownState;
; 401  : }
; 402  : 
; 403  : HANDLE
; 404  : PowerStateManager::GetEventHandle (DWORD dwIndex)
; 405  : {
; 406  : 	switch (dwIndex)
; 407  : 	{
; 408  : 	  case PM_SHUTDOWN_EVENT:
; 409  : 		  return ghevPmShutdown;
; 410  : 	  case PM_RELOAD_ACTIVITY_TIMEOUTS_EVENT:
; 411  : 		  return ghevReloadActivityTimeouts;
; 412  : 	  case PM_MSGQUEUE_EVENT:
; 413  : 		  return m_hqNotify;
; 414  : 	  case PM_RESTART_TIMER_EVENT:
; 415  : 		  return ghevRestartTimers;
; 416  : 	  case PM_SYSTEM_API_EVENT:
; 417  : 		  return GetAPISignalHandle ();
; 418  : 	  case PM_BOOTPHASE2_EVENT:
; 419  : 		  return m_hevBootPhase2;
; 420  : 	}
; 421  : 	return NULL;
; 422  : }
; 423  : 
; 424  : void
; 425  : PowerStateManager::DisablePhase2Event ()
; 426  : {
; 427  : 	if (m_hevBootPhase2)
; 428  : 	{
; 429  : 		CloseHandle (m_hevBootPhase2);
; 430  : 		m_hevBootPhase2 = NULL;
; 431  : 	}
; 432  : }
; 433  : 
; 434  : void
; 435  : PowerStateManager::PlatformLoadTimeouts ()
; 436  : {
; 437  : 	DWORD dwStatus;
; 438  : 	TCHAR szPath[MAX_PATH];
; 439  : 	HKEY hk;
; 440  : 
; 441  : 	SETFNAME (_T ("PowerStateManager::PlatformLoadTimeouts"));
; 442  : 
; 443  : 	// Assume default values:
; 444  : 	m_dwACSuspendTimeout = DEF_ACSUSPENDTIMEOUT * 1000;
; 445  : 	m_dwACResumingSuspendTimeout = DEF_ACRESUMINGSUSPENDTIMEOUT * 1000;
; 446  : 	m_dwACBacklightTimeout = DEF_ACBACKLIGHTTIMEOUT * 1000;
; 447  : 	m_dwACUserIdleTimeout = DEF_ACUSERIDLETIMEOUT * 1000;
; 448  : 
; 449  : 	m_dwBattSuspendTimeout = DEF_BATTSUSPENDTIMEOUT * 1000;
; 450  : 	m_dwBattResumingSuspendTimeout = DEF_BATTRESUMINGSUSPENDTIMEOUT * 1000;
; 451  : 	m_dwBattBacklightTimeout = DEF_BATTBACKLIGHTTIMEOUT * 1000;
; 452  : 	m_dwBattUserIdleTimeout = DEF_BATTUSERIDLETIMEOUT * 1000;
; 453  : 
; 454  : 	// Get timeout thresholds for transitions between states:
; 455  : 	StringCchPrintf (szPath, MAX_PATH, _T ("%s\\%s"), PWRMGR_REG_KEY, _T ("Timeouts"));
; 456  : 	dwStatus = RegOpenKeyEx (HKEY_LOCAL_MACHINE, szPath, 0, 0, &hk);
; 457  : 	if (dwStatus == ERROR_SUCCESS)
; 458  : 	{
; 459  : 		// Read system power state timeouts:
; 460  : 		m_dwACSuspendTimeout =
; 461  : 			RegReadStateTimeout (hk, _T ("ACSuspendTimeout"), DEF_ACSUSPENDTIMEOUT);
; 462  : 		m_dwACResumingSuspendTimeout =
; 463  : 			RegReadStateTimeout (hk, _T ("ACResumingSuspendTimeout"), DEF_ACRESUMINGSUSPENDTIMEOUT);
; 464  : 		m_dwACBacklightTimeout =
; 465  : 			RegReadStateTimeout (hk, _T ("ACBacklightTimeout"), DEF_ACBACKLIGHTTIMEOUT);
; 466  : 		m_dwACUserIdleTimeout = RegReadStateTimeout (hk, _T ("ACUserIdle"), DEF_ACUSERIDLETIMEOUT);
; 467  : 
; 468  : 		m_dwBattSuspendTimeout =
; 469  : 			RegReadStateTimeout (hk, _T ("BattSuspendTimeout"), DEF_BATTSUSPENDTIMEOUT);
; 470  : 		m_dwBattResumingSuspendTimeout =
; 471  : 			RegReadStateTimeout (hk, _T ("BattResumingSuspendTimeout"),
; 472  : 								 DEF_BATTRESUMINGSUSPENDTIMEOUT);
; 473  : 		m_dwBattBacklightTimeout =
; 474  : 			RegReadStateTimeout (hk, _T ("BattBacklightTimeout"), DEF_BATTBACKLIGHTTIMEOUT);
; 475  : 		m_dwBattUserIdleTimeout =
; 476  : 			RegReadStateTimeout (hk, _T ("BattUserIdle"), DEF_BATTUSERIDLETIMEOUT);
; 477  : 
; 478  : 		// Release resources:
; 479  : 		RegCloseKey (hk);
; 480  : 	}
; 481  : 
; 482  : 	// Update Legacy if we find them.
; 483  : 	DWORD dwValue;
; 484  : 
; 485  : 	if (m_pLegacySPScreenOff)
; 486  : 	{
; 487  : 		m_pLegacySPScreenOff->AckNotification ();
; 488  : 		if (m_pLegacySPScreenOff->GetRegValue (_T ("Display"), &dwValue))
; 489  : 		{	// Found SmartPhone Legacy Value. Use it.
; 490  : 			m_dwACUserIdleTimeout = m_dwBattUserIdleTimeout = dwValue;
; 491  : 		}
; 492  : 	}
; 493  : 
; 494  : 	if (m_pLegacyBacklightOff)
; 495  : 	{
; 496  : 		m_pLegacyBacklightOff->AckNotification ();
; 497  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("BatteryTimeout"), &dwValue))
; 498  : 		{	// Legacy Backlight Off Registry value.
; 499  : 			m_dwBattBacklightTimeout = dwValue;
; 500  : 		}
; 501  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldBatteryTimeout"), &dwValue))
; 502  : 		{
; 503  : 			m_dwBattBacklightTimeout = INFINITE;
; 504  : 			m_dwBattUserIdleTimeout = INFINITE;
; 505  : 		}
; 506  : 
; 507  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("ACTimeout"), &dwValue))
; 508  : 		{	// Legacy Backlight Off Registry value.
; 509  : 			m_dwACBacklightTimeout = dwValue;
; 510  : 		}
; 511  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldACTimeout"), &dwValue))
; 512  : 		{
; 513  : 			m_dwACBacklightTimeout = INFINITE;
; 514  : 			m_dwACUserIdleTimeout = INFINITE;
; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 519  : 			  (_T
; 520  : 			   ("%s: ACSuspendTimeout %d, ACResumingSuspendTimeout %d,  ACBacklightTimeout %d, ACUserIdleTimeout %d \r\n"),
; 521  : 			   pszFname, m_dwACSuspendTimeout, m_dwACResumingSuspendTimeout, m_dwACBacklightTimeout,
; 522  : 			   m_dwACUserIdleTimeout));
; 523  : 	PMLOGMSG (ZONE_INIT
; 524  : 			  || ZONE_PLATFORM,
; 525  : 			  (_T
; 526  : 			   ("%s: BattSuspendTimeout %d, BattResumingSuspendTimeout %d , BattBacklightTimeout %d, BattUserIdleTimeout%d \r\n"),
; 527  : 			   pszFname, m_dwBattSuspendTimeout, m_dwBattResumingSuspendTimeout,
; 528  : 			   m_dwBattBacklightTimeout, m_dwBattUserIdleTimeout));
; 529  : }
; 530  : 
; 531  : DWORD
; 532  : PowerStateManager::GetSuspendTimeOut ()
; 533  : {
; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);
; 536  : }
; 537  : 
; 538  : DWORD
; 539  : PowerStateManager::GetResumingSuspendTimeout ()
; 540  : {
; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);
; 543  : }
; 544  : 
; 545  : DWORD
; 546  : PowerStateManager::GetBackLightTimeout ()
; 547  : {
; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  00756	4a12		 ldr         r2,|$LN21@ResetUserI| ; =|gSystemPowerStatus|
  00758	7d13		 ldrb        r3,[r2,#0x14]
  0075a	b913		 cbnz        r3,|$LN9@ResetUserI|
  0075c	f8d0 3274	 ldr         r3,[r0,#0x274]
  00760	e001		 b           |$LN10@ResetUserI|
  00762		 |$LN9@ResetUserI|
  00762	f8d0 3264	 ldr         r3,[r0,#0x264]
  00766		 |$LN10@ResetUserI|

; 298  : 	{
; 299  : 		m_dwCurBacklightTimeout = GetBackLightTimeout ();

  00766	f8c0 3288	 str         r3,[r0,#0x288]

; 550  : }
; 551  : 
; 552  : DWORD
; 553  : PowerStateManager::GetUserIdleTimeOut ()
; 554  : {
; 555  : 	return (gSystemPowerStatus.bACLineStatus ==
; 556  : 			AC_LINE_OFFLINE ? m_dwBattUserIdleTimeout : m_dwACUserIdleTimeout);

  0076a	7d13		 ldrb        r3,[r2,#0x14]
  0076c	b913		 cbnz        r3,|$LN13@ResetUserI|
  0076e	f8d0 3278	 ldr         r3,[r0,#0x278]
  00772	e001		 b           |$LN14@ResetUserI|
  00774		 |$LN13@ResetUserI|
  00774	f8d0 3268	 ldr         r3,[r0,#0x268]
  00778		 |$LN14@ResetUserI|

; 300  : 		m_dwCurUserIdleTimeout = GetUserIdleTimeOut ();

  00778	f8c0 328c	 str         r3,[r0,#0x28C]

; 301  : 	}
; 302  : 	else

  0077c	e003		 b           |$LN3@ResetUserI|
  0077e		 |$LN4@ResetUserI|

; 303  : 	{
; 304  : 		m_dwCurBacklightTimeout = INFINITE;

  0077e	f8c0 4288	 str         r4,[r0,#0x288]

; 305  : 		m_dwCurUserIdleTimeout = INFINITE;

  00782	f8c0 428c	 str         r4,[r0,#0x28C]
  00786		 |$LN3@ResetUserI|

; 306  : 	}
; 307  : 	if (m_dwCurBacklightTimeout == 0)

  00786	f8d0 3288	 ldr         r3,[r0,#0x288]
  0078a	b90b		 cbnz        r3,|$LN2@ResetUserI|

; 308  : 		m_dwCurBacklightTimeout = INFINITE;

  0078c	f8c0 4288	 str         r4,[r0,#0x288]
  00790		 |$LN2@ResetUserI|

; 309  : 	if (m_dwCurUserIdleTimeout == 0)

  00790	f8d0 328c	 ldr         r3,[r0,#0x28C]
  00794	b90b		 cbnz        r3,|$LN1@ResetUserI|

; 310  : 		m_dwCurUserIdleTimeout = INFINITE;

  00796	f8c0 428c	 str         r4,[r0,#0x28C]
  0079a		 |$LN1@ResetUserI|
  0079a		 |$M19|

; 311  : }

  0079a	e8bd 8818	 pop         {r3,r4,r11,pc}
  0079e		 |$LN22@ResetUserI|
  0079e		 |$M23|
  0079e	defe		 __debugbreak
  007a0		 |$LN20@ResetUserI|
  007a0		 |$LN21@ResetUserI|
  007a0	0000 0000	 DCD         |gSystemPowerStatus|
  007a4		 |$M17|

			 ENDP  ; |?ResetUserIdleTimeout@PowerStateManager@@UAAXH@Z|, PowerStateManager::ResetUserIdleTimeout

	EXPORT	|?ReAdjustTimeOuts@PowerStateManager@@UAAXXZ| ; PowerStateManager::ReAdjustTimeOuts

  00060			 AREA	 |.pdata|, PDATA
|$pdata1$?ReAdjustTimeOuts@PowerStateManager@@UAAXXZ| DCD imagerel |$LN38@ReAdjustTi|
	DCD	0x31612d
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  007a4			 AREA	 |.text|, CODE, THUMB

  007a4		 |?ReAdjustTimeOuts@PowerStateManager@@UAAXXZ| PROC ; PowerStateManager::ReAdjustTimeOuts

; 276  : {

  007a4		 |$LN38@ReAdjustTi|
  007a4	e92d 4830	 push        {r4,r5,r11,lr}
  007a8	f20d 0b08	 addw        r11,sp,#8
  007ac		 |$M36|

; 536  : }
; 537  : 
; 538  : DWORD
; 539  : PowerStateManager::GetResumingSuspendTimeout ()
; 540  : {
; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);
; 543  : }
; 544  : 
; 545  : DWORD
; 546  : PowerStateManager::GetBackLightTimeout ()
; 547  : {
; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  007ac	4c23		 ldr         r4,|$LN41@ReAdjustTi| ; =|gSystemPowerStatus|
  007ae	7d21		 ldrb        r1,[r4,#0x14]
  007b0	b911		 cbnz        r1,|$LN11@ReAdjustTi|
  007b2	f8d0 2274	 ldr         r2,[r0,#0x274]
  007b6	e001		 b           |$LN12@ReAdjustTi|
  007b8		 |$LN11@ReAdjustTi|
  007b8	f8d0 2264	 ldr         r2,[r0,#0x264]
  007bc		 |$LN12@ReAdjustTi|

; 277  : 	if (m_dwCurBacklightTimeout > GetBackLightTimeout ())

  007bc	f8d0 3288	 ldr         r3,[r0,#0x288]
  007c0	f06f 0500	 mvn         r5,#0
  007c4	4293		 cmp         r3,r2
  007c6	d90a		 bls         |$LN33@ReAdjustTi|

; 536  : }
; 537  : 
; 538  : DWORD
; 539  : PowerStateManager::GetResumingSuspendTimeout ()
; 540  : {
; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);
; 543  : }
; 544  : 
; 545  : DWORD
; 546  : PowerStateManager::GetBackLightTimeout ()
; 547  : {
; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  007c8	b911		 cbnz        r1,|$LN15@ReAdjustTi|
  007ca	f8d0 3274	 ldr         r3,[r0,#0x274]
  007ce	e001		 b           |$LN16@ReAdjustTi|
  007d0		 |$LN15@ReAdjustTi|
  007d0	f8d0 3264	 ldr         r3,[r0,#0x264]
  007d4		 |$LN16@ReAdjustTi|

; 278  : 	{
; 279  : 		if ((m_dwCurBacklightTimeout = GetBackLightTimeout ()) == 0)

  007d4	f8c0 3288	 str         r3,[r0,#0x288]
  007d8	b90b		 cbnz        r3,|$LN33@ReAdjustTi|

; 280  : 			m_dwCurBacklightTimeout = INFINITE;

  007da	f8c0 5288	 str         r5,[r0,#0x288]
  007de		 |$LN33@ReAdjustTi|

; 536  : }
; 537  : 
; 538  : DWORD
; 539  : PowerStateManager::GetResumingSuspendTimeout ()
; 540  : {
; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);
; 543  : }
; 544  : 
; 545  : DWORD
; 546  : PowerStateManager::GetBackLightTimeout ()
; 547  : {
; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  007de	7d21		 ldrb        r1,[r4,#0x14]

; 293  : 
; 294  : void
; 295  : PowerStateManager::ResetUserIdleTimeout (BOOL fIdle)
; 296  : {
; 297  : 	if (fIdle)
; 298  : 	{
; 299  : 		m_dwCurBacklightTimeout = GetBackLightTimeout ();
; 300  : 		m_dwCurUserIdleTimeout = GetUserIdleTimeOut ();
; 301  : 	}
; 302  : 	else
; 303  : 	{
; 304  : 		m_dwCurBacklightTimeout = INFINITE;
; 305  : 		m_dwCurUserIdleTimeout = INFINITE;
; 306  : 	}
; 307  : 	if (m_dwCurBacklightTimeout == 0)
; 308  : 		m_dwCurBacklightTimeout = INFINITE;
; 309  : 	if (m_dwCurUserIdleTimeout == 0)
; 310  : 		m_dwCurUserIdleTimeout = INFINITE;
; 311  : }
; 312  : 
; 313  : void
; 314  : PowerStateManager::ResetSystemIdleTimeTimeout (BOOL fIdle)
; 315  : {
; 316  : 	m_dwCurSuspendTimeout = (fIdle ? GetSuspendTimeOut () : INFINITE);
; 317  : 	if (m_dwCurSuspendTimeout == 0)
; 318  : 		m_dwCurSuspendTimeout = INFINITE;
; 319  : }
; 320  : 
; 321  : void
; 322  : PowerStateManager::SubtractTimeout (DWORD dwTicks)
; 323  : {
; 324  : 	if (m_dwCurSuspendTimeout != INFINITE)
; 325  : 		m_dwCurSuspendTimeout =
; 326  : 			(m_dwCurSuspendTimeout > dwTicks ? m_dwCurSuspendTimeout - dwTicks : 0);
; 327  : 	if (m_dwCurResumingSuspendTimeout != INFINITE)
; 328  : 		m_dwCurResumingSuspendTimeout =
; 329  : 			(m_dwCurResumingSuspendTimeout > dwTicks ? m_dwCurResumingSuspendTimeout - dwTicks : 0);
; 330  : 	if (m_dwCurBacklightTimeout != INFINITE)
; 331  : 		m_dwCurBacklightTimeout =
; 332  : 			(m_dwCurBacklightTimeout > dwTicks ? m_dwCurBacklightTimeout - dwTicks : 0);
; 333  : 	if (m_dwCurUserIdleTimeout != INFINITE)
; 334  : 		m_dwCurUserIdleTimeout =
; 335  : 			(m_dwCurUserIdleTimeout > dwTicks ? m_dwCurUserIdleTimeout - dwTicks : 0);
; 336  : }
; 337  : 
; 338  : DWORD
; 339  : PowerStateManager::GetSmallestTimeout (PTIMEOUT_ITEM pTimeoutItem)
; 340  : {
; 341  : 	DWORD dwReturn = INFINITE;
; 342  : 	TIMEOUT_ITEM activeEvent = NoTimeoutItem;
; 343  : 
; 344  : 	if (dwReturn > m_dwCurSuspendTimeout)
; 345  : 	{
; 346  : 		dwReturn = m_dwCurSuspendTimeout;
; 347  : 		activeEvent = SuspendTimeout;
; 348  : 	}
; 349  : 	if (dwReturn > m_dwCurResumingSuspendTimeout)
; 350  : 	{
; 351  : 		dwReturn = m_dwCurResumingSuspendTimeout;
; 352  : 		activeEvent = ResumingSuspendTimeout;
; 353  : 	}
; 354  : 	if (dwReturn > m_dwCurBacklightTimeout)
; 355  : 	{
; 356  : 		dwReturn = m_dwCurBacklightTimeout;
; 357  : 		activeEvent = BacklightTimeout;
; 358  : 	}
; 359  : 	if (dwReturn > m_dwCurUserIdleTimeout)
; 360  : 	{
; 361  : 		dwReturn = m_dwCurUserIdleTimeout;
; 362  : 		activeEvent = UserActivityTimeout;
; 363  : 	}
; 364  : 	if (pTimeoutItem)
; 365  : 	{
; 366  : 		*pTimeoutItem = activeEvent;
; 367  : 	}
; 368  : 	return dwReturn;
; 369  : }
; 370  : 
; 371  : LPCTSTR
; 372  : PowerStateManager::ActivityStateToSystemState (PLATFORM_ACTIVITY_STATE platActiveState)
; 373  : {
; 374  : 	PowerState *curState = m_pPowerStateList;
; 375  : 
; 376  : 	while (curState)
; 377  : 	{
; 378  : 		if (curState->GetState () == platActiveState)
; 379  : 			return curState->GetStateString ();
; 380  : 		else
; 381  : 			curState = curState->GetNextPowerState ();
; 382  : 	}
; 383  : 	return NULL;
; 384  : }
; 385  : 
; 386  : PLATFORM_ACTIVITY_STATE
; 387  : PowerStateManager::SystemStateToActivityState (LPCTSTR lpState)
; 388  : {
; 389  : 	if (lpState == NULL)
; 390  : 		return UnknownState;
; 391  : 	PowerState *curState = m_pPowerStateList;
; 392  : 
; 393  : 	while (curState)
; 394  : 	{
; 395  : 		if (_tcsicmp (curState->GetStateString (), lpState) == 0)
; 396  : 			return curState->GetState ();
; 397  : 		else
; 398  : 			curState = curState->GetNextPowerState ();
; 399  : 	}
; 400  : 	return UnknownState;
; 401  : }
; 402  : 
; 403  : HANDLE
; 404  : PowerStateManager::GetEventHandle (DWORD dwIndex)
; 405  : {
; 406  : 	switch (dwIndex)
; 407  : 	{
; 408  : 	  case PM_SHUTDOWN_EVENT:
; 409  : 		  return ghevPmShutdown;
; 410  : 	  case PM_RELOAD_ACTIVITY_TIMEOUTS_EVENT:
; 411  : 		  return ghevReloadActivityTimeouts;
; 412  : 	  case PM_MSGQUEUE_EVENT:
; 413  : 		  return m_hqNotify;
; 414  : 	  case PM_RESTART_TIMER_EVENT:
; 415  : 		  return ghevRestartTimers;
; 416  : 	  case PM_SYSTEM_API_EVENT:
; 417  : 		  return GetAPISignalHandle ();
; 418  : 	  case PM_BOOTPHASE2_EVENT:
; 419  : 		  return m_hevBootPhase2;
; 420  : 	}
; 421  : 	return NULL;
; 422  : }
; 423  : 
; 424  : void
; 425  : PowerStateManager::DisablePhase2Event ()
; 426  : {
; 427  : 	if (m_hevBootPhase2)
; 428  : 	{
; 429  : 		CloseHandle (m_hevBootPhase2);
; 430  : 		m_hevBootPhase2 = NULL;
; 431  : 	}
; 432  : }
; 433  : 
; 434  : void
; 435  : PowerStateManager::PlatformLoadTimeouts ()
; 436  : {
; 437  : 	DWORD dwStatus;
; 438  : 	TCHAR szPath[MAX_PATH];
; 439  : 	HKEY hk;
; 440  : 
; 441  : 	SETFNAME (_T ("PowerStateManager::PlatformLoadTimeouts"));
; 442  : 
; 443  : 	// Assume default values:
; 444  : 	m_dwACSuspendTimeout = DEF_ACSUSPENDTIMEOUT * 1000;
; 445  : 	m_dwACResumingSuspendTimeout = DEF_ACRESUMINGSUSPENDTIMEOUT * 1000;
; 446  : 	m_dwACBacklightTimeout = DEF_ACBACKLIGHTTIMEOUT * 1000;
; 447  : 	m_dwACUserIdleTimeout = DEF_ACUSERIDLETIMEOUT * 1000;
; 448  : 
; 449  : 	m_dwBattSuspendTimeout = DEF_BATTSUSPENDTIMEOUT * 1000;
; 450  : 	m_dwBattResumingSuspendTimeout = DEF_BATTRESUMINGSUSPENDTIMEOUT * 1000;
; 451  : 	m_dwBattBacklightTimeout = DEF_BATTBACKLIGHTTIMEOUT * 1000;
; 452  : 	m_dwBattUserIdleTimeout = DEF_BATTUSERIDLETIMEOUT * 1000;
; 453  : 
; 454  : 	// Get timeout thresholds for transitions between states:
; 455  : 	StringCchPrintf (szPath, MAX_PATH, _T ("%s\\%s"), PWRMGR_REG_KEY, _T ("Timeouts"));
; 456  : 	dwStatus = RegOpenKeyEx (HKEY_LOCAL_MACHINE, szPath, 0, 0, &hk);
; 457  : 	if (dwStatus == ERROR_SUCCESS)
; 458  : 	{
; 459  : 		// Read system power state timeouts:
; 460  : 		m_dwACSuspendTimeout =
; 461  : 			RegReadStateTimeout (hk, _T ("ACSuspendTimeout"), DEF_ACSUSPENDTIMEOUT);
; 462  : 		m_dwACResumingSuspendTimeout =
; 463  : 			RegReadStateTimeout (hk, _T ("ACResumingSuspendTimeout"), DEF_ACRESUMINGSUSPENDTIMEOUT);
; 464  : 		m_dwACBacklightTimeout =
; 465  : 			RegReadStateTimeout (hk, _T ("ACBacklightTimeout"), DEF_ACBACKLIGHTTIMEOUT);
; 466  : 		m_dwACUserIdleTimeout = RegReadStateTimeout (hk, _T ("ACUserIdle"), DEF_ACUSERIDLETIMEOUT);
; 467  : 
; 468  : 		m_dwBattSuspendTimeout =
; 469  : 			RegReadStateTimeout (hk, _T ("BattSuspendTimeout"), DEF_BATTSUSPENDTIMEOUT);
; 470  : 		m_dwBattResumingSuspendTimeout =
; 471  : 			RegReadStateTimeout (hk, _T ("BattResumingSuspendTimeout"),
; 472  : 								 DEF_BATTRESUMINGSUSPENDTIMEOUT);
; 473  : 		m_dwBattBacklightTimeout =
; 474  : 			RegReadStateTimeout (hk, _T ("BattBacklightTimeout"), DEF_BATTBACKLIGHTTIMEOUT);
; 475  : 		m_dwBattUserIdleTimeout =
; 476  : 			RegReadStateTimeout (hk, _T ("BattUserIdle"), DEF_BATTUSERIDLETIMEOUT);
; 477  : 
; 478  : 		// Release resources:
; 479  : 		RegCloseKey (hk);
; 480  : 	}
; 481  : 
; 482  : 	// Update Legacy if we find them.
; 483  : 	DWORD dwValue;
; 484  : 
; 485  : 	if (m_pLegacySPScreenOff)
; 486  : 	{
; 487  : 		m_pLegacySPScreenOff->AckNotification ();
; 488  : 		if (m_pLegacySPScreenOff->GetRegValue (_T ("Display"), &dwValue))
; 489  : 		{	// Found SmartPhone Legacy Value. Use it.
; 490  : 			m_dwACUserIdleTimeout = m_dwBattUserIdleTimeout = dwValue;
; 491  : 		}
; 492  : 	}
; 493  : 
; 494  : 	if (m_pLegacyBacklightOff)
; 495  : 	{
; 496  : 		m_pLegacyBacklightOff->AckNotification ();
; 497  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("BatteryTimeout"), &dwValue))
; 498  : 		{	// Legacy Backlight Off Registry value.
; 499  : 			m_dwBattBacklightTimeout = dwValue;
; 500  : 		}
; 501  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldBatteryTimeout"), &dwValue))
; 502  : 		{
; 503  : 			m_dwBattBacklightTimeout = INFINITE;
; 504  : 			m_dwBattUserIdleTimeout = INFINITE;
; 505  : 		}
; 506  : 
; 507  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("ACTimeout"), &dwValue))
; 508  : 		{	// Legacy Backlight Off Registry value.
; 509  : 			m_dwACBacklightTimeout = dwValue;
; 510  : 		}
; 511  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldACTimeout"), &dwValue))
; 512  : 		{
; 513  : 			m_dwACBacklightTimeout = INFINITE;
; 514  : 			m_dwACUserIdleTimeout = INFINITE;
; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 519  : 			  (_T
; 520  : 			   ("%s: ACSuspendTimeout %d, ACResumingSuspendTimeout %d,  ACBacklightTimeout %d, ACUserIdleTimeout %d \r\n"),
; 521  : 			   pszFname, m_dwACSuspendTimeout, m_dwACResumingSuspendTimeout, m_dwACBacklightTimeout,
; 522  : 			   m_dwACUserIdleTimeout));
; 523  : 	PMLOGMSG (ZONE_INIT
; 524  : 			  || ZONE_PLATFORM,
; 525  : 			  (_T
; 526  : 			   ("%s: BattSuspendTimeout %d, BattResumingSuspendTimeout %d , BattBacklightTimeout %d, BattUserIdleTimeout%d \r\n"),
; 527  : 			   pszFname, m_dwBattSuspendTimeout, m_dwBattResumingSuspendTimeout,
; 528  : 			   m_dwBattBacklightTimeout, m_dwBattUserIdleTimeout));
; 529  : }
; 530  : 
; 531  : DWORD
; 532  : PowerStateManager::GetSuspendTimeOut ()
; 533  : {
; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);

  007e0	b911		 cbnz        r1,|$LN19@ReAdjustTi|
  007e2	f8d0 226c	 ldr         r2,[r0,#0x26C]
  007e6	e001		 b           |$LN20@ReAdjustTi|
  007e8		 |$LN19@ReAdjustTi|
  007e8	f8d0 225c	 ldr         r2,[r0,#0x25C]
  007ec		 |$LN20@ReAdjustTi|

; 281  : 	}
; 282  : 	if (m_dwCurSuspendTimeout > GetSuspendTimeOut ())

  007ec	f8d0 3280	 ldr         r3,[r0,#0x280]
  007f0	4293		 cmp         r3,r2
  007f2	d90a		 bls         |$LN34@ReAdjustTi|

; 293  : 
; 294  : void
; 295  : PowerStateManager::ResetUserIdleTimeout (BOOL fIdle)
; 296  : {
; 297  : 	if (fIdle)
; 298  : 	{
; 299  : 		m_dwCurBacklightTimeout = GetBackLightTimeout ();
; 300  : 		m_dwCurUserIdleTimeout = GetUserIdleTimeOut ();
; 301  : 	}
; 302  : 	else
; 303  : 	{
; 304  : 		m_dwCurBacklightTimeout = INFINITE;
; 305  : 		m_dwCurUserIdleTimeout = INFINITE;
; 306  : 	}
; 307  : 	if (m_dwCurBacklightTimeout == 0)
; 308  : 		m_dwCurBacklightTimeout = INFINITE;
; 309  : 	if (m_dwCurUserIdleTimeout == 0)
; 310  : 		m_dwCurUserIdleTimeout = INFINITE;
; 311  : }
; 312  : 
; 313  : void
; 314  : PowerStateManager::ResetSystemIdleTimeTimeout (BOOL fIdle)
; 315  : {
; 316  : 	m_dwCurSuspendTimeout = (fIdle ? GetSuspendTimeOut () : INFINITE);
; 317  : 	if (m_dwCurSuspendTimeout == 0)
; 318  : 		m_dwCurSuspendTimeout = INFINITE;
; 319  : }
; 320  : 
; 321  : void
; 322  : PowerStateManager::SubtractTimeout (DWORD dwTicks)
; 323  : {
; 324  : 	if (m_dwCurSuspendTimeout != INFINITE)
; 325  : 		m_dwCurSuspendTimeout =
; 326  : 			(m_dwCurSuspendTimeout > dwTicks ? m_dwCurSuspendTimeout - dwTicks : 0);
; 327  : 	if (m_dwCurResumingSuspendTimeout != INFINITE)
; 328  : 		m_dwCurResumingSuspendTimeout =
; 329  : 			(m_dwCurResumingSuspendTimeout > dwTicks ? m_dwCurResumingSuspendTimeout - dwTicks : 0);
; 330  : 	if (m_dwCurBacklightTimeout != INFINITE)
; 331  : 		m_dwCurBacklightTimeout =
; 332  : 			(m_dwCurBacklightTimeout > dwTicks ? m_dwCurBacklightTimeout - dwTicks : 0);
; 333  : 	if (m_dwCurUserIdleTimeout != INFINITE)
; 334  : 		m_dwCurUserIdleTimeout =
; 335  : 			(m_dwCurUserIdleTimeout > dwTicks ? m_dwCurUserIdleTimeout - dwTicks : 0);
; 336  : }
; 337  : 
; 338  : DWORD
; 339  : PowerStateManager::GetSmallestTimeout (PTIMEOUT_ITEM pTimeoutItem)
; 340  : {
; 341  : 	DWORD dwReturn = INFINITE;
; 342  : 	TIMEOUT_ITEM activeEvent = NoTimeoutItem;
; 343  : 
; 344  : 	if (dwReturn > m_dwCurSuspendTimeout)
; 345  : 	{
; 346  : 		dwReturn = m_dwCurSuspendTimeout;
; 347  : 		activeEvent = SuspendTimeout;
; 348  : 	}
; 349  : 	if (dwReturn > m_dwCurResumingSuspendTimeout)
; 350  : 	{
; 351  : 		dwReturn = m_dwCurResumingSuspendTimeout;
; 352  : 		activeEvent = ResumingSuspendTimeout;
; 353  : 	}
; 354  : 	if (dwReturn > m_dwCurBacklightTimeout)
; 355  : 	{
; 356  : 		dwReturn = m_dwCurBacklightTimeout;
; 357  : 		activeEvent = BacklightTimeout;
; 358  : 	}
; 359  : 	if (dwReturn > m_dwCurUserIdleTimeout)
; 360  : 	{
; 361  : 		dwReturn = m_dwCurUserIdleTimeout;
; 362  : 		activeEvent = UserActivityTimeout;
; 363  : 	}
; 364  : 	if (pTimeoutItem)
; 365  : 	{
; 366  : 		*pTimeoutItem = activeEvent;
; 367  : 	}
; 368  : 	return dwReturn;
; 369  : }
; 370  : 
; 371  : LPCTSTR
; 372  : PowerStateManager::ActivityStateToSystemState (PLATFORM_ACTIVITY_STATE platActiveState)
; 373  : {
; 374  : 	PowerState *curState = m_pPowerStateList;
; 375  : 
; 376  : 	while (curState)
; 377  : 	{
; 378  : 		if (curState->GetState () == platActiveState)
; 379  : 			return curState->GetStateString ();
; 380  : 		else
; 381  : 			curState = curState->GetNextPowerState ();
; 382  : 	}
; 383  : 	return NULL;
; 384  : }
; 385  : 
; 386  : PLATFORM_ACTIVITY_STATE
; 387  : PowerStateManager::SystemStateToActivityState (LPCTSTR lpState)
; 388  : {
; 389  : 	if (lpState == NULL)
; 390  : 		return UnknownState;
; 391  : 	PowerState *curState = m_pPowerStateList;
; 392  : 
; 393  : 	while (curState)
; 394  : 	{
; 395  : 		if (_tcsicmp (curState->GetStateString (), lpState) == 0)
; 396  : 			return curState->GetState ();
; 397  : 		else
; 398  : 			curState = curState->GetNextPowerState ();
; 399  : 	}
; 400  : 	return UnknownState;
; 401  : }
; 402  : 
; 403  : HANDLE
; 404  : PowerStateManager::GetEventHandle (DWORD dwIndex)
; 405  : {
; 406  : 	switch (dwIndex)
; 407  : 	{
; 408  : 	  case PM_SHUTDOWN_EVENT:
; 409  : 		  return ghevPmShutdown;
; 410  : 	  case PM_RELOAD_ACTIVITY_TIMEOUTS_EVENT:
; 411  : 		  return ghevReloadActivityTimeouts;
; 412  : 	  case PM_MSGQUEUE_EVENT:
; 413  : 		  return m_hqNotify;
; 414  : 	  case PM_RESTART_TIMER_EVENT:
; 415  : 		  return ghevRestartTimers;
; 416  : 	  case PM_SYSTEM_API_EVENT:
; 417  : 		  return GetAPISignalHandle ();
; 418  : 	  case PM_BOOTPHASE2_EVENT:
; 419  : 		  return m_hevBootPhase2;
; 420  : 	}
; 421  : 	return NULL;
; 422  : }
; 423  : 
; 424  : void
; 425  : PowerStateManager::DisablePhase2Event ()
; 426  : {
; 427  : 	if (m_hevBootPhase2)
; 428  : 	{
; 429  : 		CloseHandle (m_hevBootPhase2);
; 430  : 		m_hevBootPhase2 = NULL;
; 431  : 	}
; 432  : }
; 433  : 
; 434  : void
; 435  : PowerStateManager::PlatformLoadTimeouts ()
; 436  : {
; 437  : 	DWORD dwStatus;
; 438  : 	TCHAR szPath[MAX_PATH];
; 439  : 	HKEY hk;
; 440  : 
; 441  : 	SETFNAME (_T ("PowerStateManager::PlatformLoadTimeouts"));
; 442  : 
; 443  : 	// Assume default values:
; 444  : 	m_dwACSuspendTimeout = DEF_ACSUSPENDTIMEOUT * 1000;
; 445  : 	m_dwACResumingSuspendTimeout = DEF_ACRESUMINGSUSPENDTIMEOUT * 1000;
; 446  : 	m_dwACBacklightTimeout = DEF_ACBACKLIGHTTIMEOUT * 1000;
; 447  : 	m_dwACUserIdleTimeout = DEF_ACUSERIDLETIMEOUT * 1000;
; 448  : 
; 449  : 	m_dwBattSuspendTimeout = DEF_BATTSUSPENDTIMEOUT * 1000;
; 450  : 	m_dwBattResumingSuspendTimeout = DEF_BATTRESUMINGSUSPENDTIMEOUT * 1000;
; 451  : 	m_dwBattBacklightTimeout = DEF_BATTBACKLIGHTTIMEOUT * 1000;
; 452  : 	m_dwBattUserIdleTimeout = DEF_BATTUSERIDLETIMEOUT * 1000;
; 453  : 
; 454  : 	// Get timeout thresholds for transitions between states:
; 455  : 	StringCchPrintf (szPath, MAX_PATH, _T ("%s\\%s"), PWRMGR_REG_KEY, _T ("Timeouts"));
; 456  : 	dwStatus = RegOpenKeyEx (HKEY_LOCAL_MACHINE, szPath, 0, 0, &hk);
; 457  : 	if (dwStatus == ERROR_SUCCESS)
; 458  : 	{
; 459  : 		// Read system power state timeouts:
; 460  : 		m_dwACSuspendTimeout =
; 461  : 			RegReadStateTimeout (hk, _T ("ACSuspendTimeout"), DEF_ACSUSPENDTIMEOUT);
; 462  : 		m_dwACResumingSuspendTimeout =
; 463  : 			RegReadStateTimeout (hk, _T ("ACResumingSuspendTimeout"), DEF_ACRESUMINGSUSPENDTIMEOUT);
; 464  : 		m_dwACBacklightTimeout =
; 465  : 			RegReadStateTimeout (hk, _T ("ACBacklightTimeout"), DEF_ACBACKLIGHTTIMEOUT);
; 466  : 		m_dwACUserIdleTimeout = RegReadStateTimeout (hk, _T ("ACUserIdle"), DEF_ACUSERIDLETIMEOUT);
; 467  : 
; 468  : 		m_dwBattSuspendTimeout =
; 469  : 			RegReadStateTimeout (hk, _T ("BattSuspendTimeout"), DEF_BATTSUSPENDTIMEOUT);
; 470  : 		m_dwBattResumingSuspendTimeout =
; 471  : 			RegReadStateTimeout (hk, _T ("BattResumingSuspendTimeout"),
; 472  : 								 DEF_BATTRESUMINGSUSPENDTIMEOUT);
; 473  : 		m_dwBattBacklightTimeout =
; 474  : 			RegReadStateTimeout (hk, _T ("BattBacklightTimeout"), DEF_BATTBACKLIGHTTIMEOUT);
; 475  : 		m_dwBattUserIdleTimeout =
; 476  : 			RegReadStateTimeout (hk, _T ("BattUserIdle"), DEF_BATTUSERIDLETIMEOUT);
; 477  : 
; 478  : 		// Release resources:
; 479  : 		RegCloseKey (hk);
; 480  : 	}
; 481  : 
; 482  : 	// Update Legacy if we find them.
; 483  : 	DWORD dwValue;
; 484  : 
; 485  : 	if (m_pLegacySPScreenOff)
; 486  : 	{
; 487  : 		m_pLegacySPScreenOff->AckNotification ();
; 488  : 		if (m_pLegacySPScreenOff->GetRegValue (_T ("Display"), &dwValue))
; 489  : 		{	// Found SmartPhone Legacy Value. Use it.
; 490  : 			m_dwACUserIdleTimeout = m_dwBattUserIdleTimeout = dwValue;
; 491  : 		}
; 492  : 	}
; 493  : 
; 494  : 	if (m_pLegacyBacklightOff)
; 495  : 	{
; 496  : 		m_pLegacyBacklightOff->AckNotification ();
; 497  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("BatteryTimeout"), &dwValue))
; 498  : 		{	// Legacy Backlight Off Registry value.
; 499  : 			m_dwBattBacklightTimeout = dwValue;
; 500  : 		}
; 501  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldBatteryTimeout"), &dwValue))
; 502  : 		{
; 503  : 			m_dwBattBacklightTimeout = INFINITE;
; 504  : 			m_dwBattUserIdleTimeout = INFINITE;
; 505  : 		}
; 506  : 
; 507  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("ACTimeout"), &dwValue))
; 508  : 		{	// Legacy Backlight Off Registry value.
; 509  : 			m_dwACBacklightTimeout = dwValue;
; 510  : 		}
; 511  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldACTimeout"), &dwValue))
; 512  : 		{
; 513  : 			m_dwACBacklightTimeout = INFINITE;
; 514  : 			m_dwACUserIdleTimeout = INFINITE;
; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 519  : 			  (_T
; 520  : 			   ("%s: ACSuspendTimeout %d, ACResumingSuspendTimeout %d,  ACBacklightTimeout %d, ACUserIdleTimeout %d \r\n"),
; 521  : 			   pszFname, m_dwACSuspendTimeout, m_dwACResumingSuspendTimeout, m_dwACBacklightTimeout,
; 522  : 			   m_dwACUserIdleTimeout));
; 523  : 	PMLOGMSG (ZONE_INIT
; 524  : 			  || ZONE_PLATFORM,
; 525  : 			  (_T
; 526  : 			   ("%s: BattSuspendTimeout %d, BattResumingSuspendTimeout %d , BattBacklightTimeout %d, BattUserIdleTimeout%d \r\n"),
; 527  : 			   pszFname, m_dwBattSuspendTimeout, m_dwBattResumingSuspendTimeout,
; 528  : 			   m_dwBattBacklightTimeout, m_dwBattUserIdleTimeout));
; 529  : }
; 530  : 
; 531  : DWORD
; 532  : PowerStateManager::GetSuspendTimeOut ()
; 533  : {
; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);

  007f4	b911		 cbnz        r1,|$LN23@ReAdjustTi|
  007f6	f8d0 326c	 ldr         r3,[r0,#0x26C]
  007fa	e001		 b           |$LN24@ReAdjustTi|
  007fc		 |$LN23@ReAdjustTi|
  007fc	f8d0 325c	 ldr         r3,[r0,#0x25C]
  00800		 |$LN24@ReAdjustTi|

; 283  : 	{
; 284  : 		if ((m_dwCurSuspendTimeout = GetSuspendTimeOut ()) == 0)

  00800	f8c0 3280	 str         r3,[r0,#0x280]
  00804	b90b		 cbnz        r3,|$LN34@ReAdjustTi|

; 285  : 			m_dwCurSuspendTimeout = INFINITE;

  00806	f8c0 5280	 str         r5,[r0,#0x280]
  0080a		 |$LN34@ReAdjustTi|

; 536  : }
; 537  : 
; 538  : DWORD
; 539  : PowerStateManager::GetResumingSuspendTimeout ()
; 540  : {
; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);
; 543  : }
; 544  : 
; 545  : DWORD
; 546  : PowerStateManager::GetBackLightTimeout ()
; 547  : {
; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  0080a	7d21		 ldrb        r1,[r4,#0x14]

; 550  : }
; 551  : 
; 552  : DWORD
; 553  : PowerStateManager::GetUserIdleTimeOut ()
; 554  : {
; 555  : 	return (gSystemPowerStatus.bACLineStatus ==
; 556  : 			AC_LINE_OFFLINE ? m_dwBattUserIdleTimeout : m_dwACUserIdleTimeout);

  0080c	b911		 cbnz        r1,|$LN27@ReAdjustTi|
  0080e	f8d0 2278	 ldr         r2,[r0,#0x278]
  00812	e001		 b           |$LN28@ReAdjustTi|
  00814		 |$LN27@ReAdjustTi|
  00814	f8d0 2268	 ldr         r2,[r0,#0x268]
  00818		 |$LN28@ReAdjustTi|

; 286  : 	}
; 287  : 	if (m_dwCurUserIdleTimeout > GetUserIdleTimeOut ())

  00818	f8d0 328c	 ldr         r3,[r0,#0x28C]
  0081c	4293		 cmp         r3,r2
  0081e	d90a		 bls         |$LN1@ReAdjustTi|

; 550  : }
; 551  : 
; 552  : DWORD
; 553  : PowerStateManager::GetUserIdleTimeOut ()
; 554  : {
; 555  : 	return (gSystemPowerStatus.bACLineStatus ==
; 556  : 			AC_LINE_OFFLINE ? m_dwBattUserIdleTimeout : m_dwACUserIdleTimeout);

  00820	b911		 cbnz        r1,|$LN31@ReAdjustTi|
  00822	f8d0 3278	 ldr         r3,[r0,#0x278]
  00826	e001		 b           |$LN32@ReAdjustTi|
  00828		 |$LN31@ReAdjustTi|
  00828	f8d0 3268	 ldr         r3,[r0,#0x268]
  0082c		 |$LN32@ReAdjustTi|

; 288  : 	{
; 289  : 		if ((m_dwCurUserIdleTimeout = GetUserIdleTimeOut ()) == 0)

  0082c	f8c0 328c	 str         r3,[r0,#0x28C]
  00830	b90b		 cbnz        r3,|$LN1@ReAdjustTi|

; 290  : 			m_dwCurUserIdleTimeout = INFINITE;

  00832	f8c0 528c	 str         r5,[r0,#0x28C]
  00836		 |$LN1@ReAdjustTi|
  00836		 |$M39|

; 291  : 	}
; 292  : }

  00836	e8bd 8830	 pop         {r4,r5,r11,pc}
  0083a		 |$LN42@ReAdjustTi|
  0083a		 |$M43|
  0083a	defe		 __debugbreak
  0083c		 |$LN40@ReAdjustTi|
  0083c		 |$LN41@ReAdjustTi|
  0083c	0000 0000	 DCD         |gSystemPowerStatus|
  00840		 |$M37|

			 ENDP  ; |?ReAdjustTimeOuts@PowerStateManager@@UAAXXZ|, PowerStateManager::ReAdjustTimeOuts

	EXPORT	|?ReInitTimeOuts@PowerStateManager@@UAAXH@Z| ; PowerStateManager::ReInitTimeOuts

  00068			 AREA	 |.pdata|, PDATA
|$pdata1$?ReInitTimeOuts@PowerStateManager@@UAAXH@Z| DCD imagerel |$LN27@ReInitTime|
	DCD	0x3160e5
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00840			 AREA	 |.text|, CODE, THUMB

  00840		 |?ReInitTimeOuts@PowerStateManager@@UAAXH@Z| PROC ; PowerStateManager::ReInitTimeOuts

; 258  : {

  00840		 |$LN27@ReInitTime|
  00840	e92d 4830	 push        {r4,r5,r11,lr}
  00844	f20d 0b08	 addw        r11,sp,#8
  00848		 |$M25|

; 259  : 	m_dwCurResumingSuspendTimeout =
; 260  : 		(fIgnoreSuspendResume ? INFINITE : GetResumingSuspendTimeout ());

  00848	4c1a		 ldr         r4,|$LN30@ReInitTime| ; =|gSystemPowerStatus|
  0084a	f06f 0500	 mvn         r5,#0
  0084e	b109		 cbz         r1,|$LN6@ReInitTime|
  00850	462b		 mov         r3,r5
  00852	e006		 b           |$LN11@ReInitTime|
  00854		 |$LN6@ReInitTime|

; 536  : }
; 537  : 
; 538  : DWORD
; 539  : PowerStateManager::GetResumingSuspendTimeout ()
; 540  : {
; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);

  00854	7d23		 ldrb        r3,[r4,#0x14]
  00856	b913		 cbnz        r3,|$LN10@ReInitTime|
  00858	f8d0 3270	 ldr         r3,[r0,#0x270]
  0085c	e001		 b           |$LN11@ReInitTime|
  0085e		 |$LN10@ReInitTime|
  0085e	f8d0 3260	 ldr         r3,[r0,#0x260]
  00862		 |$LN11@ReInitTime|

; 259  : 	m_dwCurResumingSuspendTimeout =
; 260  : 		(fIgnoreSuspendResume ? INFINITE : GetResumingSuspendTimeout ());

  00862	f8c0 3284	 str         r3,[r0,#0x284]

; 273  : 
; 274  : void
; 275  : PowerStateManager::ReAdjustTimeOuts ()
; 276  : {
; 277  : 	if (m_dwCurBacklightTimeout > GetBackLightTimeout ())
; 278  : 	{
; 279  : 		if ((m_dwCurBacklightTimeout = GetBackLightTimeout ()) == 0)
; 280  : 			m_dwCurBacklightTimeout = INFINITE;
; 281  : 	}
; 282  : 	if (m_dwCurSuspendTimeout > GetSuspendTimeOut ())
; 283  : 	{
; 284  : 		if ((m_dwCurSuspendTimeout = GetSuspendTimeOut ()) == 0)
; 285  : 			m_dwCurSuspendTimeout = INFINITE;
; 286  : 	}
; 287  : 	if (m_dwCurUserIdleTimeout > GetUserIdleTimeOut ())
; 288  : 	{
; 289  : 		if ((m_dwCurUserIdleTimeout = GetUserIdleTimeOut ()) == 0)
; 290  : 			m_dwCurUserIdleTimeout = INFINITE;
; 291  : 	}
; 292  : }
; 293  : 
; 294  : void
; 295  : PowerStateManager::ResetUserIdleTimeout (BOOL fIdle)
; 296  : {
; 297  : 	if (fIdle)
; 298  : 	{
; 299  : 		m_dwCurBacklightTimeout = GetBackLightTimeout ();
; 300  : 		m_dwCurUserIdleTimeout = GetUserIdleTimeOut ();
; 301  : 	}
; 302  : 	else
; 303  : 	{
; 304  : 		m_dwCurBacklightTimeout = INFINITE;
; 305  : 		m_dwCurUserIdleTimeout = INFINITE;
; 306  : 	}
; 307  : 	if (m_dwCurBacklightTimeout == 0)
; 308  : 		m_dwCurBacklightTimeout = INFINITE;
; 309  : 	if (m_dwCurUserIdleTimeout == 0)
; 310  : 		m_dwCurUserIdleTimeout = INFINITE;
; 311  : }
; 312  : 
; 313  : void
; 314  : PowerStateManager::ResetSystemIdleTimeTimeout (BOOL fIdle)
; 315  : {
; 316  : 	m_dwCurSuspendTimeout = (fIdle ? GetSuspendTimeOut () : INFINITE);
; 317  : 	if (m_dwCurSuspendTimeout == 0)
; 318  : 		m_dwCurSuspendTimeout = INFINITE;
; 319  : }
; 320  : 
; 321  : void
; 322  : PowerStateManager::SubtractTimeout (DWORD dwTicks)
; 323  : {
; 324  : 	if (m_dwCurSuspendTimeout != INFINITE)
; 325  : 		m_dwCurSuspendTimeout =
; 326  : 			(m_dwCurSuspendTimeout > dwTicks ? m_dwCurSuspendTimeout - dwTicks : 0);
; 327  : 	if (m_dwCurResumingSuspendTimeout != INFINITE)
; 328  : 		m_dwCurResumingSuspendTimeout =
; 329  : 			(m_dwCurResumingSuspendTimeout > dwTicks ? m_dwCurResumingSuspendTimeout - dwTicks : 0);
; 330  : 	if (m_dwCurBacklightTimeout != INFINITE)
; 331  : 		m_dwCurBacklightTimeout =
; 332  : 			(m_dwCurBacklightTimeout > dwTicks ? m_dwCurBacklightTimeout - dwTicks : 0);
; 333  : 	if (m_dwCurUserIdleTimeout != INFINITE)
; 334  : 		m_dwCurUserIdleTimeout =
; 335  : 			(m_dwCurUserIdleTimeout > dwTicks ? m_dwCurUserIdleTimeout - dwTicks : 0);
; 336  : }
; 337  : 
; 338  : DWORD
; 339  : PowerStateManager::GetSmallestTimeout (PTIMEOUT_ITEM pTimeoutItem)
; 340  : {
; 341  : 	DWORD dwReturn = INFINITE;
; 342  : 	TIMEOUT_ITEM activeEvent = NoTimeoutItem;
; 343  : 
; 344  : 	if (dwReturn > m_dwCurSuspendTimeout)
; 345  : 	{
; 346  : 		dwReturn = m_dwCurSuspendTimeout;
; 347  : 		activeEvent = SuspendTimeout;
; 348  : 	}
; 349  : 	if (dwReturn > m_dwCurResumingSuspendTimeout)
; 350  : 	{
; 351  : 		dwReturn = m_dwCurResumingSuspendTimeout;
; 352  : 		activeEvent = ResumingSuspendTimeout;
; 353  : 	}
; 354  : 	if (dwReturn > m_dwCurBacklightTimeout)
; 355  : 	{
; 356  : 		dwReturn = m_dwCurBacklightTimeout;
; 357  : 		activeEvent = BacklightTimeout;
; 358  : 	}
; 359  : 	if (dwReturn > m_dwCurUserIdleTimeout)
; 360  : 	{
; 361  : 		dwReturn = m_dwCurUserIdleTimeout;
; 362  : 		activeEvent = UserActivityTimeout;
; 363  : 	}
; 364  : 	if (pTimeoutItem)
; 365  : 	{
; 366  : 		*pTimeoutItem = activeEvent;
; 367  : 	}
; 368  : 	return dwReturn;
; 369  : }
; 370  : 
; 371  : LPCTSTR
; 372  : PowerStateManager::ActivityStateToSystemState (PLATFORM_ACTIVITY_STATE platActiveState)
; 373  : {
; 374  : 	PowerState *curState = m_pPowerStateList;
; 375  : 
; 376  : 	while (curState)
; 377  : 	{
; 378  : 		if (curState->GetState () == platActiveState)
; 379  : 			return curState->GetStateString ();
; 380  : 		else
; 381  : 			curState = curState->GetNextPowerState ();
; 382  : 	}
; 383  : 	return NULL;
; 384  : }
; 385  : 
; 386  : PLATFORM_ACTIVITY_STATE
; 387  : PowerStateManager::SystemStateToActivityState (LPCTSTR lpState)
; 388  : {
; 389  : 	if (lpState == NULL)
; 390  : 		return UnknownState;
; 391  : 	PowerState *curState = m_pPowerStateList;
; 392  : 
; 393  : 	while (curState)
; 394  : 	{
; 395  : 		if (_tcsicmp (curState->GetStateString (), lpState) == 0)
; 396  : 			return curState->GetState ();
; 397  : 		else
; 398  : 			curState = curState->GetNextPowerState ();
; 399  : 	}
; 400  : 	return UnknownState;
; 401  : }
; 402  : 
; 403  : HANDLE
; 404  : PowerStateManager::GetEventHandle (DWORD dwIndex)
; 405  : {
; 406  : 	switch (dwIndex)
; 407  : 	{
; 408  : 	  case PM_SHUTDOWN_EVENT:
; 409  : 		  return ghevPmShutdown;
; 410  : 	  case PM_RELOAD_ACTIVITY_TIMEOUTS_EVENT:
; 411  : 		  return ghevReloadActivityTimeouts;
; 412  : 	  case PM_MSGQUEUE_EVENT:
; 413  : 		  return m_hqNotify;
; 414  : 	  case PM_RESTART_TIMER_EVENT:
; 415  : 		  return ghevRestartTimers;
; 416  : 	  case PM_SYSTEM_API_EVENT:
; 417  : 		  return GetAPISignalHandle ();
; 418  : 	  case PM_BOOTPHASE2_EVENT:
; 419  : 		  return m_hevBootPhase2;
; 420  : 	}
; 421  : 	return NULL;
; 422  : }
; 423  : 
; 424  : void
; 425  : PowerStateManager::DisablePhase2Event ()
; 426  : {
; 427  : 	if (m_hevBootPhase2)
; 428  : 	{
; 429  : 		CloseHandle (m_hevBootPhase2);
; 430  : 		m_hevBootPhase2 = NULL;
; 431  : 	}
; 432  : }
; 433  : 
; 434  : void
; 435  : PowerStateManager::PlatformLoadTimeouts ()
; 436  : {
; 437  : 	DWORD dwStatus;
; 438  : 	TCHAR szPath[MAX_PATH];
; 439  : 	HKEY hk;
; 440  : 
; 441  : 	SETFNAME (_T ("PowerStateManager::PlatformLoadTimeouts"));
; 442  : 
; 443  : 	// Assume default values:
; 444  : 	m_dwACSuspendTimeout = DEF_ACSUSPENDTIMEOUT * 1000;
; 445  : 	m_dwACResumingSuspendTimeout = DEF_ACRESUMINGSUSPENDTIMEOUT * 1000;
; 446  : 	m_dwACBacklightTimeout = DEF_ACBACKLIGHTTIMEOUT * 1000;
; 447  : 	m_dwACUserIdleTimeout = DEF_ACUSERIDLETIMEOUT * 1000;
; 448  : 
; 449  : 	m_dwBattSuspendTimeout = DEF_BATTSUSPENDTIMEOUT * 1000;
; 450  : 	m_dwBattResumingSuspendTimeout = DEF_BATTRESUMINGSUSPENDTIMEOUT * 1000;
; 451  : 	m_dwBattBacklightTimeout = DEF_BATTBACKLIGHTTIMEOUT * 1000;
; 452  : 	m_dwBattUserIdleTimeout = DEF_BATTUSERIDLETIMEOUT * 1000;
; 453  : 
; 454  : 	// Get timeout thresholds for transitions between states:
; 455  : 	StringCchPrintf (szPath, MAX_PATH, _T ("%s\\%s"), PWRMGR_REG_KEY, _T ("Timeouts"));
; 456  : 	dwStatus = RegOpenKeyEx (HKEY_LOCAL_MACHINE, szPath, 0, 0, &hk);
; 457  : 	if (dwStatus == ERROR_SUCCESS)
; 458  : 	{
; 459  : 		// Read system power state timeouts:
; 460  : 		m_dwACSuspendTimeout =
; 461  : 			RegReadStateTimeout (hk, _T ("ACSuspendTimeout"), DEF_ACSUSPENDTIMEOUT);
; 462  : 		m_dwACResumingSuspendTimeout =
; 463  : 			RegReadStateTimeout (hk, _T ("ACResumingSuspendTimeout"), DEF_ACRESUMINGSUSPENDTIMEOUT);
; 464  : 		m_dwACBacklightTimeout =
; 465  : 			RegReadStateTimeout (hk, _T ("ACBacklightTimeout"), DEF_ACBACKLIGHTTIMEOUT);
; 466  : 		m_dwACUserIdleTimeout = RegReadStateTimeout (hk, _T ("ACUserIdle"), DEF_ACUSERIDLETIMEOUT);
; 467  : 
; 468  : 		m_dwBattSuspendTimeout =
; 469  : 			RegReadStateTimeout (hk, _T ("BattSuspendTimeout"), DEF_BATTSUSPENDTIMEOUT);
; 470  : 		m_dwBattResumingSuspendTimeout =
; 471  : 			RegReadStateTimeout (hk, _T ("BattResumingSuspendTimeout"),
; 472  : 								 DEF_BATTRESUMINGSUSPENDTIMEOUT);
; 473  : 		m_dwBattBacklightTimeout =
; 474  : 			RegReadStateTimeout (hk, _T ("BattBacklightTimeout"), DEF_BATTBACKLIGHTTIMEOUT);
; 475  : 		m_dwBattUserIdleTimeout =
; 476  : 			RegReadStateTimeout (hk, _T ("BattUserIdle"), DEF_BATTUSERIDLETIMEOUT);
; 477  : 
; 478  : 		// Release resources:
; 479  : 		RegCloseKey (hk);
; 480  : 	}
; 481  : 
; 482  : 	// Update Legacy if we find them.
; 483  : 	DWORD dwValue;
; 484  : 
; 485  : 	if (m_pLegacySPScreenOff)
; 486  : 	{
; 487  : 		m_pLegacySPScreenOff->AckNotification ();
; 488  : 		if (m_pLegacySPScreenOff->GetRegValue (_T ("Display"), &dwValue))
; 489  : 		{	// Found SmartPhone Legacy Value. Use it.
; 490  : 			m_dwACUserIdleTimeout = m_dwBattUserIdleTimeout = dwValue;
; 491  : 		}
; 492  : 	}
; 493  : 
; 494  : 	if (m_pLegacyBacklightOff)
; 495  : 	{
; 496  : 		m_pLegacyBacklightOff->AckNotification ();
; 497  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("BatteryTimeout"), &dwValue))
; 498  : 		{	// Legacy Backlight Off Registry value.
; 499  : 			m_dwBattBacklightTimeout = dwValue;
; 500  : 		}
; 501  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldBatteryTimeout"), &dwValue))
; 502  : 		{
; 503  : 			m_dwBattBacklightTimeout = INFINITE;
; 504  : 			m_dwBattUserIdleTimeout = INFINITE;
; 505  : 		}
; 506  : 
; 507  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("ACTimeout"), &dwValue))
; 508  : 		{	// Legacy Backlight Off Registry value.
; 509  : 			m_dwACBacklightTimeout = dwValue;
; 510  : 		}
; 511  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldACTimeout"), &dwValue))
; 512  : 		{
; 513  : 			m_dwACBacklightTimeout = INFINITE;
; 514  : 			m_dwACUserIdleTimeout = INFINITE;
; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 519  : 			  (_T
; 520  : 			   ("%s: ACSuspendTimeout %d, ACResumingSuspendTimeout %d,  ACBacklightTimeout %d, ACUserIdleTimeout %d \r\n"),
; 521  : 			   pszFname, m_dwACSuspendTimeout, m_dwACResumingSuspendTimeout, m_dwACBacklightTimeout,
; 522  : 			   m_dwACUserIdleTimeout));
; 523  : 	PMLOGMSG (ZONE_INIT
; 524  : 			  || ZONE_PLATFORM,
; 525  : 			  (_T
; 526  : 			   ("%s: BattSuspendTimeout %d, BattResumingSuspendTimeout %d , BattBacklightTimeout %d, BattUserIdleTimeout%d \r\n"),
; 527  : 			   pszFname, m_dwBattSuspendTimeout, m_dwBattResumingSuspendTimeout,
; 528  : 			   m_dwBattBacklightTimeout, m_dwBattUserIdleTimeout));
; 529  : }
; 530  : 
; 531  : DWORD
; 532  : PowerStateManager::GetSuspendTimeOut ()
; 533  : {
; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);

  00866	7d23		 ldrb        r3,[r4,#0x14]
  00868	b913		 cbnz        r3,|$LN14@ReInitTime|
  0086a	f8d0 226c	 ldr         r2,[r0,#0x26C]
  0086e	e001		 b           |$LN15@ReInitTime|
  00870		 |$LN14@ReInitTime|
  00870	f8d0 225c	 ldr         r2,[r0,#0x25C]
  00874		 |$LN15@ReInitTime|

; 261  : 	m_dwCurSuspendTimeout = GetSuspendTimeOut ();

  00874	f8c0 2280	 str         r2,[r0,#0x280]

; 543  : }
; 544  : 
; 545  : DWORD
; 546  : PowerStateManager::GetBackLightTimeout ()
; 547  : {
; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);

  00878	7d23		 ldrb        r3,[r4,#0x14]
  0087a	b913		 cbnz        r3,|$LN18@ReInitTime|
  0087c	f8d0 1274	 ldr         r1,[r0,#0x274]
  00880	e001		 b           |$LN19@ReInitTime|
  00882		 |$LN18@ReInitTime|
  00882	f8d0 1264	 ldr         r1,[r0,#0x264]
  00886		 |$LN19@ReInitTime|

; 262  : 	m_dwCurBacklightTimeout = GetBackLightTimeout ();

  00886	f8c0 1288	 str         r1,[r0,#0x288]

; 550  : }
; 551  : 
; 552  : DWORD
; 553  : PowerStateManager::GetUserIdleTimeOut ()
; 554  : {
; 555  : 	return (gSystemPowerStatus.bACLineStatus ==
; 556  : 			AC_LINE_OFFLINE ? m_dwBattUserIdleTimeout : m_dwACUserIdleTimeout);

  0088a	7d23		 ldrb        r3,[r4,#0x14]
  0088c	b913		 cbnz        r3,|$LN22@ReInitTime|
  0088e	f8d0 3278	 ldr         r3,[r0,#0x278]
  00892	e001		 b           |$LN23@ReInitTime|
  00894		 |$LN22@ReInitTime|
  00894	f8d0 3268	 ldr         r3,[r0,#0x268]
  00898		 |$LN23@ReInitTime|

; 263  : 	m_dwCurUserIdleTimeout = GetUserIdleTimeOut ();

  00898	f8c0 328c	 str         r3,[r0,#0x28C]

; 264  : 
; 265  : 	// If timer is not set, then it is not supported.
; 266  : 	if (m_dwCurBacklightTimeout == 0)

  0089c	b909		 cbnz        r1,|$LN3@ReInitTime|

; 267  : 		m_dwCurBacklightTimeout = INFINITE;

  0089e	f8c0 5288	 str         r5,[r0,#0x288]
  008a2		 |$LN3@ReInitTime|

; 268  : 	if (m_dwCurUserIdleTimeout == 0)

  008a2	b90b		 cbnz        r3,|$LN2@ReInitTime|

; 269  : 		m_dwCurUserIdleTimeout = INFINITE;

  008a4	f8c0 528c	 str         r5,[r0,#0x28C]
  008a8		 |$LN2@ReInitTime|

; 270  : 	if (m_dwCurSuspendTimeout == 0)

  008a8	b90a		 cbnz        r2,|$LN1@ReInitTime|

; 271  : 		m_dwCurSuspendTimeout = INFINITE;

  008aa	f8c0 5280	 str         r5,[r0,#0x280]
  008ae		 |$LN1@ReInitTime|
  008ae		 |$M28|

; 272  : }

  008ae	e8bd 8830	 pop         {r4,r5,r11,pc}
  008b2		 |$LN31@ReInitTime|
  008b2		 |$M32|
  008b2	defe		 __debugbreak
  008b4		 |$LN29@ReInitTime|
  008b4		 |$LN30@ReInitTime|
  008b4	0000 0000	 DCD         |gSystemPowerStatus|
  008b8		 |$M26|

			 ENDP  ; |?ReInitTimeOuts@PowerStateManager@@UAAXH@Z|, PowerStateManager::ReInitTimeOuts

	EXPORT	|??1NotifyRegKey@@QAA@XZ|		; NotifyRegKey::~NotifyRegKey

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??1NotifyRegKey@@QAA@XZ| DCD imagerel |$LN12@NotifyRegK|
	DCD	0xfd30604d
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1NotifyRegKey@@QAA@XZ| PROC		; NotifyRegKey::~NotifyRegKey

; 132  : 	{

  00000		 |$LN12@NotifyRegK|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M10|
  00008	4604		 mov         r4,r0

; 133  : 		if (m_hNotifyEvent != INVALID_HANDLE_VALUE)

  0000a	6860		 ldr         r0,[r4,#4]
  0000c	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00010	d001		 beq         |$LN1@NotifyRegK|

; 134  : 			CloseHandle (m_hNotifyEvent);

  00012	f000 f800	 bl          CloseHandle
  00016		 |$LN1@NotifyRegK|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  00016	6820		 ldr         r0,[r4]
  00018	b118		 cbz         r0,|$LN6@NotifyRegK|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  0001a	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  0001e	2300		 movs        r3,#0
  00020	6023		 str         r3,[r4]
  00022		 |$LN6@NotifyRegK|
  00022		 |$M13|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 135  : 	}

  00022	e8bd 8818	 pop         {r3,r4,r11,pc}
  00026		 |$M11|

			 ENDP  ; |??1NotifyRegKey@@QAA@XZ|, NotifyRegKey::~NotifyRegKey

	EXPORT	|??0NotifyRegKey@@QAA@PAUHKEY__@@PBG@Z|	; NotifyRegKey::NotifyRegKey
	IMPORT	|CeFindFirstRegChange|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0NotifyRegKey@@QAA@PAUHKEY__@@PBG@Z| DCD imagerel |$LN15@NotifyRegK|
	DCD	0xfd736081
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0NotifyRegKey@@QAA@PAUHKEY__@@PBG@Z| PROC ; NotifyRegKey::NotifyRegKey

; 124  : 	{

  00000		 |$LN15@NotifyRegK|
  00000	e92d 48fc	 push        {r2-r7,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M13|
  00008	4615		 mov         r5,r2
  0000a	4604		 mov         r4,r0
; File c:\wince800\public\common\oak\inc\cregedit.h

; 44   :         m_hDevKey = NULL;

  0000c	2700		 movs        r7,#0
  0000e	6027		 str         r7,[r4]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 124  : 	{

  00010	460e		 mov         r6,r1
; File c:\wince800\public\common\oak\inc\cregedit.h

; 45   :         if( pszRegPath )

  00012	b145		 cbz         r5,|$LN4@NotifyRegK|

; 46   :         {
; 47   :             if( RegOpenKeyEx( hKey, pszRegPath, 0, 0, &m_hDevKey ) != ERROR_SUCCESS )

  00014	2300		 movs        r3,#0
  00016	2200		 movs        r2,#0
  00018	4629		 mov         r1,r5
  0001a	4630		 mov         r0,r6
  0001c	9400		 str         r4,[sp]
  0001e	f000 f800	 bl          RegOpenKeyExW
  00022	b100		 cbz         r0,|$LN4@NotifyRegK|

; 48   :             {
; 49   :                 m_hDevKey = NULL;

  00024	6027		 str         r7,[r4]
  00026		 |$LN4@NotifyRegK|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 126  : 		if (GetHKey () != NULL)

  00026	6820		 ldr         r0,[r4]
  00028	f06f 0300	 mvn         r3,#0
  0002c	6063		 str         r3,[r4,#4]
  0002e	b120		 cbz         r0,|$LN1@NotifyRegK|

; 127  : 		{
; 128  : 			m_hNotifyEvent = CeFindFirstRegChange (GetHKey (), TRUE, REG_NOTIFY_CHANGE_LAST_SET);

  00030	2204		 movs        r2,#4
  00032	2101		 movs        r1,#1
  00034	f000 f800	 bl          CeFindFirstRegChange
  00038	6060		 str         r0,[r4,#4]
  0003a		 |$LN1@NotifyRegK|

; 129  : 		}
; 130  : 	}

  0003a	4620		 mov         r0,r4
  0003c		 |$M16|
  0003c	e8bd 88fc	 pop         {r2-r7,r11,pc}
  00040		 |$M14|

			 ENDP  ; |??0NotifyRegKey@@QAA@PAUHKEY__@@PBG@Z|, NotifyRegKey::NotifyRegKey

	EXPORT	|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@EFOLCMFD@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@ONLBCKCN@?$AAB?$AAa?$AAt?$AAt?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@EJHDCKBI@?$AAB?$AAa?$AAt?$AAt?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@JHEKGCLH@?$AAB?$AAa?$AAt?$AAt?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@OPCBLDNA@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@BDFEBKKE@?$AAA?$AAC?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@GPCHDDGG@?$AAA?$AAC?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@MOJOBHAI@?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@LFNKHDIA@?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@DMMGCODP@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@PELGLPFE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@PHAMGDO@?$AAO?$AAl?$AAd?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@PJBHBNNG@?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@GNGPINPK@?$AAO?$AAl?$AAd?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1MM@BEOOFGNN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@CGCIHKLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAL?$AAo?$AAa?$AAd?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1NK@BONKCGGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAR@| [ DATA ] ; `string'
	EXPORT	|?PlatformLoadTimeouts@PowerStateManager@@UAAXXZ| ; PowerStateManager::PlatformLoadTimeouts
	IMPORT	|StringCchPrintfW|
	IMPORT	|?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z| ; RegReadStateTimeout

  00070			 AREA	 |.pdata|, PDATA
|$pdata1$?PlatformLoadTimeouts@PowerStateManager@@UAAXXZ| DCD imagerel |$LN24@PlatformLo|
	DCD	imagerel |$unwind2$?PlatformLoadTimeouts@PowerStateManager@@UAAXXZ|

  00054			 AREA	 |.xdata|, DATA
	%	4
|$unwind2$?PlatformLoadTimeouts@PowerStateManager@@UAAXXZ| DCD 0x44300108
	DCD	0x1e887e8
	DCD	0xff30a8fc
	DCD	0x30a801e8
	DCD	0xff
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffed

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NK@BONKCGGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAR@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "B", 0x0, "a", 0x0, "t"
	DCB	0x0, "t", 0x0, "S", 0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "B", 0x0, "a", 0x0, "t", 0x0, "t"
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, "S", 0x0, "u", 0x0, "s", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "T", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, ",", 0x0, " ", 0x0, "B", 0x0, "a"
	DCB	0x0, "t", 0x0, "t", 0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "l", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "t", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "U", 0x0, "s", 0x0, "e"
	DCB	0x0, "r", 0x0, "I", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@CGCIHKLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAL?$AAo?$AAa?$AAd?$AAT@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "a", 0x0, "n"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":"
	DCB	0x0, "P", 0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, "m", 0x0, "L", 0x0, "o", 0x0, "a", 0x0, "d"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, "s", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MM@BEOOFGNN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "A", 0x0, "C", 0x0, "S"
	DCB	0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "A", 0x0, "C", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "u"
	DCB	0x0, "m", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, "S", 0x0, "u"
	DCB	0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, " "
	DCB	0x0, "A", 0x0, "C", 0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "l", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "t", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "A"
	DCB	0x0, "C", 0x0, "U", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, "T", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@GNGPINPK@?$AAO?$AAl?$AAd?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "O"
	DCB	0x0, "l", 0x0, "d", 0x0, "A", 0x0, "C", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@PJBHBNNG@?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o"
	DCB	0x0, "u", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@PHAMGDO@?$AAO?$AAl?$AAd?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "O"
	DCB	0x0, "l", 0x0, "d", 0x0, "B", 0x0, "a", 0x0, "t", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "y", 0x0, "T", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@PELGLPFE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "y"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@DMMGCODP@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?$AA@| DCB "D", 0x0
	DCB	"i", 0x0, "s", 0x0, "p", 0x0, "l", 0x0, "a", 0x0, "y", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@LFNKHDIA@?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "S", 0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@MOJOBHAI@?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, "S", 0x0, "u", 0x0, "s"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@GPCHDDGG@?$AAA?$AAC?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l"
	DCB	0x0, "i", 0x0, "g", 0x0, "h", 0x0, "t", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@BDFEBKKE@?$AAA?$AAC?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "U", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@OPCBLDNA@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "S", 0x0, "u", 0x0, "s"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@JHEKGCLH@?$AAB?$AAa?$AAt?$AAt?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "u", 0x0, "m", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, "S"
	DCB	0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@EJHDCKBI@?$AAB?$AAa?$AAt?$AAt?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "B", 0x0, "a", 0x0, "c"
	DCB	0x0, "k", 0x0, "l", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "t"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@ONLBCKCN@?$AAB?$AAa?$AAt?$AAt?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "U", 0x0, "s", 0x0, "e"
	DCB	0x0, "r", 0x0, "I", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@EFOLCMFD@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$AA@| DCB "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, "s", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "\\"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "\\"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "\\", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@| DCB "%", 0x0
	DCB	"s", 0x0, "\\", 0x0, "%", 0x0, "s", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  008b8			 AREA	 |.text|, CODE, THUMB

  008b8		 |?PlatformLoadTimeouts@PowerStateManager@@UAAXXZ| PROC ; PowerStateManager::PlatformLoadTimeouts

; 436  : {

  008b8		 |$LN24@PlatformLo|
  008b8	e92d 4830	 push        {r4,r5,r11,lr}
  008bc	f20d 0b08	 addw        r11,sp,#8
  008c0	f000 f800	 bl          __security_push_cookie
  008c4	f2ad 2d1c	 subw        sp,sp,#0x21C
  008c8		 |$M22|

; 437  : 	DWORD dwStatus;
; 438  : 	TCHAR szPath[MAX_PATH];
; 439  : 	HKEY hk;
; 440  : 
; 441  : 	SETFNAME (_T ("PowerStateManager::PlatformLoadTimeouts"));
; 442  : 
; 443  : 	// Assume default values:
; 444  : 	m_dwACSuspendTimeout = DEF_ACSUSPENDTIMEOUT * 1000;

  008c8	4b95		 ldr         r3,|$LN49@PlatformLo| ; =0x927c0

; 445  : 	m_dwACResumingSuspendTimeout = DEF_ACRESUMINGSUSPENDTIMEOUT * 1000;

  008ca	f643 2298	 mov         r2,#0x3A98
  008ce	f8c0 2260	 str         r2,[r0,#0x260]
  008d2	f8c0 325c	 str         r3,[r0,#0x25C]

; 446  : 	m_dwACBacklightTimeout = DEF_ACBACKLIGHTTIMEOUT * 1000;
; 447  : 	m_dwACUserIdleTimeout = DEF_ACUSERIDLETIMEOUT * 1000;

  008d6	4b91		 ldr         r3,|$LN48@PlatformLo| ; =0x1d4c0
  008d8	f64e 2160	 mov         r1,#0xEA60

; 448  : 
; 449  : 	m_dwBattSuspendTimeout = DEF_BATTSUSPENDTIMEOUT * 1000;
; 450  : 	m_dwBattResumingSuspendTimeout = DEF_BATTRESUMINGSUSPENDTIMEOUT * 1000;

  008dc	f8c0 2270	 str         r2,[r0,#0x270]
  008e0	f8c0 3268	 str         r3,[r0,#0x268]
  008e4	4b8c		 ldr         r3,|$LN47@PlatformLo| ; =0x493e0

; 451  : 	m_dwBattBacklightTimeout = DEF_BATTBACKLIGHTTIMEOUT * 1000;
; 452  : 	m_dwBattUserIdleTimeout = DEF_BATTUSERIDLETIMEOUT * 1000;
; 453  : 
; 454  : 	// Get timeout thresholds for transitions between states:
; 455  : 	StringCchPrintf (szPath, MAX_PATH, _T ("%s\\%s"), PWRMGR_REG_KEY, _T ("Timeouts"));

  008e6	4a8b		 ldr         r2,|$LN46@PlatformLo| ; =|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@|
  008e8	4604		 mov         r4,r0
  008ea	f8c0 326c	 str         r3,[r0,#0x26C]
  008ee	f247 5330	 mov         r3,#0x7530
  008f2	f8c0 3274	 str         r3,[r0,#0x274]
  008f6	4b86		 ldr         r3,|$LN45@PlatformLo| ; =|??_C@_1BC@EFOLCMFD@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$AA@|
  008f8	f8c0 1264	 str         r1,[r0,#0x264]
  008fc	f8c0 1278	 str         r1,[r0,#0x278]
  00900	9300		 str         r3,[sp]
  00902	4b82		 ldr         r3,|$LN44@PlatformLo| ; =|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  00904	f44f 7182	 mov         r1,#0x104
  00908	a804		 add         r0,sp,#0x10
  0090a	f000 f800	 bl          StringCchPrintfW

; 456  : 	dwStatus = RegOpenKeyEx (HKEY_LOCAL_MACHINE, szPath, 0, 0, &hk);

  0090e	ab02		 add         r3,sp,#8
  00910	9300		 str         r3,[sp]
  00912	2301		 movs        r3,#1
  00914	07d8		 lsls        r0,r3,#0x1F
  00916	3002		 adds        r0,#2
  00918	a904		 add         r1,sp,#0x10
  0091a	2300		 movs        r3,#0
  0091c	2200		 movs        r2,#0
  0091e	f000 f800	 bl          RegOpenKeyExW

; 457  : 	if (dwStatus == ERROR_SUCCESS)

  00922	bbe0		 cbnz        r0,|$LN10@PlatformLo|

; 458  : 	{
; 459  : 		// Read system power state timeouts:
; 460  : 		m_dwACSuspendTimeout =
; 461  : 			RegReadStateTimeout (hk, _T ("ACSuspendTimeout"), DEF_ACSUSPENDTIMEOUT);

  00924	4978		 ldr         r1,|$LN43@PlatformLo| ; =|??_C@_1CC@LFNKHDIA@?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00926	9802		 ldr         r0,[sp,#8]
  00928	f44f 7216	 mov         r2,#0x258
  0092c	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|

; 462  : 		m_dwACResumingSuspendTimeout =
; 463  : 			RegReadStateTimeout (hk, _T ("ACResumingSuspendTimeout"), DEF_ACRESUMINGSUSPENDTIMEOUT);

  00930	4974		 ldr         r1,|$LN42@PlatformLo| ; =|??_C@_1DC@MOJOBHAI@?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00932	f8c4 025c	 str         r0,[r4,#0x25C]
  00936	9802		 ldr         r0,[sp,#8]
  00938	220f		 movs        r2,#0xF
  0093a	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|

; 464  : 		m_dwACBacklightTimeout =
; 465  : 			RegReadStateTimeout (hk, _T ("ACBacklightTimeout"), DEF_ACBACKLIGHTTIMEOUT);

  0093e	4970		 ldr         r1,|$LN41@PlatformLo| ; =|??_C@_1CG@GPCHDDGG@?$AAA?$AAC?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00940	f8c4 0260	 str         r0,[r4,#0x260]
  00944	9802		 ldr         r0,[sp,#8]
  00946	223c		 movs        r2,#0x3C
  00948	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|

; 466  : 		m_dwACUserIdleTimeout = RegReadStateTimeout (hk, _T ("ACUserIdle"), DEF_ACUSERIDLETIMEOUT);

  0094c	496b		 ldr         r1,|$LN40@PlatformLo| ; =|??_C@_1BG@BDFEBKKE@?$AAA?$AAC?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  0094e	f8c4 0264	 str         r0,[r4,#0x264]
  00952	9802		 ldr         r0,[sp,#8]
  00954	2278		 movs        r2,#0x78
  00956	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|

; 467  : 
; 468  : 		m_dwBattSuspendTimeout =
; 469  : 			RegReadStateTimeout (hk, _T ("BattSuspendTimeout"), DEF_BATTSUSPENDTIMEOUT);

  0095a	4967		 ldr         r1,|$LN39@PlatformLo| ; =|??_C@_1CG@OPCBLDNA@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  0095c	f8c4 0268	 str         r0,[r4,#0x268]
  00960	9802		 ldr         r0,[sp,#8]
  00962	f44f 7296	 mov         r2,#0x12C
  00966	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|

; 470  : 		m_dwBattResumingSuspendTimeout =
; 471  : 			RegReadStateTimeout (hk, _T ("BattResumingSuspendTimeout"),
; 472  : 								 DEF_BATTRESUMINGSUSPENDTIMEOUT);

  0096a	4962		 ldr         r1,|$LN38@PlatformLo| ; =|??_C@_1DG@JHEKGCLH@?$AAB?$AAa?$AAt?$AAt?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  0096c	f8c4 026c	 str         r0,[r4,#0x26C]
  00970	9802		 ldr         r0,[sp,#8]
  00972	220f		 movs        r2,#0xF
  00974	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|

; 473  : 		m_dwBattBacklightTimeout =
; 474  : 			RegReadStateTimeout (hk, _T ("BattBacklightTimeout"), DEF_BATTBACKLIGHTTIMEOUT);

  00978	495d		 ldr         r1,|$LN37@PlatformLo| ; =|??_C@_1CK@EJHDCKBI@?$AAB?$AAa?$AAt?$AAt?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  0097a	f8c4 0270	 str         r0,[r4,#0x270]
  0097e	9802		 ldr         r0,[sp,#8]
  00980	221e		 movs        r2,#0x1E
  00982	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|

; 475  : 		m_dwBattUserIdleTimeout =
; 476  : 			RegReadStateTimeout (hk, _T ("BattUserIdle"), DEF_BATTUSERIDLETIMEOUT);

  00986	4959		 ldr         r1,|$LN36@PlatformLo| ; =|??_C@_1BK@ONLBCKCN@?$AAB?$AAa?$AAt?$AAt?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  00988	f8c4 0274	 str         r0,[r4,#0x274]
  0098c	9802		 ldr         r0,[sp,#8]
  0098e	223c		 movs        r2,#0x3C
  00990	f000 f800	 bl          |?RegReadStateTimeout@@YAKPAUHKEY__@@PBGK@Z|
  00994	f8c4 0278	 str         r0,[r4,#0x278]

; 477  : 
; 478  : 		// Release resources:
; 479  : 		RegCloseKey (hk);

  00998	9802		 ldr         r0,[sp,#8]
  0099a	f000 f800	 bl          RegCloseKey
  0099e		 |$LN10@PlatformLo|

; 480  : 	}
; 481  : 
; 482  : 	// Update Legacy if we find them.
; 483  : 	DWORD dwValue;
; 484  : 
; 485  : 	if (m_pLegacySPScreenOff)

  0099e	f8d4 3250	 ldr         r3,[r4,#0x250]
  009a2	b173		 cbz         r3,|$LN8@PlatformLo|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 160  : 		return CeFindNextRegChange (m_hNotifyEvent);

  009a4	6858		 ldr         r0,[r3,#4]
  009a6	f000 f800	 bl          CeFindNextRegChange
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 488  : 		if (m_pLegacySPScreenOff->GetRegValue (_T ("Display"), &dwValue))

  009aa	494f		 ldr         r1,|$LN35@PlatformLo| ; =|??_C@_1BA@DMMGCODP@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?$AA@|
  009ac	f8d4 0250	 ldr         r0,[r4,#0x250]
  009b0	aa03		 add         r2,sp,#0xC
  009b2	f000 f800	 bl          |?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z|
  009b6	b120		 cbz         r0,|$LN8@PlatformLo|

; 489  : 		{	// Found SmartPhone Legacy Value. Use it.
; 490  : 			m_dwACUserIdleTimeout = m_dwBattUserIdleTimeout = dwValue;

  009b8	9b03		 ldr         r3,[sp,#0xC]
  009ba	f8c4 3278	 str         r3,[r4,#0x278]
  009be	f8c4 3268	 str         r3,[r4,#0x268]
  009c2		 |$LN8@PlatformLo|

; 491  : 		}
; 492  : 	}
; 493  : 
; 494  : 	if (m_pLegacyBacklightOff)

  009c2	f8d4 3254	 ldr         r3,[r4,#0x254]
  009c6	b383		 cbz         r3,|$LN1@PlatformLo|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 160  : 		return CeFindNextRegChange (m_hNotifyEvent);

  009c8	6858		 ldr         r0,[r3,#4]
  009ca	f000 f800	 bl          CeFindNextRegChange
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 497  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("BatteryTimeout"), &dwValue))

  009ce	4945		 ldr         r1,|$LN34@PlatformLo| ; =|??_C@_1BO@PELGLPFE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  009d0	f8d4 0254	 ldr         r0,[r4,#0x254]
  009d4	aa03		 add         r2,sp,#0xC
  009d6	f000 f800	 bl          |?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z|
  009da	f06f 0500	 mvn         r5,#0
  009de	b118		 cbz         r0,|$LN6@PlatformLo|

; 498  : 		{	// Legacy Backlight Off Registry value.
; 499  : 			m_dwBattBacklightTimeout = dwValue;

  009e0	9b03		 ldr         r3,[sp,#0xC]
  009e2	f8c4 3274	 str         r3,[r4,#0x274]
  009e6	e00a		 b           |$LN4@PlatformLo|
  009e8		 |$LN6@PlatformLo|

; 500  : 		}
; 501  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldBatteryTimeout"), &dwValue))

  009e8	493d		 ldr         r1,|$LN33@PlatformLo| ; =|??_C@_1CE@PHAMGDO@?$AAO?$AAl?$AAd?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  009ea	f8d4 0254	 ldr         r0,[r4,#0x254]
  009ee	aa03		 add         r2,sp,#0xC
  009f0	f000 f800	 bl          |?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z|
  009f4	b118		 cbz         r0,|$LN4@PlatformLo|

; 502  : 		{
; 503  : 			m_dwBattBacklightTimeout = INFINITE;

  009f6	f8c4 5274	 str         r5,[r4,#0x274]

; 504  : 			m_dwBattUserIdleTimeout = INFINITE;

  009fa	f8c4 5278	 str         r5,[r4,#0x278]
  009fe		 |$LN4@PlatformLo|

; 505  : 		}
; 506  : 
; 507  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("ACTimeout"), &dwValue))

  009fe	4937		 ldr         r1,|$LN32@PlatformLo| ; =|??_C@_1BE@PJBHBNNG@?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00a00	f8d4 0254	 ldr         r0,[r4,#0x254]
  00a04	aa03		 add         r2,sp,#0xC
  00a06	f000 f800	 bl          |?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z|
  00a0a	b118		 cbz         r0,|$LN3@PlatformLo|

; 508  : 		{	// Legacy Backlight Off Registry value.
; 509  : 			m_dwACBacklightTimeout = dwValue;

  00a0c	9b03		 ldr         r3,[sp,#0xC]
  00a0e	f8c4 3264	 str         r3,[r4,#0x264]
  00a12	e00a		 b           |$LN1@PlatformLo|
  00a14		 |$LN3@PlatformLo|

; 510  : 		}
; 511  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldACTimeout"), &dwValue))

  00a14	4930		 ldr         r1,|$LN31@PlatformLo| ; =|??_C@_1BK@GNGPINPK@?$AAO?$AAl?$AAd?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00a16	f8d4 0254	 ldr         r0,[r4,#0x254]
  00a1a	aa03		 add         r2,sp,#0xC
  00a1c	f000 f800	 bl          |?GetRegValue@NotifyRegKey@@QAAHPBGPAK@Z|
  00a20	b118		 cbz         r0,|$LN1@PlatformLo|

; 512  : 		{
; 513  : 			m_dwACBacklightTimeout = INFINITE;

  00a22	f8c4 5264	 str         r5,[r4,#0x264]

; 514  : 			m_dwACUserIdleTimeout = INFINITE;

  00a26	f8c4 5268	 str         r5,[r4,#0x268]
  00a2a		 |$LN1@PlatformLo|

; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 519  : 			  (_T
; 520  : 			   ("%s: ACSuspendTimeout %d, ACResumingSuspendTimeout %d,  ACBacklightTimeout %d, ACUserIdleTimeout %d \r\n"),
; 521  : 			   pszFname, m_dwACSuspendTimeout, m_dwACResumingSuspendTimeout, m_dwACBacklightTimeout,
; 522  : 			   m_dwACUserIdleTimeout));

  00a2a	4d2a		 ldr         r5,|$LN30@PlatformLo| ; =|dpCurSettings|
  00a2c	f8d5 3440	 ldr         r3,[r5,#0x440]
  00a30	f013 0f04	 tst         r3,#4
  00a34	d102		 bne         |$LN13@PlatformLo|
  00a36	f413 6f80	 tst         r3,#0x400
  00a3a	d01d		 beq         |$LN14@PlatformLo|
  00a3c		 |$LN13@PlatformLo|
  00a3c	f8d4 3268	 ldr         r3,[r4,#0x268]
  00a40	f8d4 225c	 ldr         r2,[r4,#0x25C]
  00a44	4921		 ldr         r1,|$LN28@PlatformLo| ; =|??_C@_1FA@CGCIHKLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAL?$AAo?$AAa?$AAd?$AAT@|
  00a46	9301		 str         r3,[sp,#4]
  00a48	f8d4 3264	 ldr         r3,[r4,#0x264]
  00a4c	4820		 ldr         r0,|$LN29@PlatformLo| ; =|??_C@_1MM@BEOOFGNN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm@|
  00a4e	9300		 str         r3,[sp]
  00a50	f8d4 3260	 ldr         r3,[r4,#0x260]
  00a54	f000 f800	 bl          NKDbgPrintfW
  00a58	f8d4 3268	 ldr         r3,[r4,#0x268]
  00a5c	f8d4 225c	 ldr         r2,[r4,#0x25C]
  00a60	491a		 ldr         r1,|$LN28@PlatformLo| ; =|??_C@_1FA@CGCIHKLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAL?$AAo?$AAa?$AAd?$AAT@|
  00a62	9301		 str         r3,[sp,#4]
  00a64	f8d4 3264	 ldr         r3,[r4,#0x264]
  00a68	4819		 ldr         r0,|$LN29@PlatformLo| ; =|??_C@_1MM@BEOOFGNN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm@|
  00a6a	9300		 str         r3,[sp]
  00a6c	f8d4 3260	 ldr         r3,[r4,#0x260]
  00a70	f000 f800	 bl          CeLogMsg
  00a74	f8d5 3440	 ldr         r3,[r5,#0x440]
  00a78		 |$LN14@PlatformLo|

; 523  : 	PMLOGMSG (ZONE_INIT
; 524  : 			  || ZONE_PLATFORM,
; 525  : 			  (_T
; 526  : 			   ("%s: BattSuspendTimeout %d, BattResumingSuspendTimeout %d , BattBacklightTimeout %d, BattUserIdleTimeout%d \r\n"),
; 527  : 			   pszFname, m_dwBattSuspendTimeout, m_dwBattResumingSuspendTimeout,
; 528  : 			   m_dwBattBacklightTimeout, m_dwBattUserIdleTimeout));

  00a78	f013 0f04	 tst         r3,#4
  00a7c	d102		 bne         |$LN15@PlatformLo|
  00a7e	f413 6f80	 tst         r3,#0x400
  00a82	d01b		 beq         |$LN16@PlatformLo|
  00a84		 |$LN15@PlatformLo|
  00a84	f8d4 3278	 ldr         r3,[r4,#0x278]
  00a88	f8d4 226c	 ldr         r2,[r4,#0x26C]
  00a8c	490f		 ldr         r1,|$LN28@PlatformLo| ; =|??_C@_1FA@CGCIHKLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAL?$AAo?$AAa?$AAd?$AAT@|
  00a8e	9301		 str         r3,[sp,#4]
  00a90	f8d4 3274	 ldr         r3,[r4,#0x274]
  00a94	480c		 ldr         r0,|$LN27@PlatformLo| ; =|??_C@_1NK@BONKCGGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAR@|
  00a96	9300		 str         r3,[sp]
  00a98	f8d4 3270	 ldr         r3,[r4,#0x270]
  00a9c	f000 f800	 bl          NKDbgPrintfW
  00aa0	f8d4 3278	 ldr         r3,[r4,#0x278]
  00aa4	f8d4 226c	 ldr         r2,[r4,#0x26C]
  00aa8	4908		 ldr         r1,|$LN28@PlatformLo| ; =|??_C@_1FA@CGCIHKLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAL?$AAo?$AAa?$AAd?$AAT@|
  00aaa	9301		 str         r3,[sp,#4]
  00aac	f8d4 3274	 ldr         r3,[r4,#0x274]
  00ab0	4805		 ldr         r0,|$LN27@PlatformLo| ; =|??_C@_1NK@BONKCGGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAR@|
  00ab2	9300		 str         r3,[sp]
  00ab4	f8d4 3270	 ldr         r3,[r4,#0x270]
  00ab8	f000 f800	 bl          CeLogMsg
  00abc		 |$LN16@PlatformLo|
  00abc		 |$M25|

; 529  : }

  00abc	f20d 2d1c	 addw        sp,sp,#0x21C
  00ac0	f000 f800	 bl          __security_pop_cookie
  00ac4	e8bd 8830	 pop         {r4,r5,r11,pc}
  00ac8		 |$LN26@PlatformLo|
  00ac8		 |$LN27@PlatformLo|
  00ac8	0000 0000	 DCD         |??_C@_1NK@BONKCGGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAB?$AAa?$AAt?$AAt?$AAR@|
  00acc		 |$LN28@PlatformLo|
  00acc	0000 0000	 DCD         |??_C@_1FA@CGCIHKLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAL?$AAo?$AAa?$AAd?$AAT@|
  00ad0		 |$LN29@PlatformLo|
  00ad0	0000 0000	 DCD         |??_C@_1MM@BEOOFGNN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm@|
  00ad4		 |$LN30@PlatformLo|
  00ad4	0000 0000	 DCD         |dpCurSettings|
  00ad8		 |$LN31@PlatformLo|
  00ad8	0000 0000	 DCD         |??_C@_1BK@GNGPINPK@?$AAO?$AAl?$AAd?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00adc		 |$LN32@PlatformLo|
  00adc	0000 0000	 DCD         |??_C@_1BE@PJBHBNNG@?$AAA?$AAC?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00ae0		 |$LN33@PlatformLo|
  00ae0	0000 0000	 DCD         |??_C@_1CE@PHAMGDO@?$AAO?$AAl?$AAd?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00ae4		 |$LN34@PlatformLo|
  00ae4	0000 0000	 DCD         |??_C@_1BO@PELGLPFE@?$AAB?$AAa?$AAt?$AAt?$AAe?$AAr?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00ae8		 |$LN35@PlatformLo|
  00ae8	0000 0000	 DCD         |??_C@_1BA@DMMGCODP@?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AA?$AA@|
  00aec		 |$LN36@PlatformLo|
  00aec	0000 0000	 DCD         |??_C@_1BK@ONLBCKCN@?$AAB?$AAa?$AAt?$AAt?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  00af0		 |$LN37@PlatformLo|
  00af0	0000 0000	 DCD         |??_C@_1CK@EJHDCKBI@?$AAB?$AAa?$AAt?$AAt?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00af4		 |$LN38@PlatformLo|
  00af4	0000 0000	 DCD         |??_C@_1DG@JHEKGCLH@?$AAB?$AAa?$AAt?$AAt?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00af8		 |$LN39@PlatformLo|
  00af8	0000 0000	 DCD         |??_C@_1CG@OPCBLDNA@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00afc		 |$LN40@PlatformLo|
  00afc	0000 0000	 DCD         |??_C@_1BG@BDFEBKKE@?$AAA?$AAC?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  00b00		 |$LN41@PlatformLo|
  00b00	0000 0000	 DCD         |??_C@_1CG@GPCHDDGG@?$AAA?$AAC?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00b04		 |$LN42@PlatformLo|
  00b04	0000 0000	 DCD         |??_C@_1DC@MOJOBHAI@?$AAA?$AAC?$AAR?$AAe?$AAs?$AAu?$AAm?$AAi?$AAn?$AAg?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00b08		 |$LN43@PlatformLo|
  00b08	0000 0000	 DCD         |??_C@_1CC@LFNKHDIA@?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00b0c		 |$LN44@PlatformLo|
  00b0c	0000 0000	 DCD         |??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  00b10		 |$LN45@PlatformLo|
  00b10	0000 0000	 DCD         |??_C@_1BC@EFOLCMFD@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$AA@|
  00b14		 |$LN46@PlatformLo|
  00b14	0000 0000	 DCD         |??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@|
  00b18		 |$LN47@PlatformLo|
  00b18	93e0 0004	 DCD         0x493e0
  00b1c		 |$LN48@PlatformLo|
  00b1c	d4c0 0001	 DCD         0x1d4c0
  00b20		 |$LN49@PlatformLo|
  00b20	27c0 0009	 DCD         0x927c0
  00b24		 |$M23|

			 ENDP  ; |?PlatformLoadTimeouts@PowerStateManager@@UAAXXZ|, PowerStateManager::PlatformLoadTimeouts

	EXPORT	|??_C@_1EE@KHKCGJBK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AAT?$AAi?$AAm?$AAe?$AAr?$AAR?$AAe?$AAs?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?ThreadRun@PowerStateManager@@UAAKXZ|	; PowerStateManager::ThreadRun
	EXPORT	|??_7PowerStateManager@@6B@| [ DATA ]	; PowerStateManager::`vftable'
	EXPORT	|??0PowerStateManager@@QAA@XZ|		; PowerStateManager::PowerStateManager
	IMPORT	|OpenEventW|
	IMPORT	|PmPolicyCreateNotificationQueue|

  00078			 AREA	 |.pdata|, PDATA
|$pdata1$??0PowerStateManager@@QAA@XZ| DCD imagerel |$LN6@PowerState|
	DCD	0xfd3060f1

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerStateManager@@6B@| DCD |?SystemStateToActivityState@PowerStateManager@@UAA?AW4PLATFORM_ACTIVITY_STATE@@PBG@Z| ; PowerStateManager::`vftable'
	DCD	|?ActivityStateToSystemState@PowerStateManager@@UAAPBGW4PLATFORM_ACTIVITY_STATE@@@Z|
	DCD	|?ReInitTimeOuts@PowerStateManager@@UAAXH@Z|
	DCD	|?ReAdjustTimeOuts@PowerStateManager@@UAAXXZ|
	DCD	|?ResetUserIdleTimeout@PowerStateManager@@UAAXH@Z|
	DCD	|?ResetSystemIdleTimeTimeout@PowerStateManager@@UAAXH@Z|
	DCD	|?SubtractTimeout@PowerStateManager@@UAAXK@Z|
	DCD	|?GetSmallestTimeout@PowerStateManager@@UAAKPAW4TIMEOUT_ITEM@@@Z|
	DCD	|?DisablePhase2Event@PowerStateManager@@UAAXXZ|
	DCD	|?ThreadRun@PowerStateManager@@UAAKXZ|
	DCD	|?PlatformLoadTimeouts@PowerStateManager@@UAAXXZ|
	DCD	|?CreatePowerStateList@PowerStateManager@@UAAHXZ|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "/"
	DCB	0x0, "B", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, "P", 0x0, "h"
	DCB	0x0, "a", 0x0, "s", 0x0, "e", 0x0, "2", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "M", 0x0, "a"
	DCB	0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, "/"
	DCB	0x0, "R", 0x0, "e", 0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d"
	DCB	0x0, "A", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i"
	DCB	0x0, "t", 0x0, "y", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@KHKCGJBK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AAT?$AAi?$AAm?$AAe?$AAr?$AAR?$AAe?$AAs?$AAe@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "M", 0x0, "a"
	DCB	0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, "/"
	DCB	0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m"
	DCB	0x0, "I", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "r", 0x0, "R", 0x0, "e", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00b24			 AREA	 |.text|, CODE, THUMB

  00b24		 |??0PowerStateManager@@QAA@XZ| PROC	; PowerStateManager::PowerStateManager

; 98   : {

  00b24		 |$LN6@PowerState|
  00b24	e92d 4818	 push        {r3,r4,r11,lr}
  00b28	f20d 0b08	 addw        r11,sp,#8
  00b2c		 |$M4|
  00b2c	4604		 mov         r4,r0
  00b2e	f000 f800	 bl          |??0PMSystemAPI@@QAA@XZ|
  00b32	4b1f		 ldr         r3,|$LN14@PowerState| ; =|??_7PowerStateManager@@6B@|

; 99   : 	// Create events
; 100  : 	m_hevBootPhase2 = OpenEvent (EVENT_ALL_ACCESS, FALSE, _T ("SYSTEM/BootPhase2"));

  00b34	4a1d		 ldr         r2,|$LN13@PowerState| ; =|??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@|
  00b36	481c		 ldr         r0,|$LN12@PowerState| ; =0x1f0003
  00b38	2100		 movs        r1,#0
  00b3a	6023		 str         r3,[r4]
  00b3c	f000 f800	 bl          OpenEventW

; 101  : 
; 102  : 	m_hevReloadActivityTimeouts =
; 103  : 		CreateEvent (NULL, FALSE, FALSE, _T ("PowerManager/ReloadActivityTimeouts"));

  00b40	4b18		 ldr         r3,|$LN11@PowerState| ; =|??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@|
  00b42	f8c4 0238	 str         r0,[r4,#0x238]
  00b46	2000		 movs        r0,#0
  00b48	2200		 movs        r2,#0
  00b4a	2100		 movs        r1,#0
  00b4c	f000 f800	 bl          CreateEventW
  00b50	f8c4 023c	 str         r0,[r4,#0x23C]

; 104  : 	m_hevRestartTimers = CreateEvent (NULL, FALSE, FALSE, NULL);

  00b54	2000		 movs        r0,#0
  00b56	2300		 movs        r3,#0
  00b58	2200		 movs        r2,#0
  00b5a	2100		 movs        r1,#0
  00b5c	f000 f800	 bl          CreateEventW

; 105  : 	m_hevSystemIdleTimerReset =
; 106  : 		CreateEvent (NULL, FALSE, FALSE, _T ("PowerManager/SystemIdleTimerReset"));

  00b60	4b0f		 ldr         r3,|$LN10@PowerState| ; =|??_C@_1EE@KHKCGJBK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AAT?$AAi?$AAm?$AAe?$AAr?$AAR?$AAe?$AAs?$AAe@|
  00b62	f8c4 0240	 str         r0,[r4,#0x240]
  00b66	2000		 movs        r0,#0
  00b68	2200		 movs        r2,#0
  00b6a	2100		 movs        r1,#0
  00b6c	f000 f800	 bl          CreateEventW
  00b70	f8c4 0244	 str         r0,[r4,#0x244]

; 107  : 	m_hqNotify = PmPolicyCreateNotificationQueue ();

  00b74	f000 f800	 bl          PmPolicyCreateNotificationQueue

; 108  : 	// Using Global Event
; 109  : 	m_hevPmShutdown = ghevPmShutdown;

  00b78	4b08		 ldr         r3,|$LN9@PowerState| ; =|ghevPmShutdown|
  00b7a	f8c4 024c	 str         r0,[r4,#0x24C]

; 110  : 
; 111  : 	m_pPowerStateList = NULL;
; 112  : 
; 113  : 	m_dwUnattendedModeRef = 0;
; 114  : 	m_pLegacySPScreenOff = NULL;
; 115  : 	m_pLegacyBacklightOff = NULL;
; 116  : }

  00b7e	4620		 mov         r0,r4
  00b80	681b		 ldr         r3,[r3]
  00b82	f8c4 3248	 str         r3,[r4,#0x248]
  00b86	2300		 movs        r3,#0
  00b88	f8c4 327c	 str         r3,[r4,#0x27C]
  00b8c	f8c4 3290	 str         r3,[r4,#0x290]
  00b90	f8c4 3250	 str         r3,[r4,#0x250]
  00b94	f8c4 3254	 str         r3,[r4,#0x254]
  00b98		 |$M7|
  00b98	e8bd 8818	 pop         {r3,r4,r11,pc}
  00b9c		 |$LN8@PowerState|
  00b9c		 |$LN9@PowerState|
  00b9c	0000 0000	 DCD         |ghevPmShutdown|
  00ba0		 |$LN10@PowerState|
  00ba0	0000 0000	 DCD         |??_C@_1EE@KHKCGJBK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AAT?$AAi?$AAm?$AAe?$AAr?$AAR?$AAe?$AAs?$AAe@|
  00ba4		 |$LN11@PowerState|
  00ba4	0000 0000	 DCD         |??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@|
  00ba8		 |$LN12@PowerState|
  00ba8	0003 001f	 DCD         0x1f0003
  00bac		 |$LN13@PowerState|
  00bac	0000 0000	 DCD         |??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@|
  00bb0		 |$LN14@PowerState|
  00bb0	0000 0000	 DCD         |??_7PowerStateManager@@6B@|
  00bb4		 |$M5|

			 ENDP  ; |??0PowerStateManager@@QAA@XZ|, PowerStateManager::PowerStateManager

	EXPORT	|??_C@_1GI@IPJOIKEB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@PCNICJCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@BIAJPGEI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi@| [ DATA ] ; `string'
	EXPORT	|?GetFirstPowerState@PowerStateManager@@QAAPAVPowerState@@XZ| ; PowerStateManager::GetFirstPowerState
	IMPORT	|WaitForMultipleObjects|

  00080			 AREA	 |.pdata|, PDATA
|$pdata1$?GetFirstPowerState@PowerStateManager@@QAAPAVPowerState@@XZ| DCD imagerel |$LN35@GetFirstPo|
	DCD	0xfdb26169

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@BIAJPGEI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "u"
	DCB	0x0, "t", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, " "
	DCB	0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "s", 0x0, "i", 0x0, "g", 0x0, "n", 0x0, "a", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@PCNICJCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "a", 0x0, "n"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":"
	DCB	0x0, "G", 0x0, "e", 0x0, "t", 0x0, "F", 0x0, "i", 0x0, "r"
	DCB	0x0, "s", 0x0, "t", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@IPJOIKEB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "W", 0x0, "a", 0x0, "i"
	DCB	0x0, "t", 0x0, "F", 0x0, "o", 0x0, "r", 0x0, "M", 0x0, "u"
	DCB	0x0, "l", 0x0, "t", 0x0, "i", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "O", 0x0, "b", 0x0, "j", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00bb4			 AREA	 |.text|, CODE, THUMB

  00bb4		 |?GetFirstPowerState@PowerStateManager@@QAAPAVPowerState@@XZ| PROC ; PowerStateManager::GetFirstPowerState

; 580  : {

  00bb4		 |$LN35@GetFirstPo|
  00bb4	e92d 487e	 push        {r1-r6,r11,lr}
  00bb8	f20d 0b18	 addw        r11,sp,#0x18
  00bbc		 |$M33|

; 581  : 	SETFNAME (_T ("PowerStateManager::GetFirstPowerState"));
; 582  : 	PowerState *curState = NULL;
; 583  : 	HANDLE hEvents[2];
; 584  : 
; 585  : 	hEvents[0] = ghevPmShutdown;

  00bbc	4b2f		 ldr         r3,|$LN43@GetFirstPo| ; =|ghevPmShutdown|
  00bbe	4605		 mov         r5,r0
  00bc0	2400		 movs        r4,#0
  00bc2	681b		 ldr         r3,[r3]

; 586  : 	hEvents[1] = GetAPISignalHandle ();
; 587  : 	DWORD dwStatus = WaitForMultipleObjects (2, hEvents, FALSE, INFINITE);

  00bc4	4669		 mov         r1,sp
  00bc6	2200		 movs        r2,#0
  00bc8	9300		 str         r3,[sp]
  00bca	6aab		 ldr         r3,[r5,#0x28]
  00bcc	2002		 movs        r0,#2
  00bce	9301		 str         r3,[sp,#4]
  00bd0	43e3		 mvns        r3,r4
  00bd2	f000 f800	 bl          WaitForMultipleObjects

; 611  : 	  default:
; 612  : 		  PMLOGMSG (ZONE_INIT
; 613  : 					|| ZONE_WARN, (_T ("%s: WaitForMultipleObjects() returned %d, exiting\r\n"),
; 614  : 								   pszFname, dwStatus));

  00bd6	4b28		 ldr         r3,|$LN42@GetFirstPo| ; =|dpCurSettings|
  00bd8	4606		 mov         r6,r0
  00bda	f8d3 3440	 ldr         r3,[r3,#0x440]
  00bde	b396		 cbz         r6,|$LN7@GetFirstPo|

; 588  : 
; 589  : 	switch (dwStatus)

  00be0	2e01		 cmp         r6,#1
  00be2	d010		 beq         |$LN6@GetFirstPo|

; 611  : 	  default:
; 612  : 		  PMLOGMSG (ZONE_INIT
; 613  : 					|| ZONE_WARN, (_T ("%s: WaitForMultipleObjects() returned %d, exiting\r\n"),
; 614  : 								   pszFname, dwStatus));

  00be4	f013 0f04	 tst         r3,#4
  00be8	d102		 bne         |$LN16@GetFirstPo|
  00bea	f013 0f02	 tst         r3,#2
  00bee	d038		 beq         |$LN13@GetFirstPo|
  00bf0		 |$LN16@GetFirstPo|
  00bf0	491e		 ldr         r1,|$LN39@GetFirstPo| ; =|??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@|
  00bf2	4820		 ldr         r0,|$LN41@GetFirstPo| ; =|??_C@_1GI@IPJOIKEB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@|
  00bf4	4632		 mov         r2,r6
  00bf6	f000 f800	 bl          NKDbgPrintfW
  00bfa	491c		 ldr         r1,|$LN39@GetFirstPo| ; =|??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@|
  00bfc	481d		 ldr         r0,|$LN41@GetFirstPo| ; =|??_C@_1GI@IPJOIKEB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@|
  00bfe	4632		 mov         r2,r6
  00c00	f000 f800	 bl          CeLogMsg

; 615  : 		  break;

  00c04	e02d		 b           |$LN13@GetFirstPo|
  00c06		 |$LN6@GetFirstPo|

; 594  : 		  break;
; 595  : 	  case (WAIT_OBJECT_0 + 1):
; 596  : 		  {
; 597  : 			  PMLOGMSG (ZONE_INIT, (_T ("%s: initialization complete\r\n"), pszFname));

  00c06	f013 0f04	 tst         r3,#4
  00c0a	d007		 beq         |$LN14@GetFirstPo|
  00c0c	4917		 ldr         r1,|$LN39@GetFirstPo| ; =|??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@|
  00c0e	4818		 ldr         r0,|$LN40@GetFirstPo| ; =|??_C@_1DM@PCNICJCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00c10	f000 f800	 bl          NKDbgPrintfW
  00c14	4915		 ldr         r1,|$LN39@GetFirstPo| ; =|??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@|
  00c16	4816		 ldr         r0,|$LN40@GetFirstPo| ; =|??_C@_1DM@PCNICJCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00c18	f000 f800	 bl          CeLogMsg
  00c1c		 |$LN14@GetFirstPo|

; 598  : 			  PLATFORM_ACTIVITY_STATE apiState = RequestedSystemPowerState ();

  00c1c	4628		 mov         r0,r5
  00c1e	f000 f800	 bl          |?RequestedSystemPowerState@PMSystemAPI@@QAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|

; 599  : 
; 600  : 			  curState = m_pPowerStateList;

  00c22	f8d5 427c	 ldr         r4,[r5,#0x27C]
  00c26	4606		 mov         r6,r0
  00c28	e006		 b           |$LN31@GetFirstPo|
  00c2a		 |$LL5@GetFirstPo|

; 602  : 			  {
; 603  : 				  if (curState->GetState () == apiState)

  00c2a	6823		 ldr         r3,[r4]
  00c2c	4620		 mov         r0,r4
  00c2e	695b		 ldr         r3,[r3,#0x14]
  00c30	4798		 blx         r3
  00c32	42b0		 cmp         r0,r6
  00c34	d002		 beq         |$LN30@GetFirstPo|

; 604  : 					  break;
; 605  : 				  else
; 606  : 					  curState = curState->GetNextPowerState ();

  00c36	6964		 ldr         r4,[r4,#0x14]
  00c38		 |$LN31@GetFirstPo|

; 601  : 			  while (curState)

  00c38	2c00		 cmp         r4,#0
  00c3a	d1f6		 bne         |$LL5@GetFirstPo|
  00c3c		 |$LN30@GetFirstPo|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  00c3c	6ae8		 ldr         r0,[r5,#0x2C]
  00c3e	2103		 movs        r1,#3
  00c40	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 610  : 		  break;

  00c44	e00d		 b           |$LN13@GetFirstPo|
  00c46		 |$LN7@GetFirstPo|

; 590  : 	{
; 591  : 	  case (WAIT_OBJECT_0 + 0):
; 592  : 		  PMLOGMSG (ZONE_INIT
; 593  : 					|| ZONE_WARN, (_T ("%s: shutdown event signaled, exiting\r\n"), pszFname));

  00c46	f013 0f04	 tst         r3,#4
  00c4a	d102		 bne         |$LN12@GetFirstPo|
  00c4c	f013 0f02	 tst         r3,#2
  00c50	d007		 beq         |$LN13@GetFirstPo|
  00c52		 |$LN12@GetFirstPo|
  00c52	4906		 ldr         r1,|$LN39@GetFirstPo| ; =|??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@|
  00c54	4804		 ldr         r0,|$LN38@GetFirstPo| ; =|??_C@_1EO@BIAJPGEI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi@|
  00c56	f000 f800	 bl          NKDbgPrintfW
  00c5a	4904		 ldr         r1,|$LN39@GetFirstPo| ; =|??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@|
  00c5c	4802		 ldr         r0,|$LN38@GetFirstPo| ; =|??_C@_1EO@BIAJPGEI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi@|
  00c5e	f000 f800	 bl          CeLogMsg
  00c62		 |$LN13@GetFirstPo|

; 616  : 	}
; 617  : 	return curState;
; 618  : }

  00c62	4620		 mov         r0,r4
  00c64		 |$M36|
  00c64	e8bd 887e	 pop         {r1-r6,r11,pc}
  00c68		 |$LN37@GetFirstPo|
  00c68		 |$LN38@GetFirstPo|
  00c68	0000 0000	 DCD         |??_C@_1EO@BIAJPGEI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi@|
  00c6c		 |$LN39@GetFirstPo|
  00c6c	0000 0000	 DCD         |??_C@_1EM@FHIMJKJH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAG?$AAe?$AAt?$AAF?$AAi?$AAr?$AAs?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr@|
  00c70		 |$LN40@GetFirstPo|
  00c70	0000 0000	 DCD         |??_C@_1DM@PCNICJCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00c74		 |$LN41@GetFirstPo|
  00c74	0000 0000	 DCD         |??_C@_1GI@IPJOIKEB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@|
  00c78		 |$LN42@GetFirstPo|
  00c78	0000 0000	 DCD         |dpCurSettings|
  00c7c		 |$LN43@GetFirstPo|
  00c7c	0000 0000	 DCD         |ghevPmShutdown|
  00c80		 |$M34|

			 ENDP  ; |?GetFirstPowerState@PowerStateManager@@QAAPAVPowerState@@XZ|, PowerStateManager::GetFirstPowerState

	EXPORT	|??_C@_1EM@CFJHILCA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAt?$AAo?$AA?5?$AA?$CC?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@DEDGDBDG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@JJGHMLFM@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?SetSystemState@PowerStateManager@@AAAPAVPowerState@@PAV2@@Z| ; PowerStateManager::SetSystemState

  00088			 AREA	 |.pdata|, PDATA
|$pdata1$?SetSystemState@PowerStateManager@@AAAPAVPowerState@@PAV2@@Z| DCD imagerel |$LN27@SetSystemS|
	DCD	0x3561b9

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@JJGHMLFM@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "n", 0x0, "s", 0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o"
	DCB	0x0, "r", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@DEDGDBDG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "a", 0x0, "n"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@CFJHILCA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAt?$AAo?$AA?5?$AA?$CC?$AA?$CF@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, "f", 0x0, "r"
	DCB	0x0, "o", 0x0, "m", 0x0, " ", 0x0, """", 0x0, "%", 0x0, "s"
	DCB	0x0, """", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, """"
	DCB	0x0, "%", 0x0, "s", 0x0, """", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00c80			 AREA	 |.text|, CODE, THUMB

  00c80		 |?SetSystemState@PowerStateManager@@AAAPAVPowerState@@PAV2@@Z| PROC ; PowerStateManager::SetSystemState

; 747  : {

  00c80		 |$LN27@SetSystemS|
  00c80	e92d 4bf0	 push        {r4-r9,r11,lr}
  00c84	f20d 0b18	 addw        r11,sp,#0x18
  00c88		 |$M25|
  00c88	460d		 mov         r5,r1

; 748  : 	SETFNAME (_T ("PowerStateManager::SetSystemState"));
; 749  : 	if (pCurPowerState != NULL)

  00c8a	2d00		 cmp         r5,#0
  00c8c	4681		 mov         r9,r0
  00c8e	d062		 beq         |$LN22@SetSystemS|

; 750  : 	{
; 751  : 		PLATFORM_ACTIVITY_STATE curState = pCurPowerState->GetState ();

  00c90	682b		 ldr         r3,[r5]
  00c92	4608		 mov         r0,r1
  00c94	695b		 ldr         r3,[r3,#0x14]
  00c96	4798		 blx         r3
  00c98	f8df 80d8	 ldr         r8,|$LN36@SetSystemS| ; =|dpCurSettings|
  00c9c	4604		 mov         r4,r0
  00c9e		 |$LL8@SetSystemS|

; 752  : 		PLATFORM_ACTIVITY_STATE newState = curState;
; 753  : 
; 754  : 		do
; 755  : 		{	// Switch to new stable state.
; 756  : 			newState = pCurPowerState->GetLastNewState ();

  00c9e	682b		 ldr         r3,[r5]
  00ca0	4628		 mov         r0,r5
  00ca2	6a1b		 ldr         r3,[r3,#0x20]
  00ca4	4798		 blx         r3
  00ca6	4607		 mov         r7,r0

; 757  : 			if (newState != curState)

  00ca8	42a7		 cmp         r7,r4
  00caa	d054		 beq         |$LN22@SetSystemS|

; 758  : 			{
; 759  : 				PowerState *pNewPowerState = GetStateObject (newState);

  00cac	4601		 mov         r1,r0
  00cae	4648		 mov         r0,r9
  00cb0	f000 f800	 bl          |?GetStateObject@PowerStateManager@@QAAPAVPowerState@@W4PLATFORM_ACTIVITY_STATE@@@Z|
  00cb4	4606		 mov         r6,r0

; 760  : 
; 761  : 				if (pNewPowerState == NULL)

  00cb6	b3b6		 cbz         r6,|$LN23@SetSystemS|

; 766  : 					newState = curState;
; 767  : 				}
; 768  : 				else if (pNewPowerState != pCurPowerState)

  00cb8	42ae		 cmp         r6,r5
  00cba	d030		 beq         |$LN2@SetSystemS|

; 769  : 				{
; 770  : 					PMLOGMSG (ZONE_INIT
; 771  : 							  || ZONE_PLATFORM, (_T ("%s: state change from \"%s\" to \"%s\" \r\n"),
; 772  : 												 pszFname, pCurPowerState->GetStateString (),
; 773  : 												 pNewPowerState->GetStateString ()));

  00cbc	f8d8 3440	 ldr         r3,[r8,#0x440]
  00cc0	f013 0f04	 tst         r3,#4
  00cc4	d102		 bne         |$LN16@SetSystemS|
  00cc6	f413 6f80	 tst         r3,#0x400
  00cca	d01d		 beq         |$LN17@SetSystemS|
  00ccc		 |$LN16@SetSystemS|
  00ccc	6833		 ldr         r3,[r6]
  00cce	4630		 mov         r0,r6
  00cd0	699b		 ldr         r3,[r3,#0x18]
  00cd2	4798		 blx         r3
  00cd4	682b		 ldr         r3,[r5]
  00cd6	4604		 mov         r4,r0
  00cd8	4628		 mov         r0,r5
  00cda	699b		 ldr         r3,[r3,#0x18]
  00cdc	4798		 blx         r3
  00cde	4924		 ldr         r1,|$LN35@SetSystemS| ; =|??_C@_1EE@DEDGDBDG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt@|
  00ce0	4602		 mov         r2,r0
  00ce2	4822		 ldr         r0,|$LN34@SetSystemS| ; =|??_C@_1EM@CFJHILCA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAt?$AAo?$AA?5?$AA?$CC?$AA?$CF@|
  00ce4	4623		 mov         r3,r4
  00ce6	f000 f800	 bl          NKDbgPrintfW
  00cea	6833		 ldr         r3,[r6]
  00cec	4630		 mov         r0,r6
  00cee	699b		 ldr         r3,[r3,#0x18]
  00cf0	4798		 blx         r3
  00cf2	682b		 ldr         r3,[r5]
  00cf4	4604		 mov         r4,r0
  00cf6	4628		 mov         r0,r5
  00cf8	699b		 ldr         r3,[r3,#0x18]
  00cfa	4798		 blx         r3
  00cfc	491c		 ldr         r1,|$LN35@SetSystemS| ; =|??_C@_1EE@DEDGDBDG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt@|
  00cfe	4602		 mov         r2,r0
  00d00	481a		 ldr         r0,|$LN34@SetSystemS| ; =|??_C@_1EM@CFJHILCA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAt?$AAo?$AA?5?$AA?$CC?$AA?$CF@|
  00d02	4623		 mov         r3,r4
  00d04	f000 f800	 bl          CeLogMsg
  00d08		 |$LN17@SetSystemS|

; 774  : 					pCurPowerState = pNewPowerState;
; 775  : 					pCurPowerState->EnterState ();

  00d08	6833		 ldr         r3,[r6]
  00d0a	4630		 mov         r0,r6
  00d0c	4635		 mov         r5,r6
  00d0e	685b		 ldr         r3,[r3,#4]
  00d10	4798		 blx         r3

; 776  : 
; 777  : 					// Update to new state:
; 778  : 					curState = newState;
; 779  : 					newState = pCurPowerState->GetLastNewState ();

  00d12	6833		 ldr         r3,[r6]
  00d14	4630		 mov         r0,r6
  00d16	463c		 mov         r4,r7
  00d18	6a1b		 ldr         r3,[r3,#0x20]
  00d1a	4798		 blx         r3

; 780  : 				}
; 781  : 				else

  00d1c	e000		 b           |$LN7@SetSystemS|
  00d1e		 |$LN2@SetSystemS|

; 782  : 					newState = curState;

  00d1e	4620		 mov         r0,r4
  00d20		 |$LN7@SetSystemS|

; 783  : 			}
; 784  : 		} while (newState != curState);	    // Change to stable state.

  00d20	42a0		 cmp         r0,r4
  00d22	d1bc		 bne         |$LL8@SetSystemS|
  00d24	e017		 b           |$LN22@SetSystemS|
  00d26		 |$LN23@SetSystemS|

; 762  : 				{	// Wrong state or unsupported state.
; 763  : 					PMLOGMSG (ZONE_WARN
; 764  : 							  || ZONE_PLATFORM, (_T ("Unsupported state %d \r\n"), newState));

  00d26	f8d8 3440	 ldr         r3,[r8,#0x440]
  00d2a	f013 0f02	 tst         r3,#2
  00d2e	d102		 bne         |$LN12@SetSystemS|
  00d30	f413 6f80	 tst         r3,#0x400
  00d34	d007		 beq         |$LN13@SetSystemS|
  00d36		 |$LN12@SetSystemS|
  00d36	480c		 ldr         r0,|$LN33@SetSystemS| ; =|??_C@_1DA@JJGHMLFM@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  00d38	4639		 mov         r1,r7
  00d3a	f000 f800	 bl          NKDbgPrintfW
  00d3e	480a		 ldr         r0,|$LN33@SetSystemS| ; =|??_C@_1DA@JJGHMLFM@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  00d40	4639		 mov         r1,r7
  00d42	f000 f800	 bl          CeLogMsg
  00d46		 |$LN13@SetSystemS|

; 765  : 					ASSERT (FALSE);

  00d46	4a07		 ldr         r2,|$LN32@SetSystemS| ; =|??_C@_1IO@IDNLAEOI@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  00d48	4905		 ldr         r1,|$LN31@SetSystemS| ; =|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00d4a	4804		 ldr         r0,|$LN30@SetSystemS| ; =|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00d4c	f240 23fd	 mov         r3,#0x2FD
  00d50	f000 f800	 bl          NKDbgPrintfW
  00d54	defe		 __debugbreak
  00d56		 |$LN22@SetSystemS|

; 785  : 
; 786  : 		ASSERT (pCurPowerState != NULL);
; 787  : 	}
; 788  : 	return pCurPowerState;
; 789  : }

  00d56	4628		 mov         r0,r5
  00d58		 |$M28|
  00d58	e8bd 8bf0	 pop         {r4-r9,r11,pc}
  00d5c		 |$LN29@SetSystemS|
  00d5c		 |$LN30@SetSystemS|
  00d5c	0000 0000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00d60		 |$LN31@SetSystemS|
  00d60	0000 0000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00d64		 |$LN32@SetSystemS|
  00d64	0000 0000	 DCD         |??_C@_1IO@IDNLAEOI@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  00d68		 |$LN33@SetSystemS|
  00d68	0000 0000	 DCD         |??_C@_1DA@JJGHMLFM@?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  00d6c		 |$LN34@SetSystemS|
  00d6c	0000 0000	 DCD         |??_C@_1EM@CFJHILCA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAt?$AAo?$AA?5?$AA?$CC?$AA?$CF@|
  00d70		 |$LN35@SetSystemS|
  00d70	0000 0000	 DCD         |??_C@_1EE@DEDGDBDG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAS?$AAt?$AAa?$AAt@|
  00d74		 |$LN36@SetSystemS|
  00d74	0000 0000	 DCD         |dpCurSettings|
  00d78		 |$M26|

			 ENDP  ; |?SetSystemState@PowerStateManager@@AAAPAVPowerState@@PAV2@@Z|, PowerStateManager::SetSystemState

	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateOff@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateOff@@UAAPAXI@Z| PROC	; PowerStateOff::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateOff@@UAAPAXI@Z|, PowerStateOff::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateOn@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateOn@@UAAPAXI@Z| PROC	; PowerStateOn::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateOn@@UAAPAXI@Z|, PowerStateOn::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateUserIdle@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateUserIdle@@UAAPAXI@Z| PROC ; PowerStateUserIdle::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateUserIdle@@UAAPAXI@Z|, PowerStateUserIdle::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateUnattended@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateUnattended@@UAAPAXI@Z| PROC ; PowerStateUnattended::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateUnattended@@UAAPAXI@Z|, PowerStateUnattended::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateResuming@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateResuming@@UAAPAXI@Z| PROC ; PowerStateResuming::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateResuming@@UAAPAXI@Z|, PowerStateResuming::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateSuspend@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateSuspend@@UAAPAXI@Z| PROC ; PowerStateSuspend::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateSuspend@@UAAPAXI@Z|, PowerStateSuspend::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateScreenOff@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateScreenOff@@UAAPAXI@Z| PROC ; PowerStateScreenOff::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateScreenOff@@UAAPAXI@Z|, PowerStateScreenOff::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateBacklightOff@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateBacklightOff@@UAAPAXI@Z| PROC ; PowerStateBacklightOff::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateBacklightOff@@UAAPAXI@Z|, PowerStateBacklightOff::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateColdReboot@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateColdReboot@@UAAPAXI@Z| PROC ; PowerStateColdReboot::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateColdReboot@@UAAPAXI@Z|, PowerStateColdReboot::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GPowerStateReboot@@UAAPAXI@Z| DCD imagerel |$LN9@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GPowerStateReboot@@UAAPAXI@Z| PROC	; PowerStateReboot::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1PowerState@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M10|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M8|

			 ENDP  ; |??_GPowerStateReboot@@UAAPAXI@Z|, PowerStateReboot::`scalar deleting destructor'

	EXPORT	|??_GNotifyRegKey@@QAAPAXI@Z|		; NotifyRegKey::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GNotifyRegKey@@QAAPAXI@Z| DCD imagerel |$LN15@scalar|
	DCD	0x31606d
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GNotifyRegKey@@QAAPAXI@Z| PROC	; NotifyRegKey::`scalar deleting destructor'
  00000		 |$LN15@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M13|
  00008	4604		 mov         r4,r0
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 133  : 		if (m_hNotifyEvent != INVALID_HANDLE_VALUE)

  0000a	6860		 ldr         r0,[r4,#4]
  0000c	460d		 mov         r5,r1
  0000e	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00012	d001		 beq         |$LN4@scalar|

; 134  : 			CloseHandle (m_hNotifyEvent);

  00014	f000 f800	 bl          CloseHandle
  00018		 |$LN4@scalar|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  00018	6820		 ldr         r0,[r4]
  0001a	b118		 cbz         r0,|$LN9@scalar|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  0001c	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  00020	2300		 movs        r3,#0
  00022	6023		 str         r3,[r4]
  00024		 |$LN9@scalar|
  00024	f015 0f01	 tst         r5,#1
  00028	d002		 beq         |$LN1@scalar|
  0002a	4620		 mov         r0,r4
  0002c	f000 f800	 bl          |??3@YAXPAX@Z|
  00030		 |$LN1@scalar|
  00030	4620		 mov         r0,r4
  00032		 |$M16|
  00032	e8bd 8830	 pop         {r4,r5,r11,pc}
  00036		 |$M14|

			 ENDP  ; |??_GNotifyRegKey@@QAAPAXI@Z|, NotifyRegKey::`scalar deleting destructor'

	EXPORT	|??1PowerStateManager@@QAA@XZ|		; PowerStateManager::~PowerStateManager
	IMPORT	|PmPolicyCloseNotificationQueue|

  00090			 AREA	 |.pdata|, PDATA
|$pdata1$??1PowerStateManager@@QAA@XZ| DCD imagerel |$LN48@PowerState|
	DCD	0xfd326161
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00d78			 AREA	 |.text|, CODE, THUMB

  00d78		 |??1PowerStateManager@@QAA@XZ| PROC	; PowerStateManager::~PowerStateManager

; 119  : {

  00d78		 |$LN48@PowerState|
  00d78	e92d 4878	 push        {r3-r6,r11,lr}
  00d7c	f20d 0b10	 addw        r11,sp,#0x10
  00d80		 |$M46|
  00d80	4b29		 ldr         r3,|$LN51@PowerState| ; =|??_7PowerStateManager@@6B@|
  00d82	4604		 mov         r4,r0
  00d84	6023		 str         r3,[r4]

; 120  : 	while (m_pPowerStateList != NULL)

  00d86	f8d0 327c	 ldr         r3,[r0,#0x27C]
  00d8a	b163		 cbz         r3,|$LN8@PowerState|
  00d8c		 |$LL9@PowerState|

; 121  : 	{
; 122  : 		PowerState *pNextState = m_pPowerStateList->GetNextPowerState ();

  00d8c	f8d4 327c	 ldr         r3,[r4,#0x27C]
  00d90	695d		 ldr         r5,[r3,#0x14]

; 123  : 		delete m_pPowerStateList;

  00d92	b123		 cbz         r3,|$LN12@PowerState|
  00d94	4618		 mov         r0,r3
  00d96	681b		 ldr         r3,[r3]
  00d98	2101		 movs        r1,#1
  00d9a	681b		 ldr         r3,[r3]
  00d9c	4798		 blx         r3
  00d9e		 |$LN12@PowerState|

; 124  : 
; 125  : 		m_pPowerStateList = pNextState;

  00d9e	f8c4 527c	 str         r5,[r4,#0x27C]
  00da2	2d00		 cmp         r5,#0
  00da4	d1f2		 bne         |$LL9@PowerState|
  00da6		 |$LN8@PowerState|

; 126  : 	}
; 127  : 	if (m_hevReloadActivityTimeouts)

  00da6	f8d4 023c	 ldr         r0,[r4,#0x23C]
  00daa	b108		 cbz         r0,|$LN7@PowerState|

; 128  : 		CloseHandle (m_hevReloadActivityTimeouts);

  00dac	f000 f800	 bl          CloseHandle
  00db0		 |$LN7@PowerState|

; 129  : 	if (m_hevRestartTimers)

  00db0	f8d4 0240	 ldr         r0,[r4,#0x240]
  00db4	b108		 cbz         r0,|$LN6@PowerState|

; 130  : 		CloseHandle (m_hevRestartTimers);

  00db6	f000 f800	 bl          CloseHandle
  00dba		 |$LN6@PowerState|

; 131  : 	if (m_hevSystemIdleTimerReset)

  00dba	f8d4 0244	 ldr         r0,[r4,#0x244]
  00dbe	b108		 cbz         r0,|$LN5@PowerState|

; 132  : 		CloseHandle (m_hevSystemIdleTimerReset);

  00dc0	f000 f800	 bl          CloseHandle
  00dc4		 |$LN5@PowerState|

; 133  : 	if (m_hevBootPhase2)

  00dc4	f8d4 0238	 ldr         r0,[r4,#0x238]
  00dc8	b108		 cbz         r0,|$LN4@PowerState|

; 134  : 		CloseHandle (m_hevBootPhase2);

  00dca	f000 f800	 bl          CloseHandle
  00dce		 |$LN4@PowerState|

; 135  : 	if (m_hqNotify)

  00dce	f8d4 024c	 ldr         r0,[r4,#0x24C]
  00dd2	b108		 cbz         r0,|$LN3@PowerState|

; 136  : 		PmPolicyCloseNotificationQueue (m_hqNotify);

  00dd4	f000 f800	 bl          PmPolicyCloseNotificationQueue
  00dd8		 |$LN3@PowerState|

; 137  : 	if (m_pLegacySPScreenOff)

  00dd8	f8d4 5250	 ldr         r5,[r4,#0x250]
  00ddc	2600		 movs        r6,#0
  00dde	b16d		 cbz         r5,|$LN20@PowerState|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 133  : 		if (m_hNotifyEvent != INVALID_HANDLE_VALUE)

  00de0	6868		 ldr         r0,[r5,#4]
  00de2	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00de6	d001		 beq         |$LN23@PowerState|

; 134  : 			CloseHandle (m_hNotifyEvent);

  00de8	f000 f800	 bl          CloseHandle
  00dec		 |$LN23@PowerState|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  00dec	6828		 ldr         r0,[r5]
  00dee	b110		 cbz         r0,|$LN28@PowerState|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  00df0	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  00df4	602e		 str         r6,[r5]
  00df6		 |$LN28@PowerState|
  00df6	4628		 mov         r0,r5
  00df8	f000 f800	 bl          |??3@YAXPAX@Z|
  00dfc		 |$LN20@PowerState|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 140  : 	if (m_pLegacyBacklightOff)

  00dfc	f8d4 5254	 ldr         r5,[r4,#0x254]
  00e00	b16d		 cbz         r5,|$LN31@PowerState|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 133  : 		if (m_hNotifyEvent != INVALID_HANDLE_VALUE)

  00e02	6868		 ldr         r0,[r5,#4]
  00e04	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00e08	d001		 beq         |$LN34@PowerState|

; 134  : 			CloseHandle (m_hNotifyEvent);

  00e0a	f000 f800	 bl          CloseHandle
  00e0e		 |$LN34@PowerState|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  00e0e	6828		 ldr         r0,[r5]
  00e10	b110		 cbz         r0,|$LN39@PowerState|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  00e12	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  00e16	602e		 str         r6,[r5]
  00e18		 |$LN39@PowerState|
  00e18	4628		 mov         r0,r5
  00e1a	f000 f800	 bl          |??3@YAXPAX@Z|
  00e1e		 |$LN31@PowerState|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 142  : }

  00e1e	4620		 mov         r0,r4
  00e20	f000 f800	 bl          |??1PMSystemAPI@@QAA@XZ|
  00e24		 |$M49|
  00e24	e8bd 8878	 pop         {r3-r6,r11,pc}
  00e28		 |$LN50@PowerState|
  00e28		 |$LN51@PowerState|
  00e28	0000 0000	 DCD         |??_7PowerStateManager@@6B@|
  00e2c		 |$M47|

			 ENDP  ; |??1PowerStateManager@@QAA@XZ|, PowerStateManager::~PowerStateManager

	EXPORT	|??_C@_1CG@FDJPJCCG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@MGKPHPG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?ReInitLegacyRegistry@PowerStateManager@@AAAHXZ| ; PowerStateManager::ReInitLegacyRegistry

  00098			 AREA	 |.pdata|, PDATA
|$pdata1$?ReInitLegacyRegistry@PowerStateManager@@AAAHXZ| DCD imagerel |$LN96@ReInitLega|
	DCD	0xfdb46215

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@MGKPHPG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "P", 0x0, "a", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, "\\"
	DCB	0x0, "B", 0x0, "a", 0x0, "c", 0x0, "k", 0x0, "l", 0x0, "i"
	DCB	0x0, "g", 0x0, "h", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@FDJPJCCG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "P", 0x0, "a", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, "\\"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\public\common\oak\inc\cregedit.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00e2c			 AREA	 |.text|, CODE, THUMB

  00e2c		 |?ReInitLegacyRegistry@PowerStateManager@@AAAHXZ| PROC ; PowerStateManager::ReInitLegacyRegistry

; 188  : {

  00e2c		 |$LN96@ReInitLega|
  00e2c	e92d 49fe	 push        {r1-r8,r11,lr}
  00e30	f20d 0b20	 addw        r11,sp,#0x20
  00e34		 |$M94|

; 189  : 	if (m_pLegacySPScreenOff != NULL)

  00e34	f8d0 4250	 ldr         r4,[r0,#0x250]
  00e38	2700		 movs        r7,#0
  00e3a	4605		 mov         r5,r0
  00e3c	b16c		 cbz         r4,|$LN19@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 133  : 		if (m_hNotifyEvent != INVALID_HANDLE_VALUE)

  00e3e	6860		 ldr         r0,[r4,#4]
  00e40	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00e44	d001		 beq         |$LN22@ReInitLega|

; 134  : 			CloseHandle (m_hNotifyEvent);

  00e46	f000 f800	 bl          CloseHandle
  00e4a		 |$LN22@ReInitLega|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  00e4a	6820		 ldr         r0,[r4]
  00e4c	b110		 cbz         r0,|$LN27@ReInitLega|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  00e4e	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  00e52	6027		 str         r7,[r4]
  00e54		 |$LN27@ReInitLega|
  00e54	4620		 mov         r0,r4
  00e56	f000 f800	 bl          |??3@YAXPAX@Z|
  00e5a		 |$LN19@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 192  : 	m_pLegacySPScreenOff = new NotifyRegKey (HKEY_CURRENT_USER, TEXT ("ControlPanel\\Power"));

  00e5a	2008		 movs        r0,#8
  00e5c	f000 f800	 bl          |??2@YAPAXI@Z|
  00e60	2301		 movs        r3,#1
  00e62	4604		 mov         r4,r0
  00e64	07de		 lsls        r6,r3,#0x1F
  00e66	f06f 0800	 mvn         r8,#0
  00e6a	b19c		 cbz         r4,|$LN9@ReInitLega|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 47   :             if( RegOpenKeyEx( hKey, pszRegPath, 0, 0, &m_hDevKey ) != ERROR_SUCCESS )

  00e6c	4933		 ldr         r1,|$LN100@ReInitLega| ; =|??_C@_1CG@FDJPJCCG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@|
  00e6e	2300		 movs        r3,#0
  00e70	2200		 movs        r2,#0
  00e72	1c70		 adds        r0,r6,#1
  00e74	6027		 str         r7,[r4]
  00e76	9400		 str         r4,[sp]
  00e78	f000 f800	 bl          RegOpenKeyExW
  00e7c	b100		 cbz         r0,|$LN33@ReInitLega|

; 48   :             {
; 49   :                 m_hDevKey = NULL;

  00e7e	6027		 str         r7,[r4]
  00e80		 |$LN33@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 126  : 		if (GetHKey () != NULL)

  00e80	6820		 ldr         r0,[r4]
  00e82	f8c4 8004	 str         r8,[r4,#4]
  00e86	b130		 cbz         r0,|$LN10@ReInitLega|

; 127  : 		{
; 128  : 			m_hNotifyEvent = CeFindFirstRegChange (GetHKey (), TRUE, REG_NOTIFY_CHANGE_LAST_SET);

  00e88	2204		 movs        r2,#4
  00e8a	2101		 movs        r1,#1
  00e8c	f000 f800	 bl          CeFindFirstRegChange
  00e90	6060		 str         r0,[r4,#4]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 192  : 	m_pLegacySPScreenOff = new NotifyRegKey (HKEY_CURRENT_USER, TEXT ("ControlPanel\\Power"));

  00e92	e000		 b           |$LN10@ReInitLega|
  00e94		 |$LN9@ReInitLega|
  00e94	2400		 movs        r4,#0
  00e96		 |$LN10@ReInitLega|
  00e96	f8c5 4250	 str         r4,[r5,#0x250]

; 193  : 	if (m_pLegacySPScreenOff && !m_pLegacySPScreenOff->Init ())

  00e9a	b16c		 cbz         r4,|$LN3@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 138  : 		return m_hNotifyEvent != INVALID_HANDLE_VALUE;

  00e9c	6863		 ldr         r3,[r4,#4]
  00e9e	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00ea2	d109		 bne         |$LN3@ReInitLega|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  00ea4	6820		 ldr         r0,[r4]
  00ea6	b110		 cbz         r0,|$LN53@ReInitLega|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  00ea8	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  00eac	6027		 str         r7,[r4]
  00eae		 |$LN53@ReInitLega|
  00eae	4620		 mov         r0,r4
  00eb0	f000 f800	 bl          |??3@YAXPAX@Z|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 196  : 		m_pLegacySPScreenOff = NULL;

  00eb4	f8c5 7250	 str         r7,[r5,#0x250]
  00eb8		 |$LN3@ReInitLega|

; 197  : 	}
; 198  : 
; 199  : 	if (m_pLegacyBacklightOff != NULL)

  00eb8	f8d5 4254	 ldr         r4,[r5,#0x254]
  00ebc	b16c		 cbz         r4,|$LN56@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 133  : 		if (m_hNotifyEvent != INVALID_HANDLE_VALUE)

  00ebe	6860		 ldr         r0,[r4,#4]
  00ec0	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00ec4	d001		 beq         |$LN59@ReInitLega|

; 134  : 			CloseHandle (m_hNotifyEvent);

  00ec6	f000 f800	 bl          CloseHandle
  00eca		 |$LN59@ReInitLega|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  00eca	6820		 ldr         r0,[r4]
  00ecc	b110		 cbz         r0,|$LN64@ReInitLega|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  00ece	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  00ed2	6027		 str         r7,[r4]
  00ed4		 |$LN64@ReInitLega|
  00ed4	4620		 mov         r0,r4
  00ed6	f000 f800	 bl          |??3@YAXPAX@Z|
  00eda		 |$LN56@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 202  : 	m_pLegacyBacklightOff = new NotifyRegKey (HKEY_CURRENT_USER, TEXT ("ControlPanel\\Backlight"));

  00eda	2008		 movs        r0,#8
  00edc	f000 f800	 bl          |??2@YAPAXI@Z|
  00ee0	4604		 mov         r4,r0
  00ee2	b19c		 cbz         r4,|$LN15@ReInitLega|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 47   :             if( RegOpenKeyEx( hKey, pszRegPath, 0, 0, &m_hDevKey ) != ERROR_SUCCESS )

  00ee4	4914		 ldr         r1,|$LN99@ReInitLega| ; =|??_C@_1CO@MGKPHPG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@|
  00ee6	2300		 movs        r3,#0
  00ee8	2200		 movs        r2,#0
  00eea	1c70		 adds        r0,r6,#1
  00eec	6027		 str         r7,[r4]
  00eee	9400		 str         r4,[sp]
  00ef0	f000 f800	 bl          RegOpenKeyExW
  00ef4	b100		 cbz         r0,|$LN70@ReInitLega|

; 48   :             {
; 49   :                 m_hDevKey = NULL;

  00ef6	6027		 str         r7,[r4]
  00ef8		 |$LN70@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 126  : 		if (GetHKey () != NULL)

  00ef8	6820		 ldr         r0,[r4]
  00efa	f8c4 8004	 str         r8,[r4,#4]
  00efe	b130		 cbz         r0,|$LN16@ReInitLega|

; 127  : 		{
; 128  : 			m_hNotifyEvent = CeFindFirstRegChange (GetHKey (), TRUE, REG_NOTIFY_CHANGE_LAST_SET);

  00f00	2204		 movs        r2,#4
  00f02	2101		 movs        r1,#1
  00f04	f000 f800	 bl          CeFindFirstRegChange
  00f08	6060		 str         r0,[r4,#4]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 202  : 	m_pLegacyBacklightOff = new NotifyRegKey (HKEY_CURRENT_USER, TEXT ("ControlPanel\\Backlight"));

  00f0a	e000		 b           |$LN16@ReInitLega|
  00f0c		 |$LN15@ReInitLega|
  00f0c	2400		 movs        r4,#0
  00f0e		 |$LN16@ReInitLega|
  00f0e	f8c5 4254	 str         r4,[r5,#0x254]

; 203  : 	if (m_pLegacyBacklightOff && !m_pLegacyBacklightOff->Init ())

  00f12	b16c		 cbz         r4,|$LN1@ReInitLega|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 138  : 		return m_hNotifyEvent != INVALID_HANDLE_VALUE;

  00f14	6863		 ldr         r3,[r4,#4]
  00f16	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00f1a	d109		 bne         |$LN1@ReInitLega|
; File c:\wince800\public\common\oak\inc\cregedit.h

; 93   :         if( m_hDevKey )

  00f1c	6820		 ldr         r0,[r4]
  00f1e	b110		 cbz         r0,|$LN90@ReInitLega|

; 94   :         {
; 95   :             RegCloseKey( m_hDevKey );

  00f20	f000 f800	 bl          RegCloseKey

; 96   :             m_hDevKey = NULL;

  00f24	6027		 str         r7,[r4]
  00f26		 |$LN90@ReInitLega|
  00f26	4620		 mov         r0,r4
  00f28	f000 f800	 bl          |??3@YAXPAX@Z|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 207  : 		m_pLegacyBacklightOff = NULL;

  00f2c	f8c5 7254	 str         r7,[r5,#0x254]
  00f30		 |$LN1@ReInitLega|

; 208  : 	}
; 209  : 	return TRUE;

  00f30	2001		 movs        r0,#1
  00f32		 |$M97|

; 210  : }

  00f32	e8bd 89fe	 pop         {r1-r8,r11,pc}
  00f36		 |$LN101@ReInitLega|
  00f36		 |$M102|
  00f36	defe		 __debugbreak
  00f38		 |$LN98@ReInitLega|
  00f38		 |$LN99@ReInitLega|
  00f38	0000 0000	 DCD         |??_C@_1CO@MGKPHPG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAB?$AAa?$AAc?$AAk?$AAl?$AAi?$AAg?$AAh?$AAt?$AA?$AA@|
  00f3c		 |$LN100@ReInitLega|
  00f3c	0000 0000	 DCD         |??_C@_1CG@FDJPJCCG@?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAP?$AAa?$AAn?$AAe?$AAl?$AA?2?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@|
  00f40		 |$M95|

			 ENDP  ; |?ReInitLegacyRegistry@PowerStateManager@@AAAHXZ|, PowerStateManager::ReInitLegacyRegistry

	EXPORT	|??_C@_1DG@EIDJHANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@JBHNPNO@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|?PMExt_GetNotificationHandle@@YAHAAKQAPAX@Z| ; PMExt_GetNotificationHandle
	IMPORT	|?PMExt_EventNotification@@YAXW4PLATFORM_ACTIVITY_EVENT@@@Z| ; PMExt_EventNotification

  000a0			 AREA	 |.pdata|, PDATA
|$pdata1$?ThreadRun@PowerStateManager@@UAAKXZ| DCD imagerel |$LN80@ThreadRun|
	DCD	0x10f603cd

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@JBHNPNO@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "a", 0x0, "n"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":"
	DCB	0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "R", 0x0, "u", 0x0, "n", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@EIDJHANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "a", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  00f40			 AREA	 |.text|, CODE, THUMB

  00f40		 |?ThreadRun@PowerStateManager@@UAAKXZ| PROC ; PowerStateManager::ThreadRun

; 622  : {

  00f40		 |$LN80@ThreadRun|
  00f40	e92d 4ff0	 push        {r4-r11,lr}
  00f44	f20d 0b1c	 addw        r11,sp,#0x1C
  00f48	b0c3		 sub         sp,sp,#0x10C
  00f4a		 |$M78|

; 623  : 	SETFNAME (_T ("PowerStateManager::ThreadRun"));
; 624  : 
; 625  : 	// Assume that the first state is PowerStateOn. 
; 626  : 	if (m_pPowerStateList)

  00f4a	f8d0 327c	 ldr         r3,[r0,#0x27C]
  00f4e	4605		 mov         r5,r0
  00f50	2b00		 cmp         r3,#0
  00f52	f000 80e4	 beq         |$LN35@ThreadRun|

; 627  : 	{
; 628  : 		// Get first SetSystemPower from the device to make the initial power state correct.
; 629  : 		PowerState *pCurPowerState = GetFirstPowerState ();

  00f56	f000 f800	 bl          |?GetFirstPowerState@PowerStateManager@@QAAPAVPowerState@@XZ|
  00f5a	4606		 mov         r6,r0

; 630  : 
; 631  : 		if (pCurPowerState != NULL)

  00f5c	2e00		 cmp         r6,#0
  00f5e	f000 80d6	 beq         |$LN24@ThreadRun|

; 632  : 		{
; 633  : 			pCurPowerState->EnterState ();

  00f62	6833		 ldr         r3,[r6]
  00f64	685b		 ldr         r3,[r3,#4]
  00f66	4798		 blx         r3

; 634  : 			BOOL fDone = FALSE;

  00f68	f04f 0900	 mov         r9,#0
  00f6c	f10d 0a08	 add         r10,sp,#8
  00f70	aa02		 add         r2,sp,#8
  00f72	f44f 5880	 mov         r8,#0x1000
  00f76		 |$LL23@ThreadRun|

; 637  : 			while (!fDone && pCurPowerState)

  00f76	2e00		 cmp         r6,#0
  00f78	f000 80d1	 beq         |$LN35@ThreadRun|

; 638  : 			{
; 639  : 				HANDLE hEvents[MAXIMUM_WAIT_OBJECTS];
; 640  : 				DWORD dwNumOfLegacyEvent = 0;
; 641  : 
; 642  : 				if (m_pLegacySPScreenOff)

  00f7c	f8d5 3250	 ldr         r3,[r5,#0x250]
  00f80	2700		 movs        r7,#0
  00f82	b113		 cbz         r3,|$LN21@ThreadRun|

; 643  : 				{
; 644  : 					hEvents[dwNumOfLegacyEvent] = m_pLegacySPScreenOff->GetNotificationHandle ();

  00f84	685b		 ldr         r3,[r3,#4]

; 645  : 					dwNumOfLegacyEvent++;

  00f86	2701		 movs        r7,#1
  00f88	9302		 str         r3,[sp,#8]
  00f8a		 |$LN21@ThreadRun|

; 646  : 				}
; 647  : 				if (m_pLegacyBacklightOff)

  00f8a	f8d5 3254	 ldr         r3,[r5,#0x254]
  00f8e	b11b		 cbz         r3,|$LN20@ThreadRun|

; 648  : 				{
; 649  : 					hEvents[dwNumOfLegacyEvent] = m_pLegacyBacklightOff->GetNotificationHandle ();

  00f90	685b		 ldr         r3,[r3,#4]
  00f92	f84a 3027	 str         r3,[r10,r7,lsl #2]

; 650  : 					dwNumOfLegacyEvent++;

  00f96	3701		 adds        r7,#1
  00f98		 |$LN20@ThreadRun|

; 651  : 				}
; 652  : 				DWORD dwNumOfExtEvent = MAXIMUM_WAIT_OBJECTS - dwNumOfLegacyEvent;

  00f98	f1d7 0340	 rsbs        r3,r7,#0x40

; 653  : 
; 654  : 				if (!PMExt_GetNotificationHandle (dwNumOfExtEvent, hEvents + dwNumOfLegacyEvent))

  00f9c	eb02 0187	 add         r1,r2,r7,lsl #2
  00fa0	4668		 mov         r0,sp
  00fa2	9300		 str         r3,[sp]
  00fa4	f000 f800	 bl          |?PMExt_GetNotificationHandle@@YAHAAKQAPAX@Z|
  00fa8	b910		 cbnz        r0,|$LN58@ThreadRun|

; 655  : 					dwNumOfExtEvent = 0;

  00faa	2200		 movs        r2,#0
  00fac	9200		 str         r2,[sp]
  00fae	e000		 b           |$LN19@ThreadRun|
  00fb0		 |$LN58@ThreadRun|
  00fb0	9a00		 ldr         r2,[sp]
  00fb2		 |$LN19@ThreadRun|

; 656  : 
; 657  : 				ASSERT (dwNumOfExtEvent + dwNumOfLegacyEvent < MAXIMUM_WAIT_OBJECTS);

  00fb2	19d3		 adds        r3,r2,r7
  00fb4	2b40		 cmp         r3,#0x40
  00fb6	d308		 bcc         |$LN29@ThreadRun|
  00fb8	4a5d		 ldr         r2,|$LN85@ThreadRun| ; =|??_C@_1IO@IDNLAEOI@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  00fba	495c		 ldr         r1,|$LN84@ThreadRun| ; =|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  00fbc	485a		 ldr         r0,|$LN83@ThreadRun| ; =|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  00fbe	f240 2391	 mov         r3,#0x291
  00fc2	f000 f800	 bl          NKDbgPrintfW
  00fc6	defe		 __debugbreak
  00fc8	9a00		 ldr         r2,[sp]
  00fca		 |$LN29@ThreadRun|

; 658  : 
; 659  : 				PLATFORM_ACTIVITY_EVENT activityEvent =
; 660  : 					pCurPowerState->WaitForEvent (INFINITE, dwNumOfExtEvent + dwNumOfLegacyEvent,
; 661  : 												  hEvents);

  00fca	6834		 ldr         r4,[r6]
  00fcc	ab02		 add         r3,sp,#8
  00fce	19d2		 adds        r2,r2,r7
  00fd0	68e4		 ldr         r4,[r4,#0xC]
  00fd2	f06f 0100	 mvn         r1,#0
  00fd6	4630		 mov         r0,r6
  00fd8	47a0		 blx         r4

; 662  : 				PMLOGMSG (ZONE_PLATFORM,
; 663  : 						  (_T ("%s: activityEvent = %d  \r\n"), pszFname, activityEvent));

  00fda	4b58		 ldr         r3,|$LN88@ThreadRun| ; =|dpCurSettings|
  00fdc	4604		 mov         r4,r0
  00fde	f8d3 3440	 ldr         r3,[r3,#0x440]
  00fe2	f413 6f80	 tst         r3,#0x400
  00fe6	d009		 beq         |$LN30@ThreadRun|
  00fe8	4953		 ldr         r1,|$LN87@ThreadRun| ; =|??_C@_1DK@JBHNPNO@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?$AA@|
  00fea	4602		 mov         r2,r0
  00fec	4851		 ldr         r0,|$LN86@ThreadRun| ; =|??_C@_1DG@EIDJHANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  00fee	f000 f800	 bl          NKDbgPrintfW
  00ff2	4951		 ldr         r1,|$LN87@ThreadRun| ; =|??_C@_1DK@JBHNPNO@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?$AA@|
  00ff4	484f		 ldr         r0,|$LN86@ThreadRun| ; =|??_C@_1DG@EIDJHANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  00ff6	4622		 mov         r2,r4
  00ff8	f000 f800	 bl          CeLogMsg
  00ffc		 |$LN30@ThreadRun|

; 664  : 				if (activityEvent >= ExternedEvent
; 665  : 					&& activityEvent <
; 666  : 					(PLATFORM_ACTIVITY_EVENT) (ExternedEvent + dwNumOfLegacyEvent))

  00ffc	f5b4 5f80	 cmp         r4,#0x1000
  01000	db12		 blt         |$LN18@ThreadRun|
  01002	eb07 0308	 add         r3,r7,r8
  01006	429c		 cmp         r4,r3
  01008	da0e		 bge         |$LN18@ThreadRun|

; 667  : 				{	// Legacy registry Event.
; 668  : 					PlatformLoadTimeouts ();	// No break we need run ReInitTimeouts.

  0100a	682b		 ldr         r3,[r5]
  0100c	4628		 mov         r0,r5
  0100e	6a9b		 ldr         r3,[r3,#0x28]
  01010	4798		 blx         r3

; 669  : 					ReInitTimeOuts (TRUE);

  01012	682b		 ldr         r3,[r5]
  01014	2101		 movs        r1,#1
  01016	4628		 mov         r0,r5
  01018	689b		 ldr         r3,[r3,#8]
  0101a	4798		 blx         r3

; 670  : 					pCurPowerState->DefaultEventHandle (RestartTimeouts);

  0101c	6833		 ldr         r3,[r6]
  0101e	2108		 movs        r1,#8
  01020	4630		 mov         r0,r6
  01022	691b		 ldr         r3,[r3,#0x10]
  01024	4798		 blx         r3

; 671  : 				}
; 672  : 				else if (activityEvent >=

  01026	e02f		 b           |$LN15@ThreadRun|
  01028		 |$LN18@ThreadRun|

; 673  : 						 (PLATFORM_ACTIVITY_EVENT) (ExternedEvent + dwNumOfLegacyEvent)
; 674  : 						 && activityEvent <
; 675  : 						 (PLATFORM_ACTIVITY_EVENT) (ExternedEvent + dwNumOfLegacyEvent +
; 676  : 													dwNumOfExtEvent))

  01028	eb07 0308	 add         r3,r7,r8
  0102c	429c		 cmp         r4,r3
  0102e	db08		 blt         |$LN16@ThreadRun|
  01030	9b00		 ldr         r3,[sp]
  01032	19db		 adds        r3,r3,r7
  01034	4443		 add         r3,r3,r8
  01036	429c		 cmp         r4,r3
  01038	da03		 bge         |$LN16@ThreadRun|

; 677  : 				{
; 678  : 					PMExt_EventNotification ((PLATFORM_ACTIVITY_EVENT)
; 679  : 											 (activityEvent - ExternedEvent - dwNumOfLegacyEvent +
; 680  : 											  PowerManagerExt));

  0103a	1be3		 subs        r3,r4,r7
  0103c	f6a3 0000	 subw        r0,r3,#0x800

; 681  : 				}
; 682  : 				else

  01040	e020		 b           |$LN59@ThreadRun|
  01042		 |$LN16@ThreadRun|

; 683  : 				{
; 684  : 					switch (activityEvent)

  01042	1f62		 subs        r2,r4,#5
  01044	2a0c		 cmp         r2,#0xC
  01046	d817		 bhi         |$LN3@ThreadRun|
  01048	e8df f002	 tbb         [pc,r2]
  0104c		 |$LN64@ThreadRun|
  0104c		 |$LN63@ThreadRun|
  0104c		 |$LN65@ThreadRun|
  0104c	52		 DCB         0x52
  0104d		 |$LN66@ThreadRun|
  0104d	59		 DCB         0x59
  0104e		 |$LN67@ThreadRun|
  0104e	16		 DCB         0x16
  0104f		 |$LN68@ThreadRun|
  0104f	11		 DCB         0x11
  01050		 |$LN69@ThreadRun|
  01050	11		 DCB         0x11
  01051		 |$LN70@ThreadRun|
  01051	16		 DCB         0x16
  01052		 |$LN71@ThreadRun|
  01052	11		 DCB         0x11
  01053		 |$LN72@ThreadRun|
  01053	38		 DCB         0x38
  01054		 |$LN73@ThreadRun|
  01054	07		 DCB         0x7
  01055		 |$LN74@ThreadRun|
  01055	0d		 DCB         0xd
  01056		 |$LN75@ThreadRun|
  01056	11		 DCB         0x11
  01057		 |$LN76@ThreadRun|
  01057	11		 DCB         0x11
  01058		 |$LN77@ThreadRun|
  01058	0a		 DCB         0xa
  01059		 |$LN89@ThreadRun|
  01059	0a		 DCB         0xa
  0105a		 |$LN12@ThreadRun|

; 685  : 					{
; 686  : 					  case PmShutDown:
; 687  : 						  fDone = TRUE;

  0105a	f04f 0901	 mov         r9,#1

; 688  : 						  break;

  0105e	e010		 b           |$LN13@ThreadRun|
  01060		 |$LN11@ThreadRun|

; 689  : 					  case BootPhaseChanged:
; 690  : 						  ReInitLegacyRegistry ();	// No break because we need do following as well.

  01060	4628		 mov         r0,r5
  01062	f000 f800	 bl          |?ReInitLegacyRegistry@PowerStateManager@@AAAHXZ|
  01066		 |$LN10@ThreadRun|

; 691  : 					  case PmReloadActivityTimeouts:
; 692  : 						  PlatformLoadTimeouts ();	// No break we need run ReInitTimeouts.

  01066	682b		 ldr         r3,[r5]
  01068	4628		 mov         r0,r5
  0106a	6a9b		 ldr         r3,[r3,#0x28]
  0106c	4798		 blx         r3
  0106e		 |$LN9@ThreadRun|

; 693  : 					  case RestartTimeouts:
; 694  : 					  case PowerSourceChange:
; 695  : 					  case SystemPowerStateChange:
; 696  : 					  case PowerButtonPressed:
; 697  : 					  case AppButtonPressed:
; 698  : 						  ReInitTimeOuts (TRUE);

  0106e	682b		 ldr         r3,[r5]
  01070	2101		 movs        r1,#1
  01072	4628		 mov         r0,r5
  01074	689b		 ldr         r3,[r3,#8]
  01076	4798		 blx         r3
  01078		 |$LN3@ThreadRun|

; 725  : 					  default:
; 726  : 						  pCurPowerState->DefaultEventHandle (activityEvent);

  01078	4621		 mov         r1,r4
  0107a		 |$LN61@ThreadRun|
  0107a	6833		 ldr         r3,[r6]
  0107c	691b		 ldr         r3,[r3,#0x10]
  0107e		 |$LN60@ThreadRun|
  0107e	4630		 mov         r0,r6
  01080	4798		 blx         r3
  01082		 |$LN13@ThreadRun|

; 727  : 						  break;
; 728  : 					}
; 729  : 					PMExt_EventNotification (activityEvent);

  01082	4620		 mov         r0,r4
  01084		 |$LN59@ThreadRun|
  01084	f000 f800	 bl          |?PMExt_EventNotification@@YAXW4PLATFORM_ACTIVITY_EVENT@@@Z|
  01088		 |$LN15@ThreadRun|

; 730  : 				}
; 731  : 				pCurPowerState = SetSystemState (pCurPowerState);

  01088	4631		 mov         r1,r6
  0108a	4628		 mov         r0,r5
  0108c	f000 f800	 bl          |?SetSystemState@PowerStateManager@@AAAPAVPowerState@@PAV2@@Z|
  01090	4606		 mov         r6,r0

; 732  : 				ASSERT (pCurPowerState != NULL);

  01092	b93e		 cbnz        r6,|$LN33@ThreadRun|
  01094	4a26		 ldr         r2,|$LN85@ThreadRun| ; =|??_C@_1IO@IDNLAEOI@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  01096	4925		 ldr         r1,|$LN84@ThreadRun| ; =|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  01098	4823		 ldr         r0,|$LN83@ThreadRun| ; =|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  0109a	f44f 7337	 mov         r3,#0x2DC
  0109e	f000 f800	 bl          NKDbgPrintfW
  010a2	defe		 __debugbreak
  010a4		 |$LN33@ThreadRun|

; 733  : 				if (activityEvent == SystemPowerStateAPI)

  010a4	2c0c		 cmp         r4,#0xC
  010a6	d103		 bne         |$LN54@ThreadRun|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  010a8	6ae8		 ldr         r0,[r5,#0x2C]
  010aa	2103		 movs        r1,#3
  010ac	f000 f800	 bl          EventModify
  010b0		 |$LN54@ThreadRun|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 637  : 			while (!fDone && pCurPowerState)

  010b0	f1b9 0f00	 cmp         r9,#0
  010b4	aa02		 add         r2,sp,#8
  010b6	f43f af5e	 beq         |$LL23@ThreadRun|

; 734  : 				{
; 735  : 					RequestComplete ();
; 736  : 				}
; 737  : 			}
; 738  : 		}
; 739  : 		else

  010ba	e030		 b           |$LN35@ThreadRun|
  010bc		 |$LN8@ThreadRun|

; 699  : 						  pCurPowerState->DefaultEventHandle (activityEvent);
; 700  : 						  break;
; 701  : 					  case SystemPowerStateAPI:
; 702  : 						  {
; 703  : 							  PLATFORM_ACTIVITY_STATE apiState = RequestedSystemPowerState ();

  010bc	4628		 mov         r0,r5
  010be	f000 f800	 bl          |?RequestedSystemPowerState@PMSystemAPI@@QAA?AW4PLATFORM_ACTIVITY_STATE@@XZ|
  010c2	4607		 mov         r7,r0

; 704  : 							  PowerState *pNewPowerState = GetStateObject (apiState);

  010c4	4601		 mov         r1,r0
  010c6	4628		 mov         r0,r5
  010c8	f000 f800	 bl          |?GetStateObject@PowerStateManager@@QAAPAVPowerState@@W4PLATFORM_ACTIVITY_STATE@@@Z|
  010cc	4603		 mov         r3,r0

; 705  : 
; 706  : 							  if (pNewPowerState && !pNewPowerState->AppsCanRequestState ())

  010ce	b15b		 cbz         r3,|$LN7@ThreadRun|
  010d0	681b		 ldr         r3,[r3]
  010d2	6a9b		 ldr         r3,[r3,#0x28]
  010d4	4798		 blx         r3
  010d6	b938		 cbnz        r0,|$LN7@ThreadRun|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  010d8	6ae8		 ldr         r0,[r5,#0x2C]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 876  : 		m_dwResult = dwStatus;

  010da	2357		 movs        r3,#0x57
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  010dc	2103		 movs        r1,#3
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 876  : 		m_dwResult = dwStatus;

  010de	622b		 str         r3,[r5,#0x20]
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  010e0	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 709  : 								  activityEvent = NoActivity;

  010e4	2400		 movs        r4,#0

; 710  : 							  }
; 711  : 							  else

  010e6	e7cc		 b           |$LN13@ThreadRun|
  010e8		 |$LN7@ThreadRun|

; 712  : 							  {
; 713  : 								  pCurPowerState->SetSystemAPIState (apiState);

  010e8	6833		 ldr         r3,[r6]
  010ea	4639		 mov         r1,r7
  010ec	6a5b		 ldr         r3,[r3,#0x24]

; 714  : 							  }
; 715  : 							  break;

  010ee	e7c6		 b           |$LN60@ThreadRun|
  010f0		 |$LN5@ThreadRun|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 238  : 		return (++m_dwUnattendedModeRef);

  010f0	f8d5 3290	 ldr         r3,[r5,#0x290]
  010f4	3301		 adds        r3,#1
  010f6	f8c5 3290	 str         r3,[r5,#0x290]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 719  : 						  pCurPowerState->DefaultEventHandle (EnterUnattendedModeRequest);

  010fa	2105		 movs        r1,#5

; 720  : 						  break;

  010fc	e7bd		 b           |$LN61@ThreadRun|
  010fe		 |$LN4@ThreadRun|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.h

; 242  :         if (m_dwUnattendedModeRef)

  010fe	f8d5 3290	 ldr         r3,[r5,#0x290]
  01102	b113		 cbz         r3,|$LN48@ThreadRun|

; 243  :         {
; 244  : 			return (--m_dwUnattendedModeRef);

  01104	3b01		 subs        r3,#1
  01106	f8c5 3290	 str         r3,[r5,#0x290]
  0110a		 |$LN48@ThreadRun|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

; 723  : 						  pCurPowerState->DefaultEventHandle (LeaveUnattendedModeRequest);

  0110a	2106		 movs        r1,#6

; 724  : 						  break;

  0110c	e7b5		 b           |$LN61@ThreadRun|
  0110e		 |$LN24@ThreadRun|

; 740  : 			ASSERT (FALSE);

  0110e	4a08		 ldr         r2,|$LN85@ThreadRun| ; =|??_C@_1IO@IDNLAEOI@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  01110	4906		 ldr         r1,|$LN84@ThreadRun| ; =|??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  01112	4805		 ldr         r0,|$LN83@ThreadRun| ; =|??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  01114	f44f 7339	 mov         r3,#0x2E4
  01118	f000 f800	 bl          NKDbgPrintfW
  0111c	defe		 __debugbreak
  0111e		 |$LN35@ThreadRun|

; 741  : 	}
; 742  : 	return 0;

  0111e	2000		 movs        r0,#0
  01120		 |$M81|

; 743  : }

  01120	b043		 add         sp,sp,#0x10C
  01122	e8bd 8ff0	 pop         {r4-r11,pc}
  01126		 |$LN90@ThreadRun|
  01126		 |$M91|
  01126	defe		 __debugbreak
  01128		 |$LN82@ThreadRun|
  01128		 |$LN83@ThreadRun|
  01128	0000 0000	 DCD         |??_C@_1FK@FNONLNGN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAE?$AAB?$AAU?$AAG?$AAC?$AAH?$AAK?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AA?$CF?$AAs?$AA?5?$AAa@|
  0112c		 |$LN84@ThreadRun|
  0112c	0000 0000	 DCD         |??_C@_1BA@LEPJIIOK@?$AAU?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@|
  01130		 |$LN85@ThreadRun|
  01130	0000 0000	 DCD         |??_C@_1IO@IDNLAEOI@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  01134		 |$LN86@ThreadRun|
  01134	0000 0000	 DCD         |??_C@_1DG@EIDJHANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  01138		 |$LN87@ThreadRun|
  01138	0000 0000	 DCD         |??_C@_1DK@JBHNPNO@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAR?$AAu?$AAn?$AA?$AA@|
  0113c		 |$LN88@ThreadRun|
  0113c	0000 0000	 DCD         |dpCurSettings|
  01140		 |$M79|

			 ENDP  ; |?ThreadRun@PowerStateManager@@UAAKXZ|, PowerStateManager::ThreadRun

	EXPORT	|??_C@_1EE@IBGMJHLC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?5?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@OHBGJCLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@LBCAIPMI@?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@IMOGCHJK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAm?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAQ?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@OPDIHCD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AAs?$AA?5?$AAn?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@CJBDBNJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAy?$AAs@| [ DATA ] ; `string'
	EXPORT	|?Init@PowerStateManager@@QAAHXZ|	; PowerStateManager::Init
	IMPORT	|ActivityTimerFindByName|

  000a8			 AREA	 |.pdata|, PDATA
|$pdata1$?Init@PowerStateManager@@QAAHXZ| DCD imagerel |$LN25@Init|
	DCD	0xfd3061a9

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@CJBDBNJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAy?$AAs@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "e"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@OPDIHCD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AAs?$AA?5?$AAn?$AAo@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "U", 0x0, "s", 0x0, "e"
	DCB	0x0, "r", 0x0, "A", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v"
	DCB	0x0, "i", 0x0, "t", 0x0, "y", 0x0, " ", 0x0, "t", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "e", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "u"
	DCB	0x0, "n", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@IMOGCHJK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAm?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAQ?$AAu@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "P", 0x0, "m", 0x0, "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "i", 0x0, "c", 0x0, "y", 0x0, "C"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "N"
	DCB	0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "i", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "Q"
	DCB	0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@LBCAIPMI@?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?$AA@| DCB "U"
	DCB	0x0, "s", 0x0, "e", 0x0, "r", 0x0, "A", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@OHBGJCLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "a", 0x0, "n"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, ":"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@IBGMJHLC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?5?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, "P", 0x0, "M"
	DCB	0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m"
	DCB	0x0, "A", 0x0, "P", 0x0, "I", 0x0, ":", 0x0, ":", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwstatemgr.cpp

  01140			 AREA	 |.text|, CODE, THUMB

  01140		 |?Init@PowerStateManager@@QAAHXZ| PROC	; PowerStateManager::Init

; 214  : {

  01140		 |$LN25@Init|
  01140	e92d 4818	 push        {r3,r4,r11,lr}
  01144	f20d 0b08	 addw        r11,sp,#8
  01148		 |$M23|

; 215  :     ///=========================================================
; 216  :     /// Edits by Gard
; 217  :     // This is where the functions for pwrBtn should be called.
; 218  : 
; 219  : 
; 220  : 
; 221  : 
; 222  :     ///=========================================================
; 223  : 
; 224  : 	SETFNAME (_T ("PowerStateManager::Init"));
; 225  : 	if (ghevReloadActivityTimeouts == NULL || ghevRestartTimers == NULL || m_hqNotify == NULL)

  01148	4b3a		 ldr         r3,|$LN36@Init|	; =|?ghevReloadActivityTimeouts@@3PAXA|
  0114a	4604		 mov         r4,r0
  0114c	681b		 ldr         r3,[r3]
  0114e	2b00		 cmp         r3,#0
  01150	d04f		 beq         |$LN5@Init|
  01152	4b37		 ldr         r3,|$LN35@Init|	; =|?ghevRestartTimers@@3PAXA|
  01154	681b		 ldr         r3,[r3]
  01156	2b00		 cmp         r3,#0
  01158	d04b		 beq         |$LN5@Init|
  0115a	f8d0 324c	 ldr         r3,[r0,#0x24C]
  0115e	2b00		 cmp         r3,#0
  01160	d047		 beq         |$LN5@Init|

; 255  : 
; 256  : void
; 257  : PowerStateManager::ReInitTimeOuts (BOOL fIgnoreSuspendResume)
; 258  : {
; 259  : 	m_dwCurResumingSuspendTimeout =
; 260  : 		(fIgnoreSuspendResume ? INFINITE : GetResumingSuspendTimeout ());
; 261  : 	m_dwCurSuspendTimeout = GetSuspendTimeOut ();
; 262  : 	m_dwCurBacklightTimeout = GetBackLightTimeout ();
; 263  : 	m_dwCurUserIdleTimeout = GetUserIdleTimeOut ();
; 264  : 
; 265  : 	// If timer is not set, then it is not supported.
; 266  : 	if (m_dwCurBacklightTimeout == 0)
; 267  : 		m_dwCurBacklightTimeout = INFINITE;
; 268  : 	if (m_dwCurUserIdleTimeout == 0)
; 269  : 		m_dwCurUserIdleTimeout = INFINITE;
; 270  : 	if (m_dwCurSuspendTimeout == 0)
; 271  : 		m_dwCurSuspendTimeout = INFINITE;
; 272  : }
; 273  : 
; 274  : void
; 275  : PowerStateManager::ReAdjustTimeOuts ()
; 276  : {
; 277  : 	if (m_dwCurBacklightTimeout > GetBackLightTimeout ())
; 278  : 	{
; 279  : 		if ((m_dwCurBacklightTimeout = GetBackLightTimeout ()) == 0)
; 280  : 			m_dwCurBacklightTimeout = INFINITE;
; 281  : 	}
; 282  : 	if (m_dwCurSuspendTimeout > GetSuspendTimeOut ())
; 283  : 	{
; 284  : 		if ((m_dwCurSuspendTimeout = GetSuspendTimeOut ()) == 0)
; 285  : 			m_dwCurSuspendTimeout = INFINITE;
; 286  : 	}
; 287  : 	if (m_dwCurUserIdleTimeout > GetUserIdleTimeOut ())
; 288  : 	{
; 289  : 		if ((m_dwCurUserIdleTimeout = GetUserIdleTimeOut ()) == 0)
; 290  : 			m_dwCurUserIdleTimeout = INFINITE;
; 291  : 	}
; 292  : }
; 293  : 
; 294  : void
; 295  : PowerStateManager::ResetUserIdleTimeout (BOOL fIdle)
; 296  : {
; 297  : 	if (fIdle)
; 298  : 	{
; 299  : 		m_dwCurBacklightTimeout = GetBackLightTimeout ();
; 300  : 		m_dwCurUserIdleTimeout = GetUserIdleTimeOut ();
; 301  : 	}
; 302  : 	else
; 303  : 	{
; 304  : 		m_dwCurBacklightTimeout = INFINITE;
; 305  : 		m_dwCurUserIdleTimeout = INFINITE;
; 306  : 	}
; 307  : 	if (m_dwCurBacklightTimeout == 0)
; 308  : 		m_dwCurBacklightTimeout = INFINITE;
; 309  : 	if (m_dwCurUserIdleTimeout == 0)
; 310  : 		m_dwCurUserIdleTimeout = INFINITE;
; 311  : }
; 312  : 
; 313  : void
; 314  : PowerStateManager::ResetSystemIdleTimeTimeout (BOOL fIdle)
; 315  : {
; 316  : 	m_dwCurSuspendTimeout = (fIdle ? GetSuspendTimeOut () : INFINITE);
; 317  : 	if (m_dwCurSuspendTimeout == 0)
; 318  : 		m_dwCurSuspendTimeout = INFINITE;
; 319  : }
; 320  : 
; 321  : void
; 322  : PowerStateManager::SubtractTimeout (DWORD dwTicks)
; 323  : {
; 324  : 	if (m_dwCurSuspendTimeout != INFINITE)
; 325  : 		m_dwCurSuspendTimeout =
; 326  : 			(m_dwCurSuspendTimeout > dwTicks ? m_dwCurSuspendTimeout - dwTicks : 0);
; 327  : 	if (m_dwCurResumingSuspendTimeout != INFINITE)
; 328  : 		m_dwCurResumingSuspendTimeout =
; 329  : 			(m_dwCurResumingSuspendTimeout > dwTicks ? m_dwCurResumingSuspendTimeout - dwTicks : 0);
; 330  : 	if (m_dwCurBacklightTimeout != INFINITE)
; 331  : 		m_dwCurBacklightTimeout =
; 332  : 			(m_dwCurBacklightTimeout > dwTicks ? m_dwCurBacklightTimeout - dwTicks : 0);
; 333  : 	if (m_dwCurUserIdleTimeout != INFINITE)
; 334  : 		m_dwCurUserIdleTimeout =
; 335  : 			(m_dwCurUserIdleTimeout > dwTicks ? m_dwCurUserIdleTimeout - dwTicks : 0);
; 336  : }
; 337  : 
; 338  : DWORD
; 339  : PowerStateManager::GetSmallestTimeout (PTIMEOUT_ITEM pTimeoutItem)
; 340  : {
; 341  : 	DWORD dwReturn = INFINITE;
; 342  : 	TIMEOUT_ITEM activeEvent = NoTimeoutItem;
; 343  : 
; 344  : 	if (dwReturn > m_dwCurSuspendTimeout)
; 345  : 	{
; 346  : 		dwReturn = m_dwCurSuspendTimeout;
; 347  : 		activeEvent = SuspendTimeout;
; 348  : 	}
; 349  : 	if (dwReturn > m_dwCurResumingSuspendTimeout)
; 350  : 	{
; 351  : 		dwReturn = m_dwCurResumingSuspendTimeout;
; 352  : 		activeEvent = ResumingSuspendTimeout;
; 353  : 	}
; 354  : 	if (dwReturn > m_dwCurBacklightTimeout)
; 355  : 	{
; 356  : 		dwReturn = m_dwCurBacklightTimeout;
; 357  : 		activeEvent = BacklightTimeout;
; 358  : 	}
; 359  : 	if (dwReturn > m_dwCurUserIdleTimeout)
; 360  : 	{
; 361  : 		dwReturn = m_dwCurUserIdleTimeout;
; 362  : 		activeEvent = UserActivityTimeout;
; 363  : 	}
; 364  : 	if (pTimeoutItem)
; 365  : 	{
; 366  : 		*pTimeoutItem = activeEvent;
; 367  : 	}
; 368  : 	return dwReturn;
; 369  : }
; 370  : 
; 371  : LPCTSTR
; 372  : PowerStateManager::ActivityStateToSystemState (PLATFORM_ACTIVITY_STATE platActiveState)
; 373  : {
; 374  : 	PowerState *curState = m_pPowerStateList;
; 375  : 
; 376  : 	while (curState)
; 377  : 	{
; 378  : 		if (curState->GetState () == platActiveState)
; 379  : 			return curState->GetStateString ();
; 380  : 		else
; 381  : 			curState = curState->GetNextPowerState ();
; 382  : 	}
; 383  : 	return NULL;
; 384  : }
; 385  : 
; 386  : PLATFORM_ACTIVITY_STATE
; 387  : PowerStateManager::SystemStateToActivityState (LPCTSTR lpState)
; 388  : {
; 389  : 	if (lpState == NULL)
; 390  : 		return UnknownState;
; 391  : 	PowerState *curState = m_pPowerStateList;
; 392  : 
; 393  : 	while (curState)
; 394  : 	{
; 395  : 		if (_tcsicmp (curState->GetStateString (), lpState) == 0)
; 396  : 			return curState->GetState ();
; 397  : 		else
; 398  : 			curState = curState->GetNextPowerState ();
; 399  : 	}
; 400  : 	return UnknownState;
; 401  : }
; 402  : 
; 403  : HANDLE
; 404  : PowerStateManager::GetEventHandle (DWORD dwIndex)
; 405  : {
; 406  : 	switch (dwIndex)
; 407  : 	{
; 408  : 	  case PM_SHUTDOWN_EVENT:
; 409  : 		  return ghevPmShutdown;
; 410  : 	  case PM_RELOAD_ACTIVITY_TIMEOUTS_EVENT:
; 411  : 		  return ghevReloadActivityTimeouts;
; 412  : 	  case PM_MSGQUEUE_EVENT:
; 413  : 		  return m_hqNotify;
; 414  : 	  case PM_RESTART_TIMER_EVENT:
; 415  : 		  return ghevRestartTimers;
; 416  : 	  case PM_SYSTEM_API_EVENT:
; 417  : 		  return GetAPISignalHandle ();
; 418  : 	  case PM_BOOTPHASE2_EVENT:
; 419  : 		  return m_hevBootPhase2;
; 420  : 	}
; 421  : 	return NULL;
; 422  : }
; 423  : 
; 424  : void
; 425  : PowerStateManager::DisablePhase2Event ()
; 426  : {
; 427  : 	if (m_hevBootPhase2)
; 428  : 	{
; 429  : 		CloseHandle (m_hevBootPhase2);
; 430  : 		m_hevBootPhase2 = NULL;
; 431  : 	}
; 432  : }
; 433  : 
; 434  : void
; 435  : PowerStateManager::PlatformLoadTimeouts ()
; 436  : {
; 437  : 	DWORD dwStatus;
; 438  : 	TCHAR szPath[MAX_PATH];
; 439  : 	HKEY hk;
; 440  : 
; 441  : 	SETFNAME (_T ("PowerStateManager::PlatformLoadTimeouts"));
; 442  : 
; 443  : 	// Assume default values:
; 444  : 	m_dwACSuspendTimeout = DEF_ACSUSPENDTIMEOUT * 1000;
; 445  : 	m_dwACResumingSuspendTimeout = DEF_ACRESUMINGSUSPENDTIMEOUT * 1000;
; 446  : 	m_dwACBacklightTimeout = DEF_ACBACKLIGHTTIMEOUT * 1000;
; 447  : 	m_dwACUserIdleTimeout = DEF_ACUSERIDLETIMEOUT * 1000;
; 448  : 
; 449  : 	m_dwBattSuspendTimeout = DEF_BATTSUSPENDTIMEOUT * 1000;
; 450  : 	m_dwBattResumingSuspendTimeout = DEF_BATTRESUMINGSUSPENDTIMEOUT * 1000;
; 451  : 	m_dwBattBacklightTimeout = DEF_BATTBACKLIGHTTIMEOUT * 1000;
; 452  : 	m_dwBattUserIdleTimeout = DEF_BATTUSERIDLETIMEOUT * 1000;
; 453  : 
; 454  : 	// Get timeout thresholds for transitions between states:
; 455  : 	StringCchPrintf (szPath, MAX_PATH, _T ("%s\\%s"), PWRMGR_REG_KEY, _T ("Timeouts"));
; 456  : 	dwStatus = RegOpenKeyEx (HKEY_LOCAL_MACHINE, szPath, 0, 0, &hk);
; 457  : 	if (dwStatus == ERROR_SUCCESS)
; 458  : 	{
; 459  : 		// Read system power state timeouts:
; 460  : 		m_dwACSuspendTimeout =
; 461  : 			RegReadStateTimeout (hk, _T ("ACSuspendTimeout"), DEF_ACSUSPENDTIMEOUT);
; 462  : 		m_dwACResumingSuspendTimeout =
; 463  : 			RegReadStateTimeout (hk, _T ("ACResumingSuspendTimeout"), DEF_ACRESUMINGSUSPENDTIMEOUT);
; 464  : 		m_dwACBacklightTimeout =
; 465  : 			RegReadStateTimeout (hk, _T ("ACBacklightTimeout"), DEF_ACBACKLIGHTTIMEOUT);
; 466  : 		m_dwACUserIdleTimeout = RegReadStateTimeout (hk, _T ("ACUserIdle"), DEF_ACUSERIDLETIMEOUT);
; 467  : 
; 468  : 		m_dwBattSuspendTimeout =
; 469  : 			RegReadStateTimeout (hk, _T ("BattSuspendTimeout"), DEF_BATTSUSPENDTIMEOUT);
; 470  : 		m_dwBattResumingSuspendTimeout =
; 471  : 			RegReadStateTimeout (hk, _T ("BattResumingSuspendTimeout"),
; 472  : 								 DEF_BATTRESUMINGSUSPENDTIMEOUT);
; 473  : 		m_dwBattBacklightTimeout =
; 474  : 			RegReadStateTimeout (hk, _T ("BattBacklightTimeout"), DEF_BATTBACKLIGHTTIMEOUT);
; 475  : 		m_dwBattUserIdleTimeout =
; 476  : 			RegReadStateTimeout (hk, _T ("BattUserIdle"), DEF_BATTUSERIDLETIMEOUT);
; 477  : 
; 478  : 		// Release resources:
; 479  : 		RegCloseKey (hk);
; 480  : 	}
; 481  : 
; 482  : 	// Update Legacy if we find them.
; 483  : 	DWORD dwValue;
; 484  : 
; 485  : 	if (m_pLegacySPScreenOff)
; 486  : 	{
; 487  : 		m_pLegacySPScreenOff->AckNotification ();
; 488  : 		if (m_pLegacySPScreenOff->GetRegValue (_T ("Display"), &dwValue))
; 489  : 		{	// Found SmartPhone Legacy Value. Use it.
; 490  : 			m_dwACUserIdleTimeout = m_dwBattUserIdleTimeout = dwValue;
; 491  : 		}
; 492  : 	}
; 493  : 
; 494  : 	if (m_pLegacyBacklightOff)
; 495  : 	{
; 496  : 		m_pLegacyBacklightOff->AckNotification ();
; 497  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("BatteryTimeout"), &dwValue))
; 498  : 		{	// Legacy Backlight Off Registry value.
; 499  : 			m_dwBattBacklightTimeout = dwValue;
; 500  : 		}
; 501  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldBatteryTimeout"), &dwValue))
; 502  : 		{
; 503  : 			m_dwBattBacklightTimeout = INFINITE;
; 504  : 			m_dwBattUserIdleTimeout = INFINITE;
; 505  : 		}
; 506  : 
; 507  : 		if (m_pLegacyBacklightOff->GetRegValue (_T ("ACTimeout"), &dwValue))
; 508  : 		{	// Legacy Backlight Off Registry value.
; 509  : 			m_dwACBacklightTimeout = dwValue;
; 510  : 		}
; 511  : 		else if (m_pLegacyBacklightOff->GetRegValue (_T ("OldACTimeout"), &dwValue))
; 512  : 		{
; 513  : 			m_dwACBacklightTimeout = INFINITE;
; 514  : 			m_dwACUserIdleTimeout = INFINITE;
; 515  : 		}
; 516  : 	}
; 517  : 
; 518  : 	PMLOGMSG (ZONE_INIT || ZONE_PLATFORM,
; 519  : 			  (_T
; 520  : 			   ("%s: ACSuspendTimeout %d, ACResumingSuspendTimeout %d,  ACBacklightTimeout %d, ACUserIdleTimeout %d \r\n"),
; 521  : 			   pszFname, m_dwACSuspendTimeout, m_dwACResumingSuspendTimeout, m_dwACBacklightTimeout,
; 522  : 			   m_dwACUserIdleTimeout));
; 523  : 	PMLOGMSG (ZONE_INIT
; 524  : 			  || ZONE_PLATFORM,
; 525  : 			  (_T
; 526  : 			   ("%s: BattSuspendTimeout %d, BattResumingSuspendTimeout %d , BattBacklightTimeout %d, BattUserIdleTimeout%d \r\n"),
; 527  : 			   pszFname, m_dwBattSuspendTimeout, m_dwBattResumingSuspendTimeout,
; 528  : 			   m_dwBattBacklightTimeout, m_dwBattUserIdleTimeout));
; 529  : }
; 530  : 
; 531  : DWORD
; 532  : PowerStateManager::GetSuspendTimeOut ()
; 533  : {
; 534  : 	return (gSystemPowerStatus.bACLineStatus ==
; 535  : 			AC_LINE_OFFLINE ? m_dwBattSuspendTimeout : m_dwACSuspendTimeout);
; 536  : }
; 537  : 
; 538  : DWORD
; 539  : PowerStateManager::GetResumingSuspendTimeout ()
; 540  : {
; 541  : 	return (gSystemPowerStatus.bACLineStatus ==
; 542  : 			AC_LINE_OFFLINE ? m_dwBattResumingSuspendTimeout : m_dwACResumingSuspendTimeout);
; 543  : }
; 544  : 
; 545  : DWORD
; 546  : PowerStateManager::GetBackLightTimeout ()
; 547  : {
; 548  : 	return (gSystemPowerStatus.bACLineStatus ==
; 549  : 			AC_LINE_OFFLINE ? m_dwBattBacklightTimeout : m_dwACBacklightTimeout);
; 550  : }
; 551  : 
; 552  : DWORD
; 553  : PowerStateManager::GetUserIdleTimeOut ()
; 554  : {
; 555  : 	return (gSystemPowerStatus.bACLineStatus ==
; 556  : 			AC_LINE_OFFLINE ? m_dwBattUserIdleTimeout : m_dwACUserIdleTimeout);
; 557  : }
; 558  : 
; 559  : PowerState *
; 560  : PowerStateManager::GetStateObject (PLATFORM_ACTIVITY_STATE newState)
; 561  : {
; 562  : 	if (m_pPowerStateList != NULL)
; 563  : 	{
; 564  : 		PowerState *pCurState = m_pPowerStateList;
; 565  : 
; 566  : 		while (pCurState)
; 567  : 		{
; 568  : 			if (pCurState->GetState () == newState)
; 569  : 			{
; 570  : 				return pCurState;
; 571  : 			}
; 572  : 			pCurState = pCurState->GetNextPowerState ();
; 573  : 		}
; 574  : 	}
; 575  : 	return NULL;
; 576  : }
; 577  : 
; 578  : PowerState *
; 579  : PowerStateManager::GetFirstPowerState ()
; 580  : {
; 581  : 	SETFNAME (_T ("PowerStateManager::GetFirstPowerState"));
; 582  : 	PowerState *curState = NULL;
; 583  : 	HANDLE hEvents[2];
; 584  : 
; 585  : 	hEvents[0] = ghevPmShutdown;
; 586  : 	hEvents[1] = GetAPISignalHandle ();
; 587  : 	DWORD dwStatus = WaitForMultipleObjects (2, hEvents, FALSE, INFINITE);
; 588  : 
; 589  : 	switch (dwStatus)
; 590  : 	{
; 591  : 	  case (WAIT_OBJECT_0 + 0):
; 592  : 		  PMLOGMSG (ZONE_INIT
; 593  : 					|| ZONE_WARN, (_T ("%s: shutdown event signaled, exiting\r\n"), pszFname));
; 594  : 		  break;
; 595  : 	  case (WAIT_OBJECT_0 + 1):
; 596  : 		  {
; 597  : 			  PMLOGMSG (ZONE_INIT, (_T ("%s: initialization complete\r\n"), pszFname));
; 598  : 			  PLATFORM_ACTIVITY_STATE apiState = RequestedSystemPowerState ();
; 599  : 
; 600  : 			  curState = m_pPowerStateList;
; 601  : 			  while (curState)
; 602  : 			  {
; 603  : 				  if (curState->GetState () == apiState)
; 604  : 					  break;
; 605  : 				  else
; 606  : 					  curState = curState->GetNextPowerState ();
; 607  : 			  }
; 608  : 			  RequestComplete ();
; 609  : 		  }
; 610  : 		  break;
; 611  : 	  default:
; 612  : 		  PMLOGMSG (ZONE_INIT
; 613  : 					|| ZONE_WARN, (_T ("%s: WaitForMultipleObjects() returned %d, exiting\r\n"),
; 614  : 								   pszFname, dwStatus));
; 615  : 		  break;
; 616  : 	}
; 617  : 	return curState;
; 618  : }
; 619  : 
; 620  : DWORD
; 621  : PowerStateManager::ThreadRun ()
; 622  : {
; 623  : 	SETFNAME (_T ("PowerStateManager::ThreadRun"));
; 624  : 
; 625  : 	// Assume that the first state is PowerStateOn. 
; 626  : 	if (m_pPowerStateList)
; 627  : 	{
; 628  : 		// Get first SetSystemPower from the device to make the initial power state correct.
; 629  : 		PowerState *pCurPowerState = GetFirstPowerState ();
; 630  : 
; 631  : 		if (pCurPowerState != NULL)
; 632  : 		{
; 633  : 			pCurPowerState->EnterState ();
; 634  : 			BOOL fDone = FALSE;
; 635  : 
; 636  : 			// Create Legacy Registry modify notification event array.
; 637  : 			while (!fDone && pCurPowerState)
; 638  : 			{
; 639  : 				HANDLE hEvents[MAXIMUM_WAIT_OBJECTS];
; 640  : 				DWORD dwNumOfLegacyEvent = 0;
; 641  : 
; 642  : 				if (m_pLegacySPScreenOff)
; 643  : 				{
; 644  : 					hEvents[dwNumOfLegacyEvent] = m_pLegacySPScreenOff->GetNotificationHandle ();
; 645  : 					dwNumOfLegacyEvent++;
; 646  : 				}
; 647  : 				if (m_pLegacyBacklightOff)
; 648  : 				{
; 649  : 					hEvents[dwNumOfLegacyEvent] = m_pLegacyBacklightOff->GetNotificationHandle ();
; 650  : 					dwNumOfLegacyEvent++;
; 651  : 				}
; 652  : 				DWORD dwNumOfExtEvent = MAXIMUM_WAIT_OBJECTS - dwNumOfLegacyEvent;
; 653  : 
; 654  : 				if (!PMExt_GetNotificationHandle (dwNumOfExtEvent, hEvents + dwNumOfLegacyEvent))
; 655  : 					dwNumOfExtEvent = 0;
; 656  : 
; 657  : 				ASSERT (dwNumOfExtEvent + dwNumOfLegacyEvent < MAXIMUM_WAIT_OBJECTS);
; 658  : 
; 659  : 				PLATFORM_ACTIVITY_EVENT activityEvent =
; 660  : 					pCurPowerState->WaitForEvent (INFINITE, dwNumOfExtEvent + dwNumOfLegacyEvent,
; 661  : 												  hEvents);
; 662  : 				PMLOGMSG (ZONE_PLATFORM,
; 663  : 						  (_T ("%s: activityEvent = %d  \r\n"), pszFname, activityEvent));
; 664  : 				if (activityEvent >= ExternedEvent
; 665  : 					&& activityEvent <
; 666  : 					(PLATFORM_ACTIVITY_EVENT) (ExternedEvent + dwNumOfLegacyEvent))
; 667  : 				{	// Legacy registry Event.
; 668  : 					PlatformLoadTimeouts ();	// No break we need run ReInitTimeouts.
; 669  : 					ReInitTimeOuts (TRUE);
; 670  : 					pCurPowerState->DefaultEventHandle (RestartTimeouts);
; 671  : 				}
; 672  : 				else if (activityEvent >=
; 673  : 						 (PLATFORM_ACTIVITY_EVENT) (ExternedEvent + dwNumOfLegacyEvent)
; 674  : 						 && activityEvent <
; 675  : 						 (PLATFORM_ACTIVITY_EVENT) (ExternedEvent + dwNumOfLegacyEvent +
; 676  : 													dwNumOfExtEvent))
; 677  : 				{
; 678  : 					PMExt_EventNotification ((PLATFORM_ACTIVITY_EVENT)
; 679  : 											 (activityEvent - ExternedEvent - dwNumOfLegacyEvent +
; 680  : 											  PowerManagerExt));
; 681  : 				}
; 682  : 				else
; 683  : 				{
; 684  : 					switch (activityEvent)
; 685  : 					{
; 686  : 					  case PmShutDown:
; 687  : 						  fDone = TRUE;
; 688  : 						  break;
; 689  : 					  case BootPhaseChanged:
; 690  : 						  ReInitLegacyRegistry ();	// No break because we need do following as well.
; 691  : 					  case PmReloadActivityTimeouts:
; 692  : 						  PlatformLoadTimeouts ();	// No break we need run ReInitTimeouts.
; 693  : 					  case RestartTimeouts:
; 694  : 					  case PowerSourceChange:
; 695  : 					  case SystemPowerStateChange:
; 696  : 					  case PowerButtonPressed:
; 697  : 					  case AppButtonPressed:
; 698  : 						  ReInitTimeOuts (TRUE);
; 699  : 						  pCurPowerState->DefaultEventHandle (activityEvent);
; 700  : 						  break;
; 701  : 					  case SystemPowerStateAPI:
; 702  : 						  {
; 703  : 							  PLATFORM_ACTIVITY_STATE apiState = RequestedSystemPowerState ();
; 704  : 							  PowerState *pNewPowerState = GetStateObject (apiState);
; 705  : 
; 706  : 							  if (pNewPowerState && !pNewPowerState->AppsCanRequestState ())
; 707  : 							  {
; 708  : 								  RequestComplete (ERROR_INVALID_PARAMETER);
; 709  : 								  activityEvent = NoActivity;
; 710  : 							  }
; 711  : 							  else
; 712  : 							  {
; 713  : 								  pCurPowerState->SetSystemAPIState (apiState);
; 714  : 							  }
; 715  : 							  break;
; 716  : 						  }
; 717  : 					  case EnterUnattendedModeRequest:
; 718  : 						  IncUnattendedRefCount ();
; 719  : 						  pCurPowerState->DefaultEventHandle (EnterUnattendedModeRequest);
; 720  : 						  break;
; 721  : 					  case LeaveUnattendedModeRequest:
; 722  : 						  DecUnattendedRefCount ();
; 723  : 						  pCurPowerState->DefaultEventHandle (LeaveUnattendedModeRequest);
; 724  : 						  break;
; 725  : 					  default:
; 726  : 						  pCurPowerState->DefaultEventHandle (activityEvent);
; 727  : 						  break;
; 728  : 					}
; 729  : 					PMExt_EventNotification (activityEvent);
; 730  : 				}
; 731  : 				pCurPowerState = SetSystemState (pCurPowerState);
; 732  : 				ASSERT (pCurPowerState != NULL);
; 733  : 				if (activityEvent == SystemPowerStateAPI)
; 734  : 				{
; 735  : 					RequestComplete ();
; 736  : 				}
; 737  : 			}
; 738  : 		}
; 739  : 		else
; 740  : 			ASSERT (FALSE);
; 741  : 	}
; 742  : 	return 0;
; 743  : }
; 744  : 
; 745  : PowerState *
; 746  : PowerStateManager::SetSystemState (PowerState * pCurPowerState)
; 747  : {
; 748  : 	SETFNAME (_T ("PowerStateManager::SetSystemState"));
; 749  : 	if (pCurPowerState != NULL)
; 750  : 	{
; 751  : 		PLATFORM_ACTIVITY_STATE curState = pCurPowerState->GetState ();
; 752  : 		PLATFORM_ACTIVITY_STATE newState = curState;
; 753  : 
; 754  : 		do
; 755  : 		{	// Switch to new stable state.
; 756  : 			newState = pCurPowerState->GetLastNewState ();
; 757  : 			if (newState != curState)
; 758  : 			{
; 759  : 				PowerState *pNewPowerState = GetStateObject (newState);
; 760  : 
; 761  : 				if (pNewPowerState == NULL)
; 762  : 				{	// Wrong state or unsupported state.
; 763  : 					PMLOGMSG (ZONE_WARN
; 764  : 							  || ZONE_PLATFORM, (_T ("Unsupported state %d \r\n"), newState));
; 765  : 					ASSERT (FALSE);
; 766  : 					newState = curState;
; 767  : 				}
; 768  : 				else if (pNewPowerState != pCurPowerState)
; 769  : 				{
; 770  : 					PMLOGMSG (ZONE_INIT
; 771  : 							  || ZONE_PLATFORM, (_T ("%s: state change from \"%s\" to \"%s\" \r\n"),
; 772  : 												 pszFname, pCurPowerState->GetStateString (),
; 773  : 												 pNewPowerState->GetStateString ()));
; 774  : 					pCurPowerState = pNewPowerState;
; 775  : 					pCurPowerState->EnterState ();
; 776  : 
; 777  : 					// Update to new state:
; 778  : 					curState = newState;
; 779  : 					newState = pCurPowerState->GetLastNewState ();
; 780  : 				}
; 781  : 				else
; 782  : 					newState = curState;
; 783  : 			}
; 784  : 		} while (newState != curState);	    // Change to stable state.
; 785  : 
; 786  : 		ASSERT (pCurPowerState != NULL);
; 787  : 	}
; 788  : 	return pCurPowerState;
; 789  : }
; 790  : 
; 791  : //////////////////////////////////////////////////////////////////////////////
; 792  : //
; 793  : // PMSystemAPI
; 794  : //
; 795  : // PMSystemAPI is the base class for PowerStateManager; it implements 
; 796  : // the serialization logic for state transitions and event-handling code 
; 797  : // for the main Power Manager event loop.
; 798  : //
; 799  : //////////////////////////////////////////////////////////////////////////////
; 800  : 
; 801  : // Help function.
; 802  : PMSystemAPI::PMSystemAPI ()
; 803  : {
; 804  : 	m_szStateName[0] = 0;
; 805  : 	m_dwStateHint = 0;
; 806  : 	m_dwOptions = 0;
; 807  : 
; 808  : 	m_hEmpty = CreateEvent (NULL, FALSE, TRUE, NULL);
; 809  : 	m_hNotEmpty = CreateEvent (NULL, TRUE, FALSE, NULL);
; 810  : 	m_hComplete = CreateEvent (NULL, TRUE, FALSE, NULL);
; 811  : }
; 812  : 
; 813  : BOOL
; 814  : PMSystemAPI::Init ()
; 815  : {
; 816  : 	return (m_hEmpty != NULL && m_hNotEmpty != NULL && m_hComplete != NULL);

  01162	6a63		 ldr         r3,[r4,#0x24]
  01164	b3cb		 cbz         r3,|$LN19@Init|
  01166	6aa3		 ldr         r3,[r4,#0x28]
  01168	b3bb		 cbz         r3,|$LN19@Init|
  0116a	6ae3		 ldr         r3,[r4,#0x2C]
  0116c	b3ab		 cbz         r3,|$LN19@Init|

; 234  : 	}
; 235  : 	m_pUserActivity = ActivityTimerFindByName (_T ("UserActivity"));

  0116e	482f		 ldr         r0,|$LN34@Init|	; =|??_C@_1BK@LBCAIPMI@?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?$AA@|
  01170	f000 f800	 bl          ActivityTimerFindByName
  01174	f8c4 0258	 str         r0,[r4,#0x258]

; 236  : 
; 237  : 	// Check that all of our activity events exist:
; 238  : 	if (m_pUserActivity == NULL || m_pUserActivity->hevActive == NULL
; 239  : 		|| m_pUserActivity->hevInactive == NULL)

  01178	b318		 cbz         r0,|$LN2@Init|
  0117a	6903		 ldr         r3,[r0,#0x10]
  0117c	b30b		 cbz         r3,|$LN2@Init|
  0117e	6943		 ldr         r3,[r0,#0x14]
  01180	b1fb		 cbz         r3,|$LN2@Init|

; 243  : 	}
; 244  : 	if (m_hqNotify == NULL)

  01182	f8d4 324c	 ldr         r3,[r4,#0x24C]
  01186	b95b		 cbnz        r3,|$LN1@Init|

; 245  : 	{
; 246  : 		PMLOGMSG (ZONE_WARN, (_T ("%s: PmPolicyCreateNotificationQueue() failed\r\n"), pszFname));

  01188	4b24		 ldr         r3,|$LN30@Init|	; =|dpCurSettings|
  0118a	f8d3 3440	 ldr         r3,[r3,#0x440]
  0118e	f013 0f02	 tst         r3,#2
  01192	d03c		 beq         |$LN9@Init|
  01194	491f		 ldr         r1,|$LN28@Init|	; =|??_C@_1DA@OHBGJCLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  01196	4824		 ldr         r0,|$LN33@Init|	; =|??_C@_1FO@IMOGCHJK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAm?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAQ?$AAu@|
  01198	f000 f800	 bl          NKDbgPrintfW
  0119c	4822		 ldr         r0,|$LN33@Init|	; =|??_C@_1FO@IMOGCHJK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAm?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAQ?$AAu@|

; 247  : 		return FALSE;

  0119e	e033		 b           |$LN21@Init|
  011a0		 |$LN1@Init|

; 248  : 	}
; 249  : 
; 250  : 	ReInitLegacyRegistry ();

  011a0	4620		 mov         r0,r4
  011a2	f000 f800	 bl          |?ReInitLegacyRegistry@PowerStateManager@@AAAHXZ|

; 251  : 	PlatformLoadTimeouts ();

  011a6	6823		 ldr         r3,[r4]
  011a8	4620		 mov         r0,r4
  011aa	6a9b		 ldr         r3,[r3,#0x28]
  011ac	4798		 blx         r3

; 252  : 	ReInitTimeOuts (TRUE);

  011ae	6823		 ldr         r3,[r4]
  011b0	2101		 movs        r1,#1
  011b2	4620		 mov         r0,r4
  011b4	689b		 ldr         r3,[r3,#8]
  011b6	4798		 blx         r3

; 253  : 	return CreatePowerStateList ();

  011b8	6823		 ldr         r3,[r4]
  011ba	4620		 mov         r0,r4
  011bc	6adb		 ldr         r3,[r3,#0x2C]
  011be	4798		 blx         r3
  011c0	e026		 b           |$LN7@Init|
  011c2		 |$LN2@Init|

; 240  : 	{
; 241  : 		PMLOGMSG (ZONE_WARN, (_T ("%s: UserActivity timer events not found\r\n"), pszFname));

  011c2	4b16		 ldr         r3,|$LN30@Init|	; =|dpCurSettings|
  011c4	f8d3 3440	 ldr         r3,[r3,#0x440]
  011c8	f013 0f02	 tst         r3,#2
  011cc	d01f		 beq         |$LN9@Init|
  011ce	4911		 ldr         r1,|$LN28@Init|	; =|??_C@_1DA@OHBGJCLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  011d0	4814		 ldr         r0,|$LN32@Init|	; =|??_C@_1FE@OPDIHCD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AAs?$AA?5?$AAn?$AAo@|
  011d2	f000 f800	 bl          NKDbgPrintfW
  011d6	4813		 ldr         r0,|$LN32@Init|	; =|??_C@_1FE@OPDIHCD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AAs?$AA?5?$AAn?$AAo@|

; 242  : 		return FALSE;

  011d8	e016		 b           |$LN21@Init|
  011da		 |$LN19@Init|

; 229  : 	}
; 230  : 	if (!PMSystemAPI::Init ())
; 231  : 	{
; 232  : 		PMLOGMSG (ZONE_WARN, (_T ("%s:  PMSystemAPI::Init() failed\r\n"), pszFname));

  011da	4b10		 ldr         r3,|$LN30@Init|	; =|dpCurSettings|
  011dc	f8d3 3440	 ldr         r3,[r3,#0x440]
  011e0	f013 0f02	 tst         r3,#2
  011e4	d013		 beq         |$LN9@Init|
  011e6	490b		 ldr         r1,|$LN28@Init|	; =|??_C@_1DA@OHBGJCLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  011e8	480d		 ldr         r0,|$LN31@Init|	; =|??_C@_1EE@IBGMJHLC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?5?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN@|
  011ea	f000 f800	 bl          NKDbgPrintfW
  011ee	480c		 ldr         r0,|$LN31@Init|	; =|??_C@_1EE@IBGMJHLC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?5?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN@|

; 233  : 		return FALSE;

  011f0	e00a		 b           |$LN21@Init|
  011f2		 |$LN5@Init|

; 226  : 	{
; 227  : 		PMLOGMSG (ZONE_WARN, (_T ("%s: CreateEvent() failed for system event\r\n"), pszFname));

  011f2	4b0a		 ldr         r3,|$LN30@Init|	; =|dpCurSettings|
  011f4	f8d3 3440	 ldr         r3,[r3,#0x440]
  011f8	f013 0f02	 tst         r3,#2
  011fc	d007		 beq         |$LN9@Init|
  011fe	4905		 ldr         r1,|$LN28@Init|	; =|??_C@_1DA@OHBGJCLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  01200	4805		 ldr         r0,|$LN29@Init|	; =|??_C@_1FI@CJBDBNJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAy?$AAs@|
  01202	f000 f800	 bl          NKDbgPrintfW
  01206	4804		 ldr         r0,|$LN29@Init|	; =|??_C@_1FI@CJBDBNJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAy?$AAs@|
  01208		 |$LN21@Init|
  01208	4902		 ldr         r1,|$LN28@Init|	; =|??_C@_1DA@OHBGJCLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  0120a	f000 f800	 bl          CeLogMsg
  0120e		 |$LN9@Init|

; 228  : 		return FALSE;

  0120e	2000		 movs        r0,#0
  01210		 |$LN7@Init|
  01210		 |$M26|

; 254  : }

  01210	e8bd 8818	 pop         {r3,r4,r11,pc}
  01214		 |$LN27@Init|
  01214		 |$LN28@Init|
  01214	0000 0000	 DCD         |??_C@_1DA@OHBGJCLJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  01218		 |$LN29@Init|
  01218	0000 0000	 DCD         |??_C@_1FI@CJBDBNJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAy?$AAs@|
  0121c		 |$LN30@Init|
  0121c	0000 0000	 DCD         |dpCurSettings|
  01220		 |$LN31@Init|
  01220	0000 0000	 DCD         |??_C@_1EE@IBGMJHLC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?5?$AAP?$AAM?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAA?$AAP?$AAI?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN@|
  01224		 |$LN32@Init|
  01224	0000 0000	 DCD         |??_C@_1FE@OPDIHCD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AAs?$AA?5?$AAn?$AAo@|
  01228		 |$LN33@Init|
  01228	0000 0000	 DCD         |??_C@_1FO@IMOGCHJK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAm?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAQ?$AAu@|
  0122c		 |$LN34@Init|
  0122c	0000 0000	 DCD         |??_C@_1BK@LBCAIPMI@?$AAU?$AAs?$AAe?$AAr?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?$AA@|
  01230		 |$LN35@Init|
  01230	0000 0000	 DCD         |?ghevRestartTimers@@3PAXA|
  01234		 |$LN36@Init|
  01234	0000 0000	 DCD         |?ghevReloadActivityTimeouts@@3PAXA|
  01238		 |$M24|

			 ENDP  ; |?Init@PowerStateManager@@QAAHXZ|, PowerStateManager::Init

	END
