; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.114 

	TTL	C:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwrButton.cpp
	THUMB

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.data|, DATA
|g_dwPwrBtnSysIntr| DCD 0xffffffff
	EXPORT	|?Deinit@@YAHXZ|			; Deinit
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwrbutton.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Deinit@@YAHXZ| PROC			; Deinit

; 174  :     // Power button driver is never unloaded.  This entry point is only defined
; 175  :     // to meet minum requirements of the stream interface.
; 176  :     return TRUE;

  00000	2001		 movs        r0,#1
  00002		 |$M4|

; 177  : }

  00002	4770		 bx          lr

			 ENDP  ; |?Deinit@@YAHXZ|, Deinit

	EXPORT	|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|__security_push_cookie|
	IMPORT	|__security_pop_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|WaitForSingleObject|
	IMPORT	|GetTickCount|
	IMPORT	|GetSystemPowerState|
	IMPORT	|Sleep|
	IMPORT	|DDKGpioReadDataPin|
	IMPORT	|PmSetSystemPowerState_I|
	IMPORT	|DDKGpioClearIntrPin|
	IMPORT	|InterruptDone|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?PwrBtnThread@@YAKPAX@Z| DCD imagerel |$LN21@PwrBtnThre|
	DCD	imagerel |$unwind2$?PwrBtnThread@@YAKPAX@Z|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?PwrBtnThread@@YAKPAX@Z| DCD 0x4430005e
	DCD	0x1e885e8
	DCD	0xfff0a8fc
	DCD	0xf0a801e8
	DCD	0xff
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffe5

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| DCB "s", 0x0
	DCB	"u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@| DCB "o", 0x0, "f", 0x0, "f", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwrbutton.cpp

  00004			 AREA	 |.text|, CODE, THUMB

  00004		 |?PwrBtnThread@@YAKPAX@Z| PROC		; PwrBtnThread

; 196  : {

  00004		 |$LN21@PwrBtnThre|
  00004	e92d 48f0	 push        {r4-r7,r11,lr}
  00008	f20d 0b10	 addw        r11,sp,#0x10
  0000c	f000 f800	 bl          __security_push_cookie
  00010	f2ad 2d14	 subw        sp,sp,#0x214
  00014		 |$M19|

; 197  :     UINT32 msec, start;
; 198  :     UINT32 pinVal;
; 199  :     WCHAR szState[MAX_PATH];
; 200  :     DWORD dwStateFlags = 0;
; 201  : 
; 202  :     // Remove-W4: Warning C4100 workaround
; 203  :     UNREFERENCED_PARAMETER(lpParam);
; 204  : 
; 205  :     // IST loop for servicing power button interrupts
; 206  :     while (WaitForSingleObject(g_hPwrBtnEvent, INFINITE) != WAIT_FAILED)

  00014	4e2d		 ldr         r6,|$LN27@PwrBtnThre| ; =|g_hPwrBtnEvent|
  00016	2300		 movs        r3,#0
  00018	43d9		 mvns        r1,r3
  0001a	6830		 ldr         r0,[r6]
  0001c	9301		 str         r3,[sp,#4]
  0001e	f000 f800	 bl          WaitForSingleObject
  00022	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00026	d044		 beq         |$LN9@PwrBtnThre|
  00028	4f27		 ldr         r7,|$LN26@PwrBtnThre| ; =|g_dwPwrBtnSysIntr|
  0002a		 |$LL10@PwrBtnThre|

; 207  :     {
; 208  :         // Capture start time of button press
; 209  :         start = GetTickCount();

  0002a	f000 f800	 bl          GetTickCount
  0002e	4605		 mov         r5,r0

; 210  : 
; 211  :         // Query current system power state to determine if we are resuming
; 212  :         // from suspend
; 213  :         GetSystemPowerState(szState, MAX_PATH, &dwStateFlags);

  00030	a802		 add         r0,sp,#8
  00032	aa01		 add         r2,sp,#4
  00034	f44f 7182	 mov         r1,#0x104
  00038	f000 f800	 bl          GetSystemPowerState

; 214  : 
; 215  :         // Avoid requesting power state transition if the system is resuming from
; 216  :         // suspend.  In such cases the POWER_STATE_SUSPEND flag will be set.
; 217  :         if (!(POWER_STATE(dwStateFlags) & POWER_STATE_SUSPEND))

  0003c	9b01		 ldr         r3,[sp,#4]
  0003e	f413 1f00	 tst         r3,#0x200000
  00042	d123		 bne         |$LN1@PwrBtnThre|

; 218  :         {
; 219  :             // Keep track of how long button is pressed
; 220  :             msec = 0;

  00044	2400		 movs        r4,#0
  00046		 |$LL7@PwrBtnThre|

; 221  : 
; 222  :             // Loop to sample power button pin
; 223  :             do
; 224  :             {
; 225  :                 // Sleep between samples
; 226  :                 Sleep(BSP_PWRBTN_DEBOUNCE_SAMPLE_MSEC);

  00046	200a		 movs        r0,#0xA
  00048	f000 f800	 bl          Sleep

; 227  : 
; 228  :                 // Read current power button pin
; 229  :                 DDKGpioReadDataPin(BSP_PWRBTN_GPIO_PORT, BSP_PWRBTN_GPIO_PIN, &pinVal);

  0004c	466a		 mov         r2,sp
  0004e	211d		 movs        r1,#0x1D
  00050	2002		 movs        r0,#2
  00052	f000 f800	 bl          DDKGpioReadDataPin

; 230  : 
; 231  :                 // Check if button is still pressed
; 232  :                 if (pinVal)

  00056	9b00		 ldr         r3,[sp]
  00058	b13b		 cbz         r3,|$LN3@PwrBtnThre|

; 233  :                 {
; 234  :                     // Update how long button is pressed
; 235  :                     msec = GetTickCount() - start;

  0005a	f000 f800	 bl          GetTickCount

; 236  :                 }
; 237  : 
; 238  :             // Loop terminates if button is released or time to power off
; 239  :             // system is reached
; 240  :             } while (pinVal && (msec < BSP_PWRBTN_DEBOUNCE_OFF_MSEC));

  0005e	9b00		 ldr         r3,[sp]
  00060	1b44		 subs        r4,r0,r5
  00062	b113		 cbz         r3,|$LN3@PwrBtnThre|
  00064	f5b4 6ffa	 cmp         r4,#0x7D0
  00068	d3ed		 bcc         |$LL7@PwrBtnThre|
  0006a		 |$LN3@PwrBtnThre|

; 241  : 
; 242  :              /// Edits by Gard----------------------------
; 243  :              /// I am note sure if this is the right way to pass the strings.
; 244  :             // Check if button press indicates user wants to power off the
; 245  :             // system           
; 246  :             if (msec >= BSP_PWRBTN_DEBOUNCE_OFF_MSEC)

  0006a	f5b4 6ffa	 cmp         r4,#0x7D0
  0006e	d305		 bcc         |$LN2@PwrBtnThre|

; 247  :             {
; 248  :                 PmSetSystemPowerState_I(STRING_OFF,0,0,TRUE);

  00070	4814		 ldr         r0,|$LN25@PwrBtnThre| ; =|??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@|
  00072	2301		 movs        r3,#1
  00074	2200		 movs        r2,#0
  00076	2100		 movs        r1,#0
  00078	f000 f800	 bl          PmSetSystemPowerState_I
  0007c		 |$LN2@PwrBtnThre|

; 249  :             }
; 250  : 
; 251  : 
; 252  :             // Check if button press indicates user wants to suspend the
; 253  :             // system
; 254  :             if (msec >= BSP_PWRBTN_DEBOUNCE_SUSPEND_MSEC)

  0007c	2c64		 cmp         r4,#0x64
  0007e	d305		 bcc         |$LN1@PwrBtnThre|

; 255  :             {
; 256  :                 PmSetSystemPowerState_I(STRING_SUSPEND,0,0,TRUE);

  00080	480f		 ldr         r0,|$LN24@PwrBtnThre| ; =|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  00082	2301		 movs        r3,#1
  00084	2200		 movs        r2,#0
  00086	2100		 movs        r1,#0
  00088	f000 f800	 bl          PmSetSystemPowerState_I
  0008c		 |$LN1@PwrBtnThre|

; 257  :             }
; 258  :             /// end edits by Gard------------------------
; 259  :         }
; 260  : 
; 261  : 
; 262  :         // After handling the button press, delay before servicing new button
; 263  :         // interrupts to prevent from bouncing into suspend again
; 264  :         Sleep(BSP_PWRBTN_DEBOUNCE_IGNORE_MSEC);

  0008c	f44f 70fa	 mov         r0,#0x1F4
  00090	f000 f800	 bl          Sleep

; 265  : 
; 266  :         // Clear and reenable button interrupts
; 267  :         DDKGpioClearIntrPin(BSP_PWRBTN_GPIO_PORT, BSP_PWRBTN_GPIO_PIN);

  00094	211d		 movs        r1,#0x1D
  00096	2002		 movs        r0,#2
  00098	f000 f800	 bl          DDKGpioClearIntrPin

; 268  :         InterruptDone(g_dwPwrBtnSysIntr);

  0009c	6838		 ldr         r0,[r7]
  0009e	f000 f800	 bl          InterruptDone
  000a2	6830		 ldr         r0,[r6]
  000a4	f06f 0100	 mvn         r1,#0
  000a8	f000 f800	 bl          WaitForSingleObject
  000ac	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  000b0	d1bb		 bne         |$LL10@PwrBtnThre|
  000b2		 |$LN9@PwrBtnThre|

; 269  :     }
; 270  : 
; 271  : 
; 272  :     return 0;

  000b2	2000		 movs        r0,#0
  000b4		 |$M22|

; 273  : }

  000b4	f20d 2d14	 addw        sp,sp,#0x214
  000b8	f000 f800	 bl          __security_pop_cookie
  000bc	e8bd 88f0	 pop         {r4-r7,r11,pc}
  000c0		 |$LN23@PwrBtnThre|
  000c0		 |$LN24@PwrBtnThre|
  000c0	0000 0000	 DCD         |??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  000c4		 |$LN25@PwrBtnThre|
  000c4	0000 0000	 DCD         |??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@|
  000c8		 |$LN26@PwrBtnThre|
  000c8	0000 0000	 DCD         |g_dwPwrBtnSysIntr|
  000cc		 |$LN27@PwrBtnThre|
  000cc	0000 0000	 DCD         |g_hPwrBtnEvent|
  000d0		 |$M20|

			 ENDP  ; |?PwrBtnThread@@YAKPAX@Z|, PwrBtnThread

	EXPORT	|??_C@_1EG@CHFCBFON@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAI?$AAS?$AAT?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_19HABNGADD@?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@CBMFLOL@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAi?$AAr?$AAq?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAs?$AAy?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@MFNLECAP@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAs?$AAy?$AAs?$AA?5?$AAi?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@BIOKHGAH@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAa?$AAs?$AA?5?$AAw?$AAa?$AAk?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@BFMKAFKP@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAb?$AAu@| [ DATA ] ; `string'
	EXPORT	|?Init@@YAHXZ|				; Init
	IMPORT	|DDKGpioSetConfig|
	IMPORT	|CreateEventW|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|KernelIoControl|
	IMPORT	|InterruptInitialize|
	IMPORT	|CreateThread|
	IMPORT	|CeSetThreadPriority|

  00008			 AREA	 |.pdata|, PDATA
|$pdata1$?Init@@YAHXZ| DCD imagerel |$LN29@Init|
	DCD	0xfdf301c1

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@BFMKAFKP@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAb?$AAu@| DCB "C"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "T"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "t", 0x0, "t", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@BIOKHGAH@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAa?$AAs?$AA?5?$AAw?$AAa?$AAk?$AAe@| DCB "%"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "a", 0x0, "s", 0x0, " ", 0x0, "w", 0x0, "a", 0x0, "k"
	DCB	0x0, "e", 0x0, " ", 0x0, "s", 0x0, "o", 0x0, "u", 0x0, "r"
	DCB	0x0, "c", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@MFNLECAP@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAs?$AAy?$AAs?$AA?5?$AAi?$AAn?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "s", 0x0, "y", 0x0, "s", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@CBMFLOL@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAi?$AAr?$AAq?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAs?$AAy?$AAs@| DCB "%"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p"
	DCB	0x0, " ", 0x0, "i", 0x0, "r", 0x0, "q", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "s", 0x0, "y"
	DCB	0x0, "s", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@| DCB "c"
	DCB	0x0, ":", 0x0, "\\", 0x0, "w", 0x0, "i", 0x0, "n", 0x0, "c"
	DCB	0x0, "e", 0x0, "8", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "p"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "\\", 0x0, "r", 0x0, "r", 0x0, "m", 0x0, "_"
	DCB	0x0, "p", 0x0, "p", 0x0, "c", 0x0, "_", 0x0, "w", 0x0, "i"
	DCB	0x0, "n", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "s", 0x0, "\\"
	DCB	0x0, "s", 0x0, "r", 0x0, "c", 0x0, "\\", 0x0, "d", 0x0, "r"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, "\\"
	DCB	0x0, "p", 0x0, "m", 0x0, "\\", 0x0, "p", 0x0, "d", 0x0, "d"
	DCB	0x0, "\\", 0x0, "p", 0x0, "w", 0x0, "r", 0x0, "b", 0x0, "u"
	DCB	0x0, "t", 0x0, "t", 0x0, "o", 0x0, "n", 0x0, ".", 0x0, "c"
	DCB	0x0, "p", 0x0, "p", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19HABNGADD@?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| DCB "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@CHFCBFON@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAI?$AAS?$AAT?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "I", 0x0, "S"
	DCB	0x0, "T", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\pdd\pwrbutton.cpp

  000d0			 AREA	 |.text|, CODE, THUMB

  000d0		 |?Init@@YAHXZ| PROC			; Init

; 98   : {

  000d0		 |$LN29@Init|
  000d0	e92d 48ff	 push        {r0-r7,r11,lr}
  000d4	f20d 0b20	 addw        r11,sp,#0x20
  000d8		 |$M27|

; 99   :     BOOL rc = FALSE;
; 100  :     DWORD dwIrq;
; 101  : 
; 102  :     // Configure GPIO signal for power button events
; 103  :     DDKGpioSetConfig(BSP_PWRBTN_GPIO_PORT,
; 104  :                      BSP_PWRBTN_GPIO_PIN,
; 105  :                      DDK_GPIO_DIR_IN,
; 106  :                      DDK_GPIO_INTR_HIGH_LEV);

  000d8	2301		 movs        r3,#1
  000da	2200		 movs        r2,#0
  000dc	211d		 movs        r1,#0x1D
  000de	2002		 movs        r0,#2
  000e0	2400		 movs        r4,#0
  000e2	f000 f800	 bl          DDKGpioSetConfig

; 107  :     DDKGpioClearIntrPin(BSP_PWRBTN_GPIO_PORT, BSP_PWRBTN_GPIO_PIN);

  000e6	211d		 movs        r1,#0x1D
  000e8	2002		 movs        r0,#2
  000ea	f000 f800	 bl          DDKGpioClearIntrPin

; 108  : 
; 109  : 
; 110  :     // Create event for IST signaling
; 111  :     g_hPwrBtnEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  000ee	2300		 movs        r3,#0
  000f0	2200		 movs        r2,#0
  000f2	2100		 movs        r1,#0
  000f4	2000		 movs        r0,#0
  000f6	f000 f800	 bl          CreateEventW
  000fa	4e39		 ldr         r6,|$LN44@Init|	; =|g_hPwrBtnThread|

; 112  :     if(g_hPwrBtnEvent == NULL)

  000fc	6070		 str         r0,[r6,#4]
  000fe	b930		 cbnz        r0,|$LN11@Init|

; 113  :     {
; 114  :         ERRORMSG(TRUE, (TEXT("%s(): failed to create IST event\r\n"),  __WFUNCTION__));

  00100	492d		 ldr         r1,|$LN34@Init|	; =|??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  00102	482c		 ldr         r0,|$LN33@Init|	; =|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  00104	2272		 movs        r2,#0x72
  00106	f000 f800	 bl          NKDbgPrintfW
  0010a	4834		 ldr         r0,|$LN43@Init|	; =|??_C@_1EG@CHFCBFON@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAI?$AAS?$AAT?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt@|

; 115  :         goto cleanUp;

  0010c	e031		 b           |$LN25@Init|
  0010e		 |$LN11@Init|

; 116  :     }
; 117  : 
; 118  :     // Register the GPIO IRQ
; 119  :     dwIrq = BSP_PWRBTN_GPIO_IRQ;

  0010e	23fd		 movs        r3,#0xFD

; 120  :     if (!KernelIoControl(IOCTL_HAL_REQUEST_SYSINTR, &dwIrq, sizeof(dwIrq), &g_dwPwrBtnSysIntr, sizeof(g_dwPwrBtnSysIntr), NULL))

  00110	4d31		 ldr         r5,|$LN42@Init|	; =|g_dwPwrBtnSysIntr|
  00112	9302		 str         r3,[sp,#8]
  00114	482f		 ldr         r0,|$LN41@Init|	; =0x1010098
  00116	2304		 movs        r3,#4
  00118	9300		 str         r3,[sp]
  0011a	2700		 movs        r7,#0
  0011c	462b		 mov         r3,r5
  0011e	a902		 add         r1,sp,#8
  00120	2204		 movs        r2,#4
  00122	9701		 str         r7,[sp,#4]
  00124	f000 f800	 bl          KernelIoControl
  00128	b930		 cbnz        r0,|$LN9@Init|

; 121  :     {
; 122  :         ERRORMSG(TRUE, (TEXT("%s(): failed to map irq into sys intr\r\n"),  __WFUNCTION__));

  0012a	4923		 ldr         r1,|$LN34@Init|	; =|??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  0012c	4821		 ldr         r0,|$LN33@Init|	; =|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  0012e	227a		 movs        r2,#0x7A
  00130	f000 f800	 bl          NKDbgPrintfW
  00134	4826		 ldr         r0,|$LN40@Init|	; =|??_C@_1FA@CBMFLOL@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAi?$AAr?$AAq?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAs?$AAy?$AAs@|

; 150  : 
; 151  : cleanUp:

  00136	e01c		 b           |$LN25@Init|
  00138		 |$LN9@Init|

; 123  :         goto cleanUp;
; 124  :     }
; 125  : 
; 126  :     if (!InterruptInitialize(g_dwPwrBtnSysIntr, g_hPwrBtnEvent, NULL, 0)) {

  00138	6871		 ldr         r1,[r6,#4]
  0013a	6828		 ldr         r0,[r5]
  0013c	2300		 movs        r3,#0
  0013e	2200		 movs        r2,#0
  00140	f000 f800	 bl          InterruptInitialize
  00144	b930		 cbnz        r0,|$LN7@Init|

; 127  :         ERRORMSG(TRUE, (TEXT("%s(): failed to register sys intr\r\n"),  __WFUNCTION__));

  00146	491c		 ldr         r1,|$LN34@Init|	; =|??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  00148	481a		 ldr         r0,|$LN33@Init|	; =|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  0014a	227f		 movs        r2,#0x7F
  0014c	f000 f800	 bl          NKDbgPrintfW
  00150	481e		 ldr         r0,|$LN39@Init|	; =|??_C@_1EI@MFNLECAP@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAs?$AAy?$AAs?$AA?5?$AAi?$AAn?$AAt@|

; 150  : 
; 151  : cleanUp:

  00152	e00e		 b           |$LN25@Init|
  00154		 |$LN7@Init|

; 128  :         goto cleanUp;
; 129  :     }
; 130  : 
; 131  :     // Configure power button as wake source
; 132  :     if (!KernelIoControl(IOCTL_HAL_ENABLE_WAKE, &g_dwPwrBtnSysIntr, sizeof(g_dwPwrBtnSysIntr), NULL, 0, NULL))

  00154	481c		 ldr         r0,|$LN38@Init|	; =0x10100a0
  00156	2300		 movs        r3,#0
  00158	2204		 movs        r2,#4
  0015a	4629		 mov         r1,r5
  0015c	9701		 str         r7,[sp,#4]
  0015e	9700		 str         r7,[sp]
  00160	f000 f800	 bl          KernelIoControl
  00164	b948		 cbnz        r0,|$LN5@Init|

; 133  :     {
; 134  :         ERRORMSG(TRUE, (TEXT("%s(): failed to register as wake source\r\n"),  __WFUNCTION__));

  00166	4914		 ldr         r1,|$LN34@Init|	; =|??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  00168	4812		 ldr         r0,|$LN33@Init|	; =|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  0016a	2286		 movs        r2,#0x86
  0016c	f000 f800	 bl          NKDbgPrintfW
  00170	4814		 ldr         r0,|$LN37@Init|	; =|??_C@_1FE@BIOKHGAH@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAa?$AAs?$AA?5?$AAw?$AAa?$AAk?$AAe@|
  00172		 |$LN25@Init|
  00172	4913		 ldr         r1,|$LN36@Init|	; =|??_C@_19HABNGADD@?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  00174	f000 f800	 bl          NKDbgPrintfW

; 150  : 
; 151  : cleanUp:

  00178	e016		 b           |$cleanUp$45|
  0017a		 |$LN5@Init|

; 135  :         goto cleanUp;
; 136  :     }
; 137  : 
; 138  :     // Create IST for power button interrupts
; 139  :     g_hPwrBtnThread = CreateThread(NULL, 0, PwrBtnThread, NULL, 0, NULL);

  0017a	4a10		 ldr         r2,|$LN35@Init|	; =|?PwrBtnThread@@YAKPAX@Z|
  0017c	2300		 movs        r3,#0
  0017e	2100		 movs        r1,#0
  00180	2000		 movs        r0,#0
  00182	9701		 str         r7,[sp,#4]
  00184	9700		 str         r7,[sp]
  00186	f000 f800	 bl          CreateThread
  0018a	6030		 str         r0,[r6]

; 140  :     if (!g_hPwrBtnThread)

  0018c	b940		 cbnz        r0,|$LN3@Init|

; 141  :     {
; 142  :         ERRORMSG(TRUE, (_T("CreateThread failed for power button driver!\r\n")));

  0018e	490a		 ldr         r1,|$LN34@Init|	; =|??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  00190	4808		 ldr         r0,|$LN33@Init|	; =|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  00192	228e		 movs        r2,#0x8E
  00194	f000 f800	 bl          NKDbgPrintfW
  00198	4805		 ldr         r0,|$LN32@Init|	; =|??_C@_1FO@BFMKAFKP@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAb?$AAu@|
  0019a	f000 f800	 bl          NKDbgPrintfW

; 150  : 
; 151  : cleanUp:

  0019e	e003		 b           |$cleanUp$45|
  001a0		 |$LN3@Init|

; 143  :         goto cleanUp;
; 144  :     }
; 145  :     else
; 146  :     {
; 147  :        CeSetThreadPriority(g_hPwrBtnThread, BSP_PWRBTN_THREAD_PRIORITY);

  001a0	2198		 movs        r1,#0x98
  001a2	f000 f800	 bl          CeSetThreadPriority

; 148  :     }
; 149  :     rc = TRUE;

  001a6	2401		 movs        r4,#1
  001a8		 |$cleanUp$45|

; 152  : 
; 153  :     return rc;
; 154  : 
; 155  : }

  001a8	4620		 mov         r0,r4
  001aa		 |$M30|
  001aa	b004		 add         sp,sp,#0x10
  001ac	e8bd 88f0	 pop         {r4-r7,r11,pc}
  001b0		 |$LN31@Init|
  001b0		 |$LN32@Init|
  001b0	0000 0000	 DCD         |??_C@_1FO@BFMKAFKP@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAb?$AAu@|
  001b4		 |$LN33@Init|
  001b4	0000 0000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  001b8		 |$LN34@Init|
  001b8	0000 0000	 DCD         |??_C@_1IM@JHFPOGNN@?$AAc?$AA?3?$AA?2?$AAw?$AAi?$AAn?$AAc?$AAe?$AA8?$AA0?$AA0?$AA?2?$AAp?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?2?$AAr?$AAr?$AAm?$AA_?$AAp?$AAp?$AAc?$AA_?$AAw?$AAi?$AAn@|
  001bc		 |$LN35@Init|
  001bc	0000 0000	 DCD         |?PwrBtnThread@@YAKPAX@Z|
  001c0		 |$LN36@Init|
  001c0	0000 0000	 DCD         |??_C@_19HABNGADD@?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  001c4		 |$LN37@Init|
  001c4	0000 0000	 DCD         |??_C@_1FE@BIOKHGAH@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAa?$AAs?$AA?5?$AAw?$AAa?$AAk?$AAe@|
  001c8		 |$LN38@Init|
  001c8	00a0 0101	 DCD         0x10100a0
  001cc		 |$LN39@Init|
  001cc	0000 0000	 DCD         |??_C@_1EI@MFNLECAP@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAs?$AAy?$AAs?$AA?5?$AAi?$AAn?$AAt@|
  001d0		 |$LN40@Init|
  001d0	0000 0000	 DCD         |??_C@_1FA@CBMFLOL@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAa?$AAp?$AA?5?$AAi?$AAr?$AAq?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAs?$AAy?$AAs@|
  001d4		 |$LN41@Init|
  001d4	0098 0101	 DCD         0x1010098
  001d8		 |$LN42@Init|
  001d8	0000 0000	 DCD         |g_dwPwrBtnSysIntr|
  001dc		 |$LN43@Init|
  001dc	0000 0000	 DCD         |??_C@_1EG@CHFCBFON@?$AA?$CF?$AAs?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAI?$AAS?$AAT?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt@|
  001e0		 |$LN44@Init|
  001e0	0000 0000	 DCD         |g_hPwrBtnThread|
  001e4		 |$M28|

			 ENDP  ; |?Init@@YAHXZ|, Init

	END
