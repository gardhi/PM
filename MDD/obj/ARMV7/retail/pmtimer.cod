; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.114 

	TTL	C:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp
	THUMB

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|ResetEvent|
	IMPORT	|EventModify|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |ResetEvent| PROC

; 232  :     return EventModify(h,EVENT_RESET);

  00000	2102		 movs        r1,#2
  00002		 |$M4|
  00002	f000 9000	 b           EventModify

			 ENDP  ; |ResetEvent|

	EXPORT	|SetEvent|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |SetEvent| PROC

; 244  :     return EventModify(h,EVENT_SET);

  00000	2103		 movs        r1,#3
  00002		 |$M4|
  00002	f000 9000	 b           EventModify

			 ENDP  ; |SetEvent|

	EXPORT	|GetCurrentThread|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |GetCurrentThread| PROC

; 358  :     return ((HANDLE)(SH_CURTHREAD+SYS_HANDLE_BASE));

  00000	2041		 movs        r0,#0x41
  00002		 |$M4|

; 359  : }

  00002	4770		 bx          lr

			 ENDP  ; |GetCurrentThread|

	EXPORT	|GetCurrentThreadId|
	IMPORT	|__GetUserKData|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |GetCurrentThreadId| PROC

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00000	2008		 movs        r0,#8
  00002		 |$M4|
  00002	f000 9000	 b           __GetUserKData

			 ENDP  ; |GetCurrentThreadId|

	IMPORT	|__security_push_cookie|
	IMPORT	|__security_pop_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|StringCchLengthW|
	IMPORT	|CeLogData|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$CeLogMsg| DCD imagerel |$LN8@CeLogMsg|
	DCD	imagerel |$unwind2$CeLogMsg|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$CeLogMsg| DCD 0x44b00032
	DCD	0x1e889e8
	DCD	0x400a8fb
	DCD	0x8801e8ff
	DCD	0xff05ef00
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffe5
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\celog.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |CeLogMsg| PROC

; 1208 : {

  00000		 |$LN8@CeLogMsg|
  00000	b40f		 push        {r0-r3}
  00002	e92d 4800	 push        {r11,lr}
  00006	46eb		 mov         r11,sp
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d24	 subw        sp,sp,#0x224
  00010		 |$M6|
  00010	4602		 mov         r2,r0

; 1209 :     va_list arglist;
; 1210 :     WCHAR   szTemp[MAX_PATH];
; 1211 :     size_t  cchLen;
; 1212 :     HRESULT hr;
; 1213 : 
; 1214 :     // Compose a single string using the input args
; 1215 :     va_start(arglist, szFormat);
; 1216 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00012	a806		 add         r0,sp,#0x18
  00014	ab8d		 add         r3,sp,#0x234
  00016	f44f 7182	 mov         r1,#0x104
  0001a	928c		 str         r2,[sp,#0x230]
  0001c	f000 f800	 bl          StringCchVPrintfW

; 1217 :     if (SUCCEEDED(hr)) {

  00020	2800		 cmp         r0,#0
  00022	db17		 blt         |$LN1@CeLogMsg|

; 1218 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00024	aa04		 add         r2,sp,#0x10
  00026	a806		 add         r0,sp,#0x18
  00028	f44f 7182	 mov         r1,#0x104
  0002c	f000 f800	 bl          StringCchLengthW

; 1219 :         if (SUCCEEDED(hr)) {

  00030	2800		 cmp         r0,#0
  00032	db0f		 blt         |$LN1@CeLogMsg|

; 1220 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1221 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  00034	f04f 4380	 mov         r3,#0x40000000
  00038	9301		 str         r3,[sp,#4]
  0003a	9b04		 ldr         r3,[sp,#0x10]
  0003c	2200		 movs        r2,#0
  0003e	9203		 str         r2,[sp,#0xC]
  00040	3301		 adds        r3,#1
  00042	005b		 lsls        r3,r3,#1
  00044	9202		 str         r2,[sp,#8]
  00046	9200		 str         r2,[sp]
  00048	aa06		 add         r2,sp,#0x18
  0004a	214a		 movs        r1,#0x4A
  0004c	b29b		 uxth        r3,r3
  0004e	2001		 movs        r0,#1
  00050	f000 f800	 bl          CeLogData
  00054		 |$LN1@CeLogMsg|
  00054		 |$M9|

; 1222 :         }
; 1223 :     }
; 1224 : }

  00054	f20d 2d24	 addw        sp,sp,#0x224
  00058	f000 f800	 bl          __security_pop_cookie
  0005c	f85d bb04	 pop         {r11}
  00060	f85d fb14	 ldr         pc,[sp],#0x14
  00064		 |$M7|

			 ENDP  ; |CeLogMsg|

	EXPORT	|?GetNextInactivityTimeout@@YAKK@Z|	; GetNextInactivityTimeout
	IMPORT	|PmLock|
	IMPORT	|gppActivityTimers|
	IMPORT	|PmUnlock|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?GetNextInactivityTimeout@@YAKK@Z| DCD imagerel |$LN17@GetNextIna|
	DCD	0xfd3260a1
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetNextInactivityTimeout@@YAKK@Z| PROC ; GetNextInactivityTimeout

; 187  : {

  00000		 |$LN17@GetNextIna|
  00000	e92d 4878	 push        {r3-r6,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M15|
  00008	4606		 mov         r6,r0

; 188  :     DWORD dwTimeout = INFINITE;

  0000a	f06f 0400	 mvn         r4,#0

; 189  :     DWORD dwIndex;
; 190  :     PACTIVITY_TIMER pat;
; 191  : 
; 192  :     PMLOCK();

  0000e	f000 f800	 bl          PmLock

; 193  :     for(dwIndex = 0; (pat = gppActivityTimers[dwIndex]) != NULL; dwIndex++) {

  00012	480f		 ldr         r0,|$LN20@GetNextIna| ; =|gppActivityTimers|
  00014	6802		 ldr         r2,[r0]
  00016	6811		 ldr         r1,[r2]
  00018	b1a9		 cbz         r1,|$LN6@GetNextIna|

; 188  :     DWORD dwTimeout = INFINITE;

  0001a	2500		 movs        r5,#0
  0001c		 |$LL8@GetNextIna|

; 194  :         DWORD dwTimeLeft = pat->dwTimeLeft;

  0001c	688b		 ldr         r3,[r1,#8]

; 195  :         if(dwTimeLeft != INFINITE) {

  0001e	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00022	d00c		 beq         |$LN7@GetNextIna|

; 196  :             // subtract elapsed time
; 197  :             if(dwTimeLeft < dwElapsed) {

  00024	42b3		 cmp         r3,r6
  00026	d201		 bcs         |$LN4@GetNextIna|

; 198  :                 dwTimeLeft = 0;

  00028	2300		 movs        r3,#0

; 199  :             } else {

  0002a	e000		 b           |$LN3@GetNextIna|
  0002c		 |$LN4@GetNextIna|

; 200  :                 dwTimeLeft -= dwElapsed;

  0002c	1b9b		 subs        r3,r3,r6
  0002e		 |$LN3@GetNextIna|

; 201  :             }
; 202  : 
; 203  :             // update the timeout value
; 204  :             if(dwTimeout == INFINITE || dwTimeLeft < dwTimeout) {

  0002e	f1b4 3fff	 cmp         r4,#0xFFFFFFFF
  00032	d001		 beq         |$LN1@GetNextIna|
  00034	42a3		 cmp         r3,r4
  00036	d200		 bcs         |$LN2@GetNextIna|
  00038		 |$LN1@GetNextIna|

; 205  :                 dwTimeout = dwTimeLeft;

  00038	461c		 mov         r4,r3
  0003a		 |$LN2@GetNextIna|

; 206  :             }
; 207  : 
; 208  :             // update the timer
; 209  :             pat->dwTimeLeft = dwTimeLeft;

  0003a	608b		 str         r3,[r1,#8]
  0003c	6802		 ldr         r2,[r0]
  0003e		 |$LN7@GetNextIna|

; 193  :     for(dwIndex = 0; (pat = gppActivityTimers[dwIndex]) != NULL; dwIndex++) {

  0003e	3504		 adds        r5,#4
  00040	58a9		 ldr         r1,[r5,r2]
  00042	2900		 cmp         r1,#0
  00044	d1ea		 bne         |$LL8@GetNextIna|
  00046		 |$LN6@GetNextIna|

; 210  :         }
; 211  :     }
; 212  :     PMUNLOCK();

  00046	f000 f800	 bl          PmUnlock

; 213  : 
; 214  :     return dwTimeout;
; 215  : }

  0004a	4620		 mov         r0,r4
  0004c		 |$M18|
  0004c	e8bd 8878	 pop         {r3-r6,r11,pc}
  00050		 |$LN19@GetNextIna|
  00050		 |$LN20@GetNextIna|
  00050	0000 0000	 DCD         |gppActivityTimers|
  00054		 |$M16|

			 ENDP  ; |?GetNextInactivityTimeout@@YAKK@Z|, GetNextInactivityTimeout

	EXPORT	|??_C@_1CE@PFHECECI@?$AA?$CF?$AAs?$AA?2?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@BIOIIFOI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AAs?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@HNAHFPMO@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@BKONPLFM@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KA@PJKODPJA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAo?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@OELEEODA@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAM?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LI@OJGPOFFA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@HFHFECPN@?$AAW?$AAa?$AAk?$AAe?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@OELICMJG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?8?$AA?$CF?$AAs?$AA?8@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?ActivityTimerInitList@@YAKXZ|		; ActivityTimerInitList
	IMPORT	|memset|
	IMPORT	|StringCchPrintfW|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|RegQueryInfoKeyW|
	IMPORT	|dpCurSettings|
	IMPORT	|PmAlloc|
	IMPORT	|RegEnumKeyExW|
	IMPORT	|RegQueryValueExW|
	IMPORT	|ActivityTimerCreate|
	IMPORT	|RegCloseKey|
	IMPORT	|ActivityTimerDestroy|
	IMPORT	|PmFree|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?ActivityTimerInitList@@YAKXZ| DCD imagerel |$LN66@ActivityTi|
	DCD	imagerel |$unwind2$?ActivityTimerInitList@@YAKXZ|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?ActivityTimerInitList@@YAKXZ| DCD 0x33b0013f
	DCD	0x1e890ea
	DCD	0xe8ffdffc
	DCD	0xffdf01
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffd9

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@OELICMJG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?8?$AA?$CF?$AAs?$AA?8@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "y", 0x0, "p", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "'"
	DCB	0x0, "%", 0x0, "s", 0x0, "'", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@HFHFECPN@?$AAW?$AAa?$AAk?$AAe?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAs?$AA?$AA@| DCB "W"
	DCB	0x0, "a", 0x0, "k", 0x0, "e", 0x0, "S", 0x0, "o", 0x0, "u"
	DCB	0x0, "r", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LI@OJGPOFFA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "r", 0x0, "y", 0x0, "V"
	DCB	0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e", 0x0, "E", 0x0, "x"
	DCB	0x0, "(", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, "'"
	DCB	0x0, "%", 0x0, "s", 0x0, "'", 0x0, ")", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "(", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r"
	DCB	0x0, "n", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@OELEEODA@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAM?$AAs?$AA?$AA@| DCB "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, "M", 0x0, "s", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@PJKODPJA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAo?$AAr@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "r", 0x0, "y", 0x0, "V"
	DCB	0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e", 0x0, "E", 0x0, "x"
	DCB	0x0, "(", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, "'"
	DCB	0x0, "%", 0x0, "s", 0x0, "'", 0x0, ")", 0x0, " ", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "n", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@BKONPLFM@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "T", 0x0
	DCB	"i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@HNAHFPMO@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$AA@| DCB "A"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "L", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@BIOIIFOI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AAs?$AA?$AN@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u"
	DCB	0x0, "l", 0x0, "d", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "r", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "\\"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "\\"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "\\", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@PFHECECI@?$AA?$CF?$AAs?$AA?2?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, "\\", 0x0, "A", 0x0, "c", 0x0, "t", 0x0, "i"
	DCB	0x0, "v", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?ActivityTimerInitList@@YAKXZ| PROC	; ActivityTimerInitList

; 31   : {

  00000		 |$LN66@ActivityTi|
  00000	e92d 4ff0	 push        {r4-r11,lr}
  00004	f20d 0b1c	 addw        r11,sp,#0x1C
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f6ad 2d40	 subw        sp,sp,#0xA40
  00010		 |$M64|

; 32   :     DWORD dwStatus;
; 33   :     HKEY hk = NULL;

  00010	2300		 movs        r3,#0

; 34   :     TCHAR szSources[1024];
; 35   :     DWORD dwNumTimers = 0;
; 36   :     PPACTIVITY_TIMER ppatList = NULL;
; 37   :     SETFNAME(_T("ActivityTimerInitList"));
; 38   : 
; 39   :     VERIFY(SUCCEEDED(StringCchPrintf(szSources, _countof(szSources), _T("%s\\ActivityTimers"), PWRMGR_REG_KEY)));

  00012	4aa8		 ldr         r2,|$LN82@ActivityTi| ; =|??_C@_1CE@PFHECECI@?$AA?$CF?$AAs?$AA?2?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AA?$AA@|
  00014	930b		 str         r3,[sp,#0x2C]
  00016	9308		 str         r3,[sp,#0x20]
  00018	4ba5		 ldr         r3,|$LN81@ActivityTi| ; =|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  0001a	f44f 6180	 mov         r1,#0x400
  0001e	a890		 add         r0,sp,#0x240
  00020	f000 f800	 bl          StringCchPrintfW

; 40   :     dwStatus = RegOpenKeyEx(HKEY_LOCAL_MACHINE, szSources, 0, 0, &hk);

  00024	ab0b		 add         r3,sp,#0x2C
  00026	9300		 str         r3,[sp]
  00028	2301		 movs        r3,#1
  0002a	07d8		 lsls        r0,r3,#0x1F
  0002c	3002		 adds        r0,#2
  0002e	a990		 add         r1,sp,#0x240
  00030	2300		 movs        r3,#0
  00032	2200		 movs        r2,#0
  00034	f000 f800	 bl          RegOpenKeyExW

; 41   :     if(dwStatus == ERROR_SUCCESS) {

  00038	2600		 movs        r6,#0
  0003a	b988		 cbnz        r0,|$LN34@ActivityTi|

; 42   :         // figure out how many values are associated with the key
; 43   :         dwStatus = RegQueryInfoKey(hk, NULL, NULL, NULL, &dwNumTimers, NULL, NULL, NULL,
; 44   :             NULL, NULL, NULL, NULL);

  0003c	ab08		 add         r3,sp,#0x20
  0003e	980b		 ldr         r0,[sp,#0x2C]
  00040	9300		 str         r3,[sp]
  00042	2300		 movs        r3,#0
  00044	2200		 movs        r2,#0
  00046	2100		 movs        r1,#0
  00048	9607		 str         r6,[sp,#0x1C]
  0004a	9606		 str         r6,[sp,#0x18]
  0004c	9605		 str         r6,[sp,#0x14]
  0004e	9604		 str         r6,[sp,#0x10]
  00050	9603		 str         r6,[sp,#0xC]
  00052	9602		 str         r6,[sp,#8]
  00054	9601		 str         r6,[sp,#4]
  00056	f000 f800	 bl          RegQueryInfoKeyW

; 45   :     } else {

  0005a	9b08		 ldr         r3,[sp,#0x20]
  0005c	4604		 mov         r4,r0
  0005e	e002		 b           |$LN33@ActivityTi|
  00060		 |$LN34@ActivityTi|

; 46   :         // no timers configured in the registry
; 47   :         dwNumTimers = 0;

  00060	2300		 movs        r3,#0
  00062	9308		 str         r3,[sp,#0x20]

; 48   :         dwStatus = ERROR_SUCCESS;

  00064	2400		 movs        r4,#0
  00066		 |$LN33@ActivityTi|

; 49   :     }
; 50   : 
; 51   :     // if there are any values, allocate an array to hold them
; 52   :     if(dwStatus == ERROR_SUCCESS) {

  00066	f8df 8244	 ldr         r8,|$LN80@ActivityTi| ; =|dpCurSettings|
  0006a	2c00		 cmp         r4,#0
  0006c	f040 80f1	 bne         |$LN61@ActivityTi|

; 53   :         ppatList = (PPACTIVITY_TIMER) PmAlloc((dwNumTimers + 1) * sizeof(PACTIVITY_TIMER));

  00070	3301		 adds        r3,#1
  00072	0098		 lsls        r0,r3,#2
  00074	f000 f800	 bl          PmAlloc
  00078	4605		 mov         r5,r0

; 54   :         if(ppatList == NULL) {

  0007a	b95d		 cbnz        r5,|$LN31@ActivityTi|

; 55   :             PMLOGMSG(ZONE_WARN, (_T("%s: couldn't allocate %d timers\r\n"), pszFname,
; 56   :                 dwNumTimers));

  0007c	f8d8 3440	 ldr         r3,[r8,#0x440]
  00080	f013 0f02	 tst         r3,#2
  00084	d004		 beq         |$LN37@ActivityTi|
  00086	4888		 ldr         r0,|$LN79@ActivityTi| ; =|??_C@_1EE@BIOIIFOI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AAs?$AA?$AN@|
  00088	9a08		 ldr         r2,[sp,#0x20]
  0008a	497d		 ldr         r1,|$LN69@ActivityTi| ; =|??_C@_1CM@HNAHFPMO@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$AA@|
  0008c	f000 f800	 bl          CeLogMsg
  00090		 |$LN37@ActivityTi|

; 57   :             dwStatus = ERROR_NOT_ENOUGH_MEMORY;

  00090	2408		 movs        r4,#8

; 58   :         } else {

  00092	e0de		 b           |$LN61@ActivityTi|
  00094		 |$LN31@ActivityTi|

; 59   :             memset(ppatList, 0, (dwNumTimers + 1) * sizeof(PACTIVITY_TIMER));

  00094	9b08		 ldr         r3,[sp,#0x20]
  00096	2100		 movs        r1,#0
  00098	4628		 mov         r0,r5
  0009a	3301		 adds        r3,#1
  0009c	009a		 lsls        r2,r3,#2
  0009e	f000 f800	 bl          memset

; 60   :             ppatList[dwNumTimers] = NULL;

  000a2	9b08		 ldr         r3,[sp,#0x20]
  000a4	f845 6023	 str         r6,[r5,r3,lsl #2]

; 61   :         }
; 62   :     }
; 63   : 
; 64   :     // read list of timers
; 65   :     if(dwStatus == ERROR_SUCCESS && dwNumTimers != 0) {

  000a8	9b08		 ldr         r3,[sp,#0x20]
  000aa	2b00		 cmp         r3,#0
  000ac	f000 80cb	 beq         |$LN58@ActivityTi|

; 66   :         DWORD dwIndex = 0;

  000b0	f8df 91f0	 ldr         r9,|$LN78@ActivityTi| ; =|??_C@_1BI@HFHFECPN@?$AAW?$AAa?$AAk?$AAe?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAs?$AA?$AA@|
  000b4	2600		 movs        r6,#0
  000b6	462f		 mov         r7,r5
  000b8	f44f 7a7a	 mov         r10,#0x3E8
  000bc		 |$LN62@ActivityTi|

; 67   :         do {
; 68   :             TCHAR szName[256];
; 69   :             DWORD cbValueName = _countof(szName);
; 70   :             
; 71   :             dwStatus = RegEnumKeyEx(hk, dwIndex, szName, &cbValueName, NULL,
; 72   :                 NULL, NULL, NULL);

  000bc	980b		 ldr         r0,[sp,#0x2C]
  000be	f44f 7280	 mov         r2,#0x100
  000c2	2300		 movs        r3,#0
  000c4	920e		 str         r2,[sp,#0x38]
  000c6	9303		 str         r3,[sp,#0xC]
  000c8	9302		 str         r3,[sp,#8]
  000ca	9301		 str         r3,[sp,#4]
  000cc	9300		 str         r3,[sp]
  000ce	ab0e		 add         r3,sp,#0x38
  000d0	aa10		 add         r2,sp,#0x40
  000d2	4631		 mov         r1,r6
  000d4	f000 f800	 bl          RegEnumKeyExW
  000d8	4604		 mov         r4,r0

; 73   :             if(dwStatus == ERROR_SUCCESS) {

  000da	2c00		 cmp         r4,#0
  000dc	f040 8092	 bne         |$LN25@ActivityTi|

; 74   :                 HKEY hkSubKey = NULL;

  000e0	2300		 movs        r3,#0
  000e2	930a		 str         r3,[sp,#0x28]

; 75   :                 
; 76   :                 // open the subkey
; 77   :                 dwStatus = RegOpenKeyEx(hk, szName, 0, 0, &hkSubKey);

  000e4	980b		 ldr         r0,[sp,#0x2C]
  000e6	ab0a		 add         r3,sp,#0x28
  000e8	9300		 str         r3,[sp]
  000ea	2300		 movs        r3,#0
  000ec	2200		 movs        r2,#0
  000ee	a910		 add         r1,sp,#0x40
  000f0	f000 f800	 bl          RegOpenKeyExW
  000f4	4604		 mov         r4,r0

; 78   :                 if(dwStatus == ERROR_SUCCESS) {

  000f6	2c00		 cmp         r4,#0
  000f8	f040 8081	 bne         |$LN11@ActivityTi|

; 79   :                     DWORD dwSize, dwType, dwTimeout;
; 80   :                     LPCTSTR pszValueName;
; 81   : 
; 82   :                     // read the timeout, expressed in seconds
; 83   :                     dwSize = sizeof(dwTimeout);

  000fc	2304		 movs        r3,#4
  000fe	930c		 str         r3,[sp,#0x30]

; 84   :                     pszValueName = _T("Timeout");
; 85   :                     dwStatus = RegQueryValueEx(hkSubKey, pszValueName, NULL, &dwType, (LPBYTE) &dwTimeout, 
; 86   :                         &dwSize);

  00100	ab0c		 add         r3,sp,#0x30
  00102	9301		 str         r3,[sp,#4]
  00104	4965		 ldr         r1,|$LN76@ActivityTi| ; =|??_C@_1BA@BKONPLFM@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00106	980a		 ldr         r0,[sp,#0x28]
  00108	ab09		 add         r3,sp,#0x24
  0010a	9300		 str         r3,[sp]
  0010c	ab0d		 add         r3,sp,#0x34
  0010e	2200		 movs        r2,#0
  00110	f000 f800	 bl          RegQueryValueExW
  00114	4604		 mov         r4,r0

; 87   :                     if(dwStatus == ERROR_SUCCESS) {

  00116	b9cc		 cbnz        r4,|$LN23@ActivityTi|

; 88   :                         if(dwType != REG_DWORD || dwTimeout > MAXTIMERINTERVAL) {

  00118	990d		 ldr         r1,[sp,#0x34]
  0011a	9a09		 ldr         r2,[sp,#0x24]
  0011c	2904		 cmp         r1,#4
  0011e	d102		 bne         |$LN21@ActivityTi|
  00120	4b5f		 ldr         r3,|$LN77@ActivityTi| ; =0x418937
  00122	429a		 cmp         r2,r3
  00124	d90e		 bls         |$LN22@ActivityTi|
  00126		 |$LN21@ActivityTi|

; 89   :                             PMLOGMSG(ZONE_WARN, 
; 90   :                                 (_T("%s: RegQueryValueEx('%s'\'%s') or returned invalid type %d or invalid value %d\r\n"),
; 91   :                                 pszFname, szName, pszValueName, dwType, dwTimeout));

  00126	f8d8 3440	 ldr         r3,[r8,#0x440]
  0012a	f013 0f02	 tst         r3,#2
  0012e	d008		 beq         |$LN39@ActivityTi|
  00130	4b5a		 ldr         r3,|$LN76@ActivityTi| ; =|??_C@_1BA@BKONPLFM@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  00132	4859		 ldr         r0,|$LN75@ActivityTi| ; =|??_C@_1KA@PJKODPJA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAo?$AAr@|
  00134	9100		 str         r1,[sp]
  00136	4952		 ldr         r1,|$LN69@ActivityTi| ; =|??_C@_1CM@HNAHFPMO@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$AA@|
  00138	9201		 str         r2,[sp,#4]
  0013a	aa10		 add         r2,sp,#0x40
  0013c	f000 f800	 bl          CeLogMsg
  00140	9a09		 ldr         r2,[sp,#0x24]
  00142		 |$LN39@ActivityTi|

; 92   :                             dwStatus = ERROR_INVALID_DATA;

  00142	240d		 movs        r4,#0xD
  00144		 |$LN22@ActivityTi|

; 93   :                         }
; 94   : 
; 95   :                         // convert timeout to milliseconds
; 96   :                         dwTimeout *= 1000;

  00144	fb0a f302	 mul         r3,r10,r2
  00148	9309		 str         r3,[sp,#0x24]

; 97   :                     } else {

  0014a	e022		 b           |$LN19@ActivityTi|
  0014c		 |$LN23@ActivityTi|

; 98   :                         // no timeout in seconds, try milliseconds
; 99   :                         dwSize = sizeof(dwTimeout);

  0014c	2304		 movs        r3,#4
  0014e	930c		 str         r3,[sp,#0x30]

; 100  :                         pszValueName = _T("TimeoutMs");
; 101  :                         dwStatus = RegQueryValueEx(hkSubKey, pszValueName, NULL, &dwType, (LPBYTE) &dwTimeout, 
; 102  :                             &dwSize);

  00150	ab0c		 add         r3,sp,#0x30
  00152	9301		 str         r3,[sp,#4]
  00154	494f		 ldr         r1,|$LN74@ActivityTi| ; =|??_C@_1BE@OELEEODA@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAM?$AAs?$AA?$AA@|
  00156	980a		 ldr         r0,[sp,#0x28]
  00158	ab09		 add         r3,sp,#0x24
  0015a	9300		 str         r3,[sp]
  0015c	ab0d		 add         r3,sp,#0x34
  0015e	2200		 movs        r2,#0
  00160	f000 f800	 bl          RegQueryValueExW

; 103  :                         if(dwStatus != ERROR_SUCCESS || dwType != REG_DWORD || dwTimeout > (MAXTIMERINTERVAL * 1000)) {

  00164	9a09		 ldr         r2,[sp,#0x24]
  00166	990d		 ldr         r1,[sp,#0x34]
  00168	b920		 cbnz        r0,|$LN18@ActivityTi|
  0016a	2904		 cmp         r1,#4
  0016c	d102		 bne         |$LN18@ActivityTi|
  0016e	f512 7f94	 cmn         r2,#0x128
  00172	d90f		 bls         |$LN59@ActivityTi|
  00174		 |$LN18@ActivityTi|

; 104  :                             PMLOGMSG(ZONE_WARN, 
; 105  :                                 (_T("%s: RegQueryValueEx('%s'\'%s') failed %d (or returned invalid type %d or invalid value %d)\r\n"),
; 106  :                                 pszFname, szName, pszValueName, dwStatus, dwType, dwTimeout));

  00174	f8d8 3440	 ldr         r3,[r8,#0x440]
  00178	f013 0f02	 tst         r3,#2
  0017c	d008		 beq         |$LN41@ActivityTi|
  0017e	4b45		 ldr         r3,|$LN74@ActivityTi| ; =|??_C@_1BE@OELEEODA@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAM?$AAs?$AA?$AA@|
  00180	9101		 str         r1,[sp,#4]
  00182	493f		 ldr         r1,|$LN69@ActivityTi| ; =|??_C@_1CM@HNAHFPMO@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$AA@|
  00184	9000		 str         r0,[sp]
  00186	4842		 ldr         r0,|$LN73@ActivityTi| ; =|??_C@_1LI@OJGPOFFA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa@|
  00188	9202		 str         r2,[sp,#8]
  0018a	aa10		 add         r2,sp,#0x40
  0018c	f000 f800	 bl          CeLogMsg
  00190		 |$LN41@ActivityTi|

; 107  :                             dwStatus = ERROR_INVALID_DATA;

  00190	240d		 movs        r4,#0xD
  00192		 |$LN19@ActivityTi|

; 108  :                         }
; 109  :                     }
; 110  : 
; 111  :                     if(dwStatus == ERROR_SUCCESS) {

  00192	bba4		 cbnz        r4,|$LN11@ActivityTi|
  00194		 |$LN59@ActivityTi|

; 112  :                         // get wake sources
; 113  :                         dwSize = sizeof(szSources);

  00194	f44f 6300	 mov         r3,#0x800
  00198	930c		 str         r3,[sp,#0x30]

; 114  :                         pszValueName = _T("WakeSources");
; 115  :                         dwStatus = RegQueryValueEx(hkSubKey, pszValueName, NULL, &dwType, (LPBYTE) szSources, 
; 116  :                             &dwSize);

  0019a	ab0c		 add         r3,sp,#0x30
  0019c	9301		 str         r3,[sp,#4]
  0019e	980a		 ldr         r0,[sp,#0x28]
  001a0	ab90		 add         r3,sp,#0x240
  001a2	9300		 str         r3,[sp]
  001a4	ab0d		 add         r3,sp,#0x34
  001a6	2200		 movs        r2,#0
  001a8	4649		 mov         r1,r9
  001aa	f000 f800	 bl          RegQueryValueExW
  001ae	4604		 mov         r4,r0

; 117  :                         if(dwStatus != ERROR_SUCCESS) {

  001b0	b134		 cbz         r4,|$LN16@ActivityTi|

; 118  :                             // no wake sources
; 119  :                             szSources[0] = 0;

  001b2	2300		 movs        r3,#0
  001b4	f8ad 3240	 strh        r3,[sp,#0x240]

; 120  :                             szSources[1] = 0;

  001b8	f8ad 3242	 strh        r3,[sp,#0x242]

; 121  :                             dwStatus = ERROR_SUCCESS;

  001bc	2400		 movs        r4,#0
  001be	e016		 b           |$LN13@ActivityTi|
  001c0		 |$LN16@ActivityTi|

; 122  :                         } else if(dwType != REG_MULTI_SZ) {

  001c0	9a0d		 ldr         r2,[sp,#0x34]
  001c2	2a07		 cmp         r2,#7
  001c4	d00e		 beq         |$LN14@ActivityTi|

; 123  :                             PMLOGMSG(ZONE_WARN, (_T("%s: invalid type %d for '%s'\'%s'\r\n"), pszFname, dwType,
; 124  :                                 szName, pszValueName));

  001c6	f8d8 3440	 ldr         r3,[r8,#0x440]
  001ca	f013 0f02	 tst         r3,#2
  001ce	d006		 beq         |$LN47@ActivityTi|
  001d0	492b		 ldr         r1,|$LN69@ActivityTi| ; =|??_C@_1CM@HNAHFPMO@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$AA@|
  001d2	482e		 ldr         r0,|$LN72@ActivityTi| ; =|??_C@_1EG@OELICMJG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?8?$AA?$CF?$AAs?$AA?8@|
  001d4	ab10		 add         r3,sp,#0x40
  001d6	f8cd 9000	 str         r9,[sp]
  001da	f000 f800	 bl          CeLogMsg
  001de		 |$LN47@ActivityTi|

; 125  :                             dwStatus = ERROR_INVALID_DATATYPE;

  001de	f240 740c	 mov         r4,#0x70C

; 126  :                         } else {

  001e2	e00c		 b           |$LN11@ActivityTi|
  001e4		 |$LN14@ActivityTi|

; 127  :                             szSources[_countof(szSources) -1] = szSources[_countof(szSources) -2] = 0; // Terminate MultiSZ

  001e4	2300		 movs        r3,#0
  001e6	f8ad 3a3c	 strh        r3,[sp,#0xA3C]
  001ea	f8ad 3a3e	 strh        r3,[sp,#0xA3E]
  001ee		 |$LN13@ActivityTi|

; 128  :                         }
; 129  :                     }
; 130  :                     
; 131  :                     // did we get the parameters?
; 132  :                     if(dwStatus == ERROR_SUCCESS) {
; 133  :                         ppatList[dwIndex] = ActivityTimerCreate(szName, dwTimeout, szSources);

  001ee	9909		 ldr         r1,[sp,#0x24]
  001f0	aa90		 add         r2,sp,#0x240
  001f2	a810		 add         r0,sp,#0x40
  001f4	f000 f800	 bl          ActivityTimerCreate
  001f8	6038		 str         r0,[r7]

; 134  :                         if(ppatList[dwIndex] == NULL) {

  001fa	b900		 cbnz        r0,|$LN11@ActivityTi|

; 135  :                             dwStatus = ERROR_NOT_ENOUGH_MEMORY;

  001fc	2408		 movs        r4,#8
  001fe		 |$LN11@ActivityTi|

; 136  :                         }
; 137  :                     }
; 138  :                 }
; 139  :                 
; 140  :                 // release the registry key
; 141  :                 RegCloseKey(hkSubKey);

  001fe	980a		 ldr         r0,[sp,#0x28]
  00200	f000 f800	 bl          RegCloseKey
  00204		 |$LN25@ActivityTi|

; 142  :             }
; 143  :             
; 144  :             // update the index
; 145  :             dwIndex++;

  00204	3601		 adds        r6,#1
  00206	3704		 adds        r7,#4

; 146  :         } while(dwStatus == ERROR_SUCCESS && dwIndex < dwNumTimers);

  00208	b91c		 cbnz        r4,|$LN10@ActivityTi|
  0020a	9b08		 ldr         r3,[sp,#0x20]
  0020c	429e		 cmp         r6,r3
  0020e	d205		 bcs         |$LN9@ActivityTi|
  00210	e754		 b           |$LN62@ActivityTi|
  00212		 |$LN10@ActivityTi|

; 147  : 
; 148  :         // did we read all items ok?
; 149  :         if(dwStatus == ERROR_NO_MORE_ITEMS) {

  00212	f240 1303	 mov         r3,#0x103
  00216	429c		 cmp         r4,r3
  00218	d100		 bne         |$LN9@ActivityTi|

; 150  :             dwStatus = ERROR_SUCCESS;

  0021a	2400		 movs        r4,#0
  0021c		 |$LN9@ActivityTi|

; 151  :         }
; 152  : 
; 153  :         // terminate the list with a NULL
; 154  :         ppatList[dwIndex] = NULL;

  0021c	2300		 movs        r3,#0
  0021e	f845 3026	 str         r3,[r5,r6,lsl #2]

; 155  :     }
; 156  : 
; 157  :     // did we succeed?
; 158  :     if(dwStatus == ERROR_SUCCESS) {

  00222	b184		 cbz         r4,|$LN58@ActivityTi|

; 162  :     } else {
; 163  :         DWORD dwIndex;
; 164  :         if(ppatList != NULL) {
; 165  :             for(dwIndex = 0; dwIndex < dwNumTimers; dwIndex++) {

  00224	9b08		 ldr         r3,[sp,#0x20]
  00226	2600		 movs        r6,#0
  00228	b14b		 cbz         r3,|$LN3@ActivityTi|
  0022a	462f		 mov         r7,r5
  0022c		 |$LL5@ActivityTi|
  0022c	f857 0b04	 ldr         r0,[r7],#4

; 166  :                 if(ppatList[dwIndex] != NULL) {

  00230	b110		 cbz         r0,|$LN4@ActivityTi|

; 167  :                     ActivityTimerDestroy(ppatList[dwIndex]);

  00232	f000 f800	 bl          ActivityTimerDestroy
  00236	9b08		 ldr         r3,[sp,#0x20]
  00238		 |$LN4@ActivityTi|

; 162  :     } else {
; 163  :         DWORD dwIndex;
; 164  :         if(ppatList != NULL) {
; 165  :             for(dwIndex = 0; dwIndex < dwNumTimers; dwIndex++) {

  00238	3601		 adds        r6,#1
  0023a	429e		 cmp         r6,r3
  0023c	d3f6		 bcc         |$LL5@ActivityTi|
  0023e		 |$LN3@ActivityTi|

; 168  :                 }
; 169  :             }
; 170  :             PmFree(ppatList);

  0023e	4628		 mov         r0,r5
  00240	f000 f800	 bl          PmFree
  00244	e005		 b           |$LN61@ActivityTi|
  00246		 |$LN58@ActivityTi|

; 159  :         PMLOCK();

  00246	f000 f800	 bl          PmLock

; 160  :         gppActivityTimers = ppatList;

  0024a	4b0f		 ldr         r3,|$LN71@ActivityTi| ; =|gppActivityTimers|
  0024c	601d		 str         r5,[r3]

; 161  :         PMUNLOCK();

  0024e	f000 f800	 bl          PmUnlock
  00252		 |$LN61@ActivityTi|

; 171  :         }
; 172  :     }
; 173  : 
; 174  :     // release resources
; 175  :     if(hk != NULL) RegCloseKey(hk);

  00252	980b		 ldr         r0,[sp,#0x2C]
  00254	b108		 cbz         r0,|$LN1@ActivityTi|
  00256	f000 f800	 bl          RegCloseKey
  0025a		 |$LN1@ActivityTi|

; 176  : 
; 177  :     PMLOGMSG(dwStatus != ERROR_SUCCESS && ZONE_WARN,
; 178  :         (_T("%s: returning %d\r\n"), pszFname, dwStatus));

  0025a	b14c		 cbz         r4,|$LN51@ActivityTi|
  0025c	f8d8 3440	 ldr         r3,[r8,#0x440]
  00260	f013 0f02	 tst         r3,#2
  00264	d004		 beq         |$LN51@ActivityTi|
  00266	4807		 ldr         r0,|$LN70@ActivityTi| ; =|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00268	4905		 ldr         r1,|$LN69@ActivityTi| ; =|??_C@_1CM@HNAHFPMO@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$AA@|
  0026a	4622		 mov         r2,r4
  0026c	f000 f800	 bl          CeLogMsg
  00270		 |$LN51@ActivityTi|

; 179  :     return dwStatus;
; 180  : }

  00270	4620		 mov         r0,r4
  00272		 |$M67|
  00272	f60d 2d40	 addw        sp,sp,#0xA40
  00276	f000 f800	 bl          __security_pop_cookie
  0027a	e8bd 8ff0	 pop         {r4-r11,pc}
  0027e		 |$LN83@ActivityTi|
  0027e		 |$M84|
  0027e	defe		 __debugbreak
  00280		 |$LN68@ActivityTi|
  00280		 |$LN69@ActivityTi|
  00280	0000 0000	 DCD         |??_C@_1CM@HNAHFPMO@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$AA@|
  00284		 |$LN70@ActivityTi|
  00284	0000 0000	 DCD         |??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00288		 |$LN71@ActivityTi|
  00288	0000 0000	 DCD         |gppActivityTimers|
  0028c		 |$LN72@ActivityTi|
  0028c	0000 0000	 DCD         |??_C@_1EG@OELICMJG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?8?$AA?$CF?$AAs?$AA?8@|
  00290		 |$LN73@ActivityTi|
  00290	0000 0000	 DCD         |??_C@_1LI@OJGPOFFA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa@|
  00294		 |$LN74@ActivityTi|
  00294	0000 0000	 DCD         |??_C@_1BE@OELEEODA@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAM?$AAs?$AA?$AA@|
  00298		 |$LN75@ActivityTi|
  00298	0000 0000	 DCD         |??_C@_1KA@PJKODPJA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAV?$AAa?$AAl?$AAu?$AAe?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAo?$AAr@|
  0029c		 |$LN76@ActivityTi|
  0029c	0000 0000	 DCD         |??_C@_1BA@BKONPLFM@?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  002a0		 |$LN77@ActivityTi|
  002a0	8937 0041	 DCD         0x418937
  002a4		 |$LN78@ActivityTi|
  002a4	0000 0000	 DCD         |??_C@_1BI@HFHFECPN@?$AAW?$AAa?$AAk?$AAe?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAs?$AA?$AA@|
  002a8		 |$LN79@ActivityTi|
  002a8	0000 0000	 DCD         |??_C@_1EE@BIOIIFOI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AAs?$AA?$AN@|
  002ac		 |$LN80@ActivityTi|
  002ac	0000 0000	 DCD         |dpCurSettings|
  002b0		 |$LN81@ActivityTi|
  002b0	0000 0000	 DCD         |??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  002b4		 |$LN82@ActivityTi|
  002b4	0000 0000	 DCD         |??_C@_1CE@PFHECECI@?$AA?$CF?$AAs?$AA?2?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AA?$AA@|
  002b8		 |$M65|

			 ENDP  ; |?ActivityTimerInitList@@YAKXZ|, ActivityTimerInitList

	EXPORT	|??_C@_1CK@KPKINJCK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@CNEGHLPH@?$AAT?$AAi?$AAm?$AAe?$AAr?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@ICLAIDMF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@COCBKOJP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAd?$AAu?$AAm?$AAm?$AAy?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@EDIGHKLF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAo?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AAs?$AA?5?$AAd?$AAe?$AAf?$AAi?$AAn?$AAe?$AAd?$AA?0?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@OEAHGMJG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAa?$AAi?$AAt?$AA?5?$AAl?$AAo?$AAo?$AAp?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IE@KDGOPIKP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAw?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?5?$AAm?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@NMLNBMDI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@BCGDOJNJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@FBOGKBMA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAh?$AAa?$AAs?$AA?5?$AAe?$AAx?$AAp?$AAi?$AAr?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@PLDCBMAK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@LPAHHGNK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@FJNGMGD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@HFODHNIK@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|ActivityTimersThreadProc|
	IMPORT	|GetPMThreadPriority|
	IMPORT	|CeSetThreadPriority|
	IMPORT	|CreateEventW|
	IMPORT	|ghevPmShutdown|
	IMPORT	|ghevTimerResume|
	IMPORT	|Sleep|
	IMPORT	|GetTickCount|
	IMPORT	|WaitForMultipleObjects|
	IMPORT	|WaitForSingleObject|
	IMPORT	|GetLastError|
	IMPORT	|CloseHandle|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$ActivityTimersThreadProc| DCD imagerel |$LN122@ActivityTi|
	DCD	0x11f606ad

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@HFODHNIK@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@FJNGMGD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "u"
	DCB	0x0, "t", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, " "
	DCB	0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@LPAHHGNK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "W", 0x0, "a", 0x0, "i"
	DCB	0x0, "t", 0x0, "F", 0x0, "o", 0x0, "r", 0x0, "M", 0x0, "u"
	DCB	0x0, "l", 0x0, "t", 0x0, "i", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "O", 0x0, "b", 0x0, "j", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@PLDCBMAK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "e"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@FBOGKBMA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAh?$AAa?$AAs?$AA?5?$AAe?$AAx?$AAp?$AAi?$AAr?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "s", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "p", 0x0, "i", 0x0, "r", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@BCGDOJNJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "e"
	DCB	0x0, "t", 0x0, " ", 0x0, "a", 0x0, "f", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@NMLNBMDI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "u", 0x0, "m", 0x0, "e", 0x0, " ", 0x0, "e", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "s", 0x0, "e"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@KDGOPIKP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAw?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?5?$AAm?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAn@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "w", 0x0, "a", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, " ", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, " ", 0x0, "m"
	DCB	0x0, "s", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "n", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, "e"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, ",", 0x0, " "
	DCB	0x0, "w", 0x0, "a", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, " ", 0x0, "w", 0x0, "a", 0x0, "s", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@OEAHGMJG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAa?$AAi?$AAt?$AA?5?$AAl?$AAo?$AAo?$AAp?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "w", 0x0, "a", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "l"
	DCB	0x0, "o", 0x0, "o", 0x0, "p", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, "t"
	DCB	0x0, "a", 0x0, "l", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@EDIGHKLF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAo?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AAs?$AA?5?$AAd?$AAe?$AAf?$AAi?$AAn?$AAe?$AAd?$AA?0?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, " "
	DCB	0x0, "a", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i"
	DCB	0x0, "t", 0x0, "y", 0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "f", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@COCBKOJP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAd?$AAu?$AAm?$AAm?$AAy?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?$AN@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "u"
	DCB	0x0, "l", 0x0, "d", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "c", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "d", 0x0, "u", 0x0, "m", 0x0, "m", 0x0, "y"
	DCB	0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@ICLAIDMF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "A", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "r", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@CNEGHLPH@?$AAT?$AAi?$AAm?$AAe?$AAr?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| DCB "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "r", 0x0, "P", 0x0, "r"
	DCB	0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "y"
	DCB	0x0, "2", 0x0, "5", 0x0, "6", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@| DCB "A"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@KPKINJCK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |ActivityTimersThreadProc| PROC

; 219  : {

  00000		 |$LN122@ActivityTi|
  00000	e92d 4ff0	 push        {r4-r11,lr}
  00004	f20d 0b1c	 addw        r11,sp,#0x1C
  00008	b0c7		 sub         sp,sp,#0x11C
  0000a		 |$M120|

; 229  :     PMLOGMSG(ZONE_INIT, (_T("+%s: thread 0x%08x\r\n"), pszFname, GetCurrentThreadId()));

  0000a	f8df 5394	 ldr.w       r5,|$LN143@ActivityTi| ; =|dpCurSettings|
  0000e	4604		 mov         r4,r0
  00010	f8d5 3440	 ldr         r3,[r5,#0x440]
  00014	f013 0f04	 tst         r3,#4
  00018	d008		 beq         |$LN44@ActivityTi|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  0001a	2008		 movs        r0,#8
  0001c	f000 f800	 bl          __GetUserKData
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp

; 229  :     PMLOGMSG(ZONE_INIT, (_T("+%s: thread 0x%08x\r\n"), pszFname, GetCurrentThreadId()));

  00020	49cd		 ldr         r1,|$LN125@ActivityTi| ; =|??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00022	4602		 mov         r2,r0
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp

; 229  :     PMLOGMSG(ZONE_INIT, (_T("+%s: thread 0x%08x\r\n"), pszFname, GetCurrentThreadId()));

  00024	f8df 0374	 ldr.w       r0,|$LN142@ActivityTi| ; =|??_C@_1CK@KPKINJCK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00028	f000 f800	 bl          CeLogMsg
  0002c		 |$LN44@ActivityTi|

; 230  : 
; 231  :     // set the thread priority
; 232  :     if(!GetPMThreadPriority(_T("TimerPriority256"), &iPriority)) {

  0002c	f8df 0368	 ldr.w       r0,|$LN141@ActivityTi| ; =|??_C@_1CC@CNEGHLPH@?$AAT?$AAi?$AAm?$AAe?$AAr?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
  00030	a903		 add         r1,sp,#0xC
  00032	f000 f800	 bl          GetPMThreadPriority
  00036	b910		 cbnz        r0,|$LN115@ActivityTi|

; 233  :         iPriority = DEF_ACTIVITY_TIMER_THREAD_PRIORITY;

  00038	21f9		 movs        r1,#0xF9
  0003a	9103		 str         r1,[sp,#0xC]
  0003c	e000		 b           |$LN41@ActivityTi|
  0003e		 |$LN115@ActivityTi|
  0003e	9903		 ldr         r1,[sp,#0xC]
  00040		 |$LN41@ActivityTi|

; 234  :     }
; 235  :     CeSetThreadPriority(GetCurrentThread(), iPriority);

  00040	2041		 movs        r0,#0x41
  00042	f000 f800	 bl          CeSetThreadPriority

; 236  : 
; 237  :     // initialize the list of activity timers
; 238  :     if(ActivityTimerInitList() != ERROR_SUCCESS) {

  00046	f000 f800	 bl          |?ActivityTimerInitList@@YAKXZ|
  0004a	4fd2		 ldr         r7,|$LN140@ActivityTi| ; =|gppActivityTimers|
  0004c	b150		 cbz         r0,|$LN40@ActivityTi|

; 239  :         PMLOGMSG(ZONE_WARN, (_T("%s: ActivityTimerInitList() failed\r\n"), pszFname));

  0004e	f8d5 3440	 ldr         r3,[r5,#0x440]
  00052	f013 0f02	 tst         r3,#2
  00056	f000 8159	 beq         |$LN4@ActivityTi|
  0005a	48cd		 ldr         r0,|$LN139@ActivityTi| ; =|??_C@_1EK@ICLAIDMF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl@|
  0005c		 |$LN118@ActivityTi|
  0005c	49be		 ldr         r1,|$LN125@ActivityTi| ; =|??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  0005e	f000 f800	 bl          CeLogMsg

; 240  :         goto done;

  00062	e153		 b           |$LN4@ActivityTi|
  00064		 |$LN40@ActivityTi|

; 241  :     }
; 242  : 
; 243  :     // create a dummy event that's never signaled
; 244  :     hevDummy = CreateEvent(NULL, FALSE, FALSE, NULL);

  00064	2300		 movs        r3,#0
  00066	2200		 movs        r2,#0
  00068	2100		 movs        r1,#0
  0006a	2000		 movs        r0,#0
  0006c	f000 f800	 bl          CreateEventW
  00070	4680		 mov         r8,r0
  00072	9004		 str         r0,[sp,#0x10]

; 245  :     if(hevDummy == NULL) {

  00074	b938		 cbnz        r0,|$LN38@ActivityTi|

; 246  :         PMLOGMSG(ZONE_WARN, (_T("%s: Couldn't create dummy event\r\n"), pszFname));

  00076	f8d5 3440	 ldr         r3,[r5,#0x440]
  0007a	f013 0f02	 tst         r3,#2
  0007e	f000 8145	 beq         |$LN4@ActivityTi|
  00082	48c2		 ldr         r0,|$LN138@ActivityTi| ; =|??_C@_1EE@COCBKOJP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAd?$AAu?$AAm?$AAm?$AAy?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?$AN@|

; 394  :             fDone = TRUE;
; 395  :         }
; 396  :     }
; 397  : 
; 398  : done:

  00084	e7ea		 b           |$LN118@ActivityTi|
  00086		 |$LN38@ActivityTi|

; 247  :         goto done;
; 248  :     }
; 249  : 
; 250  :     // set up the list of events
; 251  :     dwNumEvents = 0;
; 252  :     hEvents[dwNumEvents++] = ghevPmShutdown;

  00086	4bc0		 ldr         r3,|$LN137@ActivityTi| ; =|ghevPmShutdown|

; 253  :     hEvents[dwNumEvents++] = ghevTimerResume;

  00088	f04f 0902	 mov         r9,#2
  0008c	f8cd 9008	 str         r9,[sp,#8]
  00090	681b		 ldr         r3,[r3]
  00092	9306		 str         r3,[sp,#0x18]
  00094	4bbb		 ldr         r3,|$LN136@ActivityTi| ; =|ghevTimerResume|
  00096	681b		 ldr         r3,[r3]
  00098	9307		 str         r3,[sp,#0x1C]

; 254  :     PMLOCK();

  0009a	f000 f800	 bl          PmLock

; 255  :     if(gppActivityTimers[0] == NULL) {

  0009e	6838		 ldr         r0,[r7]
  000a0	6803		 ldr         r3,[r0]
  000a2	b923		 cbnz        r3,|$LN108@ActivityTi|

; 256  :         // no activity timers defined
; 257  :         PmFree(gppActivityTimers);

  000a4	f000 f800	 bl          PmFree

; 258  :         gppActivityTimers = NULL;

  000a8	2300		 movs        r3,#0
  000aa	603b		 str         r3,[r7]

; 259  :     } else {

  000ac	e010		 b           |$LN33@ActivityTi|
  000ae		 |$LN108@ActivityTi|

; 260  :         // copy activity timer events into the event list
; 261  :         while(dwNumEvents < _countof(hEvents) && gppActivityTimers[dwNumEvents - cdwTimerBaseIndex] != NULL) {

  000ae	ab06		 add         r3,sp,#0x18
  000b0	f110 0208	 adds        r2,r0,#8
  000b4	1a19		 subs        r1,r3,r0
  000b6		 |$LL34@ActivityTi|
  000b6	f852 3c08	 ldr         r3,[r2,#-8]
  000ba	b13b		 cbz         r3,|$LN116@ActivityTi|

; 262  :             hEvents[dwNumEvents] = gppActivityTimers[dwNumEvents - cdwTimerBaseIndex]->hevReset;

  000bc	68db		 ldr         r3,[r3,#0xC]

; 263  :             dwNumEvents++;

  000be	f109 0901	 add         r9,r9,#1
  000c2	508b		 str         r3,[r1,r2]
  000c4	3204		 adds        r2,#4
  000c6	f1b9 0f40	 cmp         r9,#0x40
  000ca	d3f4		 bcc         |$LL34@ActivityTi|
  000cc		 |$LN116@ActivityTi|
  000cc	f8cd 9008	 str         r9,[sp,#8]
  000d0		 |$LN33@ActivityTi|

; 264  :         }
; 265  :     }
; 266  :     PMUNLOCK();

  000d0	f000 f800	 bl          PmUnlock
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  000d4	2103		 movs        r1,#3
  000d6	4620		 mov         r0,r4
  000d8	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp

; 274  :         PMLOGMSG(ZONE_INIT || ZONE_WARN, (_T("%s: no activity timers defined, exiting\r\n"), pszFname));

  000dc	f8d5 3440	 ldr         r3,[r5,#0x440]
  000e0	f1b9 0f02	 cmp         r9,#2
  000e4	d80e		 bhi         |$LN32@ActivityTi|
  000e6	f013 0f04	 tst         r3,#4
  000ea	d102		 bne         |$LN50@ActivityTi|
  000ec	f013 0f02	 tst         r3,#2
  000f0	d003		 beq         |$LN51@ActivityTi|
  000f2		 |$LN50@ActivityTi|
  000f2	48a3		 ldr         r0,|$LN135@ActivityTi| ; =|??_C@_1FE@EDIGHKLF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAo?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AAs?$AA?5?$AAd?$AAe?$AAf?$AAi?$AAn?$AAe?$AAd?$AA?0?$AA?5@|
  000f4	4998		 ldr         r1,|$LN125@ActivityTi| ; =|??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  000f6	f000 f800	 bl          CeLogMsg
  000fa		 |$LN51@ActivityTi|

; 275  :         Sleep(1000);            // don't want PM initialization to fail when we exit

  000fa	f44f 707a	 mov         r0,#0x3E8
  000fe	f000 f800	 bl          Sleep

; 394  :             fDone = TRUE;
; 395  :         }
; 396  :     }
; 397  : 
; 398  : done:

  00102	e100		 b           |$done$146|
  00104		 |$LN32@ActivityTi|

; 276  :         goto done;
; 277  :     }
; 278  : 
; 279  :     // wait for these events to get signaled
; 280  :     PMLOGMSG(ZONE_TIMERS, (_T("%s: entering wait loop, %d timers total\r\n"),
; 281  :         pszFname, dwNumEvents - cdwTimerBaseIndex));

  00104	f413 5f00	 tst         r3,#0x2000
  00108	d005		 beq         |$LN52@ActivityTi|
  0010a	489c		 ldr         r0,|$LN134@ActivityTi| ; =|??_C@_1FE@OEAHGMJG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAa?$AAi?$AAt?$AA?5?$AAl?$AAo?$AAo?$AAp?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr@|
  0010c	4992		 ldr         r1,|$LN125@ActivityTi| ; =|??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  0010e	f1a9 0202	 sub         r2,r9,#2
  00112	f000 f800	 bl          CeLogMsg
  00116		 |$LN52@ActivityTi|

; 282  :     dwWaitInterval = 0;

  00116	f04f 0a00	 mov         r10,#0
  0011a		 |$LL30@ActivityTi|

; 284  :         DWORD dwTimeout = GetNextInactivityTimeout(dwWaitInterval);

  0011a	4650		 mov         r0,r10
  0011c	f000 f800	 bl          |?GetNextInactivityTimeout@@YAKK@Z|
  00120	4604		 mov         r4,r0

; 285  :         DWORD dwWaitStart = GetTickCount();

  00122	f000 f800	 bl          GetTickCount

; 286  : 
; 287  :         PMLOGMSG(ZONE_TIMERS, 
; 288  :             (_T("%s: waiting %u (0x%08x) ms for next event, wait interval was %d\r\n"), pszFname,
; 289  :             dwTimeout, dwTimeout, dwWaitInterval));

  00126	f8d5 3440	 ldr         r3,[r5,#0x440]
  0012a	4606		 mov         r6,r0
  0012c	f413 5f00	 tst         r3,#0x2000
  00130	d007		 beq         |$LN54@ActivityTi|
  00132	4989		 ldr         r1,|$LN125@ActivityTi| ; =|??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  00134	4890		 ldr         r0,|$LN133@ActivityTi| ; =|??_C@_1IE@KDGOPIKP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAw?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?5?$AAm?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAn@|
  00136	4623		 mov         r3,r4
  00138	4622		 mov         r2,r4
  0013a	f8cd a000	 str         r10,[sp]
  0013e	f000 f800	 bl          CeLogMsg
  00142		 |$LN54@ActivityTi|

; 290  :         dwStatus = WaitForMultipleObjects(dwNumEvents, hEvents, FALSE, dwTimeout);

  00142	4623		 mov         r3,r4
  00144	2200		 movs        r2,#0
  00146	a906		 add         r1,sp,#0x18
  00148	4648		 mov         r0,r9
  0014a	f000 f800	 bl          WaitForMultipleObjects
  0014e	4604		 mov         r4,r0

; 291  :         dwWaitInterval = GetTickCount() - dwWaitStart;

  00150	f000 f800	 bl          GetTickCount
  00154	ebb0 0a06	 subs        r10,r0,r6

; 292  : 
; 293  :         // figure out what caused the wakeup
; 294  :         if(dwStatus == (WAIT_OBJECT_0 + 0)) {

  00158	2c00		 cmp         r4,#0
  0015a	f000 80cb	 beq         |$LN113@ActivityTi|

; 296  :             fDone = TRUE;
; 297  :         } else if(dwStatus == (WAIT_OBJECT_0 + 1)) {

  0015e	2c01		 cmp         r4,#1
  00160	d124		 bne         |$LN26@ActivityTi|

; 298  :             DWORD dwIndex;
; 299  :             PACTIVITY_TIMER pat;
; 300  : 
; 301  :             // we've resumed, so re-enable all activity timers that can be reset
; 302  :             PMLOGMSG(ZONE_TIMERS, (_T("%s: resume event set\r\n"), pszFname));

  00162	f8d5 3440	 ldr         r3,[r5,#0x440]
  00166	f413 5f00	 tst         r3,#0x2000
  0016a	d003		 beq         |$LN58@ActivityTi|
  0016c	497a		 ldr         r1,|$LN125@ActivityTi| ; =|??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  0016e	4881		 ldr         r0,|$LN132@ActivityTi| ; =|??_C@_1CO@NMLNBMDI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  00170	f000 f800	 bl          CeLogMsg
  00174		 |$LN58@ActivityTi|

; 303  :             PMLOCK();

  00174	f000 f800	 bl          PmLock

; 304  :             for(dwIndex = 0; (pat = gppActivityTimers[dwIndex]) != NULL; dwIndex++) {

  00178	683b		 ldr         r3,[r7]
  0017a	681a		 ldr         r2,[r3]
  0017c	2a00		 cmp         r2,#0
  0017e	f000 80a8	 beq         |$LN23@ActivityTi|

; 303  :             PMLOCK();

  00182	2400		 movs        r4,#0
  00184	2002		 movs        r0,#2
  00186	a908		 add         r1,sp,#0x20
  00188		 |$LL25@ActivityTi|

; 305  :                 DWORD dwEventIndex = dwIndex + cdwTimerBaseIndex;
; 306  :                 if (dwEventIndex < MAXIMUM_WAIT_OBJECTS) {

  00188	2840		 cmp         r0,#0x40
  0018a	d208		 bcs         |$LN24@ActivityTi|

; 307  :                     if(hEvents[dwEventIndex] == hevDummy) {

  0018c	680b		 ldr         r3,[r1]
  0018e	4543		 cmp         r3,r8
  00190	d101		 bne         |$LN21@ActivityTi|

; 308  :                         hEvents[dwEventIndex] = pat->hevReset;

  00192	68d3		 ldr         r3,[r2,#0xC]
  00194	600b		 str         r3,[r1]
  00196		 |$LN21@ActivityTi|

; 309  :                     }
; 310  :                     pat->dwTimeLeft = pat->dwTimeout + dwWaitInterval;

  00196	6853		 ldr         r3,[r2,#4]
  00198	4453		 add         r3,r3,r10
  0019a	6093		 str         r3,[r2,#8]
  0019c	683b		 ldr         r3,[r7]
  0019e		 |$LN24@ActivityTi|

; 304  :             for(dwIndex = 0; (pat = gppActivityTimers[dwIndex]) != NULL; dwIndex++) {

  0019e	3404		 adds        r4,#4
  001a0	58e2		 ldr         r2,[r4,r3]
  001a2	3001		 adds        r0,#1
  001a4	3104		 adds        r1,#4
  001a6	2a00		 cmp         r2,#0
  001a8	d1ee		 bne         |$LL25@ActivityTi|

; 311  :                 } else {
; 312  :                     ASSERT(FALSE);
; 313  :                 }
; 314  :             }
; 315  :             PMUNLOCK();

  001aa	e092		 b           |$LN23@ActivityTi|
  001ac		 |$LN26@ActivityTi|

; 316  :         } else if(dwStatus == WAIT_TIMEOUT) {

  001ac	f5b4 7f81	 cmp         r4,#0x102
  001b0	d161		 bne         |$LN18@ActivityTi|

; 317  :             DWORD dwIndex;
; 318  :             PACTIVITY_TIMER pat;
; 319  : 
; 320  :             // figure out which event(s) timed out
; 321  :             PMLOCK();

  001b2	f000 f800	 bl          PmLock

; 322  :             for(dwIndex = 0; (pat = gppActivityTimers[dwIndex]) != NULL; dwIndex++) {

  001b6	683b		 ldr         r3,[r7]
  001b8	f04f 0800	 mov         r8,#0
  001bc	681c		 ldr         r4,[r3]
  001be	2c00		 cmp         r4,#0
  001c0	d054		 beq         |$LN15@ActivityTi|
  001c2	2600		 movs        r6,#0
  001c4	f10d 0918	 add         r9,sp,#0x18
  001c8		 |$LL17@ActivityTi|

; 323  :                 if(pat->dwTimeLeft <= dwWaitInterval  && pat->dwTimeLeft != INFINITE) {

  001c8	68a3		 ldr         r3,[r4,#8]
  001ca	4553		 cmp         r3,r10
  001cc	d844		 bhi         |$LN16@ActivityTi|
  001ce	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  001d2	d041		 beq         |$LN16@ActivityTi|

; 324  :                     // has the timer really expired?
; 325  :                     if(WaitForSingleObject(pat->hevReset, 0) == WAIT_OBJECT_0) {

  001d4	68e0		 ldr         r0,[r4,#0xC]
  001d6	2100		 movs        r1,#0
  001d8	f000 f800	 bl          WaitForSingleObject
  001dc	b9e0		 cbnz        r0,|$LN13@ActivityTi|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 232  :     return EventModify(h,EVENT_RESET);

  001de	6960		 ldr         r0,[r4,#0x14]
  001e0	2102		 movs        r1,#2
  001e2	f000 f800	 bl          EventModify

; 244  :     return EventModify(h,EVENT_SET);

  001e6	6920		 ldr         r0,[r4,#0x10]
  001e8	2103		 movs        r1,#3
  001ea	f000 f800	 bl          EventModify
  001ee	6a60		 ldr         r0,[r4,#0x24]
  001f0	2103		 movs        r1,#3
  001f2	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp

; 335  :                             pat->pszName));

  001f6	f8d5 3440	 ldr         r3,[r5,#0x440]
  001fa	f413 5f00	 tst         r3,#0x2000
  001fe	d004		 beq         |$LN60@ActivityTi|
  00200	6822		 ldr         r2,[r4]
  00202	4955		 ldr         r1,|$LN125@ActivityTi| ; =|??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  00204	485a		 ldr         r0,|$LN131@ActivityTi| ; =|??_C@_1EK@BCGDOJNJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo@|
  00206	f000 f800	 bl          CeLogMsg
  0020a		 |$LN60@ActivityTi|

; 336  :                         pat->dwTimeLeft = pat->dwTimeout + dwWaitInterval;

  0020a	6863		 ldr         r3,[r4,#4]
  0020c	4453		 add         r3,r3,r10
  0020e	60a3		 str         r3,[r4,#8]

; 337  :                         pat->dwResetCount++;

  00210	69e3		 ldr         r3,[r4,#0x1C]
  00212	3301		 adds        r3,#1
  00214	61e3		 str         r3,[r4,#0x1C]

; 338  : 
; 339  :                     } else {

  00216	e01f		 b           |$LN16@ActivityTi|
  00218		 |$LN13@ActivityTi|

; 340  :                         // the timer has really expired, update events appropriately
; 341  :                         PMLOGMSG(ZONE_TIMERS, (_T("%s: timer '%s' has expired\r\n"), pszFname,
; 342  :                             pat->pszName));

  00218	f8d5 3440	 ldr         r3,[r5,#0x440]
  0021c	f413 5f00	 tst         r3,#0x2000
  00220	d004		 beq         |$LN62@ActivityTi|
  00222	6822		 ldr         r2,[r4]
  00224	494c		 ldr         r1,|$LN125@ActivityTi| ; =|??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  00226	4851		 ldr         r0,|$LN130@ActivityTi| ; =|??_C@_1DK@FBOGKBMA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAh?$AAa?$AAs?$AA?5?$AAe?$AAx?$AAp?$AAi?$AAr?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00228	f000 f800	 bl          CeLogMsg
  0022c		 |$LN62@ActivityTi|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 232  :     return EventModify(h,EVENT_RESET);

  0022c	6920		 ldr         r0,[r4,#0x10]
  0022e	2102		 movs        r1,#2
  00230	f000 f800	 bl          EventModify

; 244  :     return EventModify(h,EVENT_SET);

  00234	6960		 ldr         r0,[r4,#0x14]
  00236	2103		 movs        r1,#3
  00238	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp

; 347  :                         if (dwIndex + cdwTimerBaseIndex < _countof(hEvents)) {

  0023c	f108 0302	 add         r3,r8,#2
  00240	2b40		 cmp         r3,#0x40
  00242	d203		 bcs         |$LN11@ActivityTi|

; 348  :                             hEvents[dwIndex + cdwTimerBaseIndex] = pat->hevReset;

  00244	68e3		 ldr         r3,[r4,#0xC]
  00246	eb06 0209	 add         r2,r6,r9
  0024a	6093		 str         r3,[r2,#8]
  0024c		 |$LN11@ActivityTi|

; 349  :                         } else {
; 350  :                             ASSERT(FALSE);
; 351  :                         }
; 352  : 
; 353  :                         // update counts
; 354  :                         pat->dwTimeLeft = INFINITE;

  0024c	f06f 0300	 mvn         r3,#0
  00250	60a3		 str         r3,[r4,#8]

; 355  :                         pat->dwExpiredCount++;

  00252	6a23		 ldr         r3,[r4,#0x20]
  00254	3301		 adds        r3,#1
  00256	6223		 str         r3,[r4,#0x20]
  00258		 |$LN16@ActivityTi|

; 322  :             for(dwIndex = 0; (pat = gppActivityTimers[dwIndex]) != NULL; dwIndex++) {

  00258	683b		 ldr         r3,[r7]
  0025a	f108 0801	 add         r8,r8,#1
  0025e	ea5f 0688	 lsls        r6,r8,#2
  00262	58f4		 ldr         r4,[r6,r3]
  00264	2c00		 cmp         r4,#0
  00266	d1af		 bne         |$LL17@ActivityTi|
  00268	f8dd 9008	 ldr         r9,[sp,#8]
  0026c		 |$LN15@ActivityTi|

; 356  :                     }
; 357  :                 }
; 358  :             }
; 359  :             PMUNLOCK();

  0026c	f000 f800	 bl          PmUnlock
  00270	f8dd 8010	 ldr         r8,[sp,#0x10]
  00274	e751		 b           |$LL30@ActivityTi|
  00276		 |$LN18@ActivityTi|

; 360  :         } else if(dwStatus > (WAIT_OBJECT_0 + 0) && dwStatus < (WAIT_OBJECT_0 + dwNumEvents)) {

  00276	b37c		 cbz         r4,|$LN8@ActivityTi|
  00278	454c		 cmp         r4,r9
  0027a	d22d		 bcs         |$LN8@ActivityTi|

; 361  :             PACTIVITY_TIMER pat;
; 362  :             DWORD dwEventIndex = dwStatus - WAIT_OBJECT_0;
; 363  : 
; 364  :             PMLOCK();

  0027c	f000 f800	 bl          PmLock

; 365  :             
; 366  :             // get a pointer to the timer
; 367  :             pat = gppActivityTimers[dwEventIndex - cdwTimerBaseIndex];

  00280	683b		 ldr         r3,[r7]
  00282	eb03 0384	 add         r3,r3,r4,lsl #2
  00286	f853 6c08	 ldr         r6,[r3,#-8]

; 368  : 
; 369  :             // handle its events
; 370  :             DEBUGCHK(pat != NULL);
; 371  :             if(pat->dwTimeout == 0) {

  0028a	6873		 ldr         r3,[r6,#4]
  0028c	b913		 cbnz        r3,|$LN7@ActivityTi|

; 372  :                 // we're not using the event, so ignore it
; 373  :                 pat->dwTimeLeft = INFINITE;

  0028e	f06f 0300	 mvn         r3,#0

; 374  :             } else {

  00292	e01a		 b           |$LN117@ActivityTi|
  00294		 |$LN7@ActivityTi|

; 375  :                 PMLOGMSG(ZONE_TIMERS, (_T("%s: timer '%s' reset\r\n"), pszFname, pat->pszName));

  00294	f8d5 3440	 ldr         r3,[r5,#0x440]
  00298	f413 5f00	 tst         r3,#0x2000
  0029c	d004		 beq         |$LN64@ActivityTi|
  0029e	6832		 ldr         r2,[r6]
  002a0	492d		 ldr         r1,|$LN125@ActivityTi| ; =|??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  002a2	4831		 ldr         r0,|$LN129@ActivityTi| ; =|??_C@_1CO@PLDCBMAK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  002a4	f000 f800	 bl          CeLogMsg
  002a8		 |$LN64@ActivityTi|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 232  :     return EventModify(h,EVENT_RESET);

  002a8	6970		 ldr         r0,[r6,#0x14]
  002aa	2102		 movs        r1,#2
  002ac	f000 f800	 bl          EventModify

; 244  :     return EventModify(h,EVENT_SET);

  002b0	6930		 ldr         r0,[r6,#0x10]
  002b2	2103		 movs        r1,#3
  002b4	f000 f800	 bl          EventModify
  002b8	6a70		 ldr         r0,[r6,#0x24]
  002ba	2103		 movs        r1,#3
  002bc	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmtimer.cpp

; 383  :                 hEvents[dwEventIndex] = hevDummy;

  002c0	ab06		 add         r3,sp,#0x18
  002c2	f843 8024	 str         r8,[r3,r4,lsl #2]

; 384  : 
; 385  :                 // update time left on the timer, compensating for the update
; 386  :                 // that will occur in GetNextInactivityTimeout().
; 387  :                 pat->dwTimeLeft = pat->dwTimeout + dwWaitInterval;

  002c6	6873		 ldr         r3,[r6,#4]
  002c8	4453		 add         r3,r3,r10
  002ca		 |$LN117@ActivityTi|
  002ca	60b3		 str         r3,[r6,#8]

; 388  :             }
; 389  :             pat->dwResetCount++;

  002cc	69f3		 ldr         r3,[r6,#0x1C]
  002ce	3301		 adds        r3,#1
  002d0	61f3		 str         r3,[r6,#0x1C]
  002d2		 |$LN23@ActivityTi|

; 390  :             PMUNLOCK();

  002d2	f000 f800	 bl          PmUnlock

; 283  :     while(!fDone) {

  002d6	e720		 b           |$LL30@ActivityTi|
  002d8		 |$LN8@ActivityTi|

; 391  :         } else {
; 392  :             PMLOGMSG(ZONE_WARN, (_T("%s: WaitForMultipleObjects() returned %d, status is %d\r\n"),
; 393  :                 pszFname, dwStatus, GetLastError())); 

  002d8	f8d5 3440	 ldr         r3,[r5,#0x440]
  002dc	f013 0f02	 tst         r3,#2
  002e0	d011		 beq         |$done$146|
  002e2	f000 f800	 bl          GetLastError
  002e6	491c		 ldr         r1,|$LN125@ActivityTi| ; =|??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  002e8	4603		 mov         r3,r0
  002ea	481e		 ldr         r0,|$LN128@ActivityTi| ; =|??_C@_1HC@LPAHHGNK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@|
  002ec	4622		 mov         r2,r4
  002ee	f000 f800	 bl          CeLogMsg
  002f2	e008		 b           |$done$146|
  002f4		 |$LN113@ActivityTi|

; 295  :             PMLOGMSG(ZONE_WARN, (_T("%s: shutdown event set\r\n"), pszFname));

  002f4	f8d5 3440	 ldr         r3,[r5,#0x440]
  002f8	f013 0f02	 tst         r3,#2
  002fc	d003		 beq         |$done$146|
  002fe	4818		 ldr         r0,|$LN127@ActivityTi| ; =|??_C@_1DC@FJNGMGD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  00300	4915		 ldr         r1,|$LN125@ActivityTi| ; =|??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  00302	f000 f800	 bl          CeLogMsg
  00306		 |$done$146|

; 399  :     // release resources
; 400  :     if(hevDummy != NULL) CloseHandle(hevDummy);

  00306	4640		 mov         r0,r8
  00308	f000 f800	 bl          CloseHandle
  0030c		 |$LN4@ActivityTi|

; 401  :     PMLOCK();

  0030c	f000 f800	 bl          PmLock

; 402  :     if(gppActivityTimers != NULL) {

  00310	6838		 ldr         r0,[r7]
  00312	b188		 cbz         r0,|$LN3@ActivityTi|

; 403  :         DWORD dwIndex = 0;
; 404  :         while(gppActivityTimers[dwIndex] != NULL) {

  00314	6803		 ldr         r3,[r0]
  00316	2400		 movs        r4,#0
  00318	b153		 cbz         r3,|$LN1@ActivityTi|
  0031a	4602		 mov         r2,r0
  0031c		 |$LL2@ActivityTi|

; 405  :             ActivityTimerDestroy(gppActivityTimers[dwIndex]);

  0031c	6810		 ldr         r0,[r2]
  0031e	f000 f800	 bl          ActivityTimerDestroy
  00322	6838		 ldr         r0,[r7]

; 406  :             dwIndex++;

  00324	3401		 adds        r4,#1
  00326	eb00 0284	 add         r2,r0,r4,lsl #2
  0032a	6813		 ldr         r3,[r2]
  0032c	2b00		 cmp         r3,#0
  0032e	d1f5		 bne         |$LL2@ActivityTi|
  00330		 |$LN1@ActivityTi|

; 407  :         }
; 408  :         PmFree(gppActivityTimers);

  00330	f000 f800	 bl          PmFree

; 409  :         gppActivityTimers = NULL;

  00334	2300		 movs        r3,#0
  00336	603b		 str         r3,[r7]
  00338		 |$LN3@ActivityTi|

; 410  :     }
; 411  :     PMUNLOCK();

  00338	f000 f800	 bl          PmUnlock

; 412  : 
; 413  :     PMLOGMSG(ZONE_INIT | ZONE_WARN, (_T("-%s: exiting\r\n"), pszFname));

  0033c	f8d5 3440	 ldr         r3,[r5,#0x440]
  00340	f013 0f06	 tst         r3,#6
  00344	d003		 beq         |$LN68@ActivityTi|
  00346	4805		 ldr         r0,|$LN126@ActivityTi| ; =|??_C@_1BO@HFODHNIK@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  00348	4903		 ldr         r1,|$LN125@ActivityTi| ; =|??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  0034a	f000 f800	 bl          CeLogMsg
  0034e		 |$LN68@ActivityTi|

; 414  :     return 0;

  0034e	2000		 movs        r0,#0
  00350		 |$M123|

; 415  : }

  00350	b047		 add         sp,sp,#0x11C
  00352	e8bd 8ff0	 pop         {r4-r11,pc}
  00356		 |$LN144@ActivityTi|
  00356		 |$M145|
  00356	defe		 __debugbreak
  00358		 |$LN124@ActivityTi|
  00358		 |$LN125@ActivityTi|
  00358	0000 0000	 DCD         |??_C@_1DC@PONLJKJA@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  0035c		 |$LN126@ActivityTi|
  0035c	0000 0000	 DCD         |??_C@_1BO@HFODHNIK@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  00360		 |$LN127@ActivityTi|
  00360	0000 0000	 DCD         |??_C@_1DC@FJNGMGD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  00364		 |$LN128@ActivityTi|
  00364	0000 0000	 DCD         |??_C@_1HC@LPAHHGNK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@|
  00368		 |$LN129@ActivityTi|
  00368	0000 0000	 DCD         |??_C@_1CO@PLDCBMAK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0036c		 |$LN130@ActivityTi|
  0036c	0000 0000	 DCD         |??_C@_1DK@FBOGKBMA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAh?$AAa?$AAs?$AA?5?$AAe?$AAx?$AAp?$AAi?$AAr?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00370		 |$LN131@ActivityTi|
  00370	0000 0000	 DCD         |??_C@_1EK@BCGDOJNJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAe?$AAt?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo@|
  00374		 |$LN132@ActivityTi|
  00374	0000 0000	 DCD         |??_C@_1CO@NMLNBMDI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  00378		 |$LN133@ActivityTi|
  00378	0000 0000	 DCD         |??_C@_1IE@KDGOPIKP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAw?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?5?$AAm?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAn@|
  0037c		 |$LN134@ActivityTi|
  0037c	0000 0000	 DCD         |??_C@_1FE@OEAHGMJG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAw?$AAa?$AAi?$AAt?$AA?5?$AAl?$AAo?$AAo?$AAp?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr@|
  00380		 |$LN135@ActivityTi|
  00380	0000 0000	 DCD         |??_C@_1FE@EDIGHKLF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAo?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr?$AAs?$AA?5?$AAd?$AAe?$AAf?$AAi?$AAn?$AAe?$AAd?$AA?0?$AA?5@|
  00384		 |$LN136@ActivityTi|
  00384	0000 0000	 DCD         |ghevTimerResume|
  00388		 |$LN137@ActivityTi|
  00388	0000 0000	 DCD         |ghevPmShutdown|
  0038c		 |$LN138@ActivityTi|
  0038c	0000 0000	 DCD         |??_C@_1EE@COCBKOJP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAd?$AAu?$AAm?$AAm?$AAy?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?$AN@|
  00390		 |$LN139@ActivityTi|
  00390	0000 0000	 DCD         |??_C@_1EK@ICLAIDMF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl@|
  00394		 |$LN140@ActivityTi|
  00394	0000 0000	 DCD         |gppActivityTimers|
  00398		 |$LN141@ActivityTi|
  00398	0000 0000	 DCD         |??_C@_1CC@CNEGHLPH@?$AAT?$AAi?$AAm?$AAe?$AAr?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
  0039c		 |$LN142@ActivityTi|
  0039c	0000 0000	 DCD         |??_C@_1CK@KPKINJCK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  003a0		 |$LN143@ActivityTi|
  003a0	0000 0000	 DCD         |dpCurSettings|
  003a4		 |$M121|

			 ENDP  ; |ActivityTimersThreadProc|

	END
