; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.114 

	TTL	C:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsqm.cpp
	THUMB

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.bss|, NOINIT
|sghSqmNormalSession| % 0x4
|sghSqmWeekSession| % 0x4
|sghSQMThread| % 0x4
|sgSQMThreadId| % 0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|sgSQMDataIds| DCD 0x164
	DCD	0x165
	DCD	0x166
	DCD	0x167
	DCD	0x168
	DCD	0x169
	DCD	0x16a
	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |SetEvent| PROC

; 244  :     return EventModify(h,EVENT_SET);

  00000	2103		 movs        r1,#3
  00002		 |$M4|
  00002	f000 9000	 b           EventModify

			 ENDP  ; |SetEvent|

	EXPORT	|GetCurrentThreadId|
	IMPORT	|__GetUserKData|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |GetCurrentThreadId| PROC

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00000	2008		 movs        r0,#8
  00002		 |$M4|
  00002	f000 9000	 b           __GetUserKData

			 ENDP  ; |GetCurrentThreadId|

	EXPORT	|??_C@_1O@CHBCJGPP@?$AAG?$AAl?$AAo?$AAb?$AAa?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@NAFOCGLO@?$AAP?$AAM?$AAW?$AAe?$AAe?$AAk?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|__security_push_cookie|
	IMPORT	|__security_pop_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|SqmGetManagedSession|
	IMPORT	|SqmReadSharedMachineId|
	IMPORT	|SqmCreateNewId|
	IMPORT	|SqmWriteSharedMachineId|
	IMPORT	|SqmSetMachineId|
	IMPORT	|SqmReadSharedUserId|
	IMPORT	|SqmWriteSharedUserId|
	IMPORT	|SqmSetUserId|
	IMPORT	|SqmStartSession|

  00000			 AREA	 |.bss|, NOINIT
|?numTries@?1??sThreadedSQMAttemptStart@@YAHXZ@4KA| % 0x4 ; `sThreadedSQMAttemptStart'::`2'::numTries

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?sThreadedSQMAttemptStart@@YAHXZ| DCD imagerel |$LN16@sThreadedS|
	DCD	imagerel |$unwind2$?sThreadedSQMAttemptStart@@YAHXZ|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?sThreadedSQMAttemptStart@@YAHXZ| DCD 0x33b0005c
	DCD	0xfc01e809
	DCD	0xe8ff30a8
	DCD	0xff30a801
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffed

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@NAFOCGLO@?$AAP?$AAM?$AAW?$AAe?$AAe?$AAk?$AA?$AA@| DCB "P", 0x0, "M"
	DCB	0x0, "W", 0x0, "e", 0x0, "e", 0x0, "k", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@CHBCJGPP@?$AAG?$AAl?$AAo?$AAb?$AAa?$AAl?$AA?$AA@| DCB "G", 0x0, "l"
	DCB	0x0, "o", 0x0, "b", 0x0, "a", 0x0, "l", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsqm.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?sThreadedSQMAttemptStart@@YAHXZ| PROC ; sThreadedSQMAttemptStart

; 41   : {

  00000		 |$LN16@sThreadedS|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008	f000 f800	 bl          __security_push_cookie
  0000c	b089		 sub         sp,sp,#0x24
  0000e		 |$M14|

; 42   :     static DWORD numTries = 0;
; 43   : 
; 44   :     /* only call the proxy routines to attempt up to 10 times.  after that, don't bother any more */
; 45   :     if (numTries>10)

  0000e	4b2d		 ldr         r3,|$LN22@sThreadedS| ; =|?numTries@?1??sThreadedSQMAttemptStart@@YAHXZ@4KA|
  00010	681b		 ldr         r3,[r3]
  00012	2b0a		 cmp         r3,#0xA
  00014	d901		 bls         |$LN10@sThreadedS|

; 46   :         return FALSE;

  00016	2500		 movs        r5,#0
  00018	e048		 b           |$LN7@sThreadedS|
  0001a		 |$LN10@sThreadedS|

; 47   : 
; 48   :     BOOL ret = FALSE;
; 49   : 
; 50   :     do {
; 51   :         GUID machineId = {0};
; 52   :         GUID userId = {0};
; 53   : 
; 54   :         /* check/start the normal daily session */
; 55   :         if (!sghSqmNormalSession)

  0001a	4c29		 ldr         r4,|$LN21@sThreadedS| ; =|sghSqmNormalSession|
  0001c	2300		 movs        r3,#0
  0001e	9300		 str         r3,[sp]
  00020	9301		 str         r3,[sp,#4]
  00022	9302		 str         r3,[sp,#8]
  00024	9303		 str         r3,[sp,#0xC]
  00026	9304		 str         r3,[sp,#0x10]
  00028	9305		 str         r3,[sp,#0x14]
  0002a	9306		 str         r3,[sp,#0x18]
  0002c	9307		 str         r3,[sp,#0x1C]
  0002e	6823		 ldr         r3,[r4]
  00030	2500		 movs        r5,#0
  00032	bb4b		 cbnz        r3,|$LN6@sThreadedS|

; 56   :         {
; 57   :             /* try to create the new session */
; 58   :             sghSqmNormalSession = SqmGetManagedSession(TEXT("Global"));

  00034	4821		 ldr         r0,|$LN20@sThreadedS| ; =|??_C@_1O@CHBCJGPP@?$AAG?$AAl?$AAo?$AAb?$AAa?$AAl?$AA?$AA@|
  00036	f000 f800	 bl          SqmGetManagedSession
  0003a	6020		 str         r0,[r4]

; 59   :             if (!sghSqmNormalSession)

  0003c	b3b0		 cbz         r0,|$LN7@sThreadedS|

; 60   :                 break;
; 61   : 
; 62   :             // Check for shared machine ID
; 63   :             if (!SqmReadSharedMachineId(&machineId))

  0003e	4668		 mov         r0,sp
  00040	f000 f800	 bl          SqmReadSharedMachineId
  00044	b940		 cbnz        r0,|$LN4@sThreadedS|

; 64   :             {
; 65   :                 SqmCreateNewId(&machineId);

  00046	4668		 mov         r0,sp
  00048	f000 f800	 bl          SqmCreateNewId

; 66   :                 SqmWriteSharedMachineId(&machineId);

  0004c	4668		 mov         r0,sp
  0004e	f000 f800	 bl          SqmWriteSharedMachineId

; 67   : 
; 68   :                 // Read it out again to make sure it was written.
; 69   :                 SqmReadSharedMachineId(&machineId);

  00052	4668		 mov         r0,sp
  00054	f000 f800	 bl          SqmReadSharedMachineId
  00058		 |$LN4@sThreadedS|

; 70   :             }
; 71   :             // Set machine ID for the session
; 72   :             SqmSetMachineId(sghSqmNormalSession,&machineId);

  00058	6820		 ldr         r0,[r4]
  0005a	4669		 mov         r1,sp
  0005c	f000 f800	 bl          SqmSetMachineId

; 73   : 
; 74   :             // Check for shared user ID
; 75   :             if (!SqmReadSharedUserId(&userId))

  00060	a804		 add         r0,sp,#0x10
  00062	f000 f800	 bl          SqmReadSharedUserId
  00066	b940		 cbnz        r0,|$LN3@sThreadedS|

; 76   :             {
; 77   :                 SqmCreateNewId(&userId);

  00068	a804		 add         r0,sp,#0x10
  0006a	f000 f800	 bl          SqmCreateNewId

; 78   :                 SqmWriteSharedUserId(&userId);

  0006e	a804		 add         r0,sp,#0x10
  00070	f000 f800	 bl          SqmWriteSharedUserId

; 79   : 
; 80   :                 // Read it out again to make sure it was written.
; 81   :                 SqmReadSharedUserId(&userId);

  00074	a804		 add         r0,sp,#0x10
  00076	f000 f800	 bl          SqmReadSharedUserId
  0007a		 |$LN3@sThreadedS|

; 82   :             }
; 83   :             // Set user ID for the session
; 84   :             SqmSetUserId(sghSqmNormalSession,&userId);

  0007a	6820		 ldr         r0,[r4]
  0007c	a904		 add         r1,sp,#0x10
  0007e	f000 f800	 bl          SqmSetUserId

; 85   : 
; 86   :             // start the session now 
; 87   :             SqmStartSession(sghSqmNormalSession);

  00082	6820		 ldr         r0,[r4]
  00084	f000 f800	 bl          SqmStartSession
  00088		 |$LN6@sThreadedS|

; 88   : 
; 89   :             // normal session is ready to go now 
; 90   :         }
; 91   : 
; 92   :         /* check/start the weeklong session */
; 93   :         if (!sghSqmWeekSession)

  00088	6863		 ldr         r3,[r4,#4]
  0008a	b973		 cbnz        r3,|$LN2@sThreadedS|

; 94   :         {
; 95   :             /* try to create the new session */
; 96   :             sghSqmWeekSession = SqmGetManagedSession(TEXT("PMWeek"));

  0008c	480a		 ldr         r0,|$LN19@sThreadedS| ; =|??_C@_1O@NAFOCGLO@?$AAP?$AAM?$AAW?$AAe?$AAe?$AAk?$AA?$AA@|
  0008e	f000 f800	 bl          SqmGetManagedSession
  00092	6060		 str         r0,[r4,#4]

; 97   :             if (!sghSqmWeekSession)

  00094	b150		 cbz         r0,|$LN7@sThreadedS|

; 98   :                 break;
; 99   : 
; 100  :             // Set machine ID for the session
; 101  :             SqmSetMachineId(sghSqmWeekSession,&machineId);

  00096	4669		 mov         r1,sp
  00098	f000 f800	 bl          SqmSetMachineId

; 102  : 
; 103  :             // Set user ID for the session
; 104  :             SqmSetUserId(sghSqmWeekSession,&userId);

  0009c	6860		 ldr         r0,[r4,#4]
  0009e	a904		 add         r1,sp,#0x10
  000a0	f000 f800	 bl          SqmSetUserId

; 105  : 
; 106  :             // start the session now 
; 107  :             SqmStartSession(sghSqmWeekSession);

  000a4	6860		 ldr         r0,[r4,#4]
  000a6	f000 f800	 bl          SqmStartSession
  000aa		 |$LN2@sThreadedS|

; 108  : 
; 109  :             // weeklong session is ready to go now 
; 110  :         }
; 111  : 
; 112  :         // if we get here we succeeded
; 113  :         ret = TRUE;

  000aa	2501		 movs        r5,#1
  000ac		 |$LN7@sThreadedS|

; 114  : #pragma warning(suppress:4127)
; 115  :     } while (false); // yes, while false 
; 116  : 
; 117  :     return ret;
; 118  : }

  000ac	4628		 mov         r0,r5
  000ae		 |$M17|
  000ae	b009		 add         sp,sp,#0x24
  000b0	f000 f800	 bl          __security_pop_cookie
  000b4	e8bd 8830	 pop         {r4,r5,r11,pc}
  000b8		 |$LN18@sThreadedS|
  000b8		 |$LN19@sThreadedS|
  000b8	0000 0000	 DCD         |??_C@_1O@NAFOCGLO@?$AAP?$AAM?$AAW?$AAe?$AAe?$AAk?$AA?$AA@|
  000bc		 |$LN20@sThreadedS|
  000bc	0000 0000	 DCD         |??_C@_1O@CHBCJGPP@?$AAG?$AAl?$AAo?$AAb?$AAa?$AAl?$AA?$AA@|
  000c0		 |$LN21@sThreadedS|
  000c0	0000 0000	 DCD         |sghSqmNormalSession|
  000c4		 |$LN22@sThreadedS|
  000c4	0000 0000	 DCD         |?numTries@?1??sThreadedSQMAttemptStart@@YAHXZ@4KA|
  000c8		 |$M15|

			 ENDP  ; |?sThreadedSQMAttemptStart@@YAHXZ|, sThreadedSQMAttemptStart

	EXPORT	|??_C@_1GE@PIGOECGG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAe?$AAd?$AAS?$AAQ?$AAM?$AAS?$AAe?$AAt?$AA?5?$AA?9?$AA?5?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|SqmIncrement|
	IMPORT	|SqmAddToStream|
	IMPORT	|SqmSet|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@PIGOECGG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAe?$AAd?$AAS?$AAQ?$AAM?$AAS?$AAe?$AAt?$AA?5?$AA?9?$AA?5?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "s", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "e", 0x0, "d", 0x0, "S", 0x0, "Q", 0x0, "M"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "u", 0x0, "n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w"
	DCB	0x0, "n", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "r", 0x0, "k"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i", 0x0, "d", 0x0, "("
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsqm.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?sThreadedSQMSet@@YAXKK@Z| PROC	; sThreadedSQMSet

; 121  : {

  00000	460b		 mov         r3,r1
  00002	4601		 mov         r1,r0

; 122  :     /* PMSQM_Set() calls are filtered through to this thread asynchronously (caller does not wait), 
; 123  :        but this function will only ever be called synchronously */
; 124  :     switch (markerId)

  00004	f5b0 7fb2	 cmp         r0,#0x164
  00008	d033		 beq         |$LN8@sThreadedS|
  0000a	f240 1065	 mov         r0,#0x165
  0000e	4281		 cmp         r1,r0
  00010	d029		 beq         |$LN7@sThreadedS|
  00012	f5b1 7fb3	 cmp         r1,#0x166
  00016	d023		 beq         |$LN6@sThreadedS|
  00018	f100 0002	 add         r0,r0,#2
  0001c	4281		 cmp         r1,r0
  0001e	d01a		 beq         |$LN5@sThreadedS|
  00020	f5b1 7fb4	 cmp         r1,#0x168
  00024	d012		 beq         |$LN4@sThreadedS|
  00026	f240 1069	 mov         r0,#0x169
  0002a	4281		 cmp         r1,r0
  0002c	d008		 beq         |$LN3@sThreadedS|
  0002e	f5b1 7fb5	 cmp         r1,#0x16A
  00032	d002		 beq         |$LN2@sThreadedS|

; 167  :     default:
; 168  :         RETAILMSG(1, (TEXT("ERROR: sThreadedSQMSet - unknown marker id(%d).\r\n"),markerId));

  00034	4813		 ldr         r0,|$LN28@sThreadedS| ; =|??_C@_1GE@PIGOECGG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAe?$AAd?$AAS?$AAQ?$AAM?$AAS?$AAe?$AAt?$AA?5?$AA?9?$AA?5?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn@|
  00036		 |$M22|
  00036	f000 9000	 b           NKDbgPrintfW
  0003a		 |$LN2@sThreadedS|

; 160  :         break;
; 161  :     
; 162  :     case PMSQM_DATAID_POWER_BAT_START_CHARGE_LEVEL:
; 163  :         // individual percentages of battery charge level when charging session started in a week-long session (Stream)
; 164  : //        RETAILMSG(1, (TEXT("PMSQM: Battery was at %d%% when charging started\r\n"),dwValue));
; 165  :         SqmAddToStream(sghSqmWeekSession,PMSQM_DATAID_POWER_BAT_START_CHARGE_LEVEL,1,dwValue);

  0003a	f44f 71b5	 mov         r1,#0x16A

; 166  :         break;

  0003e	e007		 b           |$LN19@sThreadedS|
  00040		 |$LN3@sThreadedS|

; 155  :     
; 156  :     case PMSQM_DATAID_POWER_USER_SHUTDOWNS:
; 157  :         // total number of user-initiated shutdowns in a week-long session
; 158  : //        RETAILMSG(1, (TEXT("PMSQM: User Initiated Shutdown\r\n")));
; 159  :         SqmIncrement(sghSqmWeekSession,PMSQM_DATAID_POWER_USER_SHUTDOWNS,1);

  00040	4b0f		 ldr         r3,|$LN27@sThreadedS| ; =|sghSqmNormalSession|
  00042	4601		 mov         r1,r0
  00044	2201		 movs        r2,#1
  00046	6858		 ldr         r0,[r3,#4]
  00048		 |$M23|
  00048	f000 9000	 b           SqmIncrement
  0004c		 |$LN4@sThreadedS|

; 149  :     
; 150  :     case PMSQM_DATAID_POWER_BAT_DRAIN:
; 151  :         // individual battery drain session lengths (no charging) in a week-long session (Stream)
; 152  : //        RETAILMSG(1, (TEXT("PMSQM: Battery was drained for a %d ms session\r\n"),dwValue));
; 153  :         SqmAddToStream(sghSqmWeekSession,PMSQM_DATAID_POWER_BAT_DRAIN,1,dwValue);

  0004c	f44f 71b4	 mov         r1,#0x168
  00050		 |$LN19@sThreadedS|
  00050	480b		 ldr         r0,|$LN27@sThreadedS| ; =|sghSqmNormalSession|
  00052	6840		 ldr         r0,[r0,#4]

; 154  :         break;

  00054	e00a		 b           |$LN20@sThreadedS|
  00056		 |$LN5@sThreadedS|

; 143  :     
; 144  :     case PMSQM_DATAID_POWER_BAT_CHARGE:
; 145  :         // total time battery charged in a week-long session
; 146  : //        RETAILMSG(1, (TEXT("PMSQM: Battery was charged for a %d ms session\r\n"),dwValue));
; 147  :         SqmSet(sghSqmWeekSession,PMSQM_DATAID_POWER_BAT_CHARGE,dwValue);

  00056	461a		 mov         r2,r3
  00058	4b09		 ldr         r3,|$LN27@sThreadedS| ; =|sghSqmNormalSession|
  0005a	4601		 mov         r1,r0
  0005c	6858		 ldr         r0,[r3,#4]

; 148  :         break;

  0005e	e00d		 b           |$LN15@sThreadedS|
  00060		 |$LN6@sThreadedS|

; 136  :         break;
; 137  :     
; 138  :     case PMSQM_DATAID_POWER_BKL_OFF:
; 139  :         // individual backlight off session lengths in ms in a standard session (Stream)
; 140  : //        RETAILMSG(1, (TEXT("PMSQM: Backlight was off for a %d ms session\r\n"),dwValue));
; 141  :         SqmAddToStream(sghSqmNormalSession,PMSQM_DATAID_POWER_BKL_OFF,1,dwValue);

  00060	f44f 71b3	 mov         r1,#0x166

; 142  :         break;

  00064	e000		 b           |$LN18@sThreadedS|
  00066		 |$LN7@sThreadedS|

; 130  :         break;
; 131  : 
; 132  :     case PMSQM_DATAID_POWER_BKL_ON:
; 133  :         // individual backlight session lengths in ms in a standard session (Stream)
; 134  : //        RETAILMSG(1, (TEXT("PMSQM: Backlight was on for a %d ms session\r\n"),dwValue));
; 135  :         SqmAddToStream(sghSqmNormalSession,PMSQM_DATAID_POWER_BKL_ON,1,dwValue);

  00066	4601		 mov         r1,r0
  00068		 |$LN18@sThreadedS|
  00068	4805		 ldr         r0,|$LN27@sThreadedS| ; =|sghSqmNormalSession|
  0006a	6800		 ldr         r0,[r0]
  0006c		 |$LN20@sThreadedS|
  0006c	2201		 movs        r2,#1
  0006e		 |$M24|
  0006e	f000 9000	 b           SqmAddToStream
  00072		 |$LN8@sThreadedS|

; 125  :     {
; 126  :     case PMSQM_DATAID_POWER_BKL_TOTAL:
; 127  :         // total ms backlight on in a standard session
; 128  : //        RETAILMSG(1, (TEXT("PMSQM: Backlight has been on for a total of %d ms\r\n"),dwValue));
; 129  :         SqmSet(sghSqmNormalSession,PMSQM_DATAID_POWER_BKL_TOTAL,dwValue);

  00072	461a		 mov         r2,r3
  00074	4b02		 ldr         r3,|$LN27@sThreadedS| ; =|sghSqmNormalSession|
  00076	f44f 71b2	 mov         r1,#0x164
  0007a	6818		 ldr         r0,[r3]
  0007c		 |$LN15@sThreadedS|
  0007c		 |$M25|
  0007c	f000 9000	 b           SqmSet
  00080		 |$LN26@sThreadedS|
  00080		 |$LN27@sThreadedS|
  00080	0000 0000	 DCD         |sghSqmNormalSession|
  00084		 |$LN28@sThreadedS|
  00084	0000 0000	 DCD         |??_C@_1GE@PIGOECGG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAe?$AAd?$AAS?$AAQ?$AAM?$AAS?$AAe?$AAt?$AA?5?$AA?9?$AA?5?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn@|

			 ENDP  ; |?sThreadedSQMSet@@YAXKK@Z|, sThreadedSQMSet

	EXPORT	|PMSQM_Set|

  00010			 AREA	 |.bss|, NOINIT
|sghSQMEvents| % 0x1c
|sgSQMDataArg| % 0x1c

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PMSQM_Set| DCD imagerel |$LN18@PMSQM_Set|
	DCD	0x316075
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsqm.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsqm.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PMSQM_Set| PROC

; 302  : {

  00000		 |$LN18@PMSQM_Set|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M16|

; 303  :     /* this routine can never block
; 304  :        and should not call any OS call other than SetEvent() */
; 305  :     if (!sghSQMThread)

  00008	4c0d		 ldr         r4,|$LN22@PMSQM_Set| ; =|sghSQMEvents|
  0000a	6c23		 ldr         r3,[r4,#0x40]
  0000c	b19b		 cbz         r3,|$LN9@PMSQM_Set|

; 306  :         return; // sqm not started or failed to start 
; 307  :     DWORD iEvent = 0;

  0000e	4d0b		 ldr         r5,|$LN21@PMSQM_Set| ; =|sgSQMDataIds|
  00010	2200		 movs        r2,#0
  00012		 |$LL5@PMSQM_Set|

; 308  :     while (iEvent<NUM_SQM_EVENTS)
; 309  :     {
; 310  :         if (sgSQMDataIds[iEvent]==markerId)

  00012	f855 3b04	 ldr         r3,[r5],#4
  00016	4283		 cmp         r3,r0
  00018	d002		 beq         |$LN12@PMSQM_Set|

; 311  :             break;
; 312  :         iEvent++;

  0001a	3201		 adds        r2,#1
  0001c	2a07		 cmp         r2,#7
  0001e	d3f8		 bcc         |$LL5@PMSQM_Set|
  00020		 |$LN12@PMSQM_Set|

; 313  :     }
; 314  :     if (iEvent<NUM_SQM_EVENTS)

  00020	2a07		 cmp         r2,#7
  00022	d208		 bcs         |$LN9@PMSQM_Set|

; 315  :     {
; 316  :         HANDLE hToSet = sghSQMEvents[iEvent];
; 317  :         if (hToSet)

  00024	f854 0022	 ldr         r0,[r4,r2,lsl #2]
  00028	b128		 cbz         r0,|$LN9@PMSQM_Set|

; 318  :         {
; 319  :             sgSQMDataArg[iEvent] = dwValue;

  0002a	341c		 adds        r4,r4,#0x1C
  0002c	f844 1022	 str         r1,[r4,r2,lsl #2]
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  00030	2103		 movs        r1,#3
  00032	f000 f800	 bl          EventModify
  00036		 |$LN9@PMSQM_Set|
  00036		 |$M19|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsqm.cpp

; 323  : }

  00036	e8bd 8830	 pop         {r4,r5,r11,pc}
  0003a		 |$LN23@PMSQM_Set|
  0003a		 |$M24|
  0003a	defe		 __debugbreak
  0003c		 |$LN20@PMSQM_Set|
  0003c		 |$LN21@PMSQM_Set|
  0003c	0000 0000	 DCD         |sgSQMDataIds|
  00040		 |$LN22@PMSQM_Set|
  00040	0000 0000	 DCD         |sghSQMEvents|
  00044		 |$M17|

			 ENDP  ; |PMSQM_Set|

	IMPORT	|memset|
	IMPORT	|CreateEventW|
	IMPORT	|CloseHandle|
	IMPORT	|Sleep|
	IMPORT	|WaitForMultipleObjects|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?sSQMThread@@YAKPAX@Z| DCD imagerel |$LN78@sSQMThread|
	DCD	imagerel |$unwind2$?sSQMThread@@YAKPAX@Z|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?sSQMThread@@YAKPAX@Z| DCD 0x333000ef
	DCD	0xfc01e808
	DCD	0x1e8ffdf
	DCD	0xffdf
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffd9
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsqm.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsqm.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsqm.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsqm.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?sSQMThread@@YAKPAX@Z| PROC		; sSQMThread

; 190  : {

  00000		 |$LN78@sSQMThread|
  00000	e92d 4ff0	 push        {r4-r11,lr}
  00004	f20d 0b1c	 addw        r11,sp,#0x1C
  00008	f000 f800	 bl          __security_push_cookie
  0000c	b088		 sub         sp,sp,#0x20
  0000e		 |$M76|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  0000e	2008		 movs        r0,#8
  00010	f000 f800	 bl          __GetUserKData
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsqm.cpp

; 195  :     ZeroMemory(sghSQMEvents,sizeof(HANDLE)*NUM_SQM_EVENTS);

  00014	4c77		 ldr         r4,|$LN86@sSQMThread| ; =|sghSQMEvents|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00016	4680		 mov         r8,r0
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsqm.cpp

; 195  :     ZeroMemory(sghSQMEvents,sizeof(HANDLE)*NUM_SQM_EVENTS);

  00018	221c		 movs        r2,#0x1C
  0001a	4620		 mov         r0,r4
  0001c	2100		 movs        r1,#0
  0001e	f000 f800	 bl          memset

; 196  :     for(iEvent=0;iEvent<NUM_SQM_EVENTS;iEvent++)

  00022	2500		 movs        r5,#0
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00024	4626		 mov         r6,r4
  00026		 |$LL19@sSQMThread|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsqm.cpp

; 198  :         sghSQMEvents[iEvent] = CreateEvent(NULL, FALSE, FALSE, NULL);

  00026	2300		 movs        r3,#0
  00028	2200		 movs        r2,#0
  0002a	2100		 movs        r1,#0
  0002c	2000		 movs        r0,#0
  0002e	f000 f800	 bl          CreateEventW
  00032	f846 0b04	 str         r0,[r6],#4

; 199  :         if (!sghSQMEvents[iEvent])

  00036	b110		 cbz         r0,|$LN55@sSQMThread|

; 196  :     for(iEvent=0;iEvent<NUM_SQM_EVENTS;iEvent++)

  00038	3501		 adds        r5,#1
  0003a	2d07		 cmp         r5,#7
  0003c	d3f3		 bcc         |$LL19@sSQMThread|
  0003e		 |$LN55@sSQMThread|

; 200  :             break;
; 201  :     }
; 202  :     if (iEvent<NUM_SQM_EVENTS)

  0003e	2d07		 cmp         r5,#7
  00040	d20f		 bcs         |$LN15@sSQMThread|

; 203  :     {
; 204  :         /* failed in creating an event - back out closing the other ones */
; 205  :         while (iEvent>0)

  00042	b155		 cbz         r5,|$LN13@sSQMThread|
  00044	eb04 0785	 add         r7,r4,r5,lsl #2
  00048	2600		 movs        r6,#0
  0004a		 |$LL14@sSQMThread|

; 206  :         {
; 207  :             iEvent--;
; 208  :             CloseHandle(sghSQMEvents[iEvent]);

  0004a	f857 0d04	 ldr         r0,[r7,#-4]!
  0004e	3d01		 subs        r5,#1
  00050	f000 f800	 bl          CloseHandle

; 209  :             sghSQMEvents[iEvent] = NULL;

  00054	603e		 str         r6,[r7]
  00056	2d00		 cmp         r5,#0
  00058	d1f7		 bne         |$LL14@sSQMThread|
  0005a		 |$LN13@sSQMThread|

; 210  :         }
; 211  :         /* set thread startup error code - relevant to thread id */
; 212  :         sgSQMThreadId = (myId+1);

  0005a	f108 0301	 add         r3,r8,#1
  0005e	6463		 str         r3,[r4,#0x44]

; 213  :         return 0;

  00060	e0b7		 b           |$LN20@sSQMThread|
  00062		 |$LN15@sSQMThread|
  00062	4e63		 ldr         r6,|$LN85@sSQMThread| ; =|?numTries@?1??sThreadedSQMAttemptStart@@YAHXZ@4KA|

; 214  :     }
; 215  : 
; 216  :     /* setting this to the proper value signifies the thread started ok */
; 217  :     sgSQMThreadId = myId;

  00064	f8c4 8044	 str         r8,[r4,#0x44]

; 218  : 
; 219  :     /* wait for start condition (sqm is ready) */
; 220  :     /* wait up to 15 * 10 seconds from power on start, then bail */
; 221  :     DWORD dwTimeout = 15;

  00068	250f		 movs        r5,#0xF
  0006a	f04f 0900	 mov         r9,#0
  0006e	2700		 movs        r7,#0
  00070	f04f 0a00	 mov         r10,#0
  00074	f04f 0800	 mov         r8,#0
  00078		 |$LL12@sSQMThread|

; 222  :     do {
; 223  :         Sleep(10000);

  00078	f242 7010	 mov         r0,#0x2710
  0007c	f000 f800	 bl          Sleep

; 45   :     if (numTries>10)

  00080	6833		 ldr         r3,[r6]
  00082	2b0a		 cmp         r3,#0xA
  00084	d83f		 bhi         |$LN65@sSQMThread|

; 46   :         return FALSE;
; 47   : 
; 48   :     BOOL ret = FALSE;
; 49   : 
; 50   :     do {
; 51   :         GUID machineId = {0};
; 52   :         GUID userId = {0};
; 53   : 
; 54   :         /* check/start the normal daily session */
; 55   :         if (!sghSqmNormalSession)

  00086	6ba3		 ldr         r3,[r4,#0x38]
  00088	f8cd 9000	 str         r9,[sp]
  0008c	9701		 str         r7,[sp,#4]
  0008e	9702		 str         r7,[sp,#8]
  00090	9703		 str         r7,[sp,#0xC]
  00092	f8cd a010	 str         r10,[sp,#0x10]
  00096	f8cd 8014	 str         r8,[sp,#0x14]
  0009a	f8cd 8018	 str         r8,[sp,#0x18]
  0009e	f8cd 801c	 str         r8,[sp,#0x1C]
  000a2	bb4b		 cbnz        r3,|$LN29@sSQMThread|

; 56   :         {
; 57   :             /* try to create the new session */
; 58   :             sghSqmNormalSession = SqmGetManagedSession(TEXT("Global"));

  000a4	4851		 ldr         r0,|$LN84@sSQMThread| ; =|??_C@_1O@CHBCJGPP@?$AAG?$AAl?$AAo?$AAb?$AAa?$AAl?$AA?$AA@|
  000a6	f000 f800	 bl          SqmGetManagedSession
  000aa	63a0		 str         r0,[r4,#0x38]

; 59   :             if (!sghSqmNormalSession)

  000ac	b358		 cbz         r0,|$LN65@sSQMThread|

; 60   :                 break;
; 61   : 
; 62   :             // Check for shared machine ID
; 63   :             if (!SqmReadSharedMachineId(&machineId))

  000ae	4668		 mov         r0,sp
  000b0	f000 f800	 bl          SqmReadSharedMachineId
  000b4	b940		 cbnz        r0,|$LN27@sSQMThread|

; 64   :             {
; 65   :                 SqmCreateNewId(&machineId);

  000b6	4668		 mov         r0,sp
  000b8	f000 f800	 bl          SqmCreateNewId

; 66   :                 SqmWriteSharedMachineId(&machineId);

  000bc	4668		 mov         r0,sp
  000be	f000 f800	 bl          SqmWriteSharedMachineId

; 67   : 
; 68   :                 // Read it out again to make sure it was written.
; 69   :                 SqmReadSharedMachineId(&machineId);

  000c2	4668		 mov         r0,sp
  000c4	f000 f800	 bl          SqmReadSharedMachineId
  000c8		 |$LN27@sSQMThread|

; 70   :             }
; 71   :             // Set machine ID for the session
; 72   :             SqmSetMachineId(sghSqmNormalSession,&machineId);

  000c8	6ba0		 ldr         r0,[r4,#0x38]
  000ca	4669		 mov         r1,sp
  000cc	f000 f800	 bl          SqmSetMachineId

; 73   : 
; 74   :             // Check for shared user ID
; 75   :             if (!SqmReadSharedUserId(&userId))

  000d0	a804		 add         r0,sp,#0x10
  000d2	f000 f800	 bl          SqmReadSharedUserId
  000d6	b940		 cbnz        r0,|$LN26@sSQMThread|

; 76   :             {
; 77   :                 SqmCreateNewId(&userId);

  000d8	a804		 add         r0,sp,#0x10
  000da	f000 f800	 bl          SqmCreateNewId

; 78   :                 SqmWriteSharedUserId(&userId);

  000de	a804		 add         r0,sp,#0x10
  000e0	f000 f800	 bl          SqmWriteSharedUserId

; 79   : 
; 80   :                 // Read it out again to make sure it was written.
; 81   :                 SqmReadSharedUserId(&userId);

  000e4	a804		 add         r0,sp,#0x10
  000e6	f000 f800	 bl          SqmReadSharedUserId
  000ea		 |$LN26@sSQMThread|

; 82   :             }
; 83   :             // Set user ID for the session
; 84   :             SqmSetUserId(sghSqmNormalSession,&userId);

  000ea	6ba0		 ldr         r0,[r4,#0x38]
  000ec	a904		 add         r1,sp,#0x10
  000ee	f000 f800	 bl          SqmSetUserId

; 85   : 
; 86   :             // start the session now 
; 87   :             SqmStartSession(sghSqmNormalSession);

  000f2	6ba0		 ldr         r0,[r4,#0x38]
  000f4	f000 f800	 bl          SqmStartSession
  000f8		 |$LN29@sSQMThread|

; 88   : 
; 89   :             // normal session is ready to go now 
; 90   :         }
; 91   : 
; 92   :         /* check/start the weeklong session */
; 93   :         if (!sghSqmWeekSession)

  000f8	6be3		 ldr         r3,[r4,#0x3C]
  000fa	b98b		 cbnz        r3,|$LN10@sSQMThread|

; 94   :         {
; 95   :             /* try to create the new session */
; 96   :             sghSqmWeekSession = SqmGetManagedSession(TEXT("PMWeek"));

  000fc	483a		 ldr         r0,|$LN83@sSQMThread| ; =|??_C@_1O@NAFOCGLO@?$AAP?$AAM?$AAW?$AAe?$AAe?$AAk?$AA?$AA@|
  000fe	f000 f800	 bl          SqmGetManagedSession
  00102	63e0		 str         r0,[r4,#0x3C]

; 97   :             if (!sghSqmWeekSession)

  00104	b910		 cbnz        r0,|$LN66@sSQMThread|
  00106		 |$LN65@sSQMThread|

; 224  :         if (sThreadedSQMAttemptStart())
; 225  :             break;
; 226  :     } while (--dwTimeout);

  00106	3d01		 subs        r5,#1
  00108	d1b6		 bne         |$LL12@sSQMThread|
  0010a	e009		 b           |$LN10@sSQMThread|
  0010c		 |$LN66@sSQMThread|

; 98   :                 break;
; 99   : 
; 100  :             // Set machine ID for the session
; 101  :             SqmSetMachineId(sghSqmWeekSession,&machineId);

  0010c	4669		 mov         r1,sp
  0010e	f000 f800	 bl          SqmSetMachineId

; 102  : 
; 103  :             // Set user ID for the session
; 104  :             SqmSetUserId(sghSqmWeekSession,&userId);

  00112	6be0		 ldr         r0,[r4,#0x3C]
  00114	a904		 add         r1,sp,#0x10
  00116	f000 f800	 bl          SqmSetUserId

; 105  : 
; 106  :             // start the session now 
; 107  :             SqmStartSession(sghSqmWeekSession);

  0011a	6be0		 ldr         r0,[r4,#0x3C]
  0011c	f000 f800	 bl          SqmStartSession
  00120		 |$LN10@sSQMThread|

; 227  : 
; 228  :     if (dwTimeout>0)

  00120	2d00		 cmp         r5,#0
  00122	d04c		 beq         |$LN6@sSQMThread|
  00124	f240 1765	 mov         r7,#0x165
  00128	f8df 80b8	 ldr         r8,|$LN82@sSQMThread| ; =|sgSQMDataIds|
  0012c	f107 0602	 add         r6,r7,#2
  00130	f107 0504	 add         r5,r7,#4
  00134		 |$LL7@sSQMThread|

; 229  :     {
; 230  :         /* SQM Session(s) started ok (we didn't time out waiting).  we can start waiting on sqm events now */
; 231  :         for (;;) {
; 232  :             /* do the wait, to the maximum of one day */
; 233  :             DWORD dwWaitRet = WaitForMultipleObjects(NUM_SQM_EVENTS,sghSQMEvents,FALSE,INFINITE);

  00134	f06f 0300	 mvn         r3,#0
  00138	2200		 movs        r2,#0
  0013a	4621		 mov         r1,r4
  0013c	2007		 movs        r0,#7
  0013e	f000 f800	 bl          WaitForMultipleObjects

; 234  : 
; 235  :             /* check to see if one of our events woke us up */
; 236  :             if ((dwWaitRet>=WAIT_OBJECT_0) && (dwWaitRet<WAIT_OBJECT_0+NUM_SQM_EVENTS))

  00142	2807		 cmp         r0,#7
  00144	d2f6		 bcs         |$LL7@sSQMThread|

; 237  :             {
; 238  :                 sThreadedSQMSet(sgSQMDataIds[dwWaitRet-WAIT_OBJECT_0],sgSQMDataArg[dwWaitRet-WAIT_OBJECT_0]);

  00146	f858 1020	 ldr         r1,[r8,r0,lsl #2]
  0014a	4623		 mov         r3,r4
  0014c	331c		 adds        r3,r3,#0x1C
  0014e	f853 3020	 ldr         r3,[r3,r0,lsl #2]

; 108  : 
; 109  :             // weeklong session is ready to go now 
; 110  :         }
; 111  : 
; 112  :         // if we get here we succeeded
; 113  :         ret = TRUE;
; 114  : #pragma warning(suppress:4127)
; 115  :     } while (false); // yes, while false 
; 116  : 
; 117  :     return ret;
; 118  : }
; 119  : 
; 120  : static void sThreadedSQMSet(DWORD markerId, DWORD dwValue)
; 121  : {
; 122  :     /* PMSQM_Set() calls are filtered through to this thread asynchronously (caller does not wait), 
; 123  :        but this function will only ever be called synchronously */
; 124  :     switch (markerId)

  00152	f5b1 7fb2	 cmp         r1,#0x164
  00156	d02b		 beq         |$LN43@sSQMThread|
  00158	42b9		 cmp         r1,r7
  0015a	d023		 beq         |$LN42@sSQMThread|
  0015c	f5b1 7fb3	 cmp         r1,#0x166
  00160	d01d		 beq         |$LN41@sSQMThread|
  00162	42b1		 cmp         r1,r6
  00164	d018		 beq         |$LN40@sSQMThread|
  00166	f5b1 7fb4	 cmp         r1,#0x168
  0016a	d011		 beq         |$LN39@sSQMThread|
  0016c	42a9		 cmp         r1,r5
  0016e	d009		 beq         |$LN38@sSQMThread|
  00170	f5b1 7fb5	 cmp         r1,#0x16A
  00174	d003		 beq         |$LN37@sSQMThread|

; 167  :     default:
; 168  :         RETAILMSG(1, (TEXT("ERROR: sThreadedSQMSet - unknown marker id(%d).\r\n"),markerId));

  00176	481a		 ldr         r0,|$LN81@sSQMThread| ; =|??_C@_1GE@PIGOECGG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAe?$AAd?$AAS?$AAQ?$AAM?$AAS?$AAe?$AAt?$AA?5?$AA?9?$AA?5?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn@|
  00178	f000 f800	 bl          NKDbgPrintfW
  0017c	e7da		 b           |$LL7@sSQMThread|
  0017e		 |$LN37@sSQMThread|

; 161  :     
; 162  :     case PMSQM_DATAID_POWER_BAT_START_CHARGE_LEVEL:
; 163  :         // individual percentages of battery charge level when charging session started in a week-long session (Stream)
; 164  : //        RETAILMSG(1, (TEXT("PMSQM: Battery was at %d%% when charging started\r\n"),dwValue));
; 165  :         SqmAddToStream(sghSqmWeekSession,PMSQM_DATAID_POWER_BAT_START_CHARGE_LEVEL,1,dwValue);

  0017e	f44f 71b5	 mov         r1,#0x16A

; 166  :         break;

  00182	e007		 b           |$LN73@sSQMThread|
  00184		 |$LN38@sSQMThread|

; 155  :     
; 156  :     case PMSQM_DATAID_POWER_USER_SHUTDOWNS:
; 157  :         // total number of user-initiated shutdowns in a week-long session
; 158  : //        RETAILMSG(1, (TEXT("PMSQM: User Initiated Shutdown\r\n")));
; 159  :         SqmIncrement(sghSqmWeekSession,PMSQM_DATAID_POWER_USER_SHUTDOWNS,1);

  00184	6be0		 ldr         r0,[r4,#0x3C]
  00186	2201		 movs        r2,#1
  00188	4629		 mov         r1,r5
  0018a	f000 f800	 bl          SqmIncrement

; 160  :         break;

  0018e	e7d1		 b           |$LL7@sSQMThread|
  00190		 |$LN39@sSQMThread|

; 149  :     
; 150  :     case PMSQM_DATAID_POWER_BAT_DRAIN:
; 151  :         // individual battery drain session lengths (no charging) in a week-long session (Stream)
; 152  : //        RETAILMSG(1, (TEXT("PMSQM: Battery was drained for a %d ms session\r\n"),dwValue));
; 153  :         SqmAddToStream(sghSqmWeekSession,PMSQM_DATAID_POWER_BAT_DRAIN,1,dwValue);

  00190	f44f 71b4	 mov         r1,#0x168
  00194		 |$LN73@sSQMThread|
  00194	6be0		 ldr         r0,[r4,#0x3C]

; 154  :         break;

  00196	e007		 b           |$LN74@sSQMThread|
  00198		 |$LN40@sSQMThread|

; 143  :     
; 144  :     case PMSQM_DATAID_POWER_BAT_CHARGE:
; 145  :         // total time battery charged in a week-long session
; 146  : //        RETAILMSG(1, (TEXT("PMSQM: Battery was charged for a %d ms session\r\n"),dwValue));
; 147  :         SqmSet(sghSqmWeekSession,PMSQM_DATAID_POWER_BAT_CHARGE,dwValue);

  00198	6be0		 ldr         r0,[r4,#0x3C]
  0019a	4631		 mov         r1,r6

; 148  :         break;

  0019c	e00b		 b           |$LN70@sSQMThread|
  0019e		 |$LN41@sSQMThread|

; 137  :     
; 138  :     case PMSQM_DATAID_POWER_BKL_OFF:
; 139  :         // individual backlight off session lengths in ms in a standard session (Stream)
; 140  : //        RETAILMSG(1, (TEXT("PMSQM: Backlight was off for a %d ms session\r\n"),dwValue));
; 141  :         SqmAddToStream(sghSqmNormalSession,PMSQM_DATAID_POWER_BKL_OFF,1,dwValue);

  0019e	f44f 71b3	 mov         r1,#0x166

; 142  :         break;

  001a2	e000		 b           |$LN71@sSQMThread|
  001a4		 |$LN42@sSQMThread|

; 130  :         break;
; 131  : 
; 132  :     case PMSQM_DATAID_POWER_BKL_ON:
; 133  :         // individual backlight session lengths in ms in a standard session (Stream)
; 134  : //        RETAILMSG(1, (TEXT("PMSQM: Backlight was on for a %d ms session\r\n"),dwValue));
; 135  :         SqmAddToStream(sghSqmNormalSession,PMSQM_DATAID_POWER_BKL_ON,1,dwValue);

  001a4	4639		 mov         r1,r7
  001a6		 |$LN71@sSQMThread|
  001a6	6ba0		 ldr         r0,[r4,#0x38]
  001a8		 |$LN74@sSQMThread|
  001a8	2201		 movs        r2,#1
  001aa	f000 f800	 bl          SqmAddToStream

; 136  :         break;

  001ae	e7c1		 b           |$LL7@sSQMThread|
  001b0		 |$LN43@sSQMThread|

; 125  :     {
; 126  :     case PMSQM_DATAID_POWER_BKL_TOTAL:
; 127  :         // total ms backlight on in a standard session
; 128  : //        RETAILMSG(1, (TEXT("PMSQM: Backlight has been on for a total of %d ms\r\n"),dwValue));
; 129  :         SqmSet(sghSqmNormalSession,PMSQM_DATAID_POWER_BKL_TOTAL,dwValue);

  001b0	6ba0		 ldr         r0,[r4,#0x38]
  001b2	f44f 71b2	 mov         r1,#0x164
  001b6		 |$LN70@sSQMThread|
  001b6	461a		 mov         r2,r3
  001b8	f000 f800	 bl          SqmSet

; 239  :             }
; 240  : 
; 241  :         }

  001bc	e7ba		 b           |$LL7@sSQMThread|
  001be		 |$LN6@sSQMThread|

; 242  :         /* should run forever (should never get here) */
; 243  :     }
; 244  : 
; 245  :     /* close event handles */
; 246  :     for(iEvent=0;iEvent<NUM_SQM_EVENTS;iEvent++)

  001be	2507		 movs        r5,#7
  001c0	2600		 movs        r6,#0
  001c2		 |$LL4@sSQMThread|

; 247  :     {
; 248  :         if (sghSQMEvents[iEvent])

  001c2	6820		 ldr         r0,[r4]
  001c4	b110		 cbz         r0,|$LN3@sSQMThread|

; 249  :         {
; 250  :             CloseHandle(sghSQMEvents[iEvent]);

  001c6	f000 f800	 bl          CloseHandle

; 251  :             sghSQMEvents[iEvent] = NULL;

  001ca	6026		 str         r6,[r4]
  001cc		 |$LN3@sSQMThread|

; 242  :         /* should run forever (should never get here) */
; 243  :     }
; 244  : 
; 245  :     /* close event handles */
; 246  :     for(iEvent=0;iEvent<NUM_SQM_EVENTS;iEvent++)

  001cc	3404		 adds        r4,#4
  001ce	3d01		 subs        r5,#1
  001d0	d1f7		 bne         |$LL4@sSQMThread|
  001d2		 |$LN20@sSQMThread|

; 252  :         }
; 253  :     }
; 254  : 
; 255  :     return 0;
; 256  : }

  001d2	2000		 movs        r0,#0
  001d4		 |$M79|
  001d4	b008		 add         sp,sp,#0x20
  001d6	f000 f800	 bl          __security_pop_cookie
  001da	e8bd 8ff0	 pop         {r4-r11,pc}
  001de		 |$LN87@sSQMThread|
  001de		 |$M88|
  001de	defe		 __debugbreak
  001e0		 |$LN80@sSQMThread|
  001e0		 |$LN81@sSQMThread|
  001e0	0000 0000	 DCD         |??_C@_1GE@PIGOECGG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAe?$AAd?$AAS?$AAQ?$AAM?$AAS?$AAe?$AAt?$AA?5?$AA?9?$AA?5?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn@|
  001e4		 |$LN82@sSQMThread|
  001e4	0000 0000	 DCD         |sgSQMDataIds|
  001e8		 |$LN83@sSQMThread|
  001e8	0000 0000	 DCD         |??_C@_1O@NAFOCGLO@?$AAP?$AAM?$AAW?$AAe?$AAe?$AAk?$AA?$AA@|
  001ec		 |$LN84@sSQMThread|
  001ec	0000 0000	 DCD         |??_C@_1O@CHBCJGPP@?$AAG?$AAl?$AAo?$AAb?$AAa?$AAl?$AA?$AA@|
  001f0		 |$LN85@sSQMThread|
  001f0	0000 0000	 DCD         |?numTries@?1??sThreadedSQMAttemptStart@@YAHXZ@4KA|
  001f4		 |$LN86@sSQMThread|
  001f4	0000 0000	 DCD         |sghSQMEvents|
  001f8		 |$M77|

			 ENDP  ; |?sSQMThread@@YAKPAX@Z|, sSQMThread

	EXPORT	|PMSQM_Start|
	IMPORT	|CreateThread|
	IMPORT	|TerminateThread|
	IMPORT	|WaitForSingleObject|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PMSQM_Start| DCD imagerel |$LN18@PMSQM_Star|
	DCD	0xfdf100e1
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsqm.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PMSQM_Start| PROC

; 262  : {

  00000		 |$LN18@PMSQM_Star|
  00000	e92d 483f	 push        {r0-r5,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M16|

; 263  :     /* make sure not already started */
; 264  :     if (sghSQMThread)

  00008	4c1a		 ldr         r4,|$LN22@PMSQM_Star| ; =|sghSQMThread|
  0000a	6823		 ldr         r3,[r4]
  0000c	bb63		 cbnz        r3,|$LN14@PMSQM_Star|

; 265  :         return FALSE;
; 266  : 
; 267  :     /* start sqm watcher thread */
; 268  :     DWORD dwThreadId;
; 269  :     sgSQMThreadId = 0;

  0000e	2200		 movs        r2,#0
  00010	6062		 str         r2,[r4,#4]

; 270  :     sghSQMThread = CreateThread(NULL,64*1024,sSQMThread,NULL,0,&dwThreadId);

  00012	9200		 str         r2,[sp]
  00014	4a16		 ldr         r2,|$LN21@PMSQM_Star| ; =|?sSQMThread@@YAKPAX@Z|
  00016	ab02		 add         r3,sp,#8
  00018	9301		 str         r3,[sp,#4]
  0001a	f44f 3180	 mov         r1,#0x10000
  0001e	2300		 movs        r3,#0
  00020	2000		 movs        r0,#0
  00022	f000 f800	 bl          CreateThread
  00026	6020		 str         r0,[r4]

; 271  :     if (!sghSQMThread)

  00028	b1f0		 cbz         r0,|$LN14@PMSQM_Star|

; 272  :         return FALSE;
; 273  :     DWORD dwTimeOut = 100;

  0002a	2564		 movs        r5,#0x64
  0002c		 |$LL6@PMSQM_Star|

; 274  :     do {
; 275  :         if (sgSQMThreadId)

  0002c	6863		 ldr         r3,[r4,#4]
  0002e	b923		 cbnz        r3,|$LN4@PMSQM_Star|

; 276  :             break;
; 277  :         Sleep(10);

  00030	200a		 movs        r0,#0xA
  00032	f000 f800	 bl          Sleep

; 278  :     } while (--dwTimeOut);

  00036	3d01		 subs        r5,#1
  00038	d1f8		 bne         |$LL6@PMSQM_Star|
  0003a		 |$LN4@PMSQM_Star|

; 279  : 
; 280  :     if (sgSQMThreadId==dwThreadId)

  0003a	6862		 ldr         r2,[r4,#4]
  0003c	9b02		 ldr         r3,[sp,#8]
  0003e	429a		 cmp         r2,r3
  00040	d101		 bne         |$LN2@PMSQM_Star|

; 281  :         return TRUE;

  00042	2001		 movs        r0,#1
  00044	e011		 b           |$LN9@PMSQM_Star|
  00046		 |$LN2@PMSQM_Star|

; 282  : 
; 283  :     /* thread failed on startup or timed out starting up */
; 284  : 
; 285  :     if (sgSQMThreadId)

  00046	6863		 ldr         r3,[r4,#4]
  00048	b123		 cbz         r3,|$LN1@PMSQM_Star|

; 286  :         TerminateThread(sghSQMThread,(DWORD)-1);

  0004a	6820		 ldr         r0,[r4]
  0004c	f06f 0100	 mvn         r1,#0
  00050	f000 f800	 bl          TerminateThread
  00054		 |$LN1@PMSQM_Star|

; 287  :     WaitForSingleObject(sghSQMThread,INFINITE);

  00054	6820		 ldr         r0,[r4]
  00056	f06f 0100	 mvn         r1,#0
  0005a	f000 f800	 bl          WaitForSingleObject

; 288  :     CloseHandle(sghSQMThread);

  0005e	6820		 ldr         r0,[r4]
  00060	f000 f800	 bl          CloseHandle

; 289  :     sghSQMThread = NULL;

  00064	2300		 movs        r3,#0
  00066	6023		 str         r3,[r4]
  00068		 |$LN14@PMSQM_Star|

; 290  : 
; 291  : //    RETAILMSG(1, (TEXT("PMSQM: Failed to start with error code %d\r\n"),sgSQMThreadId-dwThreadId));
; 292  : 
; 293  :     return FALSE;

  00068	2000		 movs        r0,#0
  0006a		 |$LN9@PMSQM_Star|
  0006a		 |$M19|

; 294  : }

  0006a	b004		 add         sp,sp,#0x10
  0006c	e8bd 8830	 pop         {r4,r5,r11,pc}
  00070		 |$LN20@PMSQM_Star|
  00070		 |$LN21@PMSQM_Star|
  00070	0000 0000	 DCD         |?sSQMThread@@YAKPAX@Z|
  00074		 |$LN22@PMSQM_Star|
  00074	0000 0000	 DCD         |sghSQMThread|
  00078		 |$M17|

			 ENDP  ; |PMSQM_Start|

	END
