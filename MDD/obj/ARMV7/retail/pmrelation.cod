; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.114 

	TTL	C:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmrelation.cpp
	THUMB

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	IMPORT	|__security_push_cookie|
	IMPORT	|__security_pop_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|StringCchLengthW|
	IMPORT	|CeLogData|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$CeLogMsg| DCD imagerel |$LN8@CeLogMsg|
	DCD	imagerel |$unwind2$CeLogMsg|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$CeLogMsg| DCD 0x44b00032
	DCD	0x1e889e8
	DCD	0x400a8fb
	DCD	0x8801e8ff
	DCD	0xff05ef00
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffe5
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\celog.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |CeLogMsg| PROC

; 1208 : {

  00000		 |$LN8@CeLogMsg|
  00000	b40f		 push        {r0-r3}
  00002	e92d 4800	 push        {r11,lr}
  00006	46eb		 mov         r11,sp
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d24	 subw        sp,sp,#0x224
  00010		 |$M6|
  00010	4602		 mov         r2,r0

; 1209 :     va_list arglist;
; 1210 :     WCHAR   szTemp[MAX_PATH];
; 1211 :     size_t  cchLen;
; 1212 :     HRESULT hr;
; 1213 : 
; 1214 :     // Compose a single string using the input args
; 1215 :     va_start(arglist, szFormat);
; 1216 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00012	a806		 add         r0,sp,#0x18
  00014	ab8d		 add         r3,sp,#0x234
  00016	f44f 7182	 mov         r1,#0x104
  0001a	928c		 str         r2,[sp,#0x230]
  0001c	f000 f800	 bl          StringCchVPrintfW

; 1217 :     if (SUCCEEDED(hr)) {

  00020	2800		 cmp         r0,#0
  00022	db17		 blt         |$LN1@CeLogMsg|

; 1218 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00024	aa04		 add         r2,sp,#0x10
  00026	a806		 add         r0,sp,#0x18
  00028	f44f 7182	 mov         r1,#0x104
  0002c	f000 f800	 bl          StringCchLengthW

; 1219 :         if (SUCCEEDED(hr)) {

  00030	2800		 cmp         r0,#0
  00032	db0f		 blt         |$LN1@CeLogMsg|

; 1220 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1221 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  00034	f04f 4380	 mov         r3,#0x40000000
  00038	9301		 str         r3,[sp,#4]
  0003a	9b04		 ldr         r3,[sp,#0x10]
  0003c	2200		 movs        r2,#0
  0003e	9203		 str         r2,[sp,#0xC]
  00040	3301		 adds        r3,#1
  00042	005b		 lsls        r3,r3,#1
  00044	9202		 str         r2,[sp,#8]
  00046	9200		 str         r2,[sp]
  00048	aa06		 add         r2,sp,#0x18
  0004a	214a		 movs        r1,#0x4A
  0004c	b29b		 uxth        r3,r3
  0004e	2001		 movs        r0,#1
  00050	f000 f800	 bl          CeLogData
  00054		 |$LN1@CeLogMsg|
  00054		 |$M9|

; 1222 :         }
; 1223 :     }
; 1224 : }

  00054	f20d 2d24	 addw        sp,sp,#0x224
  00058	f000 f800	 bl          __security_pop_cookie
  0005c	f85d bb04	 pop         {r11}
  00060	f85d fb14	 ldr         pc,[sp],#0x14
  00064		 |$M7|

			 ENDP  ; |CeLogMsg|

	EXPORT	|??_C@_1CO@JNMCMHEL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAl?$AAe?$AAa?$AAs?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@KMABPNDO@?$AAP?$AAm?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|PmReleasePowerRelationship|
	IMPORT	|dpCurSettings|
	IMPORT	|CheckDevicePointer|
	IMPORT	|RemoveDevice|
	IMPORT	|DeviceStateDecRef|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PmReleasePowerRelationship| DCD imagerel |$LN14@PmReleaseP|
	DCD	0xfd3260c1

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@KMABPNDO@?$AAP?$AAm?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "R", 0x0, "e", 0x0, "l", 0x0, "e", 0x0, "a"
	DCB	0x0, "s", 0x0, "e", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "R", 0x0, "e", 0x0, "l", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "h", 0x0, "i"
	DCB	0x0, "p", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@JNMCMHEL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAl?$AAe?$AAa?$AAs?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "l"
	DCB	0x0, "e", 0x0, "a", 0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmrelation.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PmReleasePowerRelationship| PROC

; 125  : {

  00000		 |$LN14@PmReleaseP|
  00000	e92d 4878	 push        {r3-r6,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M12|

; 126  :     PDEVICE_STATE pds = (PDEVICE_STATE) h;
; 127  :     DWORD dwStatus = ERROR_INVALID_PARAMETER;
; 128  :     SETFNAME(_T("PmReleasePowerRelationship"));
; 129  : 
; 130  :     PMLOGMSG(ZONE_API, (_T("%s: releasing 0x%08x\r\n"), pszFname, h));

  00008	4e18		 ldr         r6,|$LN20@PmReleaseP| ; =|dpCurSettings|
  0000a	2457		 movs        r4,#0x57
  0000c	4605		 mov         r5,r0
  0000e	f8d6 3440	 ldr         r3,[r6,#0x440]
  00012	f413 6f00	 tst         r3,#0x800
  00016	d004		 beq         |$LN5@PmReleaseP|
  00018	4813		 ldr         r0,|$LN19@PmReleaseP| ; =|??_C@_1CO@JNMCMHEL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAl?$AAe?$AAa?$AAs?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0001a	4911		 ldr         r1,|$LN17@PmReleaseP| ; =|??_C@_1DG@KMABPNDO@?$AAP?$AAm?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@|
  0001c	462a		 mov         r2,r5
  0001e	f000 f800	 bl          CeLogMsg
  00022		 |$LN5@PmReleaseP|

; 131  : 
; 132  :     // make sure that this pointer is a child node with a parent
; 133  :     if(pds != NULL) {

  00022	b165		 cbz         r5,|$LN10@PmReleaseP|

; 134  :         BOOL fExists = CheckDevicePointer(pds); // increments refcnt if TRUE

  00024	4628		 mov         r0,r5
  00026	f000 f800	 bl          CheckDevicePointer

; 135  :         if(fExists) {

  0002a	b140		 cbz         r0,|$LN10@PmReleaseP|

; 136  :             // delete the device
; 137  :             PREFAST_DEBUGCHK(pds->pListHead != NULL);
; 138  :             RemoveDevice(pds->pListHead->pGuid, pds->pszName);

  0002c	6e6b		 ldr         r3,[r5,#0x64]
  0002e	6829		 ldr         r1,[r5]
  00030	6818		 ldr         r0,[r3]
  00032	f000 f800	 bl          RemoveDevice

; 139  : 
; 140  :             // done with the pointer
; 141  :             DeviceStateDecRef(pds);

  00036	4628		 mov         r0,r5
  00038	f000 f800	 bl          DeviceStateDecRef

; 142  : 
; 143  :             // return a good status
; 144  :             dwStatus = ERROR_SUCCESS;

  0003c	2400		 movs        r4,#0
  0003e		 |$LN10@PmReleaseP|

; 145  :         }
; 146  :     }
; 147  : 
; 148  :     PMLOGMSG(ZONE_API || (dwStatus != ERROR_SUCCESS && ZONE_WARN), (_T("%s: returning %d\r\n"), 
; 149  :         pszFname, dwStatus));

  0003e	f8d6 3440	 ldr         r3,[r6,#0x440]
  00042	f413 6f00	 tst         r3,#0x800
  00046	d103		 bne         |$LN8@PmReleaseP|
  00048	b13c		 cbz         r4,|$LN9@PmReleaseP|
  0004a	f013 0f02	 tst         r3,#2
  0004e	d004		 beq         |$LN9@PmReleaseP|
  00050		 |$LN8@PmReleaseP|
  00050	4804		 ldr         r0,|$LN18@PmReleaseP| ; =|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00052	4903		 ldr         r1,|$LN17@PmReleaseP| ; =|??_C@_1DG@KMABPNDO@?$AAP?$AAm?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@|
  00054	4622		 mov         r2,r4
  00056	f000 f800	 bl          CeLogMsg
  0005a		 |$LN9@PmReleaseP|

; 150  :     return dwStatus;
; 151  : }

  0005a	4620		 mov         r0,r4
  0005c		 |$M15|
  0005c	e8bd 8878	 pop         {r3-r6,r11,pc}
  00060		 |$LN16@PmReleaseP|
  00060		 |$LN17@PmReleaseP|
  00060	0000 0000	 DCD         |??_C@_1DG@KMABPNDO@?$AAP?$AAm?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@|
  00064		 |$LN18@PmReleaseP|
  00064	0000 0000	 DCD         |??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00068		 |$LN19@PmReleaseP|
  00068	0000 0000	 DCD         |??_C@_1CO@JNMCMHEL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAl?$AAe?$AAa?$AAs?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0006c		 |$LN20@PmReleaseP|
  0006c	0000 0000	 DCD         |dpCurSettings|
  00070		 |$M13|

			 ENDP  ; |PmReleasePowerRelationship|

	EXPORT	|??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@DGDFELFJ@?$AAP?$AAm?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@FDDAEBKJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@GPNMCGNE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@NJGFJEJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAa?$AAl?$AAs?$AAo?$AA?5?$AAb?$AAe?$AA?5?$AAa?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@GFDCDANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@KBCPAFO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAi?$AAs?$AA?5@| [ DATA ] ; `string'
	EXPORT	|PmRegisterPowerRelationship|
	IMPORT	|DeviceIdParseNameString|
	IMPORT	|GetDeviceListFromClass|
	IMPORT	|DeviceStateFindList|
	IMPORT	|AddDevice|
	IMPORT	|DeviceIdDestroy|
	IMPORT	|SetLastError|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PmRegisterPowerRelationship| DCD imagerel |$LN40@PmRegister|
	DCD	0xfdb662c5

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@KBCPAFO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAi?$AAs?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@GFDCDANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "h"
	DCB	0x0, "i", 0x0, "l", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@NJGFJEJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAa?$AAl?$AAs?$AAo?$AA?5?$AAb?$AAe?$AA?5?$AAa?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "s"
	DCB	0x0, "o", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "a"
	DCB	0x0, " ", 0x0, "c", 0x0, "h", 0x0, "i", 0x0, "l", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@GPNMCGNE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@FDDAEBKJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "i"
	DCB	0x0, "l", 0x0, "d", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, "y", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@DGDFELFJ@?$AAP?$AAm?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "R", 0x0, "e", 0x0, "l", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "h"
	DCB	0x0, "i", 0x0, "p", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "+", 0x0
	DCB	"%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmrelation.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PmRegisterPowerRelationship| PROC

; 39   : {

  00000		 |$LN40@PmRegister|
  00000	e92d 4ffe	 push        {r1-r11,lr}
  00004	f20d 0b28	 addw        r11,sp,#0x28
  00008		 |$M38|

; 40   :     PDEVICEID pdiParent = NULL, pdiChild = NULL;
; 41   :     PDEVICE_LIST pdlParent, pdlChild = NULL;
; 42   :     PDEVICE_STATE pdsParent = NULL;
; 43   :     PDEVICE_STATE pdsChild = NULL;
; 44   :     DWORD dwStatus = ERROR_SUCCESS;
; 45   :     SETFNAME(_T("PmRegisterPowerRelationship"));
; 46   : 
; 47   :     PMLOGMSG(ZONE_API, (_T("+%s\r\n"), pszFname));

  00008	4e5d		 ldr         r6,|$LN50@PmRegister| ; =|dpCurSettings|
  0000a	469e		 mov         lr,r3
  0000c	9300		 str         r3,[sp]
  0000e	f8d6 4440	 ldr         r4,[r6,#0x440]
  00012	460b		 mov         r3,r1
  00014	f04f 0900	 mov         r9,#0
  00018	2700		 movs        r7,#0
  0001a	f04f 0800	 mov         r8,#0
  0001e	2500		 movs        r5,#0
  00020	f414 6f00	 tst         r4,#0x800
  00024	9202		 str         r2,[sp,#8]
  00026	9301		 str         r3,[sp,#4]
  00028	4682		 mov         r10,r0
  0002a	d006		 beq         |$LN21@PmRegister|
  0002c	4853		 ldr         r0,|$LN49@PmRegister| ; =|??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0002e	494d		 ldr         r1,|$LN43@PmRegister| ; =|??_C@_1DI@DGDFELFJ@?$AAP?$AAm?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@|
  00030	f000 f800	 bl          CeLogMsg
  00034	f8dd e000	 ldr         lr,[sp]
  00038	9b01		 ldr         r3,[sp,#4]
  0003a		 |$LN21@PmRegister|

; 48   : 
; 49   :     // sanity check parameters
; 50   :     if(pvParent == NULL 
; 51   :     || pvChild == NULL
; 52   :     || (pdiParent = DeviceIdParseNameString((LPCTSTR) pvParent, dwFlags)) == NULL
; 53   :     || (pdiChild = DeviceIdParseNameString((LPCTSTR) pvChild, dwFlags)) == NULL) {

  0003a	f1ba 0f00	 cmp         r10,#0
  0003e	d06e		 beq         |$LN36@PmRegister|
  00040	2b00		 cmp         r3,#0
  00042	d06c		 beq         |$LN36@PmRegister|
  00044	4671		 mov         r1,lr
  00046	4650		 mov         r0,r10
  00048	f000 f800	 bl          DeviceIdParseNameString
  0004c	4681		 mov         r9,r0
  0004e	2800		 cmp         r0,#0
  00050	d065		 beq         |$LN36@PmRegister|
  00052	9900		 ldr         r1,[sp]
  00054	9801		 ldr         r0,[sp,#4]
  00056	f000 f800	 bl          DeviceIdParseNameString
  0005a	4607		 mov         r7,r0
  0005c	2f00		 cmp         r7,#0
  0005e	d05e		 beq         |$LN36@PmRegister|

; 55   :     }
; 56   : 
; 57   :     // parameters ok so far?
; 58   :     if(dwStatus == ERROR_SUCCESS) {
; 59   :         pdlChild = GetDeviceListFromClass(pdiChild->pGuid);

  00060	6838		 ldr         r0,[r7]
  00062	f000 f800	 bl          GetDeviceListFromClass
  00066	4682		 mov         r10,r0

; 60   :         if(dwStatus == ERROR_SUCCESS) {
; 61   :             // Look up device lists for parent and child, plus the parent
; 62   :             // and child device structures.  The child cannot already exist.
; 63   :             pdlParent = GetDeviceListFromClass(pdiParent->pGuid);

  00068	f8d9 0000	 ldr         r0,[r9]
  0006c	f000 f800	 bl          GetDeviceListFromClass
  00070	4604		 mov         r4,r0

; 64   :             if(pdlParent == NULL || pdlChild == NULL) {

  00072	2c00		 cmp         r4,#0
  00074	d04a		 beq         |$LN13@PmRegister|
  00076	f1ba 0f00	 cmp         r10,#0
  0007a	d047		 beq         |$LN13@PmRegister|

; 67   :                 dwStatus = ERROR_INVALID_PARAMETER;
; 68   :             } else if((pdsChild = DeviceStateFindList(pdlChild, pdiChild->pszName)) != NULL) {

  0007c	6879		 ldr         r1,[r7,#4]
  0007e	4650		 mov         r0,r10
  00080	f000 f800	 bl          DeviceStateFindList
  00084	4680		 mov         r8,r0
  00086	b170		 cbz         r0,|$LN11@PmRegister|

; 69   :                 PMLOGMSG(ZONE_WARN, (_T("%s: child '%s' already exists\r\n"),
; 70   :                     pszFname, pdiChild->pszName));

  00088	f8d6 3440	 ldr         r3,[r6,#0x440]
  0008c	f013 0f02	 tst         r3,#2
  00090	d004		 beq         |$LN25@PmRegister|
  00092	687a		 ldr         r2,[r7,#4]
  00094	4838		 ldr         r0,|$LN48@PmRegister| ; =|??_C@_1EA@FDDAEBKJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00096	4933		 ldr         r1,|$LN43@PmRegister| ; =|??_C@_1DI@DGDFELFJ@?$AAP?$AAm?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@|
  00098	f000 f800	 bl          CeLogMsg
  0009c		 |$LN25@PmRegister|

; 71   :                 DeviceStateDecRef(pdsChild);

  0009c	4640		 mov         r0,r8
  0009e	f000 f800	 bl          DeviceStateDecRef

; 72   :                 dwStatus = ERROR_FILE_EXISTS;

  000a2	2550		 movs        r5,#0x50

; 73   :             } else {

  000a4	e03c		 b           |$LN3@PmRegister|
  000a6		 |$LN11@PmRegister|

; 74   :                 pdsParent = DeviceStateFindList(pdlParent, pdiParent->pszName);

  000a6	f8d9 1004	 ldr         r1,[r9,#4]
  000aa	4620		 mov         r0,r4
  000ac	f000 f800	 bl          DeviceStateFindList
  000b0	4604		 mov         r4,r0

; 75   :                 if(pdsParent == NULL) {

  000b2	b95c		 cbnz        r4,|$LN9@PmRegister|

; 76   :                     PMLOGMSG(ZONE_WARN, (_T("%s: can't find parent '%s'\r\n"), 
; 77   :                         pszFname, pdiParent->pszName));

  000b4	f8d6 3440	 ldr         r3,[r6,#0x440]
  000b8	f013 0f02	 tst         r3,#2
  000bc	d02f		 beq         |$LN36@PmRegister|
  000be	f8d9 2004	 ldr         r2,[r9,#4]
  000c2	482c		 ldr         r0,|$LN47@PmRegister| ; =|??_C@_1DK@GPNMCGNE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@|
  000c4	4927		 ldr         r1,|$LN43@PmRegister| ; =|??_C@_1DI@DGDFELFJ@?$AAP?$AAm?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@|
  000c6	f000 f800	 bl          CeLogMsg

; 78   :                     dwStatus = ERROR_INVALID_PARAMETER;

  000ca	e028		 b           |$LN36@PmRegister|
  000cc		 |$LN9@PmRegister|

; 79   :                 } else if(pdsParent->pParent != NULL) {

  000cc	6a63		 ldr         r3,[r4,#0x24]
  000ce	b14b		 cbz         r3,|$LN35@PmRegister|

; 80   :                     PMLOGMSG(ZONE_WARN, (_T("%s: parent '%s' can't also be a child\r\n"),
; 81   :                         pszFname, pdsParent->pszName));

  000d0	f8d6 3440	 ldr         r3,[r6,#0x440]
  000d4	f013 0f02	 tst         r3,#2
  000d8	d004		 beq         |$LN35@PmRegister|
  000da	6822		 ldr         r2,[r4]
  000dc	4824		 ldr         r0,|$LN46@PmRegister| ; =|??_C@_1FA@NJGFJEJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAa?$AAl?$AAs?$AAo?$AA?5?$AAb?$AAe?$AA?5?$AAa?$AA?5@|
  000de	4921		 ldr         r1,|$LN43@PmRegister| ; =|??_C@_1DI@DGDFELFJ@?$AAP?$AAm?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@|
  000e0	f000 f800	 bl          CeLogMsg
  000e4		 |$LN35@PmRegister|

; 82   :                 }
; 83   :             }
; 84   :         }
; 85   :     }
; 86   : 
; 87   :     // if parameters were ok, proceed
; 88   :     if(dwStatus == ERROR_SUCCESS) {
; 89   :         // create and/or initialize the new device
; 90   :         AddDevice(pdiChild->pGuid, pdiChild->pszName, pdsParent, pCaps);

  000e4	6879		 ldr         r1,[r7,#4]
  000e6	6838		 ldr         r0,[r7]
  000e8	9b02		 ldr         r3,[sp,#8]
  000ea	4622		 mov         r2,r4
  000ec	f000 f800	 bl          AddDevice

; 91   : 
; 92   :         // get the return value
; 93   :         pdsChild = DeviceStateFindList(pdlChild, pdiChild->pszName);

  000f0	6879		 ldr         r1,[r7,#4]
  000f2	4650		 mov         r0,r10
  000f4	f000 f800	 bl          DeviceStateFindList
  000f8	4680		 mov         r8,r0

; 94   :         if(pdsChild != NULL) {

  000fa	b110		 cbz         r0,|$LN5@PmRegister|

; 95   :             // we only want the pointer value for now
; 96   :             DeviceStateDecRef(pdsChild);

  000fc	f000 f800	 bl          DeviceStateDecRef

; 97   :         } else {

  00100	e000		 b           |$LN4@PmRegister|
  00102		 |$LN5@PmRegister|

; 98   :             // couldn't create the child device for some reason
; 99   :             dwStatus = ERROR_GEN_FAILURE;

  00102	251f		 movs        r5,#0x1F
  00104		 |$LN4@PmRegister|

; 100  :         }
; 101  :     }
; 102  : 
; 103  :     // release resources
; 104  :     if(pdsParent != NULL) DeviceStateDecRef(pdsParent);

  00104	4620		 mov         r0,r4
  00106	f000 f800	 bl          DeviceStateDecRef
  0010a	e009		 b           |$LN3@PmRegister|
  0010c		 |$LN13@PmRegister|

; 40   :     PDEVICEID pdiParent = NULL, pdiChild = NULL;
; 41   :     PDEVICE_LIST pdlParent, pdlChild = NULL;
; 42   :     PDEVICE_STATE pdsParent = NULL;
; 43   :     PDEVICE_STATE pdsChild = NULL;
; 44   :     DWORD dwStatus = ERROR_SUCCESS;
; 45   :     SETFNAME(_T("PmRegisterPowerRelationship"));
; 46   : 
; 47   :     PMLOGMSG(ZONE_API, (_T("+%s\r\n"), pszFname));

  0010c	f8d6 3440	 ldr         r3,[r6,#0x440]

; 65   :                 PMLOGMSG(ZONE_WARN, (_T("%s: can't find class for parent or child\r\n"),
; 66   :                     pszFname));

  00110	f013 0f02	 tst         r3,#2
  00114	d003		 beq         |$LN36@PmRegister|
  00116	4815		 ldr         r0,|$LN45@PmRegister| ; =|??_C@_1FG@GFDCDANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5@|
  00118	4912		 ldr         r1,|$LN43@PmRegister| ; =|??_C@_1DI@DGDFELFJ@?$AAP?$AAm?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@|
  0011a	f000 f800	 bl          CeLogMsg
  0011e		 |$LN36@PmRegister|

; 54   :         dwStatus = ERROR_INVALID_PARAMETER;

  0011e	2557		 movs        r5,#0x57
  00120		 |$LN3@PmRegister|

; 105  :     if(pdiParent != NULL) DeviceIdDestroy(pdiParent);

  00120	f1b9 0f00	 cmp         r9,#0
  00124	d002		 beq         |$LN2@PmRegister|
  00126	4648		 mov         r0,r9
  00128	f000 f800	 bl          DeviceIdDestroy
  0012c		 |$LN2@PmRegister|

; 106  :     if(pdiChild != NULL) DeviceIdDestroy(pdiChild);

  0012c	b117		 cbz         r7,|$LN1@PmRegister|
  0012e	4638		 mov         r0,r7
  00130	f000 f800	 bl          DeviceIdDestroy
  00134		 |$LN1@PmRegister|

; 107  : 
; 108  :     PMLOGMSG((dwStatus != ERROR_SUCCESS && ZONE_WARN) || ZONE_API, 
; 109  :         (_T("%s: returning 0x%08x, status is %d\r\n"), pszFname, pdsChild,
; 110  :         dwStatus));

  00134	b125		 cbz         r5,|$LN31@PmRegister|
  00136	f8d6 3440	 ldr         r3,[r6,#0x440]
  0013a	f013 0f02	 tst         r3,#2
  0013e	d104		 bne         |$LN32@PmRegister|
  00140		 |$LN31@PmRegister|

; 40   :     PDEVICEID pdiParent = NULL, pdiChild = NULL;
; 41   :     PDEVICE_LIST pdlParent, pdlChild = NULL;
; 42   :     PDEVICE_STATE pdsParent = NULL;
; 43   :     PDEVICE_STATE pdsChild = NULL;
; 44   :     DWORD dwStatus = ERROR_SUCCESS;
; 45   :     SETFNAME(_T("PmRegisterPowerRelationship"));
; 46   : 
; 47   :     PMLOGMSG(ZONE_API, (_T("+%s\r\n"), pszFname));

  00140	f8d6 3440	 ldr         r3,[r6,#0x440]

; 107  : 
; 108  :     PMLOGMSG((dwStatus != ERROR_SUCCESS && ZONE_WARN) || ZONE_API, 
; 109  :         (_T("%s: returning 0x%08x, status is %d\r\n"), pszFname, pdsChild,
; 110  :         dwStatus));

  00144	f413 6f00	 tst         r3,#0x800
  00148	d005		 beq         |$LN33@PmRegister|
  0014a		 |$LN32@PmRegister|
  0014a	4807		 ldr         r0,|$LN44@PmRegister| ; =|??_C@_1EK@KBCPAFO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAi?$AAs?$AA?5@|
  0014c	4905		 ldr         r1,|$LN43@PmRegister| ; =|??_C@_1DI@DGDFELFJ@?$AAP?$AAm?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@|
  0014e	462b		 mov         r3,r5
  00150	4642		 mov         r2,r8
  00152	f000 f800	 bl          CeLogMsg
  00156		 |$LN33@PmRegister|

; 111  :     SetLastError(dwStatus);

  00156	4628		 mov         r0,r5
  00158	f000 f800	 bl          SetLastError

; 112  :     return (HANDLE) pdsChild;
; 113  : }

  0015c	4640		 mov         r0,r8
  0015e		 |$M41|
  0015e	e8bd 8ffe	 pop         {r1-r11,pc}
  00162		 |$LN51@PmRegister|
  00162		 |$M52|
  00162	defe		 __debugbreak
  00164		 |$LN42@PmRegister|
  00164		 |$LN43@PmRegister|
  00164	0000 0000	 DCD         |??_C@_1DI@DGDFELFJ@?$AAP?$AAm?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@|
  00168		 |$LN44@PmRegister|
  00168	0000 0000	 DCD         |??_C@_1EK@KBCPAFO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAi?$AAs?$AA?5@|
  0016c		 |$LN45@PmRegister|
  0016c	0000 0000	 DCD         |??_C@_1FG@GFDCDANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5@|
  00170		 |$LN46@PmRegister|
  00170	0000 0000	 DCD         |??_C@_1FA@NJGFJEJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAa?$AAl?$AAs?$AAo?$AA?5?$AAb?$AAe?$AA?5?$AAa?$AA?5@|
  00174		 |$LN47@PmRegister|
  00174	0000 0000	 DCD         |??_C@_1DK@GPNMCGNE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@|
  00178		 |$LN48@PmRegister|
  00178	0000 0000	 DCD         |??_C@_1EA@FDDAEBKJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0017c		 |$LN49@PmRegister|
  0017c	0000 0000	 DCD         |??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00180		 |$LN50@PmRegister|
  00180	0000 0000	 DCD         |dpCurSettings|
  00184		 |$M39|

			 ENDP  ; |PmRegisterPowerRelationship|

	END
