; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.114 

	TTL	C:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmrequire.cpp
	THUMB

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	IMPORT	|__security_push_cookie|
	IMPORT	|__security_pop_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|StringCchLengthW|
	IMPORT	|CeLogData|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$CeLogMsg| DCD imagerel |$LN8@CeLogMsg|
	DCD	imagerel |$unwind2$CeLogMsg|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$CeLogMsg| DCD 0x44b00032
	DCD	0x1e889e8
	DCD	0x400a8fb
	DCD	0x8801e8ff
	DCD	0xff05ef00
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffe5
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\celog.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |CeLogMsg| PROC

; 1208 : {

  00000		 |$LN8@CeLogMsg|
  00000	b40f		 push        {r0-r3}
  00002	e92d 4800	 push        {r11,lr}
  00006	46eb		 mov         r11,sp
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d24	 subw        sp,sp,#0x224
  00010		 |$M6|
  00010	4602		 mov         r2,r0

; 1209 :     va_list arglist;
; 1210 :     WCHAR   szTemp[MAX_PATH];
; 1211 :     size_t  cchLen;
; 1212 :     HRESULT hr;
; 1213 : 
; 1214 :     // Compose a single string using the input args
; 1215 :     va_start(arglist, szFormat);
; 1216 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00012	a806		 add         r0,sp,#0x18
  00014	ab8d		 add         r3,sp,#0x234
  00016	f44f 7182	 mov         r1,#0x104
  0001a	928c		 str         r2,[sp,#0x230]
  0001c	f000 f800	 bl          StringCchVPrintfW

; 1217 :     if (SUCCEEDED(hr)) {

  00020	2800		 cmp         r0,#0
  00022	db17		 blt         |$LN1@CeLogMsg|

; 1218 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00024	aa04		 add         r2,sp,#0x10
  00026	a806		 add         r0,sp,#0x18
  00028	f44f 7182	 mov         r1,#0x104
  0002c	f000 f800	 bl          StringCchLengthW

; 1219 :         if (SUCCEEDED(hr)) {

  00030	2800		 cmp         r0,#0
  00032	db0f		 blt         |$LN1@CeLogMsg|

; 1220 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1221 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  00034	f04f 4380	 mov         r3,#0x40000000
  00038	9301		 str         r3,[sp,#4]
  0003a	9b04		 ldr         r3,[sp,#0x10]
  0003c	2200		 movs        r2,#0
  0003e	9203		 str         r2,[sp,#0xC]
  00040	3301		 adds        r3,#1
  00042	005b		 lsls        r3,r3,#1
  00044	9202		 str         r2,[sp,#8]
  00046	9200		 str         r2,[sp]
  00048	aa06		 add         r2,sp,#0x18
  0004a	214a		 movs        r1,#0x4A
  0004c	b29b		 uxth        r3,r3
  0004e	2001		 movs        r0,#1
  00050	f000 f800	 bl          CeLogData
  00054		 |$LN1@CeLogMsg|
  00054		 |$M9|

; 1222 :         }
; 1223 :     }
; 1224 : }

  00054	f20d 2d24	 addw        sp,sp,#0x224
  00058	f000 f800	 bl          __security_pop_cookie
  0005c	f85d bb04	 pop         {r11}
  00060	f85d fb14	 ldr         pc,[sp],#0x14
  00064		 |$M7|

			 ENDP  ; |CeLogMsg|

	EXPORT	|??_C@_1BM@MOOMGNKD@?$AA?$DM?$AAA?$AAl?$AAl?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$DO?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JE@HGEMFFFP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAp?$AAd?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAo?$AAf?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?9@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@PGOLOMKN@?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@KKMCPELB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@BLKCCPJO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAm?$AAo?$AAv?$AAe?$AAd?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAu@| [ DATA ] ; `string'
	EXPORT	|UpdateRequirementDevices|
	IMPORT	|dpCurSettings|
	IMPORT	|GetDeviceListFromClass|
	IMPORT	|DeviceStateFindList|
	IMPORT	|UpdateDeviceState|
	IMPORT	|DeviceStateDecRef|
	IMPORT	|PmLock|
	IMPORT	|DeviceStateAddRef|
	IMPORT	|PmUnlock|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$UpdateRequirementDevices| DCD imagerel |$LN36@UpdateRequ|
	DCD	0x2f40205

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@BLKCCPJO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAm?$AAo?$AAv?$AAe?$AAd?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAu@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "d"
	DCB	0x0, "u", 0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "u", 0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@KKMCPELB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t"
	DCB	0x0, "i", 0x0, "f", 0x0, "y", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, " ", 0x0, "(", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@PGOLOMKN@?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@| DCB "U"
	DCB	0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "R"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "i", 0x0, "r", 0x0, "e"
	DCB	0x0, "m", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@HGEMFFFP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAp?$AAd?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAo?$AAf?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?9@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "u", 0x0, "p", 0x0, "d"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, " ", 0x0, "o"
	DCB	0x0, "f", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-"
	DCB	0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-", 0x0, "%"
	DCB	0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@MOOMGNKD@?$AA?$DM?$AAA?$AAl?$AAl?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$DO?$AA?$AA@| DCB "<"
	DCB	0x0, "A", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, ">"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmrequire.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |UpdateRequirementDevices| PROC

; 26   : {

  00000		 |$LN36@UpdateRequ|
  00000	e92d 49f0	 push        {r4-r8,r11,lr}
  00004	f20d 0b14	 addw        r11,sp,#0x14
  00008	b08b		 sub         sp,sp,#0x2C
  0000a		 |$M34|

; 27   :     SETFNAME(_T("UpdateRequirementDevices"));
; 28   : 
; 29   :     PMLOGMSG(ZONE_REQUIRE, 
; 30   :         (_T("%s: updating '%s' of class %08x-%04x-%04x-%04x-%02x%02x%02x%02x%02x%02x\r\n"),
; 31   :         pszFname, pDeviceId->pszName != NULL ? pDeviceId->pszName : _T("<All Devices>"),
; 32   :         pDeviceId->pGuid->Data1, pDeviceId->pGuid->Data2, pDeviceId->pGuid->Data3,
; 33   :         (pDeviceId->pGuid->Data4[0] << 8) + pDeviceId->pGuid->Data4[1], 
; 34   :         pDeviceId->pGuid->Data4[2], pDeviceId->pGuid->Data4[3], 
; 35   :         pDeviceId->pGuid->Data4[4], pDeviceId->pGuid->Data4[5], 
; 36   :         pDeviceId->pGuid->Data4[6], pDeviceId->pGuid->Data4[7]));

  0000a	4d43		 ldr         r5,|$LN44@UpdateRequ| ; =|dpCurSettings|
  0000c	4604		 mov         r4,r0
  0000e	f8d5 3440	 ldr         r3,[r5,#0x440]
  00012	f013 0f80	 tst         r3,#0x80
  00016	d01d		 beq         |$LN16@UpdateRequ|
  00018	6862		 ldr         r2,[r4,#4]
  0001a	b902		 cbnz        r2,|$LN15@UpdateRequ|
  0001c	4a3d		 ldr         r2,|$LN43@UpdateRequ| ; =|??_C@_1BM@MOOMGNKD@?$AA?$DM?$AAA?$AAl?$AAl?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$DO?$AA?$AA@|
  0001e		 |$LN15@UpdateRequ|
  0001e	6820		 ldr         r0,[r4]
  00020	7bc3		 ldrb        r3,[r0,#0xF]
  00022	7a01		 ldrb        r1,[r0,#8]
  00024	9308		 str         r3,[sp,#0x20]
  00026	7b83		 ldrb        r3,[r0,#0xE]
  00028	9307		 str         r3,[sp,#0x1C]
  0002a	7b43		 ldrb        r3,[r0,#0xD]
  0002c	9306		 str         r3,[sp,#0x18]
  0002e	7b03		 ldrb        r3,[r0,#0xC]
  00030	9305		 str         r3,[sp,#0x14]
  00032	7ac3		 ldrb        r3,[r0,#0xB]
  00034	9304		 str         r3,[sp,#0x10]
  00036	7a83		 ldrb        r3,[r0,#0xA]
  00038	9303		 str         r3,[sp,#0xC]
  0003a	7a43		 ldrb        r3,[r0,#9]
  0003c	eb03 2301	 add         r3,r3,r1,lsl #8
  00040	9302		 str         r3,[sp,#8]
  00042	88c3		 ldrh        r3,[r0,#6]
  00044	4930		 ldr         r1,|$LN40@UpdateRequ| ; =|??_C@_1DC@PGOLOMKN@?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@|
  00046	9301		 str         r3,[sp,#4]
  00048	8883		 ldrh        r3,[r0,#4]
  0004a	9300		 str         r3,[sp]
  0004c	6803		 ldr         r3,[r0]
  0004e	4830		 ldr         r0,|$LN42@UpdateRequ| ; =|??_C@_1JE@HGEMFFFP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAp?$AAd?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAo?$AAf?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?9@|
  00050	f000 f800	 bl          CeLogMsg
  00054		 |$LN16@UpdateRequ|

; 37   : 
; 38   :     // all devices with a matching class
; 39   :     PDEVICE_LIST pdl = GetDeviceListFromClass(pDeviceId->pGuid);

  00054	6820		 ldr         r0,[r4]
  00056	f000 f800	 bl          GetDeviceListFromClass

; 40   :     PREFAST_DEBUGCHK(pdl != NULL);
; 41   :     
; 42   :     // are we updating one device or all devices of a class?
; 43   :     if(pDeviceId->pszName != NULL) {

  0005a	6861		 ldr         r1,[r4,#4]
  0005c	4680		 mov         r8,r0
  0005e	b1b1		 cbz         r1,|$LN11@UpdateRequ|

; 44   :         PDEVICE_STATE pds = DeviceStateFindList(pdl, pDeviceId->pszName);

  00060	f000 f800	 bl          DeviceStateFindList
  00064	4604		 mov         r4,r0

; 45   :         if(pds != NULL) {

  00066	2c00		 cmp         r4,#0
  00068	d048		 beq         |$LN9@UpdateRequ|

; 46   :             PMLOGMSG(ZONE_REQUIRE, (_T("%s: notifying 0x%08x ('%s')\r\n"),
; 47   :                 pszFname, pds, pds->pszName));

  0006a	f8d5 3440	 ldr         r3,[r5,#0x440]
  0006e	f013 0f80	 tst         r3,#0x80
  00072	d005		 beq         |$LN18@UpdateRequ|
  00074	6823		 ldr         r3,[r4]
  00076	4825		 ldr         r0,|$LN41@UpdateRequ| ; =|??_C@_1DM@KKMCPELB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00078	4923		 ldr         r1,|$LN40@UpdateRequ| ; =|??_C@_1DC@PGOLOMKN@?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@|
  0007a	4622		 mov         r2,r4
  0007c	f000 f800	 bl          CeLogMsg
  00080		 |$LN18@UpdateRequ|

; 48   :             UpdateDeviceState(pds);

  00080	4620		 mov         r0,r4
  00082	f000 f800	 bl          UpdateDeviceState

; 49   :             DeviceStateDecRef(pds);

  00086	4620		 mov         r0,r4
  00088	f000 f800	 bl          DeviceStateDecRef

; 50   :         }
; 51   :     } else {

  0008c	e036		 b           |$LN9@UpdateRequ|
  0008e		 |$LN11@UpdateRequ|

; 52   :         BOOL fDeviceRemoved;
; 53   :         PDEVICE_STATE pds;
; 54   : 
; 55   :         PMLOCK();

  0008e	f000 f800	 bl          PmLock
  00092		 |$LL8@UpdateRequ|

; 56   :         
; 57   :         // Update all devices in a given class.  If a device is
; 58   :         // removed from the class list while we are iterating through
; 59   :         // it, start again.  This should be harmless because once devices
; 60   :         // have been updated they are at the right power level already.
; 61   :         // At the worst a device will be set to its current power level, and
; 62   :         // this will only happen if a device is removed from the list while
; 63   :         // we are working on it.
; 64   :         do {
; 65   :             fDeviceRemoved = FALSE;
; 66   :             pds = pdl->pList;

  00092	f8d8 4004	 ldr         r4,[r8,#4]
  00096	2600		 movs        r6,#0
  00098		 |$LL5@UpdateRequ|

; 67   :             while(!fDeviceRemoved && pds != NULL) {

  00098	b374		 cbz         r4,|$LN30@UpdateRequ|

; 68   :                 PDEVICE_STATE pdsNext = NULL;
; 69   :                 
; 70   :                 // keep the device structure from being deallocated while
; 71   :                 // we're using a pointer to it
; 72   :                 DeviceStateAddRef(pds);

  0009a	4620		 mov         r0,r4
  0009c	2700		 movs        r7,#0
  0009e	f000 f800	 bl          DeviceStateAddRef

; 73   :                 
; 74   :                 // update the device power level if necessary
; 75   :                 PMUNLOCK();

  000a2	f000 f800	 bl          PmUnlock

; 76   :                 PMLOGMSG(ZONE_REQUIRE, (_T("%s: notifying 0x%08x ('%s')\r\n"),
; 77   :                     pszFname, pds, pds->pszName));

  000a6	f8d5 3440	 ldr         r3,[r5,#0x440]
  000aa	f013 0f80	 tst         r3,#0x80
  000ae	d005		 beq         |$LN20@UpdateRequ|
  000b0	6823		 ldr         r3,[r4]
  000b2	4915		 ldr         r1,|$LN40@UpdateRequ| ; =|??_C@_1DC@PGOLOMKN@?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@|
  000b4	4815		 ldr         r0,|$LN41@UpdateRequ| ; =|??_C@_1DM@KKMCPELB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000b6	4622		 mov         r2,r4
  000b8	f000 f800	 bl          CeLogMsg
  000bc		 |$LN20@UpdateRequ|

; 78   :                 UpdateDeviceState(pds);

  000bc	4620		 mov         r0,r4
  000be	f000 f800	 bl          UpdateDeviceState

; 79   :                 PMLOCK();

  000c2	f000 f800	 bl          PmLock

; 80   :                 
; 81   :                 // is the device still part of a list?
; 82   :                 if(pds->pListHead == NULL) {

  000c6	6e63		 ldr         r3,[r4,#0x64]
  000c8	b973		 cbnz        r3,|$LN3@UpdateRequ|

; 83   :                     // device disappeared while we were accessing it
; 84   :                     PMLOGMSG(ZONE_WARN || ZONE_DEVICE, 
; 85   :                         (_T("%s: device '%s' removed during update\r\n"), pszFname,
; 86   :                         pds->pszName));

  000ca	f8d5 3440	 ldr         r3,[r5,#0x440]
  000ce	f013 0f02	 tst         r3,#2
  000d2	d102		 bne         |$LN22@UpdateRequ|
  000d4	f013 0f10	 tst         r3,#0x10
  000d8	d004		 beq         |$LN23@UpdateRequ|
  000da		 |$LN22@UpdateRequ|
  000da	6822		 ldr         r2,[r4]
  000dc	490a		 ldr         r1,|$LN40@UpdateRequ| ; =|??_C@_1DC@PGOLOMKN@?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@|
  000de	4809		 ldr         r0,|$LN39@UpdateRequ| ; =|??_C@_1FA@BLKCCPJO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAm?$AAo?$AAv?$AAe?$AAd?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAu@|
  000e0	f000 f800	 bl          CeLogMsg
  000e4		 |$LN23@UpdateRequ|

; 87   :                     fDeviceRemoved = TRUE;

  000e4	2601		 movs        r6,#1

; 88   :                 } else {

  000e6	e000		 b           |$LN2@UpdateRequ|
  000e8		 |$LN3@UpdateRequ|

; 89   :                     // save the next pointer so we don't try to
; 90   :                     // dereference pds after decrementing its use count.
; 91   :                     pdsNext = pds->pNext;

  000e8	6ea7		 ldr         r7,[r4,#0x68]
  000ea		 |$LN2@UpdateRequ|

; 92   :                 }
; 93   :                 
; 94   :                 // done with the pointer, although we can still
; 95   :                 // check if it's null
; 96   :                 DeviceStateDecRef(pds);

  000ea	4620		 mov         r0,r4
  000ec	f000 f800	 bl          DeviceStateDecRef

; 97   :                 
; 98   :                 // on to the next device, unless device removed
; 99   :                 if(!fDeviceRemoved) pds = pdsNext;

  000f0	2e00		 cmp         r6,#0
  000f2	d1ce		 bne         |$LL8@UpdateRequ|
  000f4	463c		 mov         r4,r7

; 67   :             while(!fDeviceRemoved && pds != NULL) {

  000f6	e7cf		 b           |$LL5@UpdateRequ|
  000f8		 |$LN30@UpdateRequ|

; 100  :             }
; 101  :         } while(fDeviceRemoved || pds != NULL);
; 102  :         
; 103  :         PMUNLOCK();

  000f8	f000 f800	 bl          PmUnlock
  000fc		 |$LN9@UpdateRequ|
  000fc		 |$M37|

; 104  :     }
; 105  : }

  000fc	b00b		 add         sp,sp,#0x2C
  000fe	e8bd 89f0	 pop         {r4-r8,r11,pc}
  00102		 |$LN45@UpdateRequ|
  00102		 |$M46|
  00102	defe		 __debugbreak
  00104		 |$LN38@UpdateRequ|
  00104		 |$LN39@UpdateRequ|
  00104	0000 0000	 DCD         |??_C@_1FA@BLKCCPJO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAm?$AAo?$AAv?$AAe?$AAd?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAu@|
  00108		 |$LN40@UpdateRequ|
  00108	0000 0000	 DCD         |??_C@_1DC@PGOLOMKN@?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$AA@|
  0010c		 |$LN41@UpdateRequ|
  0010c	0000 0000	 DCD         |??_C@_1DM@KKMCPELB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAo?$AAt?$AAi?$AAf?$AAy?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00110		 |$LN42@UpdateRequ|
  00110	0000 0000	 DCD         |??_C@_1JE@HGEMFFFP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAp?$AAd?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAo?$AAf?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?9@|
  00114		 |$LN43@UpdateRequ|
  00114	0000 0000	 DCD         |??_C@_1BM@MOOMGNKD@?$AA?$DM?$AAA?$AAl?$AAl?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?$DO?$AA?$AA@|
  00118		 |$LN44@UpdateRequ|
  00118	0000 0000	 DCD         |dpCurSettings|
  0011c		 |$M35|

			 ENDP  ; |UpdateRequirementDevices|

	EXPORT	|??_C@_1FI@MEMIAAOD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAD?$AA?$CF?$AAd?$AA?5?$AAr?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@IPJPBNOH@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@KBCPAFO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAi?$AAs?$AA?5@| [ DATA ] ; `string'
	EXPORT	|PmSetPowerRequirement|
	IMPORT	|wcscmp|
	IMPORT	|gpFloorDx|
	IMPORT	|GetCallerVMProcessId|
	IMPORT	|PmEnterUpdate|
	IMPORT	|DeviceIdParseNameString|
	IMPORT	|PowerRestrictionCreate|
	IMPORT	|PowerRestrictionAddList|
	IMPORT	|gpSystemPowerState|
	IMPORT	|PmLeaveUpdate|
	IMPORT	|DeviceIdDestroy|
	IMPORT	|SetLastError|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PmSetPowerRequirement| DCD imagerel |$LN21@PmSetPower|
	DCD	0x17601e1

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@KBCPAFO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAi?$AAs?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@IPJPBNOH@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "R", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "i", 0x0, "r", 0x0, "e", 0x0, "m", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@MEMIAAOD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAD?$AA?$CF?$AAd?$AA?5?$AAr?$AAe@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "D", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "i", 0x0, "r", 0x0, "e"
	DCB	0x0, "m", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmrequire.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PmSetPowerRequirement| PROC

; 231  : {

  00000		 |$LN21@PmSetPower|
  00000	e92d 4ff0	 push        {r4-r11,lr}
  00004	f20d 0b1c	 addw        r11,sp,#0x1C
  00008	b085		 sub         sp,sp,#0x14
  0000a		 |$M19|
  0000a	9302		 str         r3,[sp,#8]
  0000c	4692		 mov         r10,r2
  0000e	460f		 mov         r7,r1
  00010	4681		 mov         r9,r0

; 232  :     HANDLE hRequirement = NULL;

  00012	2400		 movs        r4,#0

; 233  :     BOOL fUpdate = FALSE;

  00014	f04f 0800	 mov         r8,#0

; 234  :     PDEVICEID pdi = NULL;

  00018	2600		 movs        r6,#0

; 235  :     HANDLE hOwner = (HANDLE) GetCallerVMProcessId();

  0001a	f000 f800	 bl          GetCallerVMProcessId

; 236  :     DWORD dwStatus = ERROR_SUCCESS;
; 237  :     SETFNAME(_T("PmSetPowerRequirement"));
; 238  : 
; 239  :     UNREFERENCED_PARAMETER(dwStateFlags);
; 240  : 
; 241  :     PMLOGMSG(ZONE_REQUIRE || ZONE_API, (_T("%s: creating device state D%d requirement\r\n"),
; 242  :         pszFname, reqDx));

  0001e	4b36		 ldr         r3,|$LN26@PmSetPower| ; =|dpCurSettings|
  00020	2500		 movs        r5,#0
  00022	9003		 str         r0,[sp,#0xC]
  00024	f8d3 1440	 ldr         r1,[r3,#0x440]
  00028	f011 0f80	 tst         r1,#0x80
  0002c	d102		 bne         |$LN12@PmSetPower|
  0002e	f411 6f00	 tst         r1,#0x800
  00032	d004		 beq         |$LN13@PmSetPower|
  00034		 |$LN12@PmSetPower|
  00034	4833		 ldr         r0,|$LN29@PmSetPower| ; =|??_C@_1FI@MEMIAAOD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAD?$AA?$CF?$AAd?$AA?5?$AAr?$AAe@|
  00036	492e		 ldr         r1,|$LN24@PmSetPower| ; =|??_C@_1CM@IPJPBNOH@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?$AA@|
  00038	463a		 mov         r2,r7
  0003a	f000 f800	 bl          CeLogMsg
  0003e		 |$LN13@PmSetPower|

; 243  : 
; 244  :     PMENTERUPDATE();

  0003e	f000 f800	 bl          PmEnterUpdate

; 245  : 
; 246  :     // sanity check parameters
; 247  :     if(pvDevice == NULL 
; 248  :     || (reqDx < D0 || reqDx > D4)
; 249  :     || (pdi = DeviceIdParseNameString((LPCTSTR) pvDevice, dwDeviceFlags)) == NULL
; 250  :     || GetDeviceListFromClass(pdi->pGuid) == NULL) {

  00042	f1b9 0f00	 cmp         r9,#0
  00046	d032		 beq         |$LN8@PmSetPower|
  00048	2f04		 cmp         r7,#4
  0004a	d830		 bhi         |$LN8@PmSetPower|
  0004c	4651		 mov         r1,r10
  0004e	4648		 mov         r0,r9
  00050	f000 f800	 bl          DeviceIdParseNameString
  00054	4606		 mov         r6,r0
  00056	b356		 cbz         r6,|$LN8@PmSetPower|
  00058	6830		 ldr         r0,[r6]
  0005a	f000 f800	 bl          GetDeviceListFromClass
  0005e	b330		 cbz         r0,|$LN8@PmSetPower|

; 252  :     }
; 253  : 
; 254  :     // if parameters were ok then proceed
; 255  :     if(dwStatus == ERROR_SUCCESS) {
; 256  :         // mask off flags we don't need to keep
; 257  :         dwDeviceFlags &= POWER_FORCE;
; 258  : 
; 259  :         PMLOCK();

  00060	f000 f800	 bl          PmLock
  00064	f41a 5380	 ands        r3,r10,#0x1000

; 260  :         
; 261  :         // create a new restriction structure
; 262  :         PDEVICE_POWER_RESTRICTION pdpr = PowerRestrictionCreate(pdi, hOwner, reqDx, 
; 263  :             (LPCTSTR) pvSystemState, dwDeviceFlags);

  00068	9903		 ldr         r1,[sp,#0xC]
  0006a	9300		 str         r3,[sp]
  0006c	9b02		 ldr         r3,[sp,#8]
  0006e	463a		 mov         r2,r7
  00070	4630		 mov         r0,r6
  00072	f000 f800	 bl          PowerRestrictionCreate
  00076	4604		 mov         r4,r0

; 264  :         if(pdpr == NULL) {

  00078	b90c		 cbnz        r4,|$LN6@PmSetPower|

; 265  :             dwStatus = ERROR_NOT_ENOUGH_MEMORY;

  0007a	2508		 movs        r5,#8

; 266  :         } else {

  0007c	e003		 b           |$LN5@PmSetPower|
  0007e		 |$LN6@PmSetPower|

; 267  :             PowerRestrictionAddList(&gpFloorDx, pdpr);

  0007e	4820		 ldr         r0,|$LN28@PmSetPower| ; =|gpFloorDx|
  00080	4621		 mov         r1,r4
  00082	f000 f800	 bl          PowerRestrictionAddList
  00086		 |$LN5@PmSetPower|

; 268  :         }
; 269  :         hRequirement = (HANDLE) pdpr;
; 270  :         
; 271  :         // should we update the device's power state?
; 272  :         if(pdpr !=NULL && 
; 273  :                 (pdpr->pszSystemState == NULL || _tcscmp(pdpr->pszSystemState, gpSystemPowerState->pszName) == 0)) {

  00086	b14c		 cbz         r4,|$LN4@PmSetPower|
  00088	68e0		 ldr         r0,[r4,#0xC]
  0008a	b128		 cbz         r0,|$LN3@PmSetPower|
  0008c	4b1b		 ldr         r3,|$LN27@PmSetPower| ; =|gpSystemPowerState|
  0008e	681b		 ldr         r3,[r3]
  00090	6819		 ldr         r1,[r3]
  00092	f000 f800	 bl          wcscmp
  00096	b908		 cbnz        r0,|$LN4@PmSetPower|
  00098		 |$LN3@PmSetPower|

; 274  :             fUpdate = TRUE;

  00098	f04f 0801	 mov         r8,#1
  0009c		 |$LN4@PmSetPower|

; 275  :         }
; 276  :         
; 277  :         PMUNLOCK();

  0009c	f000 f800	 bl          PmUnlock

; 278  :         
; 279  :         // if the update flag is set, we should update the device power for
; 280  :         // all matching devices.  Whether this works or not doesn't affect the
; 281  :         // return code from this API, since the restriction has been successfully
; 282  :         // put into place.
; 283  :         if(fUpdate) {

  000a0	f1b8 0f00	 cmp         r8,#0
  000a4	d004		 beq         |$LN2@PmSetPower|

; 284  :             UpdateRequirementDevices(pdi);

  000a6	4630		 mov         r0,r6
  000a8	f000 f800	 bl          UpdateRequirementDevices
  000ac	e000		 b           |$LN2@PmSetPower|
  000ae		 |$LN8@PmSetPower|

; 251  :         dwStatus = ERROR_INVALID_PARAMETER;

  000ae	2557		 movs        r5,#0x57
  000b0		 |$LN2@PmSetPower|

; 285  :         }
; 286  :     }
; 287  : 
; 288  :     PMLEAVEUPDATE();

  000b0	f000 f800	 bl          PmLeaveUpdate

; 289  : 
; 290  :     // release resources
; 291  :     if(pdi != NULL) DeviceIdDestroy(pdi);

  000b4	b116		 cbz         r6,|$LN1@PmSetPower|
  000b6	4630		 mov         r0,r6
  000b8	f000 f800	 bl          DeviceIdDestroy
  000bc		 |$LN1@PmSetPower|

; 292  : 
; 293  :     // return handle and set global status
; 294  :     PMLOGMSG(ZONE_REQUIRE || ZONE_API || (dwStatus != ERROR_SUCCESS && ZONE_WARN),
; 295  :         (_T("%s: returning 0x%08x, status is %d\r\n"), pszFname,
; 296  :         hRequirement, dwStatus));

  000bc	4b0e		 ldr         r3,|$LN26@PmSetPower| ; =|dpCurSettings|
  000be	f8d3 3440	 ldr         r3,[r3,#0x440]
  000c2	f013 0f80	 tst         r3,#0x80
  000c6	d106		 bne         |$LN14@PmSetPower|
  000c8	f413 6f00	 tst         r3,#0x800
  000cc	d103		 bne         |$LN14@PmSetPower|
  000ce	b145		 cbz         r5,|$LN16@PmSetPower|
  000d0	f013 0f02	 tst         r3,#2
  000d4	d005		 beq         |$LN16@PmSetPower|
  000d6		 |$LN14@PmSetPower|
  000d6	4807		 ldr         r0,|$LN25@PmSetPower| ; =|??_C@_1EK@KBCPAFO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAi?$AAs?$AA?5@|
  000d8	4905		 ldr         r1,|$LN24@PmSetPower| ; =|??_C@_1CM@IPJPBNOH@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?$AA@|
  000da	462b		 mov         r3,r5
  000dc	4622		 mov         r2,r4
  000de	f000 f800	 bl          CeLogMsg
  000e2		 |$LN16@PmSetPower|

; 297  :     SetLastError(dwStatus);

  000e2	4628		 mov         r0,r5
  000e4	f000 f800	 bl          SetLastError

; 298  :     return hRequirement;
; 299  : }

  000e8	4620		 mov         r0,r4
  000ea		 |$M22|
  000ea	b005		 add         sp,sp,#0x14
  000ec	e8bd 8ff0	 pop         {r4-r11,pc}
  000f0		 |$LN23@PmSetPower|
  000f0		 |$LN24@PmSetPower|
  000f0	0000 0000	 DCD         |??_C@_1CM@IPJPBNOH@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?$AA@|
  000f4		 |$LN25@PmSetPower|
  000f4	0000 0000	 DCD         |??_C@_1EK@KBCPAFO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAi?$AAs?$AA?5@|
  000f8		 |$LN26@PmSetPower|
  000f8	0000 0000	 DCD         |dpCurSettings|
  000fc		 |$LN27@PmSetPower|
  000fc	0000 0000	 DCD         |gpSystemPowerState|
  00100		 |$LN28@PmSetPower|
  00100	0000 0000	 DCD         |gpFloorDx|
  00104		 |$LN29@PmSetPower|
  00104	0000 0000	 DCD         |??_C@_1FI@MEMIAAOD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAD?$AA?$CF?$AAd?$AA?5?$AAr?$AAe@|
  00108		 |$M20|

			 ENDP  ; |PmSetPowerRequirement|

	EXPORT	|??_C@_1EG@FHNKDJNL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAl?$AAe?$AAa?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@OMDGBEEH@?$AAP?$AAm?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|PmReleasePowerRequirement|
	IMPORT	|PowerRestrictionCheckList|
	IMPORT	|DeviceIdClone|
	IMPORT	|PowerRestrictionRemList|
	IMPORT	|PowerRestrictionDestroy|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PmReleasePowerRequirement| DCD imagerel |$LN15@PmReleaseP|
	DCD	0xfd34613d

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@OMDGBEEH@?$AAP?$AAm?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "R", 0x0, "e", 0x0, "l", 0x0, "e", 0x0, "a"
	DCB	0x0, "s", 0x0, "e", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "i"
	DCB	0x0, "r", 0x0, "e", 0x0, "m", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@FHNKDJNL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAl?$AAe?$AAa?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "l"
	DCB	0x0, "e", 0x0, "a", 0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "i"
	DCB	0x0, "r", 0x0, "e", 0x0, "m", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmrequire.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PmReleasePowerRequirement| PROC

; 170  : {

  00000		 |$LN15@PmReleaseP|
  00000	e92d 49f8	 push        {r3-r8,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M13|

; 171  :     DWORD dwStatus = ERROR_INVALID_HANDLE;
; 172  :     PDEVICE_POWER_RESTRICTION pdpr = (PDEVICE_POWER_RESTRICTION) h;
; 173  :     PDEVICEID pDeviceId = NULL;
; 174  :     SETFNAME(_T("PmReleasePowerRequirement"));
; 175  : 
; 176  :     UNREFERENCED_PARAMETER(dwFlags);
; 177  : 
; 178  :     PMLOGMSG(ZONE_REQUIRE || ZONE_API, (_T("%s: releasing requirement 0x%08x\r\n"), 
; 179  :         pszFname, h));

  00008	4f29		 ldr         r7,|$LN22@PmReleaseP| ; =|dpCurSettings|
  0000a	2406		 movs        r4,#6
  0000c	2600		 movs        r6,#0
  0000e	f8d7 3440	 ldr         r3,[r7,#0x440]
  00012	4605		 mov         r5,r0
  00014	f013 0f80	 tst         r3,#0x80
  00018	d102		 bne         |$LN7@PmReleaseP|
  0001a	f413 6f00	 tst         r3,#0x800
  0001e	d004		 beq         |$LN8@PmReleaseP|
  00020		 |$LN7@PmReleaseP|
  00020	4822		 ldr         r0,|$LN21@PmReleaseP| ; =|??_C@_1EG@FHNKDJNL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAl?$AAe?$AAa?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@|
  00022	491f		 ldr         r1,|$LN18@PmReleaseP| ; =|??_C@_1DE@OMDGBEEH@?$AAP?$AAm?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?$AA@|
  00024	462a		 mov         r2,r5
  00026	f000 f800	 bl          CeLogMsg
  0002a		 |$LN8@PmReleaseP|

; 180  : 
; 181  :     PMENTERUPDATE();

  0002a	f000 f800	 bl          PmEnterUpdate

; 182  :     PMLOCK();

  0002e	f000 f800	 bl          PmLock

; 183  : 
; 184  :     // look for the entry.  If it's valid make sure that it has the same owner.
; 185  :     BOOL fFound = PowerRestrictionCheckList(gpFloorDx, pdpr);

  00032	f8df 8074	 ldr         r8,|$LN20@PmReleaseP| ; =|gpFloorDx|
  00036	4629		 mov         r1,r5
  00038	f8d8 0000	 ldr         r0,[r8]
  0003c	f000 f800	 bl          PowerRestrictionCheckList

; 186  :     if(fFound) {

  00040	b180		 cbz         r0,|$LN2@PmReleaseP|

; 187  :         // don't allow the caller to delete somebody else's requirement
; 188  :         if(pdpr->hOwner == (HANDLE) GetCallerVMProcessId()) {

  00042	f000 f800	 bl          GetCallerVMProcessId
  00046	686b		 ldr         r3,[r5,#4]
  00048	4283		 cmp         r3,r0
  0004a	d10b		 bne         |$LN2@PmReleaseP|

; 189  :             // clone the device identifier associated with the requirement
; 190  :             // so that we can update affected devices after removing the
; 191  :             // restriction.
; 192  :             pDeviceId = DeviceIdClone(pdpr->pDeviceId);

  0004c	6828		 ldr         r0,[r5]
  0004e	f000 f800	 bl          DeviceIdClone
  00052	4606		 mov         r6,r0

; 193  : 
; 194  :             // delete the restriction
; 195  :             fFound = PowerRestrictionRemList(&gpFloorDx, pdpr);

  00054	4640		 mov         r0,r8
  00056	4629		 mov         r1,r5
  00058	f000 f800	 bl          PowerRestrictionRemList

; 196  :             DEBUGCHK(fFound);
; 197  :             if(fFound) {

  0005c	b110		 cbz         r0,|$LN2@PmReleaseP|

; 198  :                 PowerRestrictionDestroy(pdpr);

  0005e	4628		 mov         r0,r5
  00060	f000 f800	 bl          PowerRestrictionDestroy
  00064		 |$LN2@PmReleaseP|

; 199  :             }
; 200  :         }
; 201  :     }
; 202  : 
; 203  :     PMUNLOCK();

  00064	f000 f800	 bl          PmUnlock

; 204  : 
; 205  :     // update any affected devices
; 206  :     if(pDeviceId) {

  00068	b136		 cbz         r6,|$LN1@PmReleaseP|

; 207  :         UpdateRequirementDevices(pDeviceId);

  0006a	4630		 mov         r0,r6
  0006c	f000 f800	 bl          UpdateRequirementDevices

; 208  :         DeviceIdDestroy(pDeviceId);

  00070	4630		 mov         r0,r6
  00072	f000 f800	 bl          DeviceIdDestroy

; 209  :         dwStatus = ERROR_SUCCESS;

  00076	2400		 movs        r4,#0
  00078		 |$LN1@PmReleaseP|

; 210  :     }
; 211  : 
; 212  :     PMLEAVEUPDATE();

  00078	f000 f800	 bl          PmLeaveUpdate

; 213  : 
; 214  :     PMLOGMSG((dwStatus != ERROR_SUCCESS && ZONE_WARN) || ZONE_API, 
; 215  :         (_T("%s: returning %d\r\n"), pszFname, dwStatus));

  0007c	f8d7 3440	 ldr         r3,[r7,#0x440]
  00080	b114		 cbz         r4,|$LN9@PmReleaseP|
  00082	f013 0f02	 tst         r3,#2
  00086	d102		 bne         |$LN10@PmReleaseP|
  00088		 |$LN9@PmReleaseP|
  00088	f413 6f00	 tst         r3,#0x800
  0008c	d004		 beq         |$LN11@PmReleaseP|
  0008e		 |$LN10@PmReleaseP|
  0008e	4805		 ldr         r0,|$LN19@PmReleaseP| ; =|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00090	4903		 ldr         r1,|$LN18@PmReleaseP| ; =|??_C@_1DE@OMDGBEEH@?$AAP?$AAm?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?$AA@|
  00092	4622		 mov         r2,r4
  00094	f000 f800	 bl          CeLogMsg
  00098		 |$LN11@PmReleaseP|

; 216  :     return dwStatus;
; 217  : }

  00098	4620		 mov         r0,r4
  0009a		 |$M16|
  0009a	e8bd 89f8	 pop         {r3-r8,r11,pc}
  0009e		 |$LN23@PmReleaseP|
  0009e		 |$M24|
  0009e	defe		 __debugbreak
  000a0		 |$LN17@PmReleaseP|
  000a0		 |$LN18@PmReleaseP|
  000a0	0000 0000	 DCD         |??_C@_1DE@OMDGBEEH@?$AAP?$AAm?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?$AA@|
  000a4		 |$LN19@PmReleaseP|
  000a4	0000 0000	 DCD         |??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  000a8		 |$LN20@PmReleaseP|
  000a8	0000 0000	 DCD         |gpFloorDx|
  000ac		 |$LN21@PmReleaseP|
  000ac	0000 0000	 DCD         |??_C@_1EG@FHNKDJNL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAl?$AAe?$AAa?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx@|
  000b0		 |$LN22@PmReleaseP|
  000b0	0000 0000	 DCD         |dpCurSettings|
  000b4		 |$M14|

			 ENDP  ; |PmReleasePowerRequirement|

	EXPORT	|??_C@_1GK@KOLHFJIM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@CEKPIGEL@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|DeleteProcessRequirements|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$DeleteProcessRequirements| DCD imagerel |$LN24@DeleteProc|
	DCD	0x356111

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@CEKPIGEL@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "i", 0x0, "r"
	DCB	0x0, "e", 0x0, "m", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, "s"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@KOLHFJIM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "i", 0x0, "r"
	DCB	0x0, "e", 0x0, "m", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmrequire.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |DeleteProcessRequirements| PROC

; 111  : {

  00000		 |$LN24@DeleteProc|
  00000	e92d 4bf0	 push        {r4-r9,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M22|
  00008	4607		 mov         r7,r0

; 112  :     BOOL fDone = FALSE;

  0000a	2600		 movs        r6,#0

; 113  :     SETFNAME(_T("DeleteProcessRequirements"));
; 114  : 
; 115  :     PMENTERUPDATE();

  0000c	f000 f800	 bl          PmEnterUpdate
  00010	f8df 9080	 ldr         r9,|$LN30@DeleteProc| ; =|dpCurSettings|
  00014	f8df 8078	 ldr         r8,|$LN29@DeleteProc| ; =|gpFloorDx|
  00018		 |$LL9@DeleteProc|

; 118  :         PDEVICE_POWER_RESTRICTION pdpr;
; 119  :         
; 120  :         // a process is going away, clean up its resources if there are any
; 121  :         PMLOCK();

  00018	f000 f800	 bl          PmLock

; 122  :         for(pdpr = gpFloorDx; pdpr != NULL; pdpr = pdpr->pNext) {

  0001c	f8d8 4000	 ldr         r4,[r8]
  00020	e003		 b           |$LN20@DeleteProc|
  00022		 |$LL7@DeleteProc|

; 123  :             // does the terminating process own this requirement?
; 124  :             if(pdpr->hOwner == hProcess) {

  00022	6863		 ldr         r3,[r4,#4]
  00024	42bb		 cmp         r3,r7
  00026	d003		 beq         |$LN16@DeleteProc|

; 122  :         for(pdpr = gpFloorDx; pdpr != NULL; pdpr = pdpr->pNext) {

  00028	6964		 ldr         r4,[r4,#0x14]
  0002a		 |$LN20@DeleteProc|
  0002a	2c00		 cmp         r4,#0
  0002c	d1f9		 bne         |$LL7@DeleteProc|

; 123  :             // does the terminating process own this requirement?
; 124  :             if(pdpr->hOwner == hProcess) {

  0002e	e021		 b           |$LN2@DeleteProc|
  00030		 |$LN16@DeleteProc|

; 125  :                 // clone the device identifier associated with the requirement
; 126  :                 // so that we can update affected devices after removing the
; 127  :                 // restriction.
; 128  :                 PDEVICEID pDeviceId = DeviceIdClone(pdpr->pDeviceId);

  00030	6820		 ldr         r0,[r4]
  00032	f000 f800	 bl          DeviceIdClone

; 129  :                 
; 130  :                 // delete the requirement
; 131  :                 PMLOGMSG(ZONE_REQUIRE, 
; 132  :                     (_T("%s: deleting requirement 0x%08x for process 0x%08x\r\n"),
; 133  :                     pszFname, pdpr, hProcess));

  00036	f8d9 3440	 ldr         r3,[r9,#0x440]
  0003a	4605		 mov         r5,r0
  0003c	f013 0f80	 tst         r3,#0x80
  00040	d005		 beq         |$LN12@DeleteProc|
  00042	4912		 ldr         r1,|$LN28@DeleteProc| ; =|??_C@_1DE@CEKPIGEL@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?$AA@|
  00044	4810		 ldr         r0,|$LN27@DeleteProc| ; =|??_C@_1GK@KOLHFJIM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5@|
  00046	463b		 mov         r3,r7
  00048	4622		 mov         r2,r4
  0004a	f000 f800	 bl          CeLogMsg
  0004e		 |$LN12@DeleteProc|

; 134  :                 if(PowerRestrictionRemList(&gpFloorDx, pdpr)) {

  0004e	4621		 mov         r1,r4
  00050	4640		 mov         r0,r8
  00052	f000 f800	 bl          PowerRestrictionRemList
  00056	b110		 cbz         r0,|$LN3@DeleteProc|

; 135  :                     PowerRestrictionDestroy(pdpr);

  00058	4620		 mov         r0,r4
  0005a	f000 f800	 bl          PowerRestrictionDestroy
  0005e		 |$LN3@DeleteProc|

; 136  :                 }
; 137  :                 
; 138  :                 // update any affected devices
; 139  :                 if(pDeviceId != NULL) {

  0005e	b14d		 cbz         r5,|$LN2@DeleteProc|

; 140  :                     PMUNLOCK();

  00060	f000 f800	 bl          PmUnlock

; 141  :                     UpdateRequirementDevices(pDeviceId);

  00064	4628		 mov         r0,r5
  00066	f000 f800	 bl          UpdateRequirementDevices

; 142  :                     DeviceIdDestroy(pDeviceId);

  0006a	4628		 mov         r0,r5
  0006c	f000 f800	 bl          DeviceIdDestroy

; 143  :                     PMLOCK();

  00070	f000 f800	 bl          PmLock
  00074		 |$LN2@DeleteProc|

; 144  :                 }
; 145  :                 
; 146  :                 // start again at the start of the list, since we had
; 147  :                 // to unlock to handle the device.  We will eventually
; 148  :                 // run out of requirements imposed by this process.
; 149  :                 break;
; 150  :             }
; 151  :         }
; 152  :         PMUNLOCK();

  00074	f000 f800	 bl          PmUnlock

; 153  :         
; 154  :         // did we get to the end of the list?
; 155  :         if(pdpr == NULL) {

  00078	b904		 cbnz        r4,|$LN1@DeleteProc|

; 156  :             // yes, we're all done now
; 157  :             fDone = TRUE;

  0007a	2601		 movs        r6,#1
  0007c		 |$LN1@DeleteProc|

; 116  :     
; 117  :     while(!fDone) {

  0007c	2e00		 cmp         r6,#0
  0007e	d0cb		 beq         |$LL9@DeleteProc|

; 158  :         }
; 159  :     }
; 160  : 
; 161  :     PMLEAVEUPDATE();

  00080	f000 f800	 bl          PmLeaveUpdate
  00084		 |$M25|

; 162  : }

  00084	e8bd 8bf0	 pop         {r4-r9,r11,pc}
  00088		 |$LN26@DeleteProc|
  00088		 |$LN27@DeleteProc|
  00088	0000 0000	 DCD         |??_C@_1GK@KOLHFJIM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5@|
  0008c		 |$LN28@DeleteProc|
  0008c	0000 0000	 DCD         |??_C@_1DE@CEKPIGEL@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAR?$AAe?$AAq?$AAu?$AAi?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?$AA@|
  00090		 |$LN29@DeleteProc|
  00090	0000 0000	 DCD         |gpFloorDx|
  00094		 |$LN30@DeleteProc|
  00094	0000 0000	 DCD         |dpCurSettings|
  00098		 |$M23|

			 ENDP  ; |DeleteProcessRequirements|

	END
