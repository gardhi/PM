; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.114 

	TTL	C:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp
	THUMB

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	IMPORT	|__security_push_cookie|
	IMPORT	|__security_pop_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|StringCchLengthW|
	IMPORT	|CeLogData|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$CeLogMsg| DCD imagerel |$LN8@CeLogMsg|
	DCD	imagerel |$unwind2$CeLogMsg|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$CeLogMsg| DCD 0x44b00032
	DCD	0x1e889e8
	DCD	0x400a8fb
	DCD	0x8801e8ff
	DCD	0xff05ef00
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffe5
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\celog.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |CeLogMsg| PROC

; 1208 : {

  00000		 |$LN8@CeLogMsg|
  00000	b40f		 push        {r0-r3}
  00002	e92d 4800	 push        {r11,lr}
  00006	46eb		 mov         r11,sp
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d24	 subw        sp,sp,#0x224
  00010		 |$M6|
  00010	4602		 mov         r2,r0

; 1209 :     va_list arglist;
; 1210 :     WCHAR   szTemp[MAX_PATH];
; 1211 :     size_t  cchLen;
; 1212 :     HRESULT hr;
; 1213 : 
; 1214 :     // Compose a single string using the input args
; 1215 :     va_start(arglist, szFormat);
; 1216 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00012	a806		 add         r0,sp,#0x18
  00014	ab8d		 add         r3,sp,#0x234
  00016	f44f 7182	 mov         r1,#0x104
  0001a	928c		 str         r2,[sp,#0x230]
  0001c	f000 f800	 bl          StringCchVPrintfW

; 1217 :     if (SUCCEEDED(hr)) {

  00020	2800		 cmp         r0,#0
  00022	db17		 blt         |$LN1@CeLogMsg|

; 1218 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00024	aa04		 add         r2,sp,#0x10
  00026	a806		 add         r0,sp,#0x18
  00028	f44f 7182	 mov         r1,#0x104
  0002c	f000 f800	 bl          StringCchLengthW

; 1219 :         if (SUCCEEDED(hr)) {

  00030	2800		 cmp         r0,#0
  00032	db0f		 blt         |$LN1@CeLogMsg|

; 1220 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1221 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  00034	f04f 4380	 mov         r3,#0x40000000
  00038	9301		 str         r3,[sp,#4]
  0003a	9b04		 ldr         r3,[sp,#0x10]
  0003c	2200		 movs        r2,#0
  0003e	9203		 str         r2,[sp,#0xC]
  00040	3301		 adds        r3,#1
  00042	005b		 lsls        r3,r3,#1
  00044	9202		 str         r2,[sp,#8]
  00046	9200		 str         r2,[sp]
  00048	aa06		 add         r2,sp,#0x18
  0004a	214a		 movs        r1,#0x4A
  0004c	b29b		 uxth        r3,r3
  0004e	2001		 movs        r0,#1
  00050	f000 f800	 bl          CeLogData
  00054		 |$LN1@CeLogMsg|
  00054		 |$M9|

; 1222 :         }
; 1223 :     }
; 1224 : }

  00054	f20d 2d24	 addw        sp,sp,#0x224
  00058	f000 f800	 bl          __security_pop_cookie
  0005c	f85d bb04	 pop         {r11}
  00060	f85d fb14	 ldr         pc,[sp],#0x14
  00064		 |$M7|

			 ENDP  ; |CeLogMsg|

	EXPORT	|??0CLockObject@@QAA@XZ|		; CLockObject::CLockObject
	IMPORT	|InitializeCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0CLockObject@@QAA@XZ| DCD imagerel |$LN6@CLockObjec|
	DCD	0xfd306029
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\csync.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0CLockObject@@QAA@XZ| PROC		; CLockObject::CLockObject

; 36   :     CLockObject()

  00000		 |$LN6@CLockObjec|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0

; 37   :     {
; 38   :         InitializeCriticalSection( &m_CSection );

  0000a	f000 f800	 bl          InitializeCriticalSection

; 39   :     };

  0000e	4620		 mov         r0,r4
  00010		 |$M7|
  00010	e8bd 8818	 pop         {r3,r4,r11,pc}
  00014		 |$M5|

			 ENDP  ; |??0CLockObject@@QAA@XZ|, CLockObject::CLockObject

	EXPORT	|??1CLockObject@@QAA@XZ|		; CLockObject::~CLockObject
	IMPORT	|DeleteCriticalSection|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\csync.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1CLockObject@@QAA@XZ| PROC		; CLockObject::~CLockObject

; 41   :     {

  00000		 |$M4|

; 42   :         DeleteCriticalSection( &m_CSection );

  00000	f000 9000	 b           DeleteCriticalSection

			 ENDP  ; |??1CLockObject@@QAA@XZ|, CLockObject::~CLockObject

	EXPORT	|?Lock@CLockObject@@QAAXXZ|		; CLockObject::Lock
	IMPORT	|EnterCriticalSection|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\csync.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Lock@CLockObject@@QAAXXZ| PROC	; CLockObject::Lock

; 45   :     {

  00000		 |$M4|

; 46   :         EnterCriticalSection( &m_CSection );

  00000	f000 9000	 b           EnterCriticalSection

			 ENDP  ; |?Lock@CLockObject@@QAAXXZ|, CLockObject::Lock

	EXPORT	|?Unlock@CLockObject@@QAAXXZ|		; CLockObject::Unlock
	IMPORT	|LeaveCriticalSection|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\csync.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Unlock@CLockObject@@QAAXXZ| PROC	; CLockObject::Unlock

; 49   :     {

  00000		 |$M4|

; 50   :         LeaveCriticalSection( &m_CSection );

  00000	f000 9000	 b           LeaveCriticalSection

			 ENDP  ; |?Unlock@CLockObject@@QAAXXZ|, CLockObject::Unlock

	EXPORT	|?ForceTerminated@CMiniThread@@QAAHXZ|	; CMiniThread::ForceTerminated
	IMPORT	|TerminateThread|
	IMPORT	|CloseHandle|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?ForceTerminated@CMiniThread@@QAAHXZ| DCD imagerel |$LN7@ForceTermi|
	DCD	0xfd326061
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?ForceTerminated@CMiniThread@@QAAHXZ| PROC ; CMiniThread::ForceTerminated

; 113  :     {

  00000		 |$LN7@ForceTermi|
  00000	e92d 4878	 push        {r3-r6,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M5|
  00008	4605		 mov         r5,r0

; 114  :         if( m_hThreadHandle )

  0000a	68a8		 ldr         r0,[r5,#8]
  0000c	b160		 cbz         r0,|$LN1@ForceTermi|

; 115  :         {
; 116  : #pragma prefast(suppress: 6258, "Using TerminateThread does not allow proper thread clean up")
; 117  :             BOOL bReturn = ::TerminateThread( m_hThreadHandle, ( DWORD ) - 1 ); // terminate abnormal

  0000e	f06f 0600	 mvn         r6,#0
  00012	4631		 mov         r1,r6
  00014	f000 f800	 bl          TerminateThread
  00018	4604		 mov         r4,r0

; 118  :             m_dwExitCode = (DWORD)-1;
; 119  :             ::CloseHandle( m_hThreadHandle );

  0001a	68a8		 ldr         r0,[r5,#8]
  0001c	616e		 str         r6,[r5,#0x14]
  0001e	f000 f800	 bl          CloseHandle

; 120  :             m_hThreadHandle = NULL;

  00022	2300		 movs        r3,#0
  00024	60ab		 str         r3,[r5,#8]

; 121  :             return bReturn;

  00026	e000		 b           |$LN2@ForceTermi|
  00028		 |$LN1@ForceTermi|

; 122  :         };
; 123  :         return TRUE;

  00028	2401		 movs        r4,#1
  0002a		 |$LN2@ForceTermi|

; 124  :     }

  0002a	4620		 mov         r0,r4
  0002c		 |$M8|
  0002c	e8bd 8878	 pop         {r3-r6,r11,pc}
  00030		 |$M6|

			 ENDP  ; |?ForceTerminated@CMiniThread@@QAAHXZ|, CMiniThread::ForceTerminated

	EXPORT	|?ThreadProc@CMiniThread@@CAKPAX@Z|	; CMiniThread::ThreadProc
	IMPORT	|ExitThread|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?ThreadProc@CMiniThread@@CAKPAX@Z| DCD imagerel |$LN6@ThreadProc|
	DCD	0xfd306039
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?ThreadProc@CMiniThread@@CAKPAX@Z| PROC ; CMiniThread::ThreadProc

; 154  :     {

  00000		 |$LN6@ThreadProc|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0

; 155  :         CMiniThread* pThreadPtr = ( CMiniThread* ) dParam;
; 156  :         pThreadPtr->m_dwExitCode = pThreadPtr->ThreadRun();

  0000a	6823		 ldr         r3,[r4]
  0000c	685b		 ldr         r3,[r3,#4]
  0000e	4798		 blx         r3
  00010	6160		 str         r0,[r4,#0x14]

; 157  :         ::ExitThread( pThreadPtr->m_dwExitCode );

  00012	f000 f800	 bl          ExitThread

; 158  :         return pThreadPtr->m_dwExitCode;

  00016	6960		 ldr         r0,[r4,#0x14]
  00018		 |$M7|

; 159  :     };

  00018	e8bd 8818	 pop         {r3,r4,r11,pc}
  0001c		 |$M5|

			 ENDP  ; |?ThreadProc@CMiniThread@@CAKPAX@Z|, CMiniThread::ThreadProc

	EXPORT	|?Init@RegKeyOrValue@@UAAHXZ|		; RegKeyOrValue::Init
	EXPORT	|??_7RegKeyOrValue@@6B@| [ DATA ]	; RegKeyOrValue::`vftable'
	EXPORT	|??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| ; RegKeyOrValue::RegKeyOrValue
	IMPORT	|wcslen|
	IMPORT	|??_ERegKeyOrValue@@UAAPAXI@Z|, WEAK |??_GRegKeyOrValue@@UAAPAXI@Z| ; RegKeyOrValue::`vector deleting destructor', RegKeyOrValue::`scalar deleting destructor'
	IMPORT	|??2@YAPAXI@Z|				; operator new
	IMPORT	|StringCchCopyW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| DCD imagerel |$LN11@RegKeyOrVa|
	DCD	0xfd3260ad

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7RegKeyOrValue@@6B@| DCD |?Init@RegKeyOrValue@@UAAHXZ| ; RegKeyOrValue::`vftable'
	DCD	|??_ERegKeyOrValue@@UAAPAXI@Z|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| PROC ; RegKeyOrValue::RegKeyOrValue

; 29   :     RegKeyOrValue(HKEY hKey,LPCTSTR lpRegName,RegKeyOrValue *pNextRegKeyOrValue) : m_hParentKey (hKey),m_pNextRegKeyOrValue(pNextRegKeyOrValue) {

  00000		 |$LN11@RegKeyOrVa|
  00000	e92d 4878	 push        {r3-r6,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M9|
  00008	4c13		 ldr         r4,|$LN14@RegKeyOrVa| ; =|??_7RegKeyOrValue@@6B@|
  0000a	4605		 mov         r5,r0
  0000c	60eb		 str         r3,[r5,#0xC]

; 30   :         m_lpRegName = NULL;

  0000e	2300		 movs        r3,#0
  00010	4616		 mov         r6,r2
  00012	606b		 str         r3,[r5,#4]
  00014	602c		 str         r4,[r5]
  00016	60a9		 str         r1,[r5,#8]

; 31   :         if (lpRegName) {

  00018	b1ce		 cbz         r6,|$LN3@RegKeyOrVa|

; 32   :             m_lpRegName = new TCHAR [ _tcslen(lpRegName) +1 ];

  0001a	4610		 mov         r0,r2
  0001c	f000 f800	 bl          wcslen
  00020	1c41		 adds        r1,r0,#1
  00022	f06f 4300	 mvn         r3,#0x80000000
  00026	4299		 cmp         r1,r3
  00028	d801		 bhi         |$LN6@RegKeyOrVa|
  0002a	0048		 lsls        r0,r1,#1
  0002c	e001		 b           |$LN7@RegKeyOrVa|
  0002e		 |$LN6@RegKeyOrVa|
  0002e	f06f 0000	 mvn         r0,#0
  00032		 |$LN7@RegKeyOrVa|
  00032	f000 f800	 bl          |??2@YAPAXI@Z|
  00036	4604		 mov         r4,r0
  00038	606c		 str         r4,[r5,#4]

; 33   :             if (m_lpRegName)

  0003a	b14c		 cbz         r4,|$LN1@RegKeyOrVa|

; 34   :                 VERIFY(SUCCEEDED(StringCchCopy(m_lpRegName,_tcslen(lpRegName) +1,lpRegName)));

  0003c	4630		 mov         r0,r6
  0003e	f000 f800	 bl          wcslen
  00042	1c41		 adds        r1,r0,#1
  00044	4620		 mov         r0,r4
  00046	4632		 mov         r2,r6
  00048	f000 f800	 bl          StringCchCopyW

; 35   :         }
; 36   :         else 

  0004c	e000		 b           |$LN1@RegKeyOrVa|
  0004e		 |$LN3@RegKeyOrVa|

; 37   :             m_lpRegName = NULL;

  0004e	606b		 str         r3,[r5,#4]
  00050		 |$LN1@RegKeyOrVa|

; 38   :         
; 39   :     };

  00050	4628		 mov         r0,r5
  00052		 |$M12|
  00052	e8bd 8878	 pop         {r3-r6,r11,pc}
  00056		 |$LN15@RegKeyOrVa|
  00056		 |$M16|
  00056	defe		 __debugbreak
  00058		 |$LN13@RegKeyOrVa|
  00058		 |$LN14@RegKeyOrVa|
  00058	0000 0000	 DCD         |??_7RegKeyOrValue@@6B@|
  0005c		 |$M10|

			 ENDP  ; |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|, RegKeyOrValue::RegKeyOrValue

	EXPORT	|??1RegKeyOrValue@@UAA@XZ|		; RegKeyOrValue::~RegKeyOrValue
	IMPORT	|??3@YAXPAX@Z|				; operator delete
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1RegKeyOrValue@@UAA@XZ| PROC	; RegKeyOrValue::~RegKeyOrValue

; 41   :     virtual ~RegKeyOrValue() {

  00000	4b03		 ldr         r3,|$LN8@RegKeyOrVa| ; =|??_7RegKeyOrValue@@6B@|
  00002	6003		 str         r3,[r0]

; 42   :         if (m_lpRegName!=NULL)

  00004	6840		 ldr         r0,[r0,#4]
  00006	b108		 cbz         r0,|$LN1@RegKeyOrVa|
  00008		 |$M5|

; 43   :             delete m_lpRegName;

  00008	f000 9000	 b           |??3@YAXPAX@Z|
  0000c		 |$LN1@RegKeyOrVa|
  0000c		 |$M6|

; 44   :     }

  0000c	4770		 bx          lr
  0000e		 |$LN9@RegKeyOrVa|
  0000e		 |$M10|
  0000e	defe		 __debugbreak
  00010		 |$LN7@RegKeyOrVa|
  00010		 |$LN8@RegKeyOrVa|
  00010	0000 0000	 DCD         |??_7RegKeyOrValue@@6B@|

			 ENDP  ; |??1RegKeyOrValue@@UAA@XZ|, RegKeyOrValue::~RegKeyOrValue

	EXPORT	|?GetName@RegKeyOrValue@@QAAPAGXZ|	; RegKeyOrValue::GetName
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetName@RegKeyOrValue@@QAAPAGXZ| PROC ; RegKeyOrValue::GetName

; 45   :     LPTSTR  GetName() { return m_lpRegName; };

  00000	6840		 ldr         r0,[r0,#4]
  00002		 |$M4|
  00002	4770		 bx          lr

			 ENDP  ; |?GetName@RegKeyOrValue@@QAAPAGXZ|, RegKeyOrValue::GetName

	EXPORT	|?GetNextRegKeyOrValuePtr@RegKeyOrValue@@QAAPAV1@XZ| ; RegKeyOrValue::GetNextRegKeyOrValuePtr
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetNextRegKeyOrValuePtr@RegKeyOrValue@@QAAPAV1@XZ| PROC ; RegKeyOrValue::GetNextRegKeyOrValuePtr

; 51   :     RegKeyOrValue * GetNextRegKeyOrValuePtr() { return m_pNextRegKeyOrValue; };

  00000	68c0		 ldr         r0,[r0,#0xC]
  00002		 |$M4|
  00002	4770		 bx          lr

			 ENDP  ; |?GetNextRegKeyOrValuePtr@RegKeyOrValue@@QAAPAV1@XZ|, RegKeyOrValue::GetNextRegKeyOrValuePtr

	EXPORT	|?UpdateRegValue@RegValue@@MAAHXZ|	; RegValue::UpdateRegValue
	IMPORT	|RegQueryValueExW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?UpdateRegValue@RegValue@@MAAHXZ| DCD imagerel |$LN13@UpdateRegV|
	DCD	0xfdb060bd
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?UpdateRegValue@RegValue@@MAAHXZ| PROC ; RegValue::UpdateRegValue

; 83   :     virtual BOOL UpdateRegValue()  {

  00000		 |$LN13@UpdateRegV|
  00000	e92d 481e	 push        {r1-r4,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M11|
  00008	4604		 mov         r4,r0

; 84   :         if (m_lpRegName) {

  0000a	6861		 ldr         r1,[r4,#4]
  0000c	b321		 cbz         r1,|$LN1@UpdateRegV|

; 85   :             if (m_lpByteValue == NULL) {

  0000e	69a2		 ldr         r2,[r4,#0x18]
  00010	b99a		 cbnz        r2,|$LN9@UpdateRegV|

; 86   :                 m_dwValueSize = 0;
; 87   :                 LONG status =  RegQueryValueEx(m_hParentKey,m_lpRegName,NULL, &m_dwValueType,NULL,&m_dwValueSize);

  00012	f110 0314	 adds        r3,r0,#0x14
  00016	9301		 str         r3,[sp,#4]
  00018	f110 0310	 adds        r3,r0,#0x10
  0001c	68a0		 ldr         r0,[r4,#8]
  0001e	2200		 movs        r2,#0
  00020	6162		 str         r2,[r4,#0x14]
  00022	9200		 str         r2,[sp]
  00024	f000 f800	 bl          RegQueryValueExW

; 88   :                 if ( status == ERROR_SUCCESS || status == ERROR_MORE_DATA )

  00028	b108		 cbz         r0,|$LN3@UpdateRegV|
  0002a	28ea		 cmp         r0,#0xEA
  0002c	d103		 bne         |$LN4@UpdateRegV|
  0002e		 |$LN3@UpdateRegV|

; 89   :                     m_lpByteValue = new BYTE [ m_dwValueSize ];

  0002e	6960		 ldr         r0,[r4,#0x14]
  00030	f000 f800	 bl          |??2@YAPAXI@Z|
  00034	61a0		 str         r0,[r4,#0x18]
  00036		 |$LN4@UpdateRegV|

; 90   :             }
; 91   :             if (m_lpByteValue != NULL) {

  00036	69a2		 ldr         r2,[r4,#0x18]
  00038	b172		 cbz         r2,|$LN1@UpdateRegV|
  0003a		 |$LN9@UpdateRegV|

; 92   :                 DWORD dwLen = m_dwValueSize;

  0003a	6963		 ldr         r3,[r4,#0x14]

; 93   :                 if (RegQueryValueEx(m_hParentKey,m_lpRegName,NULL, &m_dwValueType,m_lpByteValue,&dwLen) == ERROR_SUCCESS) {

  0003c	6861		 ldr         r1,[r4,#4]
  0003e	68a0		 ldr         r0,[r4,#8]
  00040	9302		 str         r3,[sp,#8]
  00042	ab02		 add         r3,sp,#8
  00044	9301		 str         r3,[sp,#4]
  00046	9200		 str         r2,[sp]
  00048	f114 0310	 adds        r3,r4,#0x10
  0004c	2200		 movs        r2,#0
  0004e	f000 f800	 bl          RegQueryValueExW
  00052	b908		 cbnz        r0,|$LN1@UpdateRegV|

; 94   :                     return TRUE;

  00054	2001		 movs        r0,#1
  00056	e000		 b           |$LN7@UpdateRegV|
  00058		 |$LN1@UpdateRegV|

; 95   :                 }
; 96   :                 
; 97   :             }
; 98   :         }
; 99   :         return FALSE;

  00058	2000		 movs        r0,#0
  0005a		 |$LN7@UpdateRegV|
  0005a		 |$M14|

; 100  :     };

  0005a	e8bd 881e	 pop         {r1-r4,r11,pc}
  0005e		 |$M12|

			 ENDP  ; |?UpdateRegValue@RegValue@@MAAHXZ|, RegValue::UpdateRegValue

	EXPORT	|??_C@_1CM@JCHLMMCG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@IIPOICC@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@NNNGJJJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|PmSetSystemPowerState|
	IMPORT	|__GSHandlerCheck_SEH|
	IMPORT	|dpCurSettings|
	IMPORT	|towlower|
	IMPORT	|__report_rangecheckfailure|
	IMPORT	|PlatformSendSystemPowerState|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PmSetSystemPowerState| DCD imagerel |$LN40@PmSetSyste|
	DCD	imagerel |$unwind2$PmSetSystemPowerState|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$PmSetSystemPowerState| DCD 0x44b0008f
	DCD	0xe888e8c7
	DCD	0x4dffc01
	DCD	0xdb01e8ff
	DCD	0xff05ef
	DCD	imagerel |__GSHandlerCheck_SEH|
	DCD	0x1
	DCD	imagerel |$LN27@PmSetSyste|
	DCD	imagerel |$LN28@PmSetSyste|
	DCD	0x1
	DCD	imagerel |$LN24@PmSetSyste|
	DCD	0xffffffc9

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "d", 0x0, "w", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "p", 0x0, "y", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "n", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@NNNGJJJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "p", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "n", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c", 0x0, "e"
	DCB	0x0, "e", 0x0, "d", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "a"
	DCB	0x0, "c", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@IIPOICC@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "n", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ","
	DCB	0x0, " ", 0x0, "h", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@| DCB "<", 0x0
	DCB	"N", 0x0, "U", 0x0, "L", 0x0, "L", 0x0, ">", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@JCHLMMCG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PmSetSystemPowerState| PROC

; 402  : {

  00000		 |$LN40@PmSetSyste|
  00000	b40f		 push        {r0-r3}
  00002	e92d 4ff0	 push        {r4-r11,lr}
  00006	f20d 0b1c	 addw        r11,sp,#0x1C
  0000a	f000 f800	 bl          __security_push_cookie
  0000e	f2ad 2d20	 subw        sp,sp,#0x220
  00012	466f		 mov         r7,sp
  00014	b082		 sub         sp,sp,#8
  00016		 |$LN38@PmSetSyste|
  00016	4692		 mov         r10,r2
  00018	60fa		 str         r2,[r7,#0xC]
  0001a	f8c7 2250	 str         r2,[r7,#0x250]
  0001e	6079		 str         r1,[r7,#4]
  00020	f8c7 124c	 str         r1,[r7,#0x24C]
  00024	4680		 mov         r8,r0

; 403  :     TCHAR szState[MAX_PATH];
; 404  :     LPCTSTR pszStateName = NULL;

  00026	2600		 movs        r6,#0
  00028	60be		 str         r6,[r7,#8]

; 405  :     DWORD dwStatus = ERROR_SUCCESS;

  0002a	2400		 movs        r4,#0

; 406  :     SETFNAME(_T("PmSetSystemPowerState"));

  0002c	4d42		 ldr         r5,|$LN50@PmSetSyste| ; =|??_C@_1CM@JCHLMMCG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  0002e	603d		 str         r5,[r7]

; 407  : 
; 408  :     PMLOGMSG(ZONE_API, (_T("+%s: name %s, hint 0x%08x, options 0x%08x\r\n"),
; 409  :         pszFname, pwsState != NULL ? pwsState : _T("<NULL>"), dwStateHint, dwOptions));

  00030	f8df 90f4	 ldr         r9,|$LN46@PmSetSyste| ; =|dpCurSettings|
  00034	f8d9 3440	 ldr         r3,[r9,#0x440]
  00038	f413 6f00	 tst         r3,#0x800
  0003c	d00a		 beq         |$LN12@PmSetSyste|
  0003e	b108		 cbz         r0,|$LN10@PmSetSyste|
  00040	4602		 mov         r2,r0
  00042	e000		 b           |$LN11@PmSetSyste|
  00044		 |$LN10@PmSetSyste|
  00044	4a3b		 ldr         r2,|$LN49@PmSetSyste| ; =|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@|
  00046		 |$LN11@PmSetSyste|
  00046	f8cd a000	 str         r10,[sp]
  0004a	4839		 ldr         r0,|$LN48@PmSetSyste| ; =|??_C@_1FI@IIPOICC@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@|
  0004c	460b		 mov         r3,r1
  0004e	4629		 mov         r1,r5
  00050	f000 f800	 bl          CeLogMsg
  00054		 |$LN12@PmSetSyste|

; 410  : 
; 411  :     // if the user passes a null state name, use the hints flag to try
; 412  :     // to find a match.
; 413  :     if(pwsState != NULL) {

  00054	f1b8 0f00	 cmp         r8,#0
  00058	d047		 beq         |$LN37@PmSetSyste|
  0005a		 |$LN27@PmSetSyste|

; 414  :         // copy the parameter but watch out for bad pointers
; 415  :         __try {
; 416  :             DWORD dwIndex;
; 417  :             for(dwIndex = 0; pwsState[dwIndex] != 0 && dwIndex < (_countof(szState) - 1); dwIndex++) {

  0005a	2100		 movs        r1,#0
  0005c	460e		 mov         r6,r1
  0005e	f240 1a03	 mov         r10,#0x103
  00062		 |$LL5@PmSetSyste|
  00062	f838 0016	 ldrh        r0,[r8,r6,lsl #1]
  00066	b148		 cbz         r0,|$LN3@PmSetSyste|
  00068	4556		 cmp         r6,r10
  0006a	d207		 bcs         |$LN3@PmSetSyste|

; 418  :                 szState[dwIndex] = _totlower(pwsState[dwIndex]);

  0006c	f000 f800	 bl          towlower
  00070	f117 0318	 adds        r3,r7,#0x18
  00074	f823 0016	 strh        r0,[r3,r6,lsl #1]

; 414  :         // copy the parameter but watch out for bad pointers
; 415  :         __try {
; 416  :             DWORD dwIndex;
; 417  :             for(dwIndex = 0; pwsState[dwIndex] != 0 && dwIndex < (_countof(szState) - 1); dwIndex++) {

  00078	3601		 adds        r6,#1
  0007a	e7f2		 b           |$LL5@PmSetSyste|
  0007c		 |$LN3@PmSetSyste|

; 419  :             }
; 420  :             szState[dwIndex] = 0;

  0007c	0073		 lsls        r3,r6,#1
  0007e	f5b3 7f02	 cmp         r3,#0x208
  00082	d305		 bcc         |$LN32@PmSetSyste|
  00084	f000 f800	 bl          __report_rangecheckfailure
  00088	2600		 movs        r6,#0
  0008a	f8d7 a00c	 ldr         r10,[r7,#0xC]
  0008e	6879		 ldr         r1,[r7,#4]
  00090		 |$LN32@PmSetSyste|
  00090	f117 0218	 adds        r2,r7,#0x18
  00094	2100		 movs        r1,#0
  00096	5299		 strh        r1,[r3,r2]

; 421  :             pszStateName = szState;

  00098	f117 0618	 adds        r6,r7,#0x18
  0009c	60be		 str         r6,[r7,#8]

; 422  : 
; 423  :             // don't pass on truncated system power state names
; 424  :             if(pwsState[dwIndex] != 0) {

  0009e	b160		 cbz         r0,|$LN28@PmSetSyste|

; 407  : 
; 408  :     PMLOGMSG(ZONE_API, (_T("+%s: name %s, hint 0x%08x, options 0x%08x\r\n"),
; 409  :         pszFname, pwsState != NULL ? pwsState : _T("<NULL>"), dwStateHint, dwOptions));

  000a0	f8d9 2440	 ldr         r2,[r9,#0x440]

; 425  :                 PMLOGMSG(ZONE_WARN, 
; 426  :                     (_T("%s: system power state name '%s' exceeds %d characters\r\n"), 
; 427  :                     pszFname, pwsState, _countof(szState) - 1));

  000a4	f012 0f02	 tst         r2,#2
  000a8	d005		 beq         |$LN16@PmSetSyste|
  000aa	4820		 ldr         r0,|$LN47@PmSetSyste| ; =|??_C@_1HC@NNNGJJJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8@|
  000ac	4653		 mov         r3,r10
  000ae	4642		 mov         r2,r8
  000b0	4629		 mov         r1,r5
  000b2	f000 f800	 bl          CeLogMsg
  000b6		 |$LN16@PmSetSyste|

; 428  :                 dwStatus = ERROR_INVALID_PARAMETER;

  000b6	2457		 movs        r4,#0x57
  000b8	613c		 str         r4,[r7,#0x10]
  000ba		 |$LN28@PmSetSyste|

; 429  :             }
; 430  :         }

  000ba	f8d7 a00c	 ldr         r10,[r7,#0xC]
  000be	6879		 ldr         r1,[r7,#4]
  000c0	e014		 b           |$LN29@PmSetSyste|
  000c2		 |$LN24@PmSetSyste|

; 431  :         __except(EXCEPTION_EXECUTE_HANDLER) {
; 432  :             PMLOGMSG(ZONE_WARN, (_T("%s: exception copying state name\r\n"), 
; 433  :                 pszFname));

  000c2	f8df 9064	 ldr         r9,|$LN46@PmSetSyste| ; =|dpCurSettings|

; 407  : 
; 408  :     PMLOGMSG(ZONE_API, (_T("+%s: name %s, hint 0x%08x, options 0x%08x\r\n"),
; 409  :         pszFname, pwsState != NULL ? pwsState : _T("<NULL>"), dwStateHint, dwOptions));

  000c6	f8d9 3440	 ldr         r3,[r9,#0x440]

; 431  :         __except(EXCEPTION_EXECUTE_HANDLER) {
; 432  :             PMLOGMSG(ZONE_WARN, (_T("%s: exception copying state name\r\n"), 
; 433  :                 pszFname));

  000ca	f013 0f02	 tst         r3,#2
  000ce	683d		 ldr         r5,[r7]
  000d0	d003		 beq         |$LN18@PmSetSyste|
  000d2	4814		 ldr         r0,|$LN45@PmSetSyste| ; =|??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  000d4	4629		 mov         r1,r5
  000d6	f000 f800	 bl          CeLogMsg
  000da		 |$LN18@PmSetSyste|

; 434  :             dwStatus = ERROR_INVALID_PARAMETER;

  000da	2457		 movs        r4,#0x57
  000dc	613c		 str         r4,[r7,#0x10]
  000de	f8d7 a250	 ldr         r10,[r7,#0x250]
  000e2	f8d7 124c	 ldr         r1,[r7,#0x24C]
  000e6	68be		 ldr         r6,[r7,#8]
  000e8	e000		 b           |$LN29@PmSetSyste|
  000ea		 |$LN37@PmSetSyste|
  000ea	6879		 ldr         r1,[r7,#4]
  000ec		 |$LN29@PmSetSyste|

; 435  :         }
; 436  :     }
; 437  : 
; 438  :     // carry out the power state change
; 439  :     if(dwStatus == ERROR_SUCCESS) {

  000ec	b924		 cbnz        r4,|$LN1@PmSetSyste|

; 440  :         dwStatus = PlatformSendSystemPowerState(pszStateName, dwStateHint, dwOptions) ;

  000ee	4652		 mov         r2,r10
  000f0	4630		 mov         r0,r6
  000f2	f000 f800	 bl          PlatformSendSystemPowerState
  000f6	4604		 mov         r4,r0
  000f8		 |$LN1@PmSetSyste|

; 407  : 
; 408  :     PMLOGMSG(ZONE_API, (_T("+%s: name %s, hint 0x%08x, options 0x%08x\r\n"),
; 409  :         pszFname, pwsState != NULL ? pwsState : _T("<NULL>"), dwStateHint, dwOptions));

  000f8	f8d9 3440	 ldr         r3,[r9,#0x440]

; 441  :     }
; 442  : 
; 443  :     PMLOGMSG(ZONE_API, (_T("-%s: returning dwStatus %d\r\n"), pszFname, dwStatus));

  000fc	f413 6f00	 tst         r3,#0x800
  00100	d004		 beq         |$LN20@PmSetSyste|
  00102	4807		 ldr         r0,|$LN44@PmSetSyste| ; =|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00104	4622		 mov         r2,r4
  00106	4629		 mov         r1,r5
  00108	f000 f800	 bl          CeLogMsg
  0010c		 |$LN20@PmSetSyste|

; 444  : 
; 445  :     return dwStatus;
; 446  : }

  0010c	4620		 mov         r0,r4
  0010e		 |$M42|
  0010e	f20d 2d28	 addw        sp,sp,#0x228
  00112	f000 f800	 bl          __security_pop_cookie
  00116	e8bd 0ff0	 pop         {r4-r11}
  0011a	f85d fb14	 ldr         pc,[sp],#0x14
  0011e		 |$LN51@PmSetSyste|
  0011e		 |$M52|
  0011e	defe		 __debugbreak
  00120		 |$LN43@PmSetSyste|
  00120		 |$LN44@PmSetSyste|
  00120	0000 0000	 DCD         |??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00124		 |$LN45@PmSetSyste|
  00124	0000 0000	 DCD         |??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  00128		 |$LN46@PmSetSyste|
  00128	0000 0000	 DCD         |dpCurSettings|
  0012c		 |$LN47@PmSetSyste|
  0012c	0000 0000	 DCD         |??_C@_1HC@NNNGJJJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8@|
  00130		 |$LN48@PmSetSyste|
  00130	0000 0000	 DCD         |??_C@_1FI@IIPOICC@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@|
  00134		 |$LN49@PmSetSyste|
  00134	0000 0000	 DCD         |??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@|
  00138		 |$LN50@PmSetSyste|
  00138	0000 0000	 DCD         |??_C@_1CM@JCHLMMCG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|

			 ENDP  ; |PmSetSystemPowerState|

  0013c		 |$LN39@PmSetSyste|
	EXPORT	|??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@NEOCGAAG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA_?$AAI?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BAI@KDILGCOF@?$AAP?$AAM?$AA?5?$AA?$CI?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAa?$AAn?$AAg?$AAe?$AAr?$AA?$CJ?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAC?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1OK@EJKFAIPC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAC?$AAo?$AAd?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAP@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|PmSetSystemPowerState_I|
	IMPORT	|PmEnterUpdate|
	IMPORT	|InterlockedIncrement|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|PlatformMapPowerStateHint|
	IMPORT	|_wcsicmp|
	IMPORT	|PMSQM_Set|
	IMPORT	|?PMExt_PMBeforeNewSystemState@@YAXPBGK@Z| ; PMExt_PMBeforeNewSystemState
	IMPORT	|PlatformSetSystemPowerState|
	IMPORT	|?PMExt_PMAfterNewSystemState@@YAXPBGK@Z| ; PMExt_PMAfterNewSystemState
	IMPORT	|InterlockedDecrement|
	IMPORT	|PmLeaveUpdate|

  00000			 AREA	 |.bss|, NOINIT
|?cEnteredSettingPowerState@?1??PmSetSystemPowerState_I@@9@4JA| % 0x4 ; `PmSetSystemPowerState_I'::`2'::cEnteredSettingPowerState

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PmSetSystemPowerState_I| DCD imagerel |$LN39@PmSetSyste|
	DCD	imagerel |$unwind2$PmSetSystemPowerState_I|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$PmSetSystemPowerState_I| DCD 0x44b000ac
	DCD	0xe884e8c7
	DCD	0x4dffc01
	DCD	0xdb01e8ff
	DCD	0xff05ef
	DCD	imagerel |__GSHandlerCheck_SEH|
	DCD	0x1
	DCD	imagerel |$LN29@PmSetSyste|
	DCD	imagerel |$LN30@PmSetSyste|
	DCD	0x1
	DCD	imagerel |$LN26@PmSetSyste|
	DCD	0xffffffc9

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| DCB "s", 0x0
	DCB	"u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1OK@EJKFAIPC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAC?$AAo?$AAd?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAP@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r"
	DCB	0x0, "o", 0x0, "r", 0x0, "!", 0x0, "!", 0x0, "!", 0x0, "!"
	DCB	0x0, "!", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "d", 0x0, "e"
	DCB	0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "c", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "P", 0x0, "M", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "c", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "g", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "s"
	DCB	0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, " "
	DCB	0x0, "p", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "w", 0x0, "h", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "h", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "a", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "p", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "!", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BAI@KDILGCOF@?$AAP?$AAM?$AA?5?$AA?$CI?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAa?$AAn?$AAg?$AAe?$AAr?$AA?$CJ?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAC?$AAo@| DCB "P"
	DCB	0x0, "M", 0x0, " ", 0x0, "(", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "M", 0x0, "a", 0x0, "n"
	DCB	0x0, "g", 0x0, "e", 0x0, "r", 0x0, ")", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "!"
	DCB	0x0, "!", 0x0, "!", 0x0, "!", 0x0, "!", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "d", 0x0, "e", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "P", 0x0, "M", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, " ", 0x0, "s", 0x0, "y", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "m", 0x0, " ", 0x0, "p", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "w", 0x0, "h", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "l", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "a", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "p", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@NEOCGAAG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA_?$AAI?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "_", 0x0, "I", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "n", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ","
	DCB	0x0, " ", 0x0, "h", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "n", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PmSetSystemPowerState_I| PROC

; 324  : {

  00000		 |$LN39@PmSetSyste|
  00000	b40f		 push        {r0-r3}
  00002	e92d 4ff0	 push        {r4-r11,lr}
  00006	f20d 0b1c	 addw        r11,sp,#0x1C
  0000a	f000 f800	 bl          __security_push_cookie
  0000e	f2ad 2d10	 subw        sp,sp,#0x210
  00012	466f		 mov         r7,sp
  00014	b082		 sub         sp,sp,#8
  00016		 |$LN37@PmSetSyste|
  00016	469e		 mov         lr,r3
  00018	603b		 str         r3,[r7]
  0001a	f8c7 3244	 str         r3,[r7,#0x244]
  0001e	4613		 mov         r3,r2
  00020	607b		 str         r3,[r7,#4]
  00022	f8c7 3240	 str         r3,[r7,#0x240]
  00026	4689		 mov         r9,r1
  00028	f8c7 123c	 str         r1,[r7,#0x23C]
  0002c	4606		 mov         r6,r0

; 325  :     TCHAR szStateName[MAX_PATH];
; 326  :     DWORD dwStatus = ERROR_SUCCESS;

  0002e	2500		 movs        r5,#0

; 327  :     SETFNAME(_T("PmSetSystemPowerState_I"));
; 328  :     static LONG cEnteredSettingPowerState = 0;
; 329  : 
; 330  :     PMLOGMSG(ZONE_API, (_T("+%s: name %s, hint 0x%08x, options 0x%08x, fInternal %d\r\n"),
; 331  :         pszFname, pwsState != NULL ? pwsState : _T("<NULL>"), dwStateHint, dwOptions,
; 332  :         fInternal));

  00030	f8df 8138	 ldr         r8,|$LN48@PmSetSyste| ; =|dpCurSettings|
  00034	f8d8 4440	 ldr         r4,[r8,#0x440]
  00038	f414 6f00	 tst         r4,#0x800
  0003c	d00b		 beq         |$LN34@PmSetSyste|
  0003e	b10e		 cbz         r6,|$LN12@PmSetSyste|
  00040	4602		 mov         r2,r0
  00042	e000		 b           |$LN13@PmSetSyste|
  00044		 |$LN12@PmSetSyste|
  00044	4a4d		 ldr         r2,|$LN52@PmSetSyste| ; =|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@|
  00046		 |$LN13@PmSetSyste|
  00046	f8cd e004	 str         lr,[sp,#4]
  0004a	9300		 str         r3,[sp]
  0004c	484a		 ldr         r0,|$LN51@PmSetSyste| ; =|??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@|
  0004e	464b		 mov         r3,r9
  00050	4941		 ldr         r1,|$LN43@PmSetSyste| ; =|??_C@_1DA@NEOCGAAG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA_?$AAI?$AA?$AA@|
  00052	f000 f800	 bl          CeLogMsg
  00056		 |$LN34@PmSetSyste|

; 333  : 
; 334  :     PMENTERUPDATE();

  00056	f000 f800	 bl          PmEnterUpdate

; 335  :     InterlockedIncrement(&cEnteredSettingPowerState);  // Count entries, since this code is serialized this static variable acts as a reentry count

  0005a	f8df a108	 ldr         r10,|$LN46@PmSetSyste| ; =|?cEnteredSettingPowerState@?1??PmSetSystemPowerState_I@@9@4JA|
  0005e	4650		 mov         r0,r10
  00060	f000 f800	 bl          InterlockedIncrement

; 336  : 
; 337  :     // Check for reentry.
; 338  :     if( cEnteredSettingPowerState > 1 ){

  00064	f8da 3000	 ldr         r3,[r10]
  00068	2b01		 cmp         r3,#1
  0006a	dd0b		 ble         |$LN18@PmSetSyste|

; 339  :         // Code is attempting to set the system power state while handling a device power state transition.
; 340  :         RETAILMSG(1, (_T("PM (Power Manger): Error!!!!! Code is calling PM to change the system power state while handling a device power state transition!\r\n")));        

  0006c	4841		 ldr         r0,|$LN50@PmSetSyste| ; =|??_C@_1BAI@KDILGCOF@?$AAP?$AAM?$AA?5?$AA?$CI?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAa?$AAn?$AAg?$AAe?$AAr?$AA?$CJ?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAC?$AAo@|
  0006e	f000 f800	 bl          NKDbgPrintfW

; 341  :         PMLOGMSG(ZONE_ERROR, (_T("%s: Error!!!!! Code is calling PM to change the system power state while handling a device power state transition!\r\n"), pszFname));

  00072	f8d8 3440	 ldr         r3,[r8,#0x440]
  00076	f013 0f01	 tst         r3,#1
  0007a	d003		 beq         |$LN18@PmSetSyste|
  0007c	483c		 ldr         r0,|$LN49@PmSetSyste| ; =|??_C@_1OK@EJKFAIPC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAC?$AAo?$AAd?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAP@|
  0007e	4936		 ldr         r1,|$LN43@PmSetSyste| ; =|??_C@_1DA@NEOCGAAG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA_?$AAI?$AA?$AA@|
  00080	f000 f800	 bl          CeLogMsg
  00084		 |$LN18@PmSetSyste|

; 342  :         ASSERT(0);
; 343  :     }
; 344  : 
; 345  :     // if the user passes a null state name, use the hints flag to try
; 346  :     // to find a match.
; 347  :     if(pwsState != NULL) {

  00084	b1f6		 cbz         r6,|$LN8@PmSetSyste|
  00086		 |$LN29@PmSetSyste|

; 348  :         // copy the parameter but watch out for bad pointers
; 349  :         __try {
; 350  :             VERIFY(SUCCEEDED(StringCchCopy(szStateName, _countof(szStateName), pwsState)));

  00086	f44f 7182	 mov         r1,#0x104
  0008a	f117 0008	 adds        r0,r7,#8
  0008e	4632		 mov         r2,r6
  00090	f000 f800	 bl          StringCchCopyW
  00094		 |$LN30@PmSetSyste|

; 351  :         }

  00094	687b		 ldr         r3,[r7,#4]
  00096	683e		 ldr         r6,[r7]
  00098	e01e		 b           |$LN6@PmSetSyste|
  0009a		 |$LN26@PmSetSyste|

; 352  :         __except(EXCEPTION_EXECUTE_HANDLER) {
; 353  :             PMLOGMSG(ZONE_WARN, (_T("%s: exception copying state name\r\n"), 
; 354  :                 pszFname));

  0009a	f8df 80d0	 ldr         r8,|$LN48@PmSetSyste| ; =|dpCurSettings|
  0009e	f8d8 3440	 ldr         r3,[r8,#0x440]
  000a2	f013 0f02	 tst         r3,#2
  000a6	d003		 beq         |$LN35@PmSetSyste|
  000a8	482f		 ldr         r0,|$LN47@PmSetSyste| ; =|??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  000aa	492b		 ldr         r1,|$LN43@PmSetSyste| ; =|??_C@_1DA@NEOCGAAG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA_?$AAI?$AA?$AA@|
  000ac	f000 f800	 bl          CeLogMsg
  000b0		 |$LN35@PmSetSyste|

; 355  :             dwStatus = ERROR_INVALID_PARAMETER;

  000b0	2557		 movs        r5,#0x57
  000b2	f8df a0b0	 ldr         r10,|$LN46@PmSetSyste| ; =|?cEnteredSettingPowerState@?1??PmSetSystemPowerState_I@@9@4JA|
  000b6	f8d7 6244	 ldr         r6,[r7,#0x244]
  000ba	f8d7 3240	 ldr         r3,[r7,#0x240]
  000be	f8d7 923c	 ldr         r9,[r7,#0x23C]
  000c2	e009		 b           |$LN6@PmSetSyste|
  000c4		 |$LN8@PmSetSyste|

; 356  :         }
; 357  :     }else{
; 358  :          // try to match the hint flag to a system state
; 359  :          dwStatus = PlatformMapPowerStateHint(dwStateHint, szStateName, _countof(szStateName));

  000c4	f44f 7282	 mov         r2,#0x104
  000c8	f117 0108	 adds        r1,r7,#8
  000cc	4648		 mov         r0,r9
  000ce	f000 f800	 bl          PlatformMapPowerStateHint
  000d2	4605		 mov         r5,r0
  000d4	687b		 ldr         r3,[r7,#4]
  000d6	683e		 ldr         r6,[r7]
  000d8		 |$LN6@PmSetSyste|

; 360  :     }
; 361  : 
; 362  :     // go ahead and do the update?
; 363  :     if(dwStatus == ERROR_SUCCESS) {

  000d8	bb35		 cbnz        r5,|$LN5@PmSetSyste|

; 364  :         BOOL fForce;
; 365  :         
; 366  :         if((dwOptions & POWER_FORCE) != 0) {

  000da	f413 5f80	 tst         r3,#0x1000
  000de	d001		 beq         |$LN4@PmSetSyste|

; 367  :             fForce = TRUE;

  000e0	2401		 movs        r4,#1

; 368  :         } else {

  000e2	e000		 b           |$LN3@PmSetSyste|
  000e4		 |$LN4@PmSetSyste|

; 369  :             fForce = FALSE;

  000e4	2400		 movs        r4,#0
  000e6		 |$LN3@PmSetSyste|

; 370  :         }
; 371  : 
; 372  :         if (((!_tcsicmp(szStateName,_T("suspend"))) || 
; 373  :              (dwStateHint==POWER_STATE_OFF)) && 
; 374  :             (fInternal==TRUE))  /* internal will be set to true when gwespoweroffsystem calls this */

  000e6	491e		 ldr         r1,|$LN45@PmSetSyste| ; =|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  000e8	f117 0008	 adds        r0,r7,#8
  000ec	f000 f800	 bl          _wcsicmp
  000f0	b110		 cbz         r0,|$LN1@PmSetSyste|
  000f2	f5b9 3f00	 cmp         r9,#0x20000
  000f6	d106		 bne         |$LN2@PmSetSyste|
  000f8		 |$LN1@PmSetSyste|
  000f8	2e01		 cmp         r6,#1
  000fa	d104		 bne         |$LN2@PmSetSyste|

; 375  :         {
; 376  :             /* external request to stand by or shut down /*
; 377  :             /* sqm function will check if this is standby on smartphone */
; 378  :             /* this ends up being a ++ on the persistent state stuff */
; 379  :             PMSQM_Set(PMSQM_DATAID_POWER_USER_SHUTDOWNS,1);

  000fc	f240 1069	 mov         r0,#0x169
  00100	2101		 movs        r1,#1
  00102	f000 f800	 bl          PMSQM_Set
  00106		 |$LN2@PmSetSyste|

; 380  :         }
; 381  : 
; 382  :         PMExt_PMBeforeNewSystemState(szStateName,dwStateHint);

  00106	f117 0008	 adds        r0,r7,#8
  0010a	4649		 mov         r1,r9
  0010c	f000 f800	 bl          |?PMExt_PMBeforeNewSystemState@@YAXPBGK@Z|

; 383  :         dwStatus = PlatformSetSystemPowerState(szStateName, fForce, fInternal);

  00110	f117 0008	 adds        r0,r7,#8
  00114	4632		 mov         r2,r6
  00116	4621		 mov         r1,r4
  00118	f000 f800	 bl          PlatformSetSystemPowerState
  0011c	4605		 mov         r5,r0

; 384  :         PMExt_PMAfterNewSystemState(szStateName,dwStateHint);

  0011e	f117 0008	 adds        r0,r7,#8
  00122	4649		 mov         r1,r9
  00124	f000 f800	 bl          |?PMExt_PMAfterNewSystemState@@YAXPBGK@Z|
  00128		 |$LN5@PmSetSyste|

; 385  :     }
; 386  : 
; 387  :     InterlockedDecrement(&cEnteredSettingPowerState);

  00128	4650		 mov         r0,r10
  0012a	f000 f800	 bl          InterlockedDecrement

; 388  :     PMLEAVEUPDATE();

  0012e	f000 f800	 bl          PmLeaveUpdate

; 389  : 
; 390  :     PMLOGMSG(ZONE_API, (_T("-%s: returning dwStatus %d\r\n"), pszFname, dwStatus));

  00132	f8d8 3440	 ldr         r3,[r8,#0x440]
  00136	f413 6f00	 tst         r3,#0x800
  0013a	d004		 beq         |$LN22@PmSetSyste|
  0013c	4807		 ldr         r0,|$LN44@PmSetSyste| ; =|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0013e	462a		 mov         r2,r5
  00140	4905		 ldr         r1,|$LN43@PmSetSyste| ; =|??_C@_1DA@NEOCGAAG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA_?$AAI?$AA?$AA@|
  00142	f000 f800	 bl          CeLogMsg
  00146		 |$LN22@PmSetSyste|

; 391  : 
; 392  :     return dwStatus;
; 393  : }

  00146	4628		 mov         r0,r5
  00148		 |$M41|
  00148	f20d 2d18	 addw        sp,sp,#0x218
  0014c	f000 f800	 bl          __security_pop_cookie
  00150	e8bd 0ff0	 pop         {r4-r11}
  00154	f85d fb14	 ldr         pc,[sp],#0x14
  00158		 |$LN42@PmSetSyste|
  00158		 |$LN43@PmSetSyste|
  00158	0000 0000	 DCD         |??_C@_1DA@NEOCGAAG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA_?$AAI?$AA?$AA@|
  0015c		 |$LN44@PmSetSyste|
  0015c	0000 0000	 DCD         |??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00160		 |$LN45@PmSetSyste|
  00160	0000 0000	 DCD         |??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  00164		 |$LN46@PmSetSyste|
  00164	0000 0000	 DCD         |?cEnteredSettingPowerState@?1??PmSetSystemPowerState_I@@9@4JA|
  00168		 |$LN47@PmSetSyste|
  00168	0000 0000	 DCD         |??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  0016c		 |$LN48@PmSetSyste|
  0016c	0000 0000	 DCD         |dpCurSettings|
  00170		 |$LN49@PmSetSyste|
  00170	0000 0000	 DCD         |??_C@_1OK@EJKFAIPC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAC?$AAo?$AAd?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAP@|
  00174		 |$LN50@PmSetSyste|
  00174	0000 0000	 DCD         |??_C@_1BAI@KDILGCOF@?$AAP?$AAM?$AA?5?$AA?$CI?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAa?$AAn?$AAg?$AAe?$AAr?$AA?$CJ?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAC?$AAo@|
  00178		 |$LN51@PmSetSyste|
  00178	0000 0000	 DCD         |??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@|
  0017c		 |$LN52@PmSetSyste|
  0017c	0000 0000	 DCD         |??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@|

			 ENDP  ; |PmSetSystemPowerState_I|

  00180		 |$LN38@PmSetSyste|
	EXPORT	|??_C@_1FE@HNEPFJJN@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAu?$AAf?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAf?$AAl?$AAa?$AAg?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@LGBNIMAH@?$AAP?$AAm?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|PmGetSystemPowerState|
	IMPORT	|__C_specific_handler|
	IMPORT	|PmLock|
	IMPORT	|gpSystemPowerState|
	IMPORT	|PmUnlock|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PmGetSystemPowerState| DCD imagerel |$LN25@PmGetSyste|
	DCD	imagerel |$unwind2$PmGetSystemPowerState|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$PmGetSystemPowerState| DCD 0x22b00045
	DCD	0xfeaffcc7
	DCD	0xffdfff
	DCD	imagerel |__C_specific_handler|
	DCD	0x1
	DCD	imagerel |$LN15@PmGetSyste|
	DCD	imagerel |$LN16@PmGetSyste|
	DCD	0x1
	DCD	imagerel |$LN12@PmGetSyste|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@LGBNIMAH@?$AAP?$AAm?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@HNEPFJJN@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAu?$AAf?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAf?$AAl?$AAa?$AAg?$AAs@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "b", 0x0, "u"
	DCB	0x0, "f", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "p", 0x0, "f", 0x0, "l", 0x0, "a", 0x0, "g"
	DCB	0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PmGetSystemPowerState| PROC

; 284  : {

  00000		 |$LN25@PmGetSyste|
  00000	e92d 4ffe	 push        {r1-r11,lr}
  00004	f20d 0b28	 addw        r11,sp,#0x28
  00008	466f		 mov         r7,sp
  0000a	b082		 sub         sp,sp,#8
  0000c		 |$LN23@PmGetSyste|
  0000c	4616		 mov         r6,r2
  0000e	460c		 mov         r4,r1
  00010	4680		 mov         r8,r0

; 285  :     DWORD dwStatus = ERROR_INVALID_PARAMETER;
; 286  :     SETFNAME(_T("PmGetSystemPowerState"));
; 287  :     
; 288  :     PMLOGMSG(ZONE_API, (_T("+%s: buf 0x%08x, size %d, pflags 0x%08x\r\n"),
; 289  :         pszFname, pBuffer, dwBufChars, pdwFlags));

  00012	4d20		 ldr         r5,|$LN31@PmGetSyste| ; =|dpCurSettings|
  00014	f8d5 3440	 ldr         r3,[r5,#0x440]
  00018	f413 6f00	 tst         r3,#0x800
  0001c	d006		 beq         |$LN20@PmGetSyste|
  0001e	9600		 str         r6,[sp]
  00020	481e		 ldr         r0,|$LN33@PmGetSyste| ; =|??_C@_1FE@HNEPFJJN@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAu?$AAf?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAf?$AAl?$AAa?$AAg?$AAs@|
  00022	460b		 mov         r3,r1
  00024	4642		 mov         r2,r8
  00026	4919		 ldr         r1,|$LN29@PmGetSyste| ; =|??_C@_1CM@LGBNIMAH@?$AAP?$AAm?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00028	f000 f800	 bl          CeLogMsg
  0002c		 |$LN20@PmGetSyste|

; 290  : 
; 291  :     PMLOCK();

  0002c	f000 f800	 bl          PmLock
  00030		 |$LN15@PmGetSyste|

; 292  : 
; 293  :     __try {
; 294  :         if(dwBufChars < (_tcslen(gpSystemPowerState->pszName) + 1)) {

  00030	f8df 9064	 ldr         r9,|$LN32@PmGetSyste| ; =|gpSystemPowerState|
  00034	f8d9 3000	 ldr         r3,[r9]
  00038	f8d3 a000	 ldr         r10,[r3]
  0003c	4650		 mov         r0,r10
  0003e	f000 f800	 bl          wcslen
  00042	1c43		 adds        r3,r0,#1
  00044	429c		 cmp         r4,r3
  00046	d201		 bcs         |$LN2@PmGetSyste|

; 295  :             dwStatus = ERROR_INSUFFICIENT_BUFFER;

  00048	247a		 movs        r4,#0x7A

; 296  :         } else {

  0004a	e009		 b           |$LN22@PmGetSyste|
  0004c		 |$LN2@PmGetSyste|

; 297  :             VERIFY(SUCCEEDED(StringCchCopy(pBuffer, dwBufChars, gpSystemPowerState->pszName)));

  0004c	4652		 mov         r2,r10
  0004e	4621		 mov         r1,r4
  00050	4640		 mov         r0,r8
  00052	f000 f800	 bl          StringCchCopyW

; 298  :             *pdwFlags = gpSystemPowerState->dwFlags;

  00056	f8d9 3000	 ldr         r3,[r9]
  0005a	689b		 ldr         r3,[r3,#8]
  0005c	6033		 str         r3,[r6]

; 299  :             dwStatus = ERROR_SUCCESS;

  0005e	2400		 movs        r4,#0
  00060		 |$LN22@PmGetSyste|
  00060	603c		 str         r4,[r7]
  00062		 |$LN16@PmGetSyste|

; 300  :         }
; 301  :     }

  00062	e002		 b           |$LN17@PmGetSyste|
  00064		 |$LN12@PmGetSyste|

; 302  :     __except(EXCEPTION_EXECUTE_HANDLER) {
; 303  :         dwStatus = ERROR_INVALID_PARAMETER;

  00064	2457		 movs        r4,#0x57
  00066	603c		 str         r4,[r7]
  00068	4d0a		 ldr         r5,|$LN31@PmGetSyste| ; =|dpCurSettings|
  0006a		 |$LN17@PmGetSyste|

; 304  :     }
; 305  : 
; 306  :     PMUNLOCK();

  0006a	f000 f800	 bl          PmUnlock

; 307  : 
; 308  :     PMLOGMSG(ZONE_API, (_T("-%s: returning %d\r\n"), pszFname, dwStatus));

  0006e	f8d5 3440	 ldr         r3,[r5,#0x440]
  00072	f413 6f00	 tst         r3,#0x800
  00076	d004		 beq         |$LN4@PmGetSyste|
  00078	4805		 ldr         r0,|$LN30@PmGetSyste| ; =|??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0007a	4622		 mov         r2,r4
  0007c	4903		 ldr         r1,|$LN29@PmGetSyste| ; =|??_C@_1CM@LGBNIMAH@?$AAP?$AAm?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  0007e	f000 f800	 bl          CeLogMsg
  00082		 |$LN4@PmGetSyste|

; 309  : 
; 310  :     return dwStatus;
; 311  : }

  00082	4620		 mov         r0,r4
  00084		 |$M27|
  00084	b005		 add         sp,sp,#0x14
  00086	e8bd 8ff0	 pop         {r4-r11,pc}
  0008a		 |$LN34@PmGetSyste|
  0008a		 |$M35|
  0008a	defe		 __debugbreak
  0008c		 |$LN28@PmGetSyste|
  0008c		 |$LN29@PmGetSyste|
  0008c	0000 0000	 DCD         |??_C@_1CM@LGBNIMAH@?$AAP?$AAm?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00090		 |$LN30@PmGetSyste|
  00090	0000 0000	 DCD         |??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00094		 |$LN31@PmGetSyste|
  00094	0000 0000	 DCD         |dpCurSettings|
  00098		 |$LN32@PmGetSyste|
  00098	0000 0000	 DCD         |gpSystemPowerState|
  0009c		 |$LN33@PmGetSyste|
  0009c	0000 0000	 DCD         |??_C@_1FE@HNEPFJJN@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAu?$AAf?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAf?$AAl?$AAa?$AAg?$AAs@|

			 ENDP  ; |PmGetSystemPowerState|

  000a0		 |$LN24@PmGetSyste|
	EXPORT	|?LeaveLock@SystemNotifyRegKey@@QAAXXZ|	; SystemNotifyRegKey::LeaveLock
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?LeaveLock@SystemNotifyRegKey@@QAAXXZ| PROC ; SystemNotifyRegKey::LeaveLock
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  00000	3034		 adds        r0,r0,#0x34
  00002		 |$M6|
  00002	f000 9000	 b           LeaveCriticalSection

			 ENDP  ; |?LeaveLock@SystemNotifyRegKey@@QAAXXZ|, SystemNotifyRegKey::LeaveLock

	EXPORT	|??_7CMiniThread@@6B@| [ DATA ]		; CMiniThread::`vftable'
	EXPORT	|??1CMiniThread@@UAA@XZ|		; CMiniThread::~CMiniThread
	IMPORT	|??_ECMiniThread@@UAAPAXI@Z|, WEAK |??_GCMiniThread@@UAAPAXI@Z| ; CMiniThread::`vector deleting destructor', CMiniThread::`scalar deleting destructor'
	IMPORT	|_purecall|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??1CMiniThread@@UAA@XZ| DCD imagerel |$LN9@CMiniThrea|
	DCD	0x316059

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CMiniThread@@6B@| DCD |??_ECMiniThread@@UAAPAXI@Z|	; CMiniThread::`vftable'
	DCD	|_purecall|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1CMiniThread@@UAA@XZ| PROC		; CMiniThread::~CMiniThread

; 44   :     {

  00000		 |$LN9@CMiniThrea|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M7|
  00008	4604		 mov         r4,r0

; 47   : 
; 48   :     BOOL    ThreadStart()
; 49   :     {
; 50   :         if( m_bSuspendFlag )
; 51   :         {
; 52   :             if( ResumeThread( m_hThreadHandle ) == ( DWORD ) ( -1 ) )
; 53   :             {
; 54   :                 // failure for resume somehow
; 55   :                 return FALSE;
; 56   :             };
; 57   :             m_bSuspendFlag = FALSE;
; 58   :         }
; 59   :         return TRUE;
; 60   :     }
; 61   : 
; 62   :     BOOL    ThreadStop()
; 63   :     {
; 64   :         if( !m_bSuspendFlag )
; 65   :         {
; 66   :             if( SuspendThread( m_hThreadHandle ) == ( DWORD ) ( -1 ) )
; 67   :             {
; 68   :                 // failure
; 69   :                 return FALSE;
; 70   :             }
; 71   :             m_bSuspendFlag = TRUE;
; 72   :         }
; 73   :         return TRUE;
; 74   :     }
; 75   :     
; 76   :     BOOL    CeSetPriority( int nPriority )
; 77   :     {
; 78   :         if( m_hThreadHandle )
; 79   :         {
; 80   :             return CeSetThreadPriority( m_hThreadHandle, nPriority );
; 81   :         }
; 82   :         return FALSE;
; 83   :     }
; 84   :     
; 85   :     BOOL    ThreadTerminated( DWORD dwMilliSeconds )
; 86   :     {
; 87   :         m_bTerminated = TRUE;
; 88   :         return WaitThreadComplete( dwMilliSeconds  );
; 89   :     }
; 90   :     
; 91   :     BOOL    WaitThreadComplete( DWORD dwMilliSeconds )
; 92   :     {
; 93   :         if( !m_hThreadHandle )
; 94   :         {
; 95   :             return FALSE;
; 96   :         };
; 97   : 
; 98   :         if( ThreadStart() )
; 99   :         {
; 100  :             if( ::WaitForSingleObject( m_hThreadHandle, dwMilliSeconds ) ==
; 101  :                 WAIT_OBJECT_0 )
; 102  :             {
; 103  :                 // thread dead
; 104  :                 ::CloseHandle( m_hThreadHandle );
; 105  :                 m_hThreadHandle = NULL;
; 106  :                 return TRUE;
; 107  :             }
; 108  :         }
; 109  :         return FALSE;
; 110  :     }
; 111  : 
; 112  :     BOOL    ForceTerminated()
; 113  :     {
; 114  :         if( m_hThreadHandle )

  0000a	68a0		 ldr         r0,[r4,#8]

; 44   :     {

  0000c	4b07		 ldr         r3,|$LN12@CMiniThrea| ; =|??_7CMiniThread@@6B@|
  0000e	6023		 str         r3,[r4]

; 47   : 
; 48   :     BOOL    ThreadStart()
; 49   :     {
; 50   :         if( m_bSuspendFlag )
; 51   :         {
; 52   :             if( ResumeThread( m_hThreadHandle ) == ( DWORD ) ( -1 ) )
; 53   :             {
; 54   :                 // failure for resume somehow
; 55   :                 return FALSE;
; 56   :             };
; 57   :             m_bSuspendFlag = FALSE;
; 58   :         }
; 59   :         return TRUE;
; 60   :     }
; 61   : 
; 62   :     BOOL    ThreadStop()
; 63   :     {
; 64   :         if( !m_bSuspendFlag )
; 65   :         {
; 66   :             if( SuspendThread( m_hThreadHandle ) == ( DWORD ) ( -1 ) )
; 67   :             {
; 68   :                 // failure
; 69   :                 return FALSE;
; 70   :             }
; 71   :             m_bSuspendFlag = TRUE;
; 72   :         }
; 73   :         return TRUE;
; 74   :     }
; 75   :     
; 76   :     BOOL    CeSetPriority( int nPriority )
; 77   :     {
; 78   :         if( m_hThreadHandle )
; 79   :         {
; 80   :             return CeSetThreadPriority( m_hThreadHandle, nPriority );
; 81   :         }
; 82   :         return FALSE;
; 83   :     }
; 84   :     
; 85   :     BOOL    ThreadTerminated( DWORD dwMilliSeconds )
; 86   :     {
; 87   :         m_bTerminated = TRUE;
; 88   :         return WaitThreadComplete( dwMilliSeconds  );
; 89   :     }
; 90   :     
; 91   :     BOOL    WaitThreadComplete( DWORD dwMilliSeconds )
; 92   :     {
; 93   :         if( !m_hThreadHandle )
; 94   :         {
; 95   :             return FALSE;
; 96   :         };
; 97   : 
; 98   :         if( ThreadStart() )
; 99   :         {
; 100  :             if( ::WaitForSingleObject( m_hThreadHandle, dwMilliSeconds ) ==
; 101  :                 WAIT_OBJECT_0 )
; 102  :             {
; 103  :                 // thread dead
; 104  :                 ::CloseHandle( m_hThreadHandle );
; 105  :                 m_hThreadHandle = NULL;
; 106  :                 return TRUE;
; 107  :             }
; 108  :         }
; 109  :         return FALSE;
; 110  :     }
; 111  : 
; 112  :     BOOL    ForceTerminated()
; 113  :     {
; 114  :         if( m_hThreadHandle )

  00010	b150		 cbz         r0,|$LN3@CMiniThrea|

; 115  :         {
; 116  : #pragma prefast(suppress: 6258, "Using TerminateThread does not allow proper thread clean up")
; 117  :             BOOL bReturn = ::TerminateThread( m_hThreadHandle, ( DWORD ) - 1 ); // terminate abnormal

  00012	f06f 0500	 mvn         r5,#0
  00016	4629		 mov         r1,r5
  00018	f000 f800	 bl          TerminateThread

; 118  :             m_dwExitCode = (DWORD)-1;
; 119  :             ::CloseHandle( m_hThreadHandle );

  0001c	68a0		 ldr         r0,[r4,#8]
  0001e	6165		 str         r5,[r4,#0x14]
  00020	f000 f800	 bl          CloseHandle

; 120  :             m_hThreadHandle = NULL;

  00024	2300		 movs        r3,#0
  00026	60a3		 str         r3,[r4,#8]
  00028		 |$LN3@CMiniThrea|
  00028		 |$M10|

; 45   :         ForceTerminated();
; 46   :     }

  00028	e8bd 8830	 pop         {r4,r5,r11,pc}
  0002c		 |$LN11@CMiniThrea|
  0002c		 |$LN12@CMiniThrea|
  0002c	0000 0000	 DCD         |??_7CMiniThread@@6B@|
  00030		 |$M8|

			 ENDP  ; |??1CMiniThread@@UAA@XZ|, CMiniThread::~CMiniThread

	EXPORT	|??0CMiniThread@@QAA@KH@Z|		; CMiniThread::CMiniThread
	IMPORT	|CreateThread|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0CMiniThread@@QAA@KH@Z| DCD imagerel |$LN8@CMiniThrea|
	DCD	0xfdb26079
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0CMiniThread@@QAA@KH@Z| PROC	; CMiniThread::CMiniThread

; 29   :     CMiniThread( DWORD dwStackSize = 0, BOOL bSuspended = FALSE )

  00000		 |$LN8@CMiniThrea|
  00000	e92d 487e	 push        {r1-r6,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M6|
  00008	4b0d		 ldr         r3,|$LN12@CMiniThrea| ; =|??_7CMiniThread@@6B@|
  0000a	4605		 mov         r5,r0
  0000c	4616		 mov         r6,r2
  0000e	602b		 str         r3,[r5]

; 30   :     {
; 31   :         m_bTerminated = FALSE;

  00010	2300		 movs        r3,#0
  00012	606b		 str         r3,[r5,#4]

; 32   :         m_dwExitCode = ( DWORD ) - 1;

  00014	43db		 mvns        r3,r3
  00016	616b		 str         r3,[r5,#0x14]

; 33   :         m_hThreadHandle = ::CreateThread( NULL,
; 34   :                                           dwStackSize,
; 35   :                                           CMiniThread::ThreadProc,
; 36   :                                           ( LPVOID )this,
; 37   :                                           bSuspended ? CREATE_SUSPENDED : 0,
; 38   :                                           &m_dwThreadId );

  00018	b10e		 cbz         r6,|$LN3@CMiniThrea|
  0001a	2404		 movs        r4,#4
  0001c	e000		 b           |$LN4@CMiniThrea|
  0001e		 |$LN3@CMiniThrea|
  0001e	2400		 movs        r4,#0
  00020		 |$LN4@CMiniThrea|
  00020	4a06		 ldr         r2,|$LN11@CMiniThrea| ; =|?ThreadProc@CMiniThread@@CAKPAX@Z|
  00022	f115 030c	 adds        r3,r5,#0xC
  00026	9301		 str         r3,[sp,#4]
  00028	462b		 mov         r3,r5
  0002a	2000		 movs        r0,#0
  0002c	9400		 str         r4,[sp]
  0002e	f000 f800	 bl          CreateThread
  00032	60a8		 str         r0,[r5,#8]

; 39   :         m_bSuspendFlag = bSuspended;
; 40   :     };

  00034	4628		 mov         r0,r5
  00036	612e		 str         r6,[r5,#0x10]
  00038		 |$M9|
  00038	e8bd 887e	 pop         {r1-r6,r11,pc}
  0003c		 |$LN10@CMiniThrea|
  0003c		 |$LN11@CMiniThrea|
  0003c	0000 0000	 DCD         |?ThreadProc@CMiniThread@@CAKPAX@Z|
  00040		 |$LN12@CMiniThrea|
  00040	0000 0000	 DCD         |??_7CMiniThread@@6B@|
  00044		 |$M7|

			 ENDP  ; |??0CMiniThread@@QAA@KH@Z|, CMiniThread::CMiniThread

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Init@RegKeyOrValue@@UAAHXZ| PROC	; RegKeyOrValue::Init

; 40   :     virtual BOOL Init() { return m_lpRegName!=NULL; };

  00000	6843		 ldr         r3,[r0,#4]
  00002	b10b		 cbz         r3,|$LN3@Init|
  00004	2001		 movs        r0,#1
  00006		 |$M6|
  00006	4770		 bx          lr
  00008		 |$LN3@Init|
  00008	2000		 movs        r0,#0
  0000a		 |$M7|
  0000a	4770		 bx          lr

			 ENDP  ; |?Init@RegKeyOrValue@@UAAHXZ|, RegKeyOrValue::Init

	EXPORT	|?Init@RegKey@@UAAHXZ|			; RegKey::Init
	EXPORT	|??_7RegKey@@6B@| [ DATA ]		; RegKey::`vftable'
	EXPORT	|??0RegKey@@QAA@PAUHKEY__@@PBGKPAV0@@Z|	; RegKey::RegKey
	IMPORT	|??_ERegKey@@UAAPAXI@Z|, WEAK |??_GRegKey@@UAAPAXI@Z| ; RegKey::`vector deleting destructor', RegKey::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0RegKey@@QAA@PAUHKEY__@@PBGKPAV0@@Z| DCD imagerel |$LN6@RegKey|
	DCD	0xfd306045

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7RegKey@@6B@| DCD |?Init@RegKey@@UAAHXZ|		; RegKey::`vftable'
	DCD	|??_ERegKey@@UAAPAXI@Z|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0RegKey@@QAA@PAUHKEY__@@PBGKPAV0@@Z| PROC ; RegKey::RegKey

; 110  :     RegKey(HKEY hCurrentOpenKey, LPCTSTR lpKeyPath,DWORD /*dwFlag*/, RegKey * pNextRegKey) : RegKeyOrValue( hCurrentOpenKey,lpKeyPath,pNextRegKey) {

  00000		 |$LN6@RegKey|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	9b04		 ldr         r3,[sp,#0x10]
  0000a	4604		 mov         r4,r0
  0000c	f000 f800	 bl          |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|
  00010	4b04		 ldr         r3,|$LN9@RegKey|	; =|??_7RegKey@@6B@|

; 111  :         m_pRegValueList=NULL;
; 112  :         m_pRegKeyList=NULL;
; 113  :         m_RegKey = NULL;
; 114  :     }

  00012	4620		 mov         r0,r4
  00014	6023		 str         r3,[r4]
  00016	2300		 movs        r3,#0
  00018	6163		 str         r3,[r4,#0x14]
  0001a	61a3		 str         r3,[r4,#0x18]
  0001c	6123		 str         r3,[r4,#0x10]
  0001e		 |$M7|
  0001e	e8bd 8818	 pop         {r3,r4,r11,pc}
  00022		 |$LN10@RegKey|
  00022		 |$M11|
  00022	defe		 __debugbreak
  00024		 |$LN8@RegKey|
  00024		 |$LN9@RegKey|
  00024	0000 0000	 DCD         |??_7RegKey@@6B@|
  00028		 |$M5|

			 ENDP  ; |??0RegKey@@QAA@PAUHKEY__@@PBGKPAV0@@Z|, RegKey::RegKey


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GRegKeyOrValue@@UAAPAXI@Z| DCD imagerel |$LN10@scalar|
	DCD	0x316055
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GRegKeyOrValue@@UAAPAXI@Z| PROC	; RegKeyOrValue::`scalar deleting destructor'
  00000		 |$LN10@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M8|
  00008	4604		 mov         r4,r0

; 42   :         if (m_lpRegName!=NULL)

  0000a	6860		 ldr         r0,[r4,#4]
  0000c	4b07		 ldr         r3,|$LN13@scalar|	; =|??_7RegKeyOrValue@@6B@|
  0000e	460d		 mov         r5,r1
  00010	6023		 str         r3,[r4]
  00012	b108		 cbz         r0,|$LN4@scalar|

; 43   :             delete m_lpRegName;

  00014	f000 f800	 bl          |??3@YAXPAX@Z|
  00018		 |$LN4@scalar|
  00018	f015 0f01	 tst         r5,#1
  0001c	d002		 beq         |$LN1@scalar|
  0001e	4620		 mov         r0,r4
  00020	f000 f800	 bl          |??3@YAXPAX@Z|
  00024		 |$LN1@scalar|
  00024	4620		 mov         r0,r4
  00026		 |$M11|
  00026	e8bd 8830	 pop         {r4,r5,r11,pc}
  0002a		 |$LN14@scalar|
  0002a		 |$M15|
  0002a	defe		 __debugbreak
  0002c		 |$LN12@scalar|
  0002c		 |$LN13@scalar|
  0002c	0000 0000	 DCD         |??_7RegKeyOrValue@@6B@|
  00030		 |$M9|

			 ENDP  ; |??_GRegKeyOrValue@@UAAPAXI@Z|, RegKeyOrValue::`scalar deleting destructor'

	EXPORT	|?DeleteAll@RegKey@@IAAXXZ|		; RegKey::DeleteAll

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?DeleteAll@RegKey@@IAAXXZ| DCD imagerel |$LN24@DeleteAll|
	DCD	0x316085
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?DeleteAll@RegKey@@IAAXXZ| PROC	; RegKey::DeleteAll

; 223  :     void DeleteAll() {

  00000		 |$LN24@DeleteAll|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M22|
  00008	4604		 mov         r4,r0

; 224  :         while (m_pRegValueList) {

  0000a	6963		 ldr         r3,[r4,#0x14]
  0000c	b153		 cbz         r3,|$LN16@DeleteAll|
  0000e		 |$LL4@DeleteAll|

; 225  :             RegValue * pNextRegValue = (RegValue * )m_pRegValueList->GetNextRegKeyOrValuePtr() ;

  0000e	6963		 ldr         r3,[r4,#0x14]
  00010	68dd		 ldr         r5,[r3,#0xC]

; 226  :             delete m_pRegValueList;

  00012	b123		 cbz         r3,|$LN7@DeleteAll|
  00014	4618		 mov         r0,r3
  00016	681b		 ldr         r3,[r3]
  00018	2101		 movs        r1,#1
  0001a	685b		 ldr         r3,[r3,#4]
  0001c	4798		 blx         r3
  0001e		 |$LN7@DeleteAll|

; 227  :             m_pRegValueList = pNextRegValue;

  0001e	6165		 str         r5,[r4,#0x14]
  00020	2d00		 cmp         r5,#0
  00022	d1f4		 bne         |$LL4@DeleteAll|
  00024		 |$LN16@DeleteAll|

; 228  :         }
; 229  :         while (m_pRegKeyList) {

  00024	69a3		 ldr         r3,[r4,#0x18]
  00026	b153		 cbz         r3,|$LN1@DeleteAll|
  00028		 |$LL2@DeleteAll|

; 230  :             RegKey * pNextKey = (RegKey *) m_pRegKeyList->GetNextRegKeyOrValuePtr();

  00028	69a3		 ldr         r3,[r4,#0x18]
  0002a	68dd		 ldr         r5,[r3,#0xC]

; 231  :             delete m_pRegKeyList;

  0002c	b123		 cbz         r3,|$LN9@DeleteAll|
  0002e	4618		 mov         r0,r3
  00030	681b		 ldr         r3,[r3]
  00032	2101		 movs        r1,#1
  00034	685b		 ldr         r3,[r3,#4]
  00036	4798		 blx         r3
  00038		 |$LN9@DeleteAll|

; 232  :             m_pRegKeyList =  pNextKey ;

  00038	61a5		 str         r5,[r4,#0x18]
  0003a	2d00		 cmp         r5,#0
  0003c	d1f4		 bne         |$LL2@DeleteAll|
  0003e		 |$LN1@DeleteAll|
  0003e		 |$M25|

; 233  :         }
; 234  :     }

  0003e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00042		 |$M23|

			 ENDP  ; |?DeleteAll@RegKey@@IAAXXZ|, RegKey::DeleteAll

	EXPORT	|?RegEnum@RegKey@@QAAJPAVRegKeyOrValue@@KPAGPAK@Z| ; RegKey::RegEnum
	IMPORT	|StringCbCopyW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?RegEnum@RegKey@@QAAJPAVRegKeyOrValue@@KPAGPAK@Z| DCD imagerel |$LN25@RegEnum|
	DCD	0xfd3460ad
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?RegEnum@RegKey@@QAAJPAVRegKeyOrValue@@KPAGPAK@Z| PROC ; RegKey::RegEnum

; 185  :     LONG RegEnum(RegKeyOrValue * pList, DWORD dwReqIndex, __out_bcount(*lpcbName) PWSTR lpName, PDWORD lpcbName) {

  00000		 |$LN25@RegEnum|
  00000	e92d 49f8	 push        {r3-r8,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M23|

; 186  :         RegKeyOrValue * pReturnKey = pList;
; 187  :         for (DWORD dwIndex = 0; pReturnKey!=NULL &&  dwIndex<dwReqIndex; dwIndex++) {

  00008	2000		 movs        r0,#0
  0000a	4698		 mov         r8,r3
  0000c	b1f1		 cbz         r1,|$LN5@RegEnum|
  0000e		 |$LL8@RegEnum|
  0000e	4290		 cmp         r0,r2
  00010	d203		 bcs         |$LN6@RegEnum|

; 188  :             pReturnKey =(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();

  00012	68c9		 ldr         r1,[r1,#0xC]
  00014	3001		 adds        r0,#1
  00016	2900		 cmp         r1,#0
  00018	d1f9		 bne         |$LL8@RegEnum|
  0001a		 |$LN6@RegEnum|

; 189  :         }
; 190  :         if (pReturnKey && pReturnKey->GetName()) {

  0001a	b1b9		 cbz         r1,|$LN5@RegEnum|
  0001c	684e		 ldr         r6,[r1,#4]
  0001e	b1ae		 cbz         r6,|$LN5@RegEnum|

; 191  :             LONG lReturn = ERROR_SUCCESS;
; 192  :             if ( lpcbName) {

  00020	9d08		 ldr         r5,[sp,#0x20]
  00022	2400		 movs        r4,#0
  00024	b1a5		 cbz         r5,|$LN1@RegEnum|

; 193  :                 DWORD cbSize = (_tcslen(pReturnKey->GetName()) + 1) * sizeof(lpName[0]) ;

  00026	4630		 mov         r0,r6
  00028	f000 f800	 bl          wcslen
  0002c	1c43		 adds        r3,r0,#1
  0002e	005f		 lsls        r7,r3,#1

; 194  :                 if ( lpName) {

  00030	f1b8 0f00	 cmp         r8,#0
  00034	d008		 beq         |$LN2@RegEnum|

; 195  :                     VERIFY(SUCCEEDED(StringCbCopy(lpName,*lpcbName,pReturnKey->GetName())));

  00036	6829		 ldr         r1,[r5]
  00038	4632		 mov         r2,r6
  0003a	4640		 mov         r0,r8
  0003c	f000 f800	 bl          StringCbCopyW

; 196  :                     if (cbSize>*lpcbName)

  00040	682b		 ldr         r3,[r5]
  00042	429f		 cmp         r7,r3
  00044	d900		 bls         |$LN2@RegEnum|

; 197  :                         lReturn = ERROR_MORE_DATA;

  00046	24ea		 movs        r4,#0xEA
  00048		 |$LN2@RegEnum|

; 198  :                 }
; 199  :                 *lpcbName =  cbSize;

  00048	602f		 str         r7,[r5]

; 200  :             }
; 201  :             return lReturn;

  0004a	e001		 b           |$LN1@RegEnum|
  0004c		 |$LN5@RegEnum|

; 202  :         }
; 203  :         else
; 204  :             return ERROR_NO_MORE_ITEMS;

  0004c	f240 1403	 mov         r4,#0x103
  00050		 |$LN1@RegEnum|

; 205  :     }

  00050	4620		 mov         r0,r4
  00052		 |$M26|
  00052	e8bd 89f8	 pop         {r3-r8,r11,pc}
  00056		 |$M24|

			 ENDP  ; |?RegEnum@RegKey@@QAAJPAVRegKeyOrValue@@KPAGPAK@Z|, RegKey::RegEnum

	EXPORT	|?RegFindValue@RegKey@@QAAJPBGPAXPAK2@Z| ; RegKey::RegFindValue

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?RegFindValue@RegKey@@QAAJPBGPAXPAK2@Z| DCD imagerel |$LN20@RegFindVal|
	DCD	0x336085
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?RegFindValue@RegKey@@QAAJPBGPAXPAK2@Z| PROC ; RegKey::RegFindValue

; 173  :     LONG RegFindValue(LPCTSTR lpValueName, PVOID pvData, LPDWORD pdwSize, LPDWORD pdwType) {

  00000		 |$LN20@RegFindVal|
  00000	e92d 48f0	 push        {r4-r7,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M18|

; 174  :         RegValue * pCurValue =  m_pRegValueList;

  00008	6944		 ldr         r4,[r0,#0x14]
  0000a	461e		 mov         r6,r3
  0000c	4617		 mov         r7,r2
  0000e	460d		 mov         r5,r1
  00010	e005		 b           |$LN16@RegFindVal|
  00012		 |$LL4@RegFindVal|

; 45   :     LPTSTR  GetName() { return m_lpRegName; };

  00012	6860		 ldr         r0,[r4,#4]

; 176  :             if (_tcsicmp( pCurValue->GetName(),lpValueName)==0) {

  00014	4629		 mov         r1,r5
  00016	f000 f800	 bl          _wcsicmp
  0001a	b130		 cbz         r0,|$LN14@RegFindVal|

; 178  :             }
; 179  :             else
; 180  :                 pCurValue=(RegValue *)pCurValue->GetNextRegKeyOrValuePtr();

  0001c	68e4		 ldr         r4,[r4,#0xC]
  0001e		 |$LN16@RegFindVal|

; 175  :         while (pCurValue) {

  0001e	2c00		 cmp         r4,#0
  00020	d1f7		 bne         |$LL4@RegFindVal|

; 181  :         }
; 182  :         return ERROR_NO_MORE_ITEMS;

  00022	f240 1003	 mov         r0,#0x103
  00026		 |$LN5@RegFindVal|
  00026		 |$M21|

; 183  :         
; 184  :     }

  00026	e8bd 88f0	 pop         {r4-r7,r11,pc}
  0002a		 |$LN14@RegFindVal|

; 177  :                 return (pCurValue->GetRegValue(pvData,pdwSize,pdwType)?ERROR_SUCCESS :ERROR_INVALID_PARAMETER);

  0002a	4620		 mov         r0,r4
  0002c	6824		 ldr         r4,[r4]
  0002e	9b06		 ldr         r3,[sp,#0x18]
  00030	4632		 mov         r2,r6
  00032	68a4		 ldr         r4,[r4,#8]
  00034	4639		 mov         r1,r7
  00036	47a0		 blx         r4
  00038	b108		 cbz         r0,|$LN7@RegFindVal|
  0003a	2000		 movs        r0,#0
  0003c	e7f3		 b           |$LN5@RegFindVal|
  0003e		 |$LN7@RegFindVal|
  0003e	2057		 movs        r0,#0x57
  00040	e7f1		 b           |$LN5@RegFindVal|
  00042		 |$M19|

			 ENDP  ; |?RegFindValue@RegKey@@QAAJPBGPAXPAK2@Z|, RegKey::RegFindValue

	EXPORT	|?RegFindKey@RegKey@@QAAPAV1@PBG@Z|	; RegKey::RegFindKey

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?RegFindKey@RegKey@@QAAPAV1@PBG@Z| DCD imagerel |$LN18@RegFindKey|
	DCD	0x31604d
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?RegFindKey@RegKey@@QAAPAV1@PBG@Z| PROC ; RegKey::RegFindKey

; 163  :     RegKey * RegFindKey(LPCTSTR lpKeyPath) {

  00000		 |$LN18@RegFindKey|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M16|

; 164  :         RegKey * pReturnKey =  m_pRegKeyList;

  00008	6984		 ldr         r4,[r0,#0x18]
  0000a	460d		 mov         r5,r1
  0000c	e005		 b           |$LN14@RegFindKey|
  0000e		 |$LL4@RegFindKey|

; 45   :     LPTSTR  GetName() { return m_lpRegName; };

  0000e	6860		 ldr         r0,[r4,#4]

; 166  :             if (_tcsicmp( pReturnKey->GetName(),lpKeyPath)==0)

  00010	4629		 mov         r1,r5
  00012	f000 f800	 bl          _wcsicmp
  00016	b118		 cbz         r0,|$LN5@RegFindKey|

; 167  :                 return pReturnKey;
; 168  :             else
; 169  :                 pReturnKey=(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();

  00018	68e4		 ldr         r4,[r4,#0xC]
  0001a		 |$LN14@RegFindKey|

; 165  :         while (pReturnKey) {

  0001a	2c00		 cmp         r4,#0
  0001c	d1f7		 bne         |$LL4@RegFindKey|

; 170  :         }
; 171  :         return NULL;

  0001e	2400		 movs        r4,#0
  00020		 |$LN5@RegFindKey|

; 172  :     }

  00020	4620		 mov         r0,r4
  00022		 |$M19|
  00022	e8bd 8830	 pop         {r4,r5,r11,pc}
  00026		 |$M17|

			 ENDP  ; |?RegFindKey@RegKey@@QAAPAV1@PBG@Z|, RegKey::RegFindKey

	EXPORT	|?Init@RegValue@@UAAHXZ|		; RegValue::Init
	EXPORT	|?GetRegValue@RegValue@@UAAHPAXPAK1@Z|	; RegValue::GetRegValue
	EXPORT	|??_7RegValue@@6B@| [ DATA ]		; RegValue::`vftable'
	EXPORT	|??0RegValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| ; RegValue::RegValue
	IMPORT	|??_ERegValue@@UAAPAXI@Z|, WEAK |??_GRegValue@@UAAPAXI@Z| ; RegValue::`vector deleting destructor', RegValue::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0RegValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| DCD imagerel |$LN6@RegValue|
	DCD	0xfd306049

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7RegValue@@6B@| DCD |?Init@RegValue@@UAAHXZ|	; RegValue::`vftable'
	DCD	|??_ERegValue@@UAAPAXI@Z|
	DCD	|?GetRegValue@RegValue@@UAAHPAXPAK1@Z|
	DCD	|?UpdateRegValue@RegValue@@MAAHXZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0RegValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| PROC ; RegValue::RegValue

; 60   :     RegValue(HKEY hKey,LPCTSTR lpRegName,RegValue * pNextRegValue ) :  RegKeyOrValue(hKey,lpRegName,pNextRegValue) { 

  00000		 |$LN6@RegValue|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M4|
  00008	4604		 mov         r4,r0
  0000a	f000 f800	 bl          |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|
  0000e	4b05		 ldr         r3,|$LN9@RegValue|	; =|??_7RegValue@@6B@|

; 61   :         m_dwValueSize=0;
; 62   :         m_lpByteValue = NULL;
; 63   :         UpdateRegValue();

  00010	4620		 mov         r0,r4
  00012	6023		 str         r3,[r4]
  00014	2300		 movs        r3,#0
  00016	6163		 str         r3,[r4,#0x14]
  00018	61a3		 str         r3,[r4,#0x18]
  0001a	f000 f800	 bl          |?UpdateRegValue@RegValue@@MAAHXZ|

; 64   :     };

  0001e	4620		 mov         r0,r4
  00020		 |$M7|
  00020	e8bd 8818	 pop         {r3,r4,r11,pc}
  00024		 |$LN8@RegValue|
  00024		 |$LN9@RegValue|
  00024	0000 0000	 DCD         |??_7RegValue@@6B@|
  00028		 |$M5|

			 ENDP  ; |??0RegValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|, RegValue::RegValue


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GCMiniThread@@UAAPAXI@Z| DCD imagerel |$LN12@scalar|
	DCD	0xfd326079
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GCMiniThread@@UAAPAXI@Z| PROC	; CMiniThread::`scalar deleting destructor'
  00000		 |$LN12@scalar|
  00000	e92d 4878	 push        {r3-r6,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M10|
  00008	4604		 mov         r4,r0

; 114  :         if( m_hThreadHandle )

  0000a	68a0		 ldr         r0,[r4,#8]

; 44   :     {

  0000c	4b0b		 ldr         r3,|$LN15@scalar|	; =|??_7CMiniThread@@6B@|
  0000e	460d		 mov         r5,r1
  00010	6023		 str         r3,[r4]

; 114  :         if( m_hThreadHandle )

  00012	b150		 cbz         r0,|$LN6@scalar|

; 115  :         {
; 116  : #pragma prefast(suppress: 6258, "Using TerminateThread does not allow proper thread clean up")
; 117  :             BOOL bReturn = ::TerminateThread( m_hThreadHandle, ( DWORD ) - 1 ); // terminate abnormal

  00014	f06f 0600	 mvn         r6,#0
  00018	4631		 mov         r1,r6
  0001a	f000 f800	 bl          TerminateThread

; 118  :             m_dwExitCode = (DWORD)-1;
; 119  :             ::CloseHandle( m_hThreadHandle );

  0001e	68a0		 ldr         r0,[r4,#8]
  00020	6166		 str         r6,[r4,#0x14]
  00022	f000 f800	 bl          CloseHandle

; 120  :             m_hThreadHandle = NULL;

  00026	2300		 movs        r3,#0
  00028	60a3		 str         r3,[r4,#8]
  0002a		 |$LN6@scalar|
  0002a	f015 0f01	 tst         r5,#1
  0002e	d002		 beq         |$LN1@scalar|
  00030	4620		 mov         r0,r4
  00032	f000 f800	 bl          |??3@YAXPAX@Z|
  00036		 |$LN1@scalar|
  00036	4620		 mov         r0,r4
  00038		 |$M13|
  00038	e8bd 8878	 pop         {r3-r6,r11,pc}
  0003c		 |$LN14@scalar|
  0003c		 |$LN15@scalar|
  0003c	0000 0000	 DCD         |??_7CMiniThread@@6B@|
  00040		 |$M11|

			 ENDP  ; |??_GCMiniThread@@UAAPAXI@Z|, CMiniThread::`scalar deleting destructor'

	EXPORT	|?EnumerateAllKey@RegKey@@IAAHXZ|	; RegKey::EnumerateAllKey
	IMPORT	|RegEnumKeyExW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?EnumerateAllKey@RegKey@@IAAHXZ| DCD imagerel |$LN28@EnumerateA|
	DCD	imagerel |$unwind2$?EnumerateAllKey@RegKey@@IAAHXZ|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?EnumerateAllKey@RegKey@@IAAHXZ| DCD 0x33b00056
	DCD	0x1e888e8
	DCD	0xe8ffdffc
	DCD	0xffdf01
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffd9
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?EnumerateAllKey@RegKey@@IAAHXZ| PROC	; RegKey::EnumerateAllKey

; 235  :     BOOL EnumerateAllKey() {

  00000		 |$LN28@EnumerateA|
  00000	e92d 4ff0	 push        {r4-r11,lr}
  00004	f20d 0b1c	 addw        r11,sp,#0x1C
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d20	 subw        sp,sp,#0x220
  00010		 |$M26|
  00010	4606		 mov         r6,r0

; 236  :         BOOL fReturn = FALSE;
; 237  :         if (m_RegKey) {

  00012	6933		 ldr         r3,[r6,#0x10]
  00014	2500		 movs        r5,#0
  00016	2b00		 cmp         r3,#0
  00018	d041		 beq         |$LN23@EnumerateA|

; 238  :             TCHAR regName[MAX_PATH];
; 239  :             fReturn = TRUE;

  0001a	f8df 8090	 ldr         r8,|$LN31@EnumerateA| ; =|??_7RegKey@@6B@|
  0001e	2501		 movs        r5,#1

; 240  :             for (DWORD RegEnum = 0;;RegEnum++) {

  00020	2700		 movs        r7,#0
  00022	f04f 0a00	 mov         r10,#0
  00026	f44f 7982	 mov         r9,#0x104
  0002a		 |$LN24@EnumerateA|

; 241  :                 DWORD ValLen = MAX_PATH;
; 242  :                 LONG status = ::RegEnumKeyEx(m_RegKey, RegEnum, regName, &ValLen, NULL, NULL, NULL, NULL);

  0002a	6930		 ldr         r0,[r6,#0x10]
  0002c	ab04		 add         r3,sp,#0x10
  0002e	aa06		 add         r2,sp,#0x18
  00030	4639		 mov         r1,r7
  00032	2400		 movs        r4,#0
  00034	f8cd 9010	 str         r9,[sp,#0x10]
  00038	f8cd a00c	 str         r10,[sp,#0xC]
  0003c	f8cd a008	 str         r10,[sp,#8]
  00040	f8cd a004	 str         r10,[sp,#4]
  00044	f8cd a000	 str         r10,[sp]
  00048	f000 f800	 bl          RegEnumKeyExW

; 243  :                 if (status == ERROR_SUCCESS || status == ERROR_MORE_DATA) {

  0004c	b108		 cbz         r0,|$LN5@EnumerateA|
  0004e	28ea		 cmp         r0,#0xEA
  00050	d125		 bne         |$LN23@EnumerateA|
  00052		 |$LN5@EnumerateA|

; 244  :                     regName[MAX_PATH -1] =0;
; 245  :                     RegKey * newKey = new RegKey (m_RegKey,regName,0,m_pRegKeyList);

  00052	201c		 movs        r0,#0x1C
  00054	f8ad 421e	 strh        r4,[sp,#0x21E]
  00058	f000 f800	 bl          |??2@YAPAXI@Z|
  0005c	4604		 mov         r4,r0
  0005e	b16c		 cbz         r4,|$LN15@EnumerateA|

; 110  :     RegKey(HKEY hCurrentOpenKey, LPCTSTR lpKeyPath,DWORD /*dwFlag*/, RegKey * pNextRegKey) : RegKeyOrValue( hCurrentOpenKey,lpKeyPath,pNextRegKey) {

  00060	69b3		 ldr         r3,[r6,#0x18]
  00062	6931		 ldr         r1,[r6,#0x10]
  00064	aa06		 add         r2,sp,#0x18
  00066	f000 f800	 bl          |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|
  0006a	f8c4 8000	 str         r8,[r4]

; 111  :         m_pRegValueList=NULL;

  0006e	f8c4 a014	 str         r10,[r4,#0x14]

; 112  :         m_pRegKeyList=NULL;

  00072	f8c4 a018	 str         r10,[r4,#0x18]

; 113  :         m_RegKey = NULL;

  00076	f8c4 a010	 str         r10,[r4,#0x10]

; 244  :                     regName[MAX_PATH -1] =0;
; 245  :                     RegKey * newKey = new RegKey (m_RegKey,regName,0,m_pRegKeyList);

  0007a	e000		 b           |$LN16@EnumerateA|
  0007c		 |$LN15@EnumerateA|
  0007c	2400		 movs        r4,#0
  0007e		 |$LN16@EnumerateA|

; 246  :                     if (newKey && newKey->Init())

  0007e	b15c		 cbz         r4,|$LN17@EnumerateA|
  00080	6823		 ldr         r3,[r4]
  00082	4620		 mov         r0,r4
  00084	681b		 ldr         r3,[r3]
  00086	4798		 blx         r3
  00088	b108		 cbz         r0,|$LN4@EnumerateA|

; 247  :                         m_pRegKeyList = newKey;

  0008a	61b4		 str         r4,[r6,#0x18]

; 248  :                     else{

  0008c	e005		 b           |$LN8@EnumerateA|
  0008e		 |$LN4@EnumerateA|

; 249  :                         if (newKey)
; 250  :                             delete newKey;

  0008e	6823		 ldr         r3,[r4]
  00090	2101		 movs        r1,#1
  00092	4620		 mov         r0,r4
  00094	685b		 ldr         r3,[r3,#4]
  00096	4798		 blx         r3
  00098		 |$LN17@EnumerateA|

; 251  :                         fReturn = FALSE; // Not all the key has been enumerated.

  00098	2500		 movs        r5,#0
  0009a		 |$LN8@EnumerateA|

; 240  :             for (DWORD RegEnum = 0;;RegEnum++) {

  0009a	3701		 adds        r7,#1
  0009c	e7c5		 b           |$LN24@EnumerateA|
  0009e		 |$LN23@EnumerateA|

; 252  :                     }
; 253  :                 }
; 254  :                 else
; 255  :                     break;
; 256  :             }
; 257  :         }
; 258  :         return fReturn;
; 259  :     }

  0009e	4628		 mov         r0,r5
  000a0		 |$M29|
  000a0	f20d 2d20	 addw        sp,sp,#0x220
  000a4	f000 f800	 bl          __security_pop_cookie
  000a8	e8bd 8ff0	 pop         {r4-r11,pc}
  000ac		 |$LN30@EnumerateA|
  000ac		 |$LN31@EnumerateA|
  000ac	0000 0000	 DCD         |??_7RegKey@@6B@|
  000b0		 |$M27|

			 ENDP  ; |?EnumerateAllKey@RegKey@@IAAHXZ|, RegKey::EnumerateAllKey

	EXPORT	|??1RegKey@@UAA@XZ|			; RegKey::~RegKey
	IMPORT	|RegCloseKey|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??1RegKey@@UAA@XZ| DCD imagerel |$LN30@RegKey|
	DCD	0x3160b5
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1RegKey@@UAA@XZ| PROC		; RegKey::~RegKey

; 119  :     virtual ~RegKey() {

  00000		 |$LN30@RegKey|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M28|
  00008	4b15		 ldr         r3,|$LN34@RegKey|	; =|??_7RegKey@@6B@|
  0000a	4604		 mov         r4,r0
  0000c	6023		 str         r3,[r4]

; 125  :     //  Function 
; 126  :     BOOL    RefreshAll (BOOL bDoNotCloseKey = FALSE) {
; 127  :         BOOL fReturn = FALSE;
; 128  :         if(m_RegKey == NULL && RegOpenKeyEx(m_hParentKey, m_lpRegName, 0, 0, &m_RegKey ) != ERROR_SUCCESS )  {
; 129  :             m_RegKey = NULL;
; 130  :         }
; 131  :         if (m_RegKey) {
; 132  :             // Backup old key first
; 133  :             RegValue * m_pBackupRegValueList = m_pRegValueList;
; 134  :             RegKey *   m_pBackupRegKeyList = m_pRegKeyList;
; 135  :             m_pRegValueList = NULL;
; 136  :             m_pRegKeyList = NULL;
; 137  :             if ( EnumerateAllKey() && EnumerateAllValue()) { // Succeed to enumerate new key. Delete old key.
; 138  :                 while (m_pBackupRegValueList ) {
; 139  :                     RegValue * pNextRegValue = (RegValue * )m_pBackupRegValueList->GetNextRegKeyOrValuePtr() ;
; 140  :                     delete m_pBackupRegValueList;
; 141  :                     m_pBackupRegValueList = pNextRegValue;
; 142  :                 }
; 143  :                 while (m_pBackupRegKeyList) {
; 144  :                     RegKey * pNextKey = (RegKey *) m_pBackupRegKeyList->GetNextRegKeyOrValuePtr();
; 145  :                     delete m_pBackupRegKeyList;
; 146  :                     m_pBackupRegKeyList =  pNextKey ;
; 147  :                 }
; 148  :                 fReturn = TRUE;
; 149  :             }
; 150  :             else { // Fails, We need recover old key
; 151  :                 DeleteAll(); // Delete partial succeeded key and value.
; 152  :                 m_pRegValueList = m_pBackupRegValueList;
; 153  :                 m_pRegKeyList = m_pBackupRegKeyList ;
; 154  :                 fReturn = FALSE;
; 155  :             }
; 156  :             if (!bDoNotCloseKey) {
; 157  :                 RegCloseKey( m_RegKey );
; 158  :                 m_RegKey = NULL;
; 159  :             }
; 160  :         }
; 161  :         return fReturn;
; 162  :     }
; 163  :     RegKey * RegFindKey(LPCTSTR lpKeyPath) {
; 164  :         RegKey * pReturnKey =  m_pRegKeyList;
; 165  :         while (pReturnKey) {
; 166  :             if (_tcsicmp( pReturnKey->GetName(),lpKeyPath)==0)
; 167  :                 return pReturnKey;
; 168  :             else
; 169  :                 pReturnKey=(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();
; 170  :         }
; 171  :         return NULL;
; 172  :     }
; 173  :     LONG RegFindValue(LPCTSTR lpValueName, PVOID pvData, LPDWORD pdwSize, LPDWORD pdwType) {
; 174  :         RegValue * pCurValue =  m_pRegValueList;
; 175  :         while (pCurValue) {
; 176  :             if (_tcsicmp( pCurValue->GetName(),lpValueName)==0) {
; 177  :                 return (pCurValue->GetRegValue(pvData,pdwSize,pdwType)?ERROR_SUCCESS :ERROR_INVALID_PARAMETER);
; 178  :             }
; 179  :             else
; 180  :                 pCurValue=(RegValue *)pCurValue->GetNextRegKeyOrValuePtr();
; 181  :         }
; 182  :         return ERROR_NO_MORE_ITEMS;
; 183  :         
; 184  :     }
; 185  :     LONG RegEnum(RegKeyOrValue * pList, DWORD dwReqIndex, __out_bcount(*lpcbName) PWSTR lpName, PDWORD lpcbName) {
; 186  :         RegKeyOrValue * pReturnKey = pList;
; 187  :         for (DWORD dwIndex = 0; pReturnKey!=NULL &&  dwIndex<dwReqIndex; dwIndex++) {
; 188  :             pReturnKey =(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();
; 189  :         }
; 190  :         if (pReturnKey && pReturnKey->GetName()) {
; 191  :             LONG lReturn = ERROR_SUCCESS;
; 192  :             if ( lpcbName) {
; 193  :                 DWORD cbSize = (_tcslen(pReturnKey->GetName()) + 1) * sizeof(lpName[0]) ;
; 194  :                 if ( lpName) {
; 195  :                     VERIFY(SUCCEEDED(StringCbCopy(lpName,*lpcbName,pReturnKey->GetName())));
; 196  :                     if (cbSize>*lpcbName)
; 197  :                         lReturn = ERROR_MORE_DATA;
; 198  :                 }
; 199  :                 *lpcbName =  cbSize;
; 200  :             }
; 201  :             return lReturn;
; 202  :         }
; 203  :         else
; 204  :             return ERROR_NO_MORE_ITEMS;
; 205  :     }
; 206  :     LONG RegEnumKeyEx( DWORD dwReqIndex, __out_bcount(*lpcbName) PWSTR lpName, PDWORD lpcbName) {
; 207  :         return RegEnum(m_pRegKeyList, dwReqIndex, lpName, lpcbName) ;
; 208  :     }
; 209  :     LONG RegEnumValue( DWORD dwReqIndex,__out_bcount(*lpcbValueName)LPWSTR lpValueName, LPDWORD lpcbValueName) {
; 210  :         return RegEnum(m_pRegValueList, dwReqIndex, lpValueName, lpcbValueName) ;
; 211  :     }
; 212  : 
; 213  : protected:
; 214  :     RegKeyOrValue * SearchByName(RegKeyOrValue * pRegKeyOrValueList,LPCTSTR pszName) {
; 215  :         while (pRegKeyOrValueList) {
; 216  :             if (_tcsicmp(pRegKeyOrValueList->GetName(),pszName)== 0) // found it 
; 217  :                 break;
; 218  :             else
; 219  :                 pRegKeyOrValueList = pRegKeyOrValueList->GetNextRegKeyOrValuePtr();
; 220  :         }
; 221  :         return pRegKeyOrValueList;
; 222  :     }
; 223  :     void DeleteAll() {
; 224  :         while (m_pRegValueList) {

  0000e	6963		 ldr         r3,[r4,#0x14]
  00010	b153		 cbz         r3,|$LN22@RegKey|
  00012		 |$LL7@RegKey|

; 225  :             RegValue * pNextRegValue = (RegValue * )m_pRegValueList->GetNextRegKeyOrValuePtr() ;

  00012	6963		 ldr         r3,[r4,#0x14]
  00014	68dd		 ldr         r5,[r3,#0xC]

; 226  :             delete m_pRegValueList;

  00016	b123		 cbz         r3,|$LN10@RegKey|
  00018	4618		 mov         r0,r3
  0001a	681b		 ldr         r3,[r3]
  0001c	2101		 movs        r1,#1
  0001e	685b		 ldr         r3,[r3,#4]
  00020	4798		 blx         r3
  00022		 |$LN10@RegKey|

; 227  :             m_pRegValueList = pNextRegValue;

  00022	6165		 str         r5,[r4,#0x14]
  00024	2d00		 cmp         r5,#0
  00026	d1f4		 bne         |$LL7@RegKey|
  00028		 |$LN22@RegKey|

; 228  :         }
; 229  :         while (m_pRegKeyList) {

  00028	69a3		 ldr         r3,[r4,#0x18]
  0002a	b153		 cbz         r3,|$LN4@RegKey|
  0002c		 |$LL5@RegKey|

; 230  :             RegKey * pNextKey = (RegKey *) m_pRegKeyList->GetNextRegKeyOrValuePtr();

  0002c	69a3		 ldr         r3,[r4,#0x18]
  0002e	68dd		 ldr         r5,[r3,#0xC]

; 231  :             delete m_pRegKeyList;

  00030	b123		 cbz         r3,|$LN12@RegKey|
  00032	4618		 mov         r0,r3
  00034	681b		 ldr         r3,[r3]
  00036	2101		 movs        r1,#1
  00038	685b		 ldr         r3,[r3,#4]
  0003a	4798		 blx         r3
  0003c		 |$LN12@RegKey|

; 232  :             m_pRegKeyList =  pNextKey ;

  0003c	61a5		 str         r5,[r4,#0x18]
  0003e	2d00		 cmp         r5,#0
  00040	d1f4		 bne         |$LL5@RegKey|
  00042		 |$LN4@RegKey|

; 120  :         DeleteAll();
; 121  :         if (m_RegKey) {

  00042	6920		 ldr         r0,[r4,#0x10]
  00044	b108		 cbz         r0,|$LN1@RegKey|

; 122  :             RegCloseKey( m_RegKey );

  00046	f000 f800	 bl          RegCloseKey
  0004a		 |$LN1@RegKey|

; 41   :     virtual ~RegKeyOrValue() {

  0004a	4b04		 ldr         r3,|$LN33@RegKey|	; =|??_7RegKeyOrValue@@6B@|

; 42   :         if (m_lpRegName!=NULL)

  0004c	6860		 ldr         r0,[r4,#4]
  0004e	6023		 str         r3,[r4]
  00050	b108		 cbz         r0,|$LN18@RegKey|

; 43   :             delete m_lpRegName;

  00052	f000 f800	 bl          |??3@YAXPAX@Z|
  00056		 |$LN18@RegKey|
  00056		 |$M31|

; 123  :         }
; 124  :     }

  00056	e8bd 8830	 pop         {r4,r5,r11,pc}
  0005a		 |$LN35@RegKey|
  0005a		 |$M36|
  0005a	defe		 __debugbreak
  0005c		 |$LN32@RegKey|
  0005c		 |$LN33@RegKey|
  0005c	0000 0000	 DCD         |??_7RegKeyOrValue@@6B@|
  00060		 |$LN34@RegKey|
  00060	0000 0000	 DCD         |??_7RegKey@@6B@|
  00064		 |$M29|

			 ENDP  ; |??1RegKey@@UAA@XZ|, RegKey::~RegKey

	EXPORT	|?RegEnumValueW@RegKey@@QAAJKPAGPAK@Z|	; RegKey::RegEnumValueW

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?RegEnumValueW@RegKey@@QAAJKPAGPAK@Z| DCD imagerel |$LN27@RegEnumVal|
	DCD	0xfd3460b1
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?RegEnumValueW@RegKey@@QAAJKPAGPAK@Z| PROC ; RegKey::RegEnumValueW

; 209  :     LONG RegEnumValue( DWORD dwReqIndex,__out_bcount(*lpcbValueName)LPWSTR lpValueName, LPDWORD lpcbValueName) {

  00000		 |$LN27@RegEnumVal|
  00000	e92d 49f8	 push        {r3-r8,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M25|

; 186  :         RegKeyOrValue * pReturnKey = pList;

  00008	6940		 ldr         r0,[r0,#0x14]

; 187  :         for (DWORD dwIndex = 0; pReturnKey!=NULL &&  dwIndex<dwReqIndex; dwIndex++) {

  0000a	2400		 movs        r4,#0

; 209  :     LONG RegEnumValue( DWORD dwReqIndex,__out_bcount(*lpcbValueName)LPWSTR lpValueName, LPDWORD lpcbValueName) {

  0000c	461e		 mov         r6,r3
  0000e	4690		 mov         r8,r2

; 187  :         for (DWORD dwIndex = 0; pReturnKey!=NULL &&  dwIndex<dwReqIndex; dwIndex++) {

  00010	b1e8		 cbz         r0,|$LN7@RegEnumVal|
  00012		 |$LL10@RegEnumVal|
  00012	428c		 cmp         r4,r1
  00014	d203		 bcs         |$LN8@RegEnumVal|

; 188  :             pReturnKey =(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();

  00016	68c0		 ldr         r0,[r0,#0xC]
  00018	3401		 adds        r4,#1
  0001a	2800		 cmp         r0,#0
  0001c	d1f9		 bne         |$LL10@RegEnumVal|
  0001e		 |$LN8@RegEnumVal|

; 189  :         }
; 190  :         if (pReturnKey && pReturnKey->GetName()) {

  0001e	b1b0		 cbz         r0,|$LN7@RegEnumVal|
  00020	6845		 ldr         r5,[r0,#4]
  00022	b1a5		 cbz         r5,|$LN7@RegEnumVal|

; 191  :             LONG lReturn = ERROR_SUCCESS;

  00024	2400		 movs        r4,#0

; 192  :             if ( lpcbName) {

  00026	b1a6		 cbz         r6,|$LN3@RegEnumVal|

; 193  :                 DWORD cbSize = (_tcslen(pReturnKey->GetName()) + 1) * sizeof(lpName[0]) ;

  00028	4628		 mov         r0,r5
  0002a	f000 f800	 bl          wcslen
  0002e	1c43		 adds        r3,r0,#1
  00030	005f		 lsls        r7,r3,#1

; 194  :                 if ( lpName) {

  00032	f1b8 0f00	 cmp         r8,#0
  00036	d008		 beq         |$LN4@RegEnumVal|

; 195  :                     VERIFY(SUCCEEDED(StringCbCopy(lpName,*lpcbName,pReturnKey->GetName())));

  00038	6831		 ldr         r1,[r6]
  0003a	462a		 mov         r2,r5
  0003c	4640		 mov         r0,r8
  0003e	f000 f800	 bl          StringCbCopyW

; 196  :                     if (cbSize>*lpcbName)

  00042	6833		 ldr         r3,[r6]
  00044	429f		 cmp         r7,r3
  00046	d900		 bls         |$LN4@RegEnumVal|

; 197  :                         lReturn = ERROR_MORE_DATA;

  00048	24ea		 movs        r4,#0xEA
  0004a		 |$LN4@RegEnumVal|

; 198  :                 }
; 199  :                 *lpcbName =  cbSize;

  0004a	6037		 str         r7,[r6]

; 200  :             }
; 201  :             return lReturn;

  0004c	e001		 b           |$LN3@RegEnumVal|
  0004e		 |$LN7@RegEnumVal|

; 202  :         }
; 203  :         else
; 204  :             return ERROR_NO_MORE_ITEMS;

  0004e	f240 1403	 mov         r4,#0x103
  00052		 |$LN3@RegEnumVal|

; 210  :         return RegEnum(m_pRegValueList, dwReqIndex, lpValueName, lpcbValueName) ;
; 211  :     }

  00052	4620		 mov         r0,r4
  00054		 |$M28|
  00054	e8bd 89f8	 pop         {r3-r8,r11,pc}
  00058		 |$M26|

			 ENDP  ; |?RegEnumValueW@RegKey@@QAAJKPAGPAK@Z|, RegKey::RegEnumValueW

	EXPORT	|?RegEnumKeyExW@RegKey@@QAAJKPAGPAK@Z|	; RegKey::RegEnumKeyExW

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?RegEnumKeyExW@RegKey@@QAAJKPAGPAK@Z| DCD imagerel |$LN27@RegEnumKey|
	DCD	0xfd3460b1
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?RegEnumKeyExW@RegKey@@QAAJKPAGPAK@Z| PROC ; RegKey::RegEnumKeyExW

; 206  :     LONG RegEnumKeyEx( DWORD dwReqIndex, __out_bcount(*lpcbName) PWSTR lpName, PDWORD lpcbName) {

  00000		 |$LN27@RegEnumKey|
  00000	e92d 49f8	 push        {r3-r8,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M25|

; 186  :         RegKeyOrValue * pReturnKey = pList;

  00008	6980		 ldr         r0,[r0,#0x18]

; 187  :         for (DWORD dwIndex = 0; pReturnKey!=NULL &&  dwIndex<dwReqIndex; dwIndex++) {

  0000a	2400		 movs        r4,#0

; 206  :     LONG RegEnumKeyEx( DWORD dwReqIndex, __out_bcount(*lpcbName) PWSTR lpName, PDWORD lpcbName) {

  0000c	461e		 mov         r6,r3
  0000e	4690		 mov         r8,r2

; 187  :         for (DWORD dwIndex = 0; pReturnKey!=NULL &&  dwIndex<dwReqIndex; dwIndex++) {

  00010	b1e8		 cbz         r0,|$LN7@RegEnumKey|
  00012		 |$LL10@RegEnumKey|
  00012	428c		 cmp         r4,r1
  00014	d203		 bcs         |$LN8@RegEnumKey|

; 188  :             pReturnKey =(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();

  00016	68c0		 ldr         r0,[r0,#0xC]
  00018	3401		 adds        r4,#1
  0001a	2800		 cmp         r0,#0
  0001c	d1f9		 bne         |$LL10@RegEnumKey|
  0001e		 |$LN8@RegEnumKey|

; 189  :         }
; 190  :         if (pReturnKey && pReturnKey->GetName()) {

  0001e	b1b0		 cbz         r0,|$LN7@RegEnumKey|
  00020	6845		 ldr         r5,[r0,#4]
  00022	b1a5		 cbz         r5,|$LN7@RegEnumKey|

; 191  :             LONG lReturn = ERROR_SUCCESS;

  00024	2400		 movs        r4,#0

; 192  :             if ( lpcbName) {

  00026	b1a6		 cbz         r6,|$LN3@RegEnumKey|

; 193  :                 DWORD cbSize = (_tcslen(pReturnKey->GetName()) + 1) * sizeof(lpName[0]) ;

  00028	4628		 mov         r0,r5
  0002a	f000 f800	 bl          wcslen
  0002e	1c43		 adds        r3,r0,#1
  00030	005f		 lsls        r7,r3,#1

; 194  :                 if ( lpName) {

  00032	f1b8 0f00	 cmp         r8,#0
  00036	d008		 beq         |$LN4@RegEnumKey|

; 195  :                     VERIFY(SUCCEEDED(StringCbCopy(lpName,*lpcbName,pReturnKey->GetName())));

  00038	6831		 ldr         r1,[r6]
  0003a	462a		 mov         r2,r5
  0003c	4640		 mov         r0,r8
  0003e	f000 f800	 bl          StringCbCopyW

; 196  :                     if (cbSize>*lpcbName)

  00042	6833		 ldr         r3,[r6]
  00044	429f		 cmp         r7,r3
  00046	d900		 bls         |$LN4@RegEnumKey|

; 197  :                         lReturn = ERROR_MORE_DATA;

  00048	24ea		 movs        r4,#0xEA
  0004a		 |$LN4@RegEnumKey|

; 198  :                 }
; 199  :                 *lpcbName =  cbSize;

  0004a	6037		 str         r7,[r6]

; 200  :             }
; 201  :             return lReturn;

  0004c	e001		 b           |$LN3@RegEnumKey|
  0004e		 |$LN7@RegEnumKey|

; 202  :         }
; 203  :         else
; 204  :             return ERROR_NO_MORE_ITEMS;

  0004e	f240 1403	 mov         r4,#0x103
  00052		 |$LN3@RegEnumKey|

; 207  :         return RegEnum(m_pRegKeyList, dwReqIndex, lpName, lpcbName) ;
; 208  :     }

  00052	4620		 mov         r0,r4
  00054		 |$M28|
  00054	e8bd 89f8	 pop         {r3-r8,r11,pc}
  00058		 |$M26|

			 ENDP  ; |?RegEnumKeyExW@RegKey@@QAAJKPAGPAK@Z|, RegKey::RegEnumKeyExW

; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Init@RegValue@@UAAHXZ| PROC		; RegValue::Init

; 69   :     virtual BOOL Init() { return (m_dwValueSize!=NULL && m_lpByteValue!=NULL); };

  00000	6943		 ldr         r3,[r0,#0x14]
  00002	b11b		 cbz         r3,|$LN3@Init|
  00004	6983		 ldr         r3,[r0,#0x18]
  00006	b10b		 cbz         r3,|$LN3@Init|
  00008	2001		 movs        r0,#1
  0000a		 |$M6|
  0000a	4770		 bx          lr
  0000c		 |$LN3@Init|
  0000c	2000		 movs        r0,#0
  0000e		 |$M7|
  0000e	4770		 bx          lr

			 ENDP  ; |?Init@RegValue@@UAAHXZ|, RegValue::Init

	EXPORT	|??1RegValue@@UAA@XZ|			; RegValue::~RegValue

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??1RegValue@@UAA@XZ| DCD imagerel |$LN10@RegValue|
	DCD	0xfd30604d
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1RegValue@@UAA@XZ| PROC		; RegValue::~RegValue

; 65   :     virtual ~RegValue () {

  00000		 |$LN10@RegValue|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M8|
  00008	4604		 mov         r4,r0

; 66   :         if ( m_lpByteValue)

  0000a	69a0		 ldr         r0,[r4,#0x18]
  0000c	4b07		 ldr         r3,|$LN14@RegValue| ; =|??_7RegValue@@6B@|
  0000e	6023		 str         r3,[r4]
  00010	b108		 cbz         r0,|$LN1@RegValue|

; 67   :             delete  m_lpByteValue;

  00012	f000 f800	 bl          |??3@YAXPAX@Z|
  00016		 |$LN1@RegValue|

; 41   :     virtual ~RegKeyOrValue() {

  00016	4b04		 ldr         r3,|$LN13@RegValue| ; =|??_7RegKeyOrValue@@6B@|

; 42   :         if (m_lpRegName!=NULL)

  00018	6860		 ldr         r0,[r4,#4]
  0001a	6023		 str         r3,[r4]
  0001c	b108		 cbz         r0,|$LN4@RegValue|

; 43   :             delete m_lpRegName;

  0001e	f000 f800	 bl          |??3@YAXPAX@Z|
  00022		 |$LN4@RegValue|
  00022		 |$M11|

; 68   :     }

  00022	e8bd 8818	 pop         {r3,r4,r11,pc}
  00026		 |$LN15@RegValue|
  00026		 |$M16|
  00026	defe		 __debugbreak
  00028		 |$LN12@RegValue|
  00028		 |$LN13@RegValue|
  00028	0000 0000	 DCD         |??_7RegKeyOrValue@@6B@|
  0002c		 |$LN14@RegValue|
  0002c	0000 0000	 DCD         |??_7RegValue@@6B@|
  00030		 |$M9|

			 ENDP  ; |??1RegValue@@UAA@XZ|, RegValue::~RegValue

	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?GetRegValue@RegValue@@UAAHPAXPAK1@Z| DCD imagerel |$LN12@GetRegValu|
	DCD	0xfd326079
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?GetRegValue@RegValue@@UAAHPAXPAK1@Z| PROC ; RegValue::GetRegValue

; 70   :     virtual BOOL GetRegValue(PVOID pvData, LPDWORD pdwSize, LPDWORD pdwType)  {

  00000		 |$LN12@GetRegValu|
  00000	e92d 4878	 push        {r3-r6,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M10|
  00008	461e		 mov         r6,r3
  0000a	4604		 mov         r4,r0
  0000c	460b		 mov         r3,r1

; 71   :         if (m_lpByteValue &&  pdwSize ) {

  0000e	69a1		 ldr         r1,[r4,#0x18]
  00010	4615		 mov         r5,r2
  00012	b181		 cbz         r1,|$LN4@GetRegValu|
  00014	b17d		 cbz         r5,|$LN4@GetRegValu|

; 72   :             if (pvData)

  00016	b13b		 cbz         r3,|$LN3@GetRegValu|

; 73   :                 memcpy(pvData,m_lpByteValue, min (*pdwSize, m_dwValueSize));

  00018	682a		 ldr         r2,[r5]
  0001a	6960		 ldr         r0,[r4,#0x14]
  0001c	4282		 cmp         r2,r0
  0001e	d300		 bcc         |$LN8@GetRegValu|
  00020	4602		 mov         r2,r0
  00022		 |$LN8@GetRegValu|
  00022	4618		 mov         r0,r3
  00024	f000 f800	 bl          memcpy
  00028		 |$LN3@GetRegValu|

; 74   :             *pdwSize = m_dwValueSize;

  00028	6963		 ldr         r3,[r4,#0x14]

; 75   :             if (pdwType)

  0002a	602b		 str         r3,[r5]
  0002c	b10e		 cbz         r6,|$LN2@GetRegValu|

; 76   :                 *pdwType = m_dwValueType;

  0002e	6923		 ldr         r3,[r4,#0x10]
  00030	6033		 str         r3,[r6]
  00032		 |$LN2@GetRegValu|

; 77   :             return TRUE;

  00032	2001		 movs        r0,#1
  00034	e000		 b           |$LN1@GetRegValu|
  00036		 |$LN4@GetRegValu|

; 78   :         }
; 79   :         else
; 80   :             return FALSE;

  00036	2000		 movs        r0,#0
  00038		 |$LN1@GetRegValu|
  00038		 |$M13|

; 81   :     }

  00038	e8bd 8878	 pop         {r3-r6,r11,pc}
  0003c		 |$M11|

			 ENDP  ; |?GetRegValue@RegValue@@UAAHPAXPAK1@Z|, RegValue::GetRegValue

	EXPORT	|?EnumerateAllValue@RegKey@@IAAHXZ|	; RegKey::EnumerateAllValue
	IMPORT	|RegEnumValueW|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?EnumerateAllValue@RegKey@@IAAHXZ| DCD imagerel |$LN28@EnumerateA|
	DCD	imagerel |$unwind2$?EnumerateAllValue@RegKey@@IAAHXZ|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?EnumerateAllValue@RegKey@@IAAHXZ| DCD 0x33b00057
	DCD	0x1e888e8
	DCD	0xe8ffdffc
	DCD	0xffdf01
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffd9
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?EnumerateAllValue@RegKey@@IAAHXZ| PROC ; RegKey::EnumerateAllValue

; 260  :     BOOL EnumerateAllValue() {

  00000		 |$LN28@EnumerateA|
  00000	e92d 4ff0	 push        {r4-r11,lr}
  00004	f20d 0b1c	 addw        r11,sp,#0x1C
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d20	 subw        sp,sp,#0x220
  00010		 |$M26|
  00010	4606		 mov         r6,r0

; 261  :         BOOL fReturn = FALSE;
; 262  :         if (m_RegKey) {

  00012	6933		 ldr         r3,[r6,#0x10]
  00014	2500		 movs        r5,#0
  00016	2b00		 cmp         r3,#0
  00018	d042		 beq         |$LN23@EnumerateA|

; 263  :             fReturn = TRUE;

  0001a	f8df 8094	 ldr         r8,|$LN31@EnumerateA| ; =|??_7RegValue@@6B@|
  0001e	2501		 movs        r5,#1

; 264  :             TCHAR regName[MAX_PATH];
; 265  :             for (DWORD RegEnum = 0;;RegEnum++) {

  00020	2700		 movs        r7,#0
  00022	f04f 0a00	 mov         r10,#0
  00026	f44f 7982	 mov         r9,#0x104
  0002a		 |$LN24@EnumerateA|

; 266  :                 DWORD ValLen = MAX_PATH;
; 267  :                 LONG status = ::RegEnumValue (m_RegKey, RegEnum, regName, &ValLen, NULL, NULL, NULL, NULL);

  0002a	6930		 ldr         r0,[r6,#0x10]
  0002c	ab04		 add         r3,sp,#0x10
  0002e	aa06		 add         r2,sp,#0x18
  00030	4639		 mov         r1,r7
  00032	2400		 movs        r4,#0
  00034	f8cd 9010	 str         r9,[sp,#0x10]
  00038	f8cd a00c	 str         r10,[sp,#0xC]
  0003c	f8cd a008	 str         r10,[sp,#8]
  00040	f8cd a004	 str         r10,[sp,#4]
  00044	f8cd a000	 str         r10,[sp]
  00048	f000 f800	 bl          RegEnumValueW

; 268  :                 if (status == ERROR_SUCCESS || status == ERROR_MORE_DATA) {

  0004c	b108		 cbz         r0,|$LN5@EnumerateA|
  0004e	28ea		 cmp         r0,#0xEA
  00050	d126		 bne         |$LN23@EnumerateA|
  00052		 |$LN5@EnumerateA|

; 269  :                     regName[MAX_PATH -1] =0;
; 270  :                     RegValue* newValue = new RegValue(m_RegKey,regName,m_pRegValueList);

  00052	201c		 movs        r0,#0x1C
  00054	f8ad 421e	 strh        r4,[sp,#0x21E]
  00058	f000 f800	 bl          |??2@YAPAXI@Z|
  0005c	4604		 mov         r4,r0
  0005e	b174		 cbz         r4,|$LN15@EnumerateA|

; 60   :     RegValue(HKEY hKey,LPCTSTR lpRegName,RegValue * pNextRegValue ) :  RegKeyOrValue(hKey,lpRegName,pNextRegValue) { 

  00060	6973		 ldr         r3,[r6,#0x14]
  00062	6931		 ldr         r1,[r6,#0x10]
  00064	aa06		 add         r2,sp,#0x18
  00066	f000 f800	 bl          |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|

; 61   :         m_dwValueSize=0;
; 62   :         m_lpByteValue = NULL;
; 63   :         UpdateRegValue();

  0006a	4620		 mov         r0,r4
  0006c	f8c4 8000	 str         r8,[r4]
  00070	f8c4 a014	 str         r10,[r4,#0x14]
  00074	f8c4 a018	 str         r10,[r4,#0x18]
  00078	f000 f800	 bl          |?UpdateRegValue@RegValue@@MAAHXZ|

; 269  :                     regName[MAX_PATH -1] =0;
; 270  :                     RegValue* newValue = new RegValue(m_RegKey,regName,m_pRegValueList);

  0007c	e000		 b           |$LN16@EnumerateA|
  0007e		 |$LN15@EnumerateA|
  0007e	2400		 movs        r4,#0
  00080		 |$LN16@EnumerateA|

; 271  :                     if (newValue && newValue->Init())

  00080	b15c		 cbz         r4,|$LN17@EnumerateA|
  00082	6823		 ldr         r3,[r4]
  00084	4620		 mov         r0,r4
  00086	681b		 ldr         r3,[r3]
  00088	4798		 blx         r3
  0008a	b108		 cbz         r0,|$LN4@EnumerateA|

; 272  :                         m_pRegValueList = newValue;

  0008c	6174		 str         r4,[r6,#0x14]

; 273  :                     else {

  0008e	e005		 b           |$LN8@EnumerateA|
  00090		 |$LN4@EnumerateA|

; 274  :                         if (newValue) 
; 275  :                             delete newValue;

  00090	6823		 ldr         r3,[r4]
  00092	2101		 movs        r1,#1
  00094	4620		 mov         r0,r4
  00096	685b		 ldr         r3,[r3,#4]
  00098	4798		 blx         r3
  0009a		 |$LN17@EnumerateA|

; 276  :                         fReturn = FALSE;

  0009a	2500		 movs        r5,#0
  0009c		 |$LN8@EnumerateA|

; 264  :             TCHAR regName[MAX_PATH];
; 265  :             for (DWORD RegEnum = 0;;RegEnum++) {

  0009c	3701		 adds        r7,#1
  0009e	e7c4		 b           |$LN24@EnumerateA|
  000a0		 |$LN23@EnumerateA|

; 277  :                     }
; 278  :                 }
; 279  :                 else
; 280  :                     break;
; 281  :             }
; 282  :         }
; 283  :         return fReturn;
; 284  :     }

  000a0	4628		 mov         r0,r5
  000a2		 |$M29|
  000a2	f20d 2d20	 addw        sp,sp,#0x220
  000a6	f000 f800	 bl          __security_pop_cookie
  000aa	e8bd 8ff0	 pop         {r4-r11,pc}
  000ae		 |$LN32@EnumerateA|
  000ae		 |$M33|
  000ae	defe		 __debugbreak
  000b0		 |$LN30@EnumerateA|
  000b0		 |$LN31@EnumerateA|
  000b0	0000 0000	 DCD         |??_7RegValue@@6B@|
  000b4		 |$M27|

			 ENDP  ; |?EnumerateAllValue@RegKey@@IAAHXZ|, RegKey::EnumerateAllValue

	EXPORT	|??_ESystemNotifyRegKey@@WBM@AAPAXI@Z|	; [thunk]:SystemNotifyRegKey::`vector deleting destructor'
	EXPORT	|?ThreadRun@SystemNotifyRegKey@@EAAKXZ|	; SystemNotifyRegKey::ThreadRun
	EXPORT	|??_7SystemNotifyRegKey@@6BCMiniThread@@@| [ DATA ] ; SystemNotifyRegKey::`vftable'
	EXPORT	|?Init@SystemNotifyRegKey@@UAAHXZ|	; SystemNotifyRegKey::Init
	EXPORT	|??_7SystemNotifyRegKey@@6BRegKey@@@| [ DATA ] ; SystemNotifyRegKey::`vftable'
	EXPORT	|??0SystemNotifyRegKey@@QAA@PAUHKEY__@@PBG@Z| ; SystemNotifyRegKey::SystemNotifyRegKey
	IMPORT	|??_ESystemNotifyRegKey@@UAAPAXI@Z|, WEAK |??_GSystemNotifyRegKey@@UAAPAXI@Z| ; SystemNotifyRegKey::`vector deleting destructor', SystemNotifyRegKey::`scalar deleting destructor'
	IMPORT	|CreateEventW|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|CeFindFirstRegChange|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??0SystemNotifyRegKey@@QAA@PAUHKEY__@@PBG@Z| DCD imagerel |$LN17@SystemNoti|
	DCD	0xfdb26125

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7SystemNotifyRegKey@@6BRegKey@@@| DCD |?Init@SystemNotifyRegKey@@UAAHXZ| ; SystemNotifyRegKey::`vftable'
	DCD	|??_ESystemNotifyRegKey@@UAAPAXI@Z|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7SystemNotifyRegKey@@6BCMiniThread@@@| DCD |??_ESystemNotifyRegKey@@WBM@AAPAXI@Z| ; SystemNotifyRegKey::`vftable'
	DCD	|?ThreadRun@SystemNotifyRegKey@@EAAKXZ|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\public\common\oak\inc\cmthread.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\cmthread.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??0SystemNotifyRegKey@@QAA@PAUHKEY__@@PBG@Z| PROC ; SystemNotifyRegKey::SystemNotifyRegKey

; 294  :         ,CMiniThread(0,TRUE ){

  00000		 |$LN17@SystemNoti|
  00000	e92d 487e	 push        {r1-r6,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M15|

; 110  :     RegKey(HKEY hCurrentOpenKey, LPCTSTR lpKeyPath,DWORD /*dwFlag*/, RegKey * pNextRegKey) : RegKeyOrValue( hCurrentOpenKey,lpKeyPath,pNextRegKey) {

  00008	2300		 movs        r3,#0

; 294  :         ,CMiniThread(0,TRUE ){

  0000a	4604		 mov         r4,r0

; 110  :     RegKey(HKEY hCurrentOpenKey, LPCTSTR lpKeyPath,DWORD /*dwFlag*/, RegKey * pNextRegKey) : RegKeyOrValue( hCurrentOpenKey,lpKeyPath,pNextRegKey) {

  0000c	f000 f800	 bl          |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|
  00010	4b24		 ldr         r3,|$LN24@SystemNoti| ; =|??_7RegKey@@6B@|

; 111  :         m_pRegValueList=NULL;

  00012	2600		 movs        r6,#0
; File c:\wince800\public\common\oak\inc\csync.h

; 38   :         InitializeCriticalSection( &m_CSection );

  00014	f114 0034	 adds        r0,r4,#0x34
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 110  :     RegKey(HKEY hCurrentOpenKey, LPCTSTR lpKeyPath,DWORD /*dwFlag*/, RegKey * pNextRegKey) : RegKeyOrValue( hCurrentOpenKey,lpKeyPath,pNextRegKey) {

  00018	6023		 str         r3,[r4]

; 111  :         m_pRegValueList=NULL;

  0001a	6166		 str         r6,[r4,#0x14]

; 112  :         m_pRegKeyList=NULL;

  0001c	61a6		 str         r6,[r4,#0x18]

; 113  :         m_RegKey = NULL;

  0001e	6126		 str         r6,[r4,#0x10]
; File c:\wince800\public\common\oak\inc\csync.h

; 38   :         InitializeCriticalSection( &m_CSection );

  00020	f000 f800	 bl          InitializeCriticalSection
; File c:\wince800\public\common\oak\inc\cmthread.h

; 29   :     CMiniThread( DWORD dwStackSize = 0, BOOL bSuspended = FALSE )

  00024	4b1e		 ldr         r3,|$LN23@SystemNoti| ; =|??_7CMiniThread@@6B@|

; 38   :                                           &m_dwThreadId );

  00026	4a1d		 ldr         r2,|$LN22@SystemNoti| ; =|?ThreadProc@CMiniThread@@CAKPAX@Z|
  00028	43f5		 mvns        r5,r6
  0002a	61e3		 str         r3,[r4,#0x1C]
  0002c	f114 0328	 adds        r3,r4,#0x28
  00030	9301		 str         r3,[sp,#4]
  00032	2304		 movs        r3,#4
  00034	9300		 str         r3,[sp]
  00036	f114 031c	 adds        r3,r4,#0x1C
  0003a	2100		 movs        r1,#0
  0003c	2000		 movs        r0,#0
  0003e	6226		 str         r6,[r4,#0x20]
  00040	6325		 str         r5,[r4,#0x30]
  00042	f000 f800	 bl          CreateThread

; 39   :         m_bSuspendFlag = bSuspended;

  00046	2301		 movs        r3,#1
  00048	62e3		 str         r3,[r4,#0x2C]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 294  :         ,CMiniThread(0,TRUE ){

  0004a	4b13		 ldr         r3,|$LN21@SystemNoti| ; =|??_7SystemNotifyRegKey@@6BRegKey@@@|
; File c:\wince800\public\common\oak\inc\cmthread.h

; 38   :                                           &m_dwThreadId );

  0004c	6260		 str         r0,[r4,#0x24]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 296  :         m_hTerminated = CreateEvent(NULL,TRUE,FALSE,NULL);

  0004e	2200		 movs        r2,#0
  00050	6023		 str         r3,[r4]
  00052	4b10		 ldr         r3,|$LN20@SystemNoti| ; =|??_7SystemNotifyRegKey@@6BCMiniThread@@@|
  00054	2101		 movs        r1,#1
  00056	2000		 movs        r0,#0
  00058	61e3		 str         r3,[r4,#0x1C]
  0005a	2300		 movs        r3,#0
  0005c	64a5		 str         r5,[r4,#0x48]
  0005e	f000 f800	 bl          CreateEventW
  00062	64e0		 str         r0,[r4,#0x4C]

; 297  :         if(m_RegKey == NULL && RegOpenKeyEx(m_hParentKey, m_lpRegName, 0, 0, &m_RegKey ) != ERROR_SUCCESS )  {

  00064	6920		 ldr         r0,[r4,#0x10]
  00066	b960		 cbnz        r0,|$LN13@SystemNoti|
  00068	6861		 ldr         r1,[r4,#4]
  0006a	68a0		 ldr         r0,[r4,#8]
  0006c	f114 0310	 adds        r3,r4,#0x10
  00070	9300		 str         r3,[sp]
  00072	2300		 movs        r3,#0
  00074	2200		 movs        r2,#0
  00076	f000 f800	 bl          RegOpenKeyExW
  0007a	b100		 cbz         r0,|$LN2@SystemNoti|

; 298  :             m_RegKey = NULL;

  0007c	6126		 str         r6,[r4,#0x10]
  0007e		 |$LN2@SystemNoti|

; 299  :         }
; 300  :         if (m_RegKey!=NULL) {

  0007e	6920		 ldr         r0,[r4,#0x10]
  00080	b120		 cbz         r0,|$LN1@SystemNoti|
  00082		 |$LN13@SystemNoti|

; 301  :             m_hNotifyEvent=CeFindFirstRegChange(m_RegKey,TRUE,REG_NOTIFY_CHANGE_LAST_SET);

  00082	2204		 movs        r2,#4
  00084	2101		 movs        r1,#1
  00086	f000 f800	 bl          CeFindFirstRegChange
  0008a	64a0		 str         r0,[r4,#0x48]
  0008c		 |$LN1@SystemNoti|

; 302  :         }
; 303  :      }

  0008c	4620		 mov         r0,r4
  0008e		 |$M18|
  0008e	e8bd 887e	 pop         {r1-r6,r11,pc}
  00092		 |$LN25@SystemNoti|
  00092		 |$M26|
  00092	defe		 __debugbreak
  00094		 |$LN19@SystemNoti|
  00094		 |$LN20@SystemNoti|
  00094	0000 0000	 DCD         |??_7SystemNotifyRegKey@@6BCMiniThread@@@|
  00098		 |$LN21@SystemNoti|
  00098	0000 0000	 DCD         |??_7SystemNotifyRegKey@@6BRegKey@@@|
  0009c		 |$LN22@SystemNoti|
  0009c	0000 0000	 DCD         |?ThreadProc@CMiniThread@@CAKPAX@Z|
  000a0		 |$LN23@SystemNoti|
  000a0	0000 0000	 DCD         |??_7CMiniThread@@6B@|
  000a4		 |$LN24@SystemNoti|
  000a4	0000 0000	 DCD         |??_7RegKey@@6B@|
  000a8		 |$M16|

			 ENDP  ; |??0SystemNotifyRegKey@@QAA@PAUHKEY__@@PBG@Z|, SystemNotifyRegKey::SystemNotifyRegKey


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GRegKey@@UAAPAXI@Z| DCD imagerel |$LN7@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GRegKey@@UAAPAXI@Z| PROC		; RegKey::`scalar deleting destructor'
  00000		 |$LN7@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M5|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1RegKey@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M8|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M6|

			 ENDP  ; |??_GRegKey@@UAAPAXI@Z|, RegKey::`scalar deleting destructor'

	EXPORT	|??_C@_1KG@LONBFMIG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAn?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAl?$AAa?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@NLKKHEA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAC?$AAl?$AAa?$AAs?$AAs?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@HGNICGBK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAE?$AAn?$AAu?$AAm?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@MCGPLBI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@HNABGIFC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAk?$AAi?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@BJILKDJL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@NKMAIPDH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|?RegReadClassDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@PBU_GUID@@PAU1@@Z| ; RegReadClassDeviceRestrictions
	IMPORT	|PowerRestrictionCreate|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?RegReadClassDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@PBU_GUID@@PAU1@@Z| DCD imagerel |$LN83@RegReadCla|
	DCD	imagerel |$unwind2$?RegReadClassDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@PBU_GUID@@PAU1@@Z|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?RegReadClassDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@PBU_GUID@@PAU1@@Z| DCD 0x33b000db
	DCD	0x1e892e8
	DCD	0xe8ffdffc
	DCD	0xffdf01
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffd9

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@NKMAIPDH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@BJILKDJL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "r", 0x0, "i", 0x0, "c", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "D"
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@| DCB "d", 0x0
	DCB	"e", 0x0, "f", 0x0, "a", 0x0, "u", 0x0, "l", 0x0, "t", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@HNABGIFC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAk?$AAi?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "k", 0x0, "i"
	DCB	0x0, "p", 0x0, "p", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "f", 0x0, "l", 0x0, "a", 0x0, "g", 0x0, "s", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@| DCB "F", 0x0, "l", 0x0
	DCB	"a", 0x0, "g", 0x0, "s", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@MCGPLBI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "w", 0x0, "r", 0x0, "o", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@HGNICGBK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAE?$AAn?$AAu?$AAm?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "E", 0x0, "n", 0x0, "u", 0x0, "m", 0x0, "V", 0x0, "a"
	DCB	0x0, "l", 0x0, "u", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@NLKKHEA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAC?$AAl?$AAa?$AAs?$AAs?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "C", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "s", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "i", 0x0, "c"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KG@LONBFMIG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAn?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAl?$AAa?$AAs@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "a"
	DCB	0x0, "s", 0x0, "s", 0x0, " ", 0x0, "{", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x"
	DCB	0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "}", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?RegReadClassDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@PBU_GUID@@PAU1@@Z| PROC ; RegReadClassDeviceRestrictions

; 30   : {

  00000		 |$LN83@RegReadCla|
  00000	e92d 4ff0	 push        {r4-r11,lr}
  00004	f20d 0b1c	 addw        r11,sp,#0x1C
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d48	 subw        sp,sp,#0x248
  00010		 |$M81|

; 31   :     TCHAR szDevName[MAX_PATH];
; 32   :     DWORD dwNameChars, dwType = 0, dwValue = 0, dwValSize, dwIndex, dwStatus;
; 33   :     DEVICEID devId;
; 34   :     SETFNAME(_T("RegReadClassDeviceRestrictions"));
; 35   : 
; 36   :     PMLOGMSG(ZONE_REGISTRY, 
; 37   :         (_T("%s: reading information for class {%08x-%04x-%04x-%04x-%02x%02x%02x%02x%02x%02x}\r\n"),
; 38   :         pszFname,
; 39   :         pGuidClass->Data1, pGuidClass->Data2, pGuidClass->Data3,
; 40   :         (pGuidClass->Data4[0] << 8) + pGuidClass->Data4[1], pGuidClass->Data4[2], pGuidClass->Data4[3], 
; 41   :         pGuidClass->Data4[4], pGuidClass->Data4[5], pGuidClass->Data4[6], pGuidClass->Data4[7]));

  00010	4f72		 ldr         r7,|$LN95@RegReadCla| ; =|dpCurSettings|
  00012	2300		 movs        r3,#0
  00014	9309		 str         r3,[sp,#0x24]
  00016	f8d7 3440	 ldr         r3,[r7,#0x440]
  0001a	4690		 mov         r8,r2
  0001c	2200		 movs        r2,#0
  0001e	f413 7f00	 tst         r3,#0x200
  00022	460c		 mov         r4,r1
  00024	4682		 mov         r10,r0
  00026	9208		 str         r2,[sp,#0x20]
  00028	d019		 beq         |$LN22@RegReadCla|
  0002a	7be3		 ldrb        r3,[r4,#0xF]
  0002c	7a22		 ldrb        r2,[r4,#8]
  0002e	486a		 ldr         r0,|$LN94@RegReadCla| ; =|??_C@_1KG@LONBFMIG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAn?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAl?$AAa?$AAs@|
  00030	9307		 str         r3,[sp,#0x1C]
  00032	7ba3		 ldrb        r3,[r4,#0xE]
  00034	4960		 ldr         r1,|$LN86@RegReadCla| ; =|??_C@_1DO@NLKKHEA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAC?$AAl?$AAa?$AAs?$AAs?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@|
  00036	9306		 str         r3,[sp,#0x18]
  00038	7b63		 ldrb        r3,[r4,#0xD]
  0003a	9305		 str         r3,[sp,#0x14]
  0003c	7b23		 ldrb        r3,[r4,#0xC]
  0003e	9304		 str         r3,[sp,#0x10]
  00040	7ae3		 ldrb        r3,[r4,#0xB]
  00042	9303		 str         r3,[sp,#0xC]
  00044	7aa3		 ldrb        r3,[r4,#0xA]
  00046	9302		 str         r3,[sp,#8]
  00048	7a63		 ldrb        r3,[r4,#9]
  0004a	eb03 2302	 add         r3,r3,r2,lsl #8
  0004e	9301		 str         r3,[sp,#4]
  00050	88e3		 ldrh        r3,[r4,#6]
  00052	6822		 ldr         r2,[r4]
  00054	9300		 str         r3,[sp]
  00056	88a3		 ldrh        r3,[r4,#4]
  00058	f000 f800	 bl          CeLogMsg
  0005c	9a08		 ldr         r2,[sp,#0x20]
  0005e		 |$LN22@RegReadCla|

; 42   : 
; 43   :     devId.pGuid = pGuidClass;
; 44   :     dwIndex = 0;

  0005e	2000		 movs        r0,#0
  00060	900a		 str         r0,[sp,#0x28]
  00062	940c		 str         r4,[sp,#0x30]
  00064	f240 1903	 mov         r9,#0x103
  00068	2104		 movs        r1,#4
  0006a		 |$LL19@RegReadCla|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 186  :         RegKeyOrValue * pReturnKey = pList;

  0006a	f8da 3014	 ldr         r3,[r10,#0x14]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

; 47   :         dwValSize = sizeof(dwValue);

  0006e	910e		 str         r1,[sp,#0x38]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 187  :         for (DWORD dwIndex = 0; pReturnKey!=NULL &&  dwIndex<dwReqIndex; dwIndex++) {

  00070	2100		 movs        r1,#0
  00072	b1db		 cbz         r3,|$LN40@RegReadCla|
  00074		 |$LL43@RegReadCla|
  00074	4281		 cmp         r1,r0
  00076	d203		 bcs         |$LN41@RegReadCla|

; 188  :             pReturnKey =(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();

  00078	68db		 ldr         r3,[r3,#0xC]
  0007a	3101		 adds        r1,#1
  0007c	2b00		 cmp         r3,#0
  0007e	d1f9		 bne         |$LL43@RegReadCla|
  00080		 |$LN41@RegReadCla|

; 189  :         }
; 190  :         if (pReturnKey && pReturnKey->GetName()) {

  00080	b1a3		 cbz         r3,|$LN40@RegReadCla|
  00082	685d		 ldr         r5,[r3,#4]
  00084	b195		 cbz         r5,|$LN40@RegReadCla|

; 191  :             LONG lReturn = ERROR_SUCCESS;
; 192  :             if ( lpcbName) {
; 193  :                 DWORD cbSize = (_tcslen(pReturnKey->GetName()) + 1) * sizeof(lpName[0]) ;

  00086	4628		 mov         r0,r5
  00088	2600		 movs        r6,#0
  0008a	f000 f800	 bl          wcslen
  0008e	4604		 mov         r4,r0

; 194  :                 if ( lpName) {
; 195  :                     VERIFY(SUCCEEDED(StringCbCopy(lpName,*lpcbName,pReturnKey->GetName())));

  00090	a810		 add         r0,sp,#0x40
  00092	462a		 mov         r2,r5
  00094	f44f 7182	 mov         r1,#0x104
  00098	f000 f800	 bl          StringCbCopyW

; 196  :                     if (cbSize>*lpcbName)

  0009c	1c63		 adds        r3,r4,#1
  0009e	005b		 lsls        r3,r3,#1
  000a0	f5b3 7f82	 cmp         r3,#0x104
  000a4	d900		 bls         |$LN37@RegReadCla|

; 197  :                         lReturn = ERROR_MORE_DATA;

  000a6	26ea		 movs        r6,#0xEA
  000a8		 |$LN37@RegReadCla|

; 198  :                 }
; 199  :                 *lpcbName =  cbSize;
; 200  :             }
; 201  :             return lReturn;

  000a8	9a08		 ldr         r2,[sp,#0x20]
  000aa	e000		 b           |$LN36@RegReadCla|
  000ac		 |$LN40@RegReadCla|

; 202  :         }
; 203  :         else
; 204  :             return ERROR_NO_MORE_ITEMS;

  000ac	464e		 mov         r6,r9
  000ae		 |$LN36@RegReadCla|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

; 49   :         if (dwStatus == ERROR_SUCCESS)

  000ae	2e00		 cmp         r6,#0
  000b0	d162		 bne         |$LN74@RegReadCla|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 174  :         RegValue * pCurValue =  m_pRegValueList;

  000b2	f8da 4014	 ldr         r4,[r10,#0x14]

; 175  :         while (pCurValue) {

  000b6	b144		 cbz         r4,|$LN56@RegReadCla|
  000b8		 |$LL57@RegReadCla|

; 45   :     LPTSTR  GetName() { return m_lpRegName; };

  000b8	6860		 ldr         r0,[r4,#4]

; 176  :             if (_tcsicmp( pCurValue->GetName(),lpValueName)==0) {

  000ba	a910		 add         r1,sp,#0x40
  000bc	f000 f800	 bl          _wcsicmp
  000c0	b190		 cbz         r0,|$LN69@RegReadCla|

; 178  :             }
; 179  :             else
; 180  :                 pCurValue=(RegValue *)pCurValue->GetNextRegKeyOrValuePtr();

  000c2	68e4		 ldr         r4,[r4,#0xC]
  000c4	2c00		 cmp         r4,#0
  000c6	d1f7		 bne         |$LL57@RegReadCla|

; 176  :             if (_tcsicmp( pCurValue->GetName(),lpValueName)==0) {

  000c8	9a08		 ldr         r2,[sp,#0x20]
  000ca		 |$LN56@RegReadCla|

; 181  :         }
; 182  :         return ERROR_NO_MORE_ITEMS;

  000ca	464e		 mov         r6,r9
  000cc		 |$LN58@RegReadCla|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

; 51   :         switch(dwStatus) {

  000cc	2e00		 cmp         r6,#0
  000ce	d153		 bne         |$LN74@RegReadCla|

; 52   :         case ERROR_SUCCESS:
; 53   :             // make sure that the type of this data is a dword and isn't 
; 54   :             // the reserved word "flags".
; 55   :             if(dwType != REG_DWORD) {

  000d0	2a04		 cmp         r2,#4
  000d2	d016		 beq         |$LN12@RegReadCla|

; 56   :                 PMLOGMSG(ZONE_WARN || ZONE_REGISTRY, 
; 57   :                     (_T("%s: read wrong type %d\r\n"), pszFname, dwType));

  000d4	f8d7 3440	 ldr         r3,[r7,#0x440]
  000d8	f013 0f02	 tst         r3,#2
  000dc	d102		 bne         |$LN24@RegReadCla|
  000de	f413 7f00	 tst         r3,#0x200
  000e2	d059		 beq         |$LN29@RegReadCla|
  000e4		 |$LN24@RegReadCla|
  000e4	483b		 ldr         r0,|$LN93@RegReadCla| ; =|??_C@_1DC@MCGPLBI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|

; 58   :             } else if(_tcsicmp(szDevName, _T("Flags")) == 0) {

  000e6	e053		 b           |$LN77@RegReadCla|
  000e8		 |$LN69@RegReadCla|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 177  :                 return (pCurValue->GetRegValue(pvData,pdwSize,pdwType)?ERROR_SUCCESS :ERROR_INVALID_PARAMETER);

  000e8	4620		 mov         r0,r4
  000ea	6824		 ldr         r4,[r4]
  000ec	ab08		 add         r3,sp,#0x20
  000ee	aa0e		 add         r2,sp,#0x38
  000f0	68a4		 ldr         r4,[r4,#8]
  000f2	a909		 add         r1,sp,#0x24
  000f4	47a0		 blx         r4
  000f6	9a08		 ldr         r2,[sp,#0x20]
  000f8	b108		 cbz         r0,|$LN60@RegReadCla|
  000fa	2600		 movs        r6,#0
  000fc	e7e6		 b           |$LN58@RegReadCla|
  000fe		 |$LN60@RegReadCla|
  000fe	2657		 movs        r6,#0x57
  00100	e7e4		 b           |$LN58@RegReadCla|
  00102		 |$LN12@RegReadCla|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

; 58   :             } else if(_tcsicmp(szDevName, _T("Flags")) == 0) {

  00102	4933		 ldr         r1,|$LN92@RegReadCla| ; =|??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@|
  00104	a810		 add         r0,sp,#0x40
  00106	f000 f800	 bl          _wcsicmp
  0010a	b938		 cbnz        r0,|$LN10@RegReadCla|

; 59   :                 PMLOGMSG(ZONE_REGISTRY, (_T("%s: skipping flags 0x%08x\r\n"),
; 60   :                     pszFname, dwValue));

  0010c	f8d7 3440	 ldr         r3,[r7,#0x440]
  00110	f413 7f00	 tst         r3,#0x200
  00114	d03f		 beq         |$LN79@RegReadCla|
  00116	9a09		 ldr         r2,[sp,#0x24]
  00118	482c		 ldr         r0,|$LN91@RegReadCla| ; =|??_C@_1DI@HNABGIFC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAk?$AAi?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|

; 61   :             } else if(dwValue < D0 || dwValue > D4) {

  0011a	e039		 b           |$LN77@RegReadCla|
  0011c		 |$LN10@RegReadCla|
  0011c	9a09		 ldr         r2,[sp,#0x24]
  0011e	2a04		 cmp         r2,#4
  00120	d820		 bhi         |$LN7@RegReadCla|

; 65   :             } else {
; 66   :                 PDEVICE_POWER_RESTRICTION pdprNew;
; 67   : 
; 68   :                 // if this is the "default" value it applies to all
; 69   :                 // devices of this class
; 70   :                 if(_tcsicmp(szDevName, _T("default")) == 0) {

  00122	4929		 ldr         r1,|$LN90@RegReadCla| ; =|??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@|
  00124	a810		 add         r0,sp,#0x40
  00126	f000 f800	 bl          _wcsicmp
  0012a	b908		 cbnz        r0,|$LN5@RegReadCla|

; 71   :                     devId.pszName = NULL;

  0012c	2300		 movs        r3,#0

; 72   :                 } else {

  0012e	e000		 b           |$LN78@RegReadCla|
  00130		 |$LN5@RegReadCla|

; 73   :                     devId.pszName = szDevName;

  00130	ab10		 add         r3,sp,#0x40
  00132		 |$LN78@RegReadCla|

; 74   :                 }
; 75   :                 pdprNew = PowerRestrictionCreate(&devId, 0, (CEDEVICE_POWER_STATE) dwValue, 
; 76   :                     NULL, 0);

  00132	9a09		 ldr         r2,[sp,#0x24]
  00134	930d		 str         r3,[sp,#0x34]
  00136	2300		 movs        r3,#0
  00138	2100		 movs        r1,#0
  0013a	a80c		 add         r0,sp,#0x30
  0013c	9300		 str         r3,[sp]
  0013e	f000 f800	 bl          PowerRestrictionCreate
  00142	4604		 mov         r4,r0

; 77   :                 if(pdprNew != NULL) {

  00144	b33c		 cbz         r4,|$LN79@RegReadCla|

; 78   :                     PMLOGMSG(ZONE_REGISTRY,  (_T("%s: device '%s' restricted to D%d\r\n"),
; 79   :                         pszFname, szDevName, dwValue));

  00146	f8d7 3440	 ldr         r3,[r7,#0x440]
  0014a	f413 7f00	 tst         r3,#0x200
  0014e	d005		 beq         |$LN30@RegReadCla|
  00150	9b09		 ldr         r3,[sp,#0x24]
  00152	4919		 ldr         r1,|$LN86@RegReadCla| ; =|??_C@_1DO@NLKKHEA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAC?$AAl?$AAa?$AAs?$AAs?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@|
  00154	481b		 ldr         r0,|$LN89@RegReadCla| ; =|??_C@_1EI@BJILKDJL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF@|
  00156	aa10		 add         r2,sp,#0x40
  00158	f000 f800	 bl          CeLogMsg
  0015c		 |$LN30@RegReadCla|

; 80   :                     pdprNew->pNext = pdprCurrent;

  0015c	f8c4 8014	 str         r8,[r4,#0x14]

; 81   :                     pdprCurrent = pdprNew;

  00160	46a0		 mov         r8,r4
  00162	e018		 b           |$LN79@RegReadCla|
  00164		 |$LN7@RegReadCla|

; 31   :     TCHAR szDevName[MAX_PATH];
; 32   :     DWORD dwNameChars, dwType = 0, dwValue = 0, dwValSize, dwIndex, dwStatus;
; 33   :     DEVICEID devId;
; 34   :     SETFNAME(_T("RegReadClassDeviceRestrictions"));
; 35   : 
; 36   :     PMLOGMSG(ZONE_REGISTRY, 
; 37   :         (_T("%s: reading information for class {%08x-%04x-%04x-%04x-%02x%02x%02x%02x%02x%02x}\r\n"),
; 38   :         pszFname,
; 39   :         pGuidClass->Data1, pGuidClass->Data2, pGuidClass->Data3,
; 40   :         (pGuidClass->Data4[0] << 8) + pGuidClass->Data4[1], pGuidClass->Data4[2], pGuidClass->Data4[3], 
; 41   :         pGuidClass->Data4[4], pGuidClass->Data4[5], pGuidClass->Data4[6], pGuidClass->Data4[7]));

  00164	f8d7 3440	 ldr         r3,[r7,#0x440]

; 62   :                 PMLOGMSG(ZONE_WARN || ZONE_REGISTRY, 
; 63   :                     (_T("%s: invalid device state value %d\r\n"), pszFname,
; 64   :                     dwValue));

  00168	f013 0f02	 tst         r3,#2
  0016c	d102		 bne         |$LN28@RegReadCla|
  0016e	f413 7f00	 tst         r3,#0x200
  00172	d010		 beq         |$LN79@RegReadCla|
  00174		 |$LN28@RegReadCla|
  00174	4812		 ldr         r0,|$LN88@RegReadCla| ; =|??_C@_1EI@NKMAIPDH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@|
  00176	e00b		 b           |$LN77@RegReadCla|
  00178		 |$LN74@RegReadCla|

; 51   :         switch(dwStatus) {

  00178	454e		 cmp         r6,r9
  0017a	d00d		 beq         |$LN29@RegReadCla|

; 82   :                 }
; 83   :             }
; 84   :             break;
; 85   :         case ERROR_NO_MORE_ITEMS:
; 86   :             break;
; 87   :         default:
; 88   :             // maybe a value of the wrong type or something, treat it as
; 89   :             // non fatal so that we get all of the device names.
; 90   :             PMLOGMSG(ZONE_WARN || ZONE_REGISTRY, 
; 91   :                 (_T("%s: RegEnumValue() returned %d\r\n"), pszFname, dwStatus));

  0017c	f8d7 3440	 ldr         r3,[r7,#0x440]
  00180	f013 0f02	 tst         r3,#2
  00184	d102		 bne         |$LN32@RegReadCla|
  00186	f413 7f00	 tst         r3,#0x200
  0018a	d005		 beq         |$LN29@RegReadCla|
  0018c		 |$LN32@RegReadCla|
  0018c	480b		 ldr         r0,|$LN87@RegReadCla| ; =|??_C@_1EC@HGNICGBK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAE?$AAn?$AAu?$AAm?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@|
  0018e	4632		 mov         r2,r6
  00190		 |$LN77@RegReadCla|
  00190	4909		 ldr         r1,|$LN86@RegReadCla| ; =|??_C@_1DO@NLKKHEA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAC?$AAl?$AAa?$AAs?$AAs?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@|
  00192	f000 f800	 bl          CeLogMsg
  00196		 |$LN79@RegReadCla|

; 92   :             break;

  00196	9a08		 ldr         r2,[sp,#0x20]
  00198		 |$LN29@RegReadCla|

; 93   :         }
; 94   :         dwIndex++;

  00198	980a		 ldr         r0,[sp,#0x28]

; 95   :     } while(dwStatus != ERROR_NO_MORE_ITEMS);

  0019a	f04f 0104	 mov         r1,#4
  0019e	3001		 adds        r0,#1
  001a0	900a		 str         r0,[sp,#0x28]
  001a2	454e		 cmp         r6,r9
  001a4	f47f af61	 bne         |$LL19@RegReadCla|

; 96   : 
; 97   : 
; 98   :     return pdprCurrent;
; 99   : }

  001a8	4640		 mov         r0,r8
  001aa		 |$M84|
  001aa	f20d 2d48	 addw        sp,sp,#0x248
  001ae	f000 f800	 bl          __security_pop_cookie
  001b2	e8bd 8ff0	 pop         {r4-r11,pc}
  001b6		 |$LN96@RegReadCla|
  001b6		 |$M97|
  001b6	defe		 __debugbreak
  001b8		 |$LN85@RegReadCla|
  001b8		 |$LN86@RegReadCla|
  001b8	0000 0000	 DCD         |??_C@_1DO@NLKKHEA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAC?$AAl?$AAa?$AAs?$AAs?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@|
  001bc		 |$LN87@RegReadCla|
  001bc	0000 0000	 DCD         |??_C@_1EC@HGNICGBK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAE?$AAn?$AAu?$AAm?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@|
  001c0		 |$LN88@RegReadCla|
  001c0	0000 0000	 DCD         |??_C@_1EI@NKMAIPDH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@|
  001c4		 |$LN89@RegReadCla|
  001c4	0000 0000	 DCD         |??_C@_1EI@BJILKDJL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF@|
  001c8		 |$LN90@RegReadCla|
  001c8	0000 0000	 DCD         |??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@|
  001cc		 |$LN91@RegReadCla|
  001cc	0000 0000	 DCD         |??_C@_1DI@HNABGIFC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAk?$AAi?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  001d0		 |$LN92@RegReadCla|
  001d0	0000 0000	 DCD         |??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@|
  001d4		 |$LN93@RegReadCla|
  001d4	0000 0000	 DCD         |??_C@_1DC@MCGPLBI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  001d8		 |$LN94@RegReadCla|
  001d8	0000 0000	 DCD         |??_C@_1KG@LONBFMIG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAn?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAl?$AAa?$AAs@|
  001dc		 |$LN95@RegReadCla|
  001dc	0000 0000	 DCD         |dpCurSettings|
  001e0		 |$M82|

			 ENDP  ; |?RegReadClassDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@PBU_GUID@@PAU1@@Z|, RegReadClassDeviceRestrictions


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GRegValue@@UAAPAXI@Z| DCD imagerel |$LN13@scalar|
	DCD	0x31606d
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GRegValue@@UAAPAXI@Z| PROC		; RegValue::`scalar deleting destructor'
  00000		 |$LN13@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M11|
  00008	4604		 mov         r4,r0

; 66   :         if ( m_lpByteValue)

  0000a	69a0		 ldr         r0,[r4,#0x18]
  0000c	4b0b		 ldr         r3,|$LN17@scalar|	; =|??_7RegValue@@6B@|
  0000e	460d		 mov         r5,r1
  00010	6023		 str         r3,[r4]
  00012	b108		 cbz         r0,|$LN4@scalar|

; 67   :             delete  m_lpByteValue;

  00014	f000 f800	 bl          |??3@YAXPAX@Z|
  00018		 |$LN4@scalar|

; 41   :     virtual ~RegKeyOrValue() {

  00018	4b07		 ldr         r3,|$LN16@scalar|	; =|??_7RegKeyOrValue@@6B@|

; 42   :         if (m_lpRegName!=NULL)

  0001a	6860		 ldr         r0,[r4,#4]
  0001c	6023		 str         r3,[r4]
  0001e	b108		 cbz         r0,|$LN7@scalar|

; 43   :             delete m_lpRegName;

  00020	f000 f800	 bl          |??3@YAXPAX@Z|
  00024		 |$LN7@scalar|
  00024	f015 0f01	 tst         r5,#1
  00028	d002		 beq         |$LN1@scalar|
  0002a	4620		 mov         r0,r4
  0002c	f000 f800	 bl          |??3@YAXPAX@Z|
  00030		 |$LN1@scalar|
  00030	4620		 mov         r0,r4
  00032		 |$M14|
  00032	e8bd 8830	 pop         {r4,r5,r11,pc}
  00036		 |$LN18@scalar|
  00036		 |$M19|
  00036	defe		 __debugbreak
  00038		 |$LN15@scalar|
  00038		 |$LN16@scalar|
  00038	0000 0000	 DCD         |??_7RegKeyOrValue@@6B@|
  0003c		 |$LN17@scalar|
  0003c	0000 0000	 DCD         |??_7RegValue@@6B@|
  00040		 |$M12|

			 ENDP  ; |??_GRegValue@@UAAPAXI@Z|, RegValue::`scalar deleting destructor'

	EXPORT	|?RefreshAll@RegKey@@QAAHH@Z|		; RegKey::RefreshAll

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?RefreshAll@RegKey@@QAAHH@Z| DCD imagerel |$LN50@RefreshAll|
	DCD	0xfd756199
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?RefreshAll@RegKey@@QAAHH@Z| PROC	; RegKey::RefreshAll

; 126  :     BOOL    RefreshAll (BOOL bDoNotCloseKey = FALSE) {

  00000		 |$LN50@RefreshAll|
  00000	e92d 4bfc	 push        {r2-r9,r11,lr}
  00004	f20d 0b20	 addw        r11,sp,#0x20
  00008		 |$M48|
  00008	4605		 mov         r5,r0

; 127  :         BOOL fReturn = FALSE;
; 128  :         if(m_RegKey == NULL && RegOpenKeyEx(m_hParentKey, m_lpRegName, 0, 0, &m_RegKey ) != ERROR_SUCCESS )  {

  0000a	692b		 ldr         r3,[r5,#0x10]
  0000c	2400		 movs        r4,#0
  0000e	f04f 0900	 mov         r9,#0
  00012	4688		 mov         r8,r1
  00014	b973		 cbnz        r3,|$LN46@RefreshAll|
  00016	6869		 ldr         r1,[r5,#4]
  00018	f110 0310	 adds        r3,r0,#0x10
  0001c	68a8		 ldr         r0,[r5,#8]
  0001e	9300		 str         r3,[sp]
  00020	2300		 movs        r3,#0
  00022	2200		 movs        r2,#0
  00024	f000 f800	 bl          RegOpenKeyExW
  00028	b108		 cbz         r0,|$LN9@RefreshAll|

; 129  :             m_RegKey = NULL;

  0002a	f8c5 9010	 str         r9,[r5,#0x10]
  0002e		 |$LN9@RefreshAll|

; 130  :         }
; 131  :         if (m_RegKey) {

  0002e	692b		 ldr         r3,[r5,#0x10]
  00030	2b00		 cmp         r3,#0
  00032	d048		 beq         |$LN1@RefreshAll|
  00034		 |$LN46@RefreshAll|

; 132  :             // Backup old key first
; 133  :             RegValue * m_pBackupRegValueList = m_pRegValueList;

  00034	696f		 ldr         r7,[r5,#0x14]

; 134  :             RegKey *   m_pBackupRegKeyList = m_pRegKeyList;

  00036	69ae		 ldr         r6,[r5,#0x18]

; 135  :             m_pRegValueList = NULL;
; 136  :             m_pRegKeyList = NULL;
; 137  :             if ( EnumerateAllKey() && EnumerateAllValue()) { // Succeed to enumerate new key. Delete old key.

  00038	4628		 mov         r0,r5
  0003a	f8c5 9014	 str         r9,[r5,#0x14]
  0003e	f8c5 9018	 str         r9,[r5,#0x18]
  00042	f000 f800	 bl          |?EnumerateAllKey@RegKey@@IAAHXZ|
  00046	b1c8		 cbz         r0,|$LN36@RefreshAll|
  00048	4628		 mov         r0,r5
  0004a	f000 f800	 bl          |?EnumerateAllValue@RegKey@@IAAHXZ|
  0004e	b1a8		 cbz         r0,|$LN36@RefreshAll|

; 138  :                 while (m_pBackupRegValueList ) {

  00050	b147		 cbz         r7,|$LN35@RefreshAll|
  00052		 |$LL6@RefreshAll|

; 139  :                     RegValue * pNextRegValue = (RegValue * )m_pBackupRegValueList->GetNextRegKeyOrValuePtr() ;
; 140  :                     delete m_pBackupRegValueList;

  00052	683b		 ldr         r3,[r7]
  00054	68fc		 ldr         r4,[r7,#0xC]
  00056	2101		 movs        r1,#1
  00058	685b		 ldr         r3,[r3,#4]
  0005a	4638		 mov         r0,r7
  0005c	4798		 blx         r3

; 141  :                     m_pBackupRegValueList = pNextRegValue;

  0005e	4627		 mov         r7,r4
  00060	2c00		 cmp         r4,#0
  00062	d1f6		 bne         |$LL6@RefreshAll|
  00064		 |$LN35@RefreshAll|

; 142  :                 }
; 143  :                 while (m_pBackupRegKeyList) {

  00064	b146		 cbz         r6,|$LN3@RefreshAll|
  00066		 |$LL4@RefreshAll|

; 144  :                     RegKey * pNextKey = (RegKey *) m_pBackupRegKeyList->GetNextRegKeyOrValuePtr();
; 145  :                     delete m_pBackupRegKeyList;

  00066	6833		 ldr         r3,[r6]
  00068	68f4		 ldr         r4,[r6,#0xC]
  0006a	2101		 movs        r1,#1
  0006c	685b		 ldr         r3,[r3,#4]
  0006e	4630		 mov         r0,r6
  00070	4798		 blx         r3

; 146  :                     m_pBackupRegKeyList =  pNextKey ;

  00072	4626		 mov         r6,r4
  00074	2c00		 cmp         r4,#0
  00076	d1f6		 bne         |$LL4@RefreshAll|
  00078		 |$LN3@RefreshAll|

; 147  :                 }
; 148  :                 fReturn = TRUE;

  00078	2401		 movs        r4,#1

; 149  :             }
; 150  :             else { // Fails, We need recover old key

  0007a	e01c		 b           |$LN2@RefreshAll|
  0007c		 |$LN36@RefreshAll|

; 163  :     RegKey * RegFindKey(LPCTSTR lpKeyPath) {
; 164  :         RegKey * pReturnKey =  m_pRegKeyList;
; 165  :         while (pReturnKey) {
; 166  :             if (_tcsicmp( pReturnKey->GetName(),lpKeyPath)==0)
; 167  :                 return pReturnKey;
; 168  :             else
; 169  :                 pReturnKey=(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();
; 170  :         }
; 171  :         return NULL;
; 172  :     }
; 173  :     LONG RegFindValue(LPCTSTR lpValueName, PVOID pvData, LPDWORD pdwSize, LPDWORD pdwType) {
; 174  :         RegValue * pCurValue =  m_pRegValueList;
; 175  :         while (pCurValue) {
; 176  :             if (_tcsicmp( pCurValue->GetName(),lpValueName)==0) {
; 177  :                 return (pCurValue->GetRegValue(pvData,pdwSize,pdwType)?ERROR_SUCCESS :ERROR_INVALID_PARAMETER);
; 178  :             }
; 179  :             else
; 180  :                 pCurValue=(RegValue *)pCurValue->GetNextRegKeyOrValuePtr();
; 181  :         }
; 182  :         return ERROR_NO_MORE_ITEMS;
; 183  :         
; 184  :     }
; 185  :     LONG RegEnum(RegKeyOrValue * pList, DWORD dwReqIndex, __out_bcount(*lpcbName) PWSTR lpName, PDWORD lpcbName) {
; 186  :         RegKeyOrValue * pReturnKey = pList;
; 187  :         for (DWORD dwIndex = 0; pReturnKey!=NULL &&  dwIndex<dwReqIndex; dwIndex++) {
; 188  :             pReturnKey =(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();
; 189  :         }
; 190  :         if (pReturnKey && pReturnKey->GetName()) {
; 191  :             LONG lReturn = ERROR_SUCCESS;
; 192  :             if ( lpcbName) {
; 193  :                 DWORD cbSize = (_tcslen(pReturnKey->GetName()) + 1) * sizeof(lpName[0]) ;
; 194  :                 if ( lpName) {
; 195  :                     VERIFY(SUCCEEDED(StringCbCopy(lpName,*lpcbName,pReturnKey->GetName())));
; 196  :                     if (cbSize>*lpcbName)
; 197  :                         lReturn = ERROR_MORE_DATA;
; 198  :                 }
; 199  :                 *lpcbName =  cbSize;
; 200  :             }
; 201  :             return lReturn;
; 202  :         }
; 203  :         else
; 204  :             return ERROR_NO_MORE_ITEMS;
; 205  :     }
; 206  :     LONG RegEnumKeyEx( DWORD dwReqIndex, __out_bcount(*lpcbName) PWSTR lpName, PDWORD lpcbName) {
; 207  :         return RegEnum(m_pRegKeyList, dwReqIndex, lpName, lpcbName) ;
; 208  :     }
; 209  :     LONG RegEnumValue( DWORD dwReqIndex,__out_bcount(*lpcbValueName)LPWSTR lpValueName, LPDWORD lpcbValueName) {
; 210  :         return RegEnum(m_pRegValueList, dwReqIndex, lpValueName, lpcbValueName) ;
; 211  :     }
; 212  : 
; 213  : protected:
; 214  :     RegKeyOrValue * SearchByName(RegKeyOrValue * pRegKeyOrValueList,LPCTSTR pszName) {
; 215  :         while (pRegKeyOrValueList) {
; 216  :             if (_tcsicmp(pRegKeyOrValueList->GetName(),pszName)== 0) // found it 
; 217  :                 break;
; 218  :             else
; 219  :                 pRegKeyOrValueList = pRegKeyOrValueList->GetNextRegKeyOrValuePtr();
; 220  :         }
; 221  :         return pRegKeyOrValueList;
; 222  :     }
; 223  :     void DeleteAll() {
; 224  :         while (m_pRegValueList) {

  0007c	696b		 ldr         r3,[r5,#0x14]
  0007e	b153		 cbz         r3,|$LN37@RefreshAll|
  00080		 |$LL23@RefreshAll|

; 225  :             RegValue * pNextRegValue = (RegValue * )m_pRegValueList->GetNextRegKeyOrValuePtr() ;

  00080	696b		 ldr         r3,[r5,#0x14]
  00082	68dc		 ldr         r4,[r3,#0xC]

; 226  :             delete m_pRegValueList;

  00084	b123		 cbz         r3,|$LN26@RefreshAll|
  00086	4618		 mov         r0,r3
  00088	681b		 ldr         r3,[r3]
  0008a	2101		 movs        r1,#1
  0008c	685b		 ldr         r3,[r3,#4]
  0008e	4798		 blx         r3
  00090		 |$LN26@RefreshAll|

; 227  :             m_pRegValueList = pNextRegValue;

  00090	616c		 str         r4,[r5,#0x14]
  00092	2c00		 cmp         r4,#0
  00094	d1f4		 bne         |$LL23@RefreshAll|
  00096		 |$LN37@RefreshAll|

; 228  :         }
; 229  :         while (m_pRegKeyList) {

  00096	69ab		 ldr         r3,[r5,#0x18]
  00098	b153		 cbz         r3,|$LN20@RefreshAll|
  0009a		 |$LL21@RefreshAll|

; 230  :             RegKey * pNextKey = (RegKey *) m_pRegKeyList->GetNextRegKeyOrValuePtr();

  0009a	69ab		 ldr         r3,[r5,#0x18]
  0009c	68dc		 ldr         r4,[r3,#0xC]

; 231  :             delete m_pRegKeyList;

  0009e	b123		 cbz         r3,|$LN28@RefreshAll|
  000a0	4618		 mov         r0,r3
  000a2	681b		 ldr         r3,[r3]
  000a4	2101		 movs        r1,#1
  000a6	685b		 ldr         r3,[r3,#4]
  000a8	4798		 blx         r3
  000aa		 |$LN28@RefreshAll|

; 232  :             m_pRegKeyList =  pNextKey ;

  000aa	61ac		 str         r4,[r5,#0x18]
  000ac	2c00		 cmp         r4,#0
  000ae	d1f4		 bne         |$LL21@RefreshAll|
  000b0		 |$LN20@RefreshAll|

; 151  :                 DeleteAll(); // Delete partial succeeded key and value.
; 152  :                 m_pRegValueList = m_pBackupRegValueList;

  000b0	616f		 str         r7,[r5,#0x14]

; 153  :                 m_pRegKeyList = m_pBackupRegKeyList ;

  000b2	61ae		 str         r6,[r5,#0x18]

; 154  :                 fReturn = FALSE;

  000b4	2400		 movs        r4,#0
  000b6		 |$LN2@RefreshAll|

; 155  :             }
; 156  :             if (!bDoNotCloseKey) {

  000b6	f1b8 0f00	 cmp         r8,#0
  000ba	d104		 bne         |$LN1@RefreshAll|

; 157  :                 RegCloseKey( m_RegKey );

  000bc	6928		 ldr         r0,[r5,#0x10]
  000be	f000 f800	 bl          RegCloseKey

; 158  :                 m_RegKey = NULL;

  000c2	f8c5 9010	 str         r9,[r5,#0x10]
  000c6		 |$LN1@RefreshAll|

; 159  :             }
; 160  :         }
; 161  :         return fReturn;
; 162  :     }

  000c6	4620		 mov         r0,r4
  000c8		 |$M51|
  000c8	e8bd 8bfc	 pop         {r2-r9,r11,pc}
  000cc		 |$M49|

			 ENDP  ; |?RefreshAll@RegKey@@QAAHH@Z|, RegKey::RefreshAll

; Function compile flags: /Odsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_ESystemNotifyRegKey@@WBM@AAPAXI@Z| PROC ; [thunk]:SystemNotifyRegKey::`vector deleting destructor'
  00000	381c		 subs        r0,r0,#0x1C
  00002	f8df c004	 ldr         r12,|$LN4@vector|	; =|??_ESystemNotifyRegKey@@UAAPAXI@Z|
  00006	4760		 bx          r12
  00008		 |$LN3@vector|
  00008		 |$LN4@vector|
  00008	0000 0000	 DCD         |??_ESystemNotifyRegKey@@UAAPAXI@Z|
  0000c		 |$M2|

			 ENDP  ; |??_ESystemNotifyRegKey@@WBM@AAPAXI@Z|, [thunk]:SystemNotifyRegKey::`vector deleting destructor'

	EXPORT	|?IsTerminated@CMiniThread@@QBAHXZ|	; CMiniThread::IsTerminated
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?IsTerminated@CMiniThread@@QBAHXZ| PROC ; CMiniThread::IsTerminated

; 132  :         return m_bTerminated;

  00000	6840		 ldr         r0,[r0,#4]
  00002		 |$M4|

; 133  :     };

  00002	4770		 bx          lr

			 ENDP  ; |?IsTerminated@CMiniThread@@QBAHXZ|, CMiniThread::IsTerminated

	EXPORT	|?ThreadStart@CMiniThread@@QAAHXZ|	; CMiniThread::ThreadStart
	IMPORT	|ResumeThread|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?ThreadStart@CMiniThread@@QAAHXZ| DCD imagerel |$LN8@ThreadStar|
	DCD	0xfd306051
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?ThreadStart@CMiniThread@@QAAHXZ| PROC ; CMiniThread::ThreadStart

; 49   :     {

  00000		 |$LN8@ThreadStar|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M6|
  00008	4604		 mov         r4,r0

; 50   :         if( m_bSuspendFlag )

  0000a	6923		 ldr         r3,[r4,#0x10]
  0000c	b14b		 cbz         r3,|$LN2@ThreadStar|

; 51   :         {
; 52   :             if( ResumeThread( m_hThreadHandle ) == ( DWORD ) ( -1 ) )

  0000e	68a0		 ldr         r0,[r4,#8]
  00010	f000 f800	 bl          ResumeThread
  00014	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00018	d101		 bne         |$LN1@ThreadStar|

; 53   :             {
; 54   :                 // failure for resume somehow
; 55   :                 return FALSE;

  0001a	2000		 movs        r0,#0
  0001c	e002		 b           |$LN3@ThreadStar|
  0001e		 |$LN1@ThreadStar|

; 56   :             };
; 57   :             m_bSuspendFlag = FALSE;

  0001e	2300		 movs        r3,#0
  00020	6123		 str         r3,[r4,#0x10]
  00022		 |$LN2@ThreadStar|

; 58   :         }
; 59   :         return TRUE;

  00022	2001		 movs        r0,#1
  00024		 |$LN3@ThreadStar|
  00024		 |$M9|

; 60   :     }

  00024	e8bd 8818	 pop         {r3,r4,r11,pc}
  00028		 |$M7|

			 ENDP  ; |?ThreadStart@CMiniThread@@QAAHXZ|, CMiniThread::ThreadStart

	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |SetEvent| PROC

; 244  :     return EventModify(h,EVENT_SET);

  00000	2103		 movs        r1,#3
  00002		 |$M4|
  00002	f000 9000	 b           EventModify

			 ENDP  ; |SetEvent|

	EXPORT	|??_C@_1EC@OKEADBNJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAE?$AAn?$AAu?$AAm?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@EONBJFMA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@MIFCJAJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd@| [ DATA ] ; `string'
	EXPORT	|?RegReadDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@@Z| ; RegReadDeviceRestrictions
	IMPORT	|idGenericPMDeviceClass|
	IMPORT	|ConvertStringToGuid|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?RegReadDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@@Z| DCD imagerel |$LN65@RegReadDev|
	DCD	imagerel |$unwind2$?RegReadDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@@Z|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$?RegReadDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@@Z| DCD 0x30900078
	DCD	0x7e0004e
	DCD	0x1e888e8
	DCD	0xe8ffdffc
	DCD	0xffdf01
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffd9

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@MIFCJAJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "O", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "K", 0x0, "e"
	DCB	0x0, "y", 0x0, "E", 0x0, "x", 0x0, "(", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@EONBJFMA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "i"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "s"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@OKEADBNJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAE?$AAn?$AAu?$AAm?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "E", 0x0, "n", 0x0, "u", 0x0, "m", 0x0, "K", 0x0, "e"
	DCB	0x0, "y", 0x0, "E", 0x0, "x", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?RegReadDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@@Z| PROC ; RegReadDeviceRestrictions

; 106  : {

  00000		 |$LN65@RegReadDev|
  00000	e92d 4ff0	 push        {r4-r11,lr}
  00004	f20d 0b1c	 addw        r11,sp,#0x1C
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d20	 subw        sp,sp,#0x220
  00010		 |$M63|
  00010	4681		 mov         r9,r0

; 107  :     PDEVICE_POWER_RESTRICTION pdpr = NULL;

  00012	2000		 movs        r0,#0
  00014	f8df 80e8	 ldr         r8,|$LN72@RegReadDev| ; =|dpCurSettings|
  00018	9000		 str         r0,[sp]

; 108  :     GUID gClass;
; 109  :     TCHAR szKeyName[MAX_PATH];
; 110  :     DWORD dwNameChars, dwIndex, dwStatus;
; 111  :     SETFNAME(_T("RegReadDeviceRestrictions"));
; 112  : 
; 113  :     // build up the list starting with class subkeys (no subkey is allowed
; 114  :     // for generic devices).
; 115  :     dwIndex = 0;

  0001a	f04f 0a00	 mov         r10,#0
  0001e	f240 1703	 mov         r7,#0x103
  00022		 |$LL11@RegReadDev|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 186  :         RegKeyOrValue * pReturnKey = pList;

  00022	f8d9 3018	 ldr         r3,[r9,#0x18]

; 187  :         for (DWORD dwIndex = 0; pReturnKey!=NULL &&  dwIndex<dwReqIndex; dwIndex++) {

  00026	2200		 movs        r2,#0
  00028	b1db		 cbz         r3,|$LN24@RegReadDev|
  0002a		 |$LL27@RegReadDev|
  0002a	4552		 cmp         r2,r10
  0002c	d203		 bcs         |$LN25@RegReadDev|

; 188  :             pReturnKey =(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();

  0002e	68db		 ldr         r3,[r3,#0xC]
  00030	3201		 adds        r2,#1
  00032	2b00		 cmp         r3,#0
  00034	d1f9		 bne         |$LL27@RegReadDev|
  00036		 |$LN25@RegReadDev|

; 189  :         }
; 190  :         if (pReturnKey && pReturnKey->GetName()) {

  00036	b1a3		 cbz         r3,|$LN24@RegReadDev|
  00038	685e		 ldr         r6,[r3,#4]
  0003a	b196		 cbz         r6,|$LN24@RegReadDev|

; 191  :             LONG lReturn = ERROR_SUCCESS;
; 192  :             if ( lpcbName) {
; 193  :                 DWORD cbSize = (_tcslen(pReturnKey->GetName()) + 1) * sizeof(lpName[0]) ;

  0003c	4630		 mov         r0,r6
  0003e	2500		 movs        r5,#0
  00040	f000 f800	 bl          wcslen
  00044	4604		 mov         r4,r0

; 194  :                 if ( lpName) {
; 195  :                     VERIFY(SUCCEEDED(StringCbCopy(lpName,*lpcbName,pReturnKey->GetName())));

  00046	a806		 add         r0,sp,#0x18
  00048	4632		 mov         r2,r6
  0004a	f44f 7182	 mov         r1,#0x104
  0004e	f000 f800	 bl          StringCbCopyW

; 196  :                     if (cbSize>*lpcbName)

  00052	1c63		 adds        r3,r4,#1
  00054	005b		 lsls        r3,r3,#1
  00056	f5b3 7f82	 cmp         r3,#0x104
  0005a	d900		 bls         |$LN21@RegReadDev|

; 197  :                         lReturn = ERROR_MORE_DATA;

  0005c	25ea		 movs        r5,#0xEA
  0005e		 |$LN21@RegReadDev|

; 198  :                 }
; 199  :                 *lpcbName =  cbSize;
; 200  :             }
; 201  :             return lReturn;

  0005e	9800		 ldr         r0,[sp]
  00060	e000		 b           |$LN20@RegReadDev|
  00062		 |$LN24@RegReadDev|

; 202  :         }
; 203  :         else
; 204  :             return ERROR_NO_MORE_ITEMS;

  00062	463d		 mov         r5,r7
  00064		 |$LN20@RegReadDev|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

; 119  :         switch(dwStatus) {

  00064	b1f5		 cbz         r5,|$LN6@RegReadDev|
  00066	42bd		 cmp         r5,r7
  00068	d00d		 beq         |$LN56@RegReadDev|

; 134  :                 }
; 135  :             }
; 136  :             break;
; 137  :         case ERROR_NO_MORE_ITEMS:
; 138  :             break;
; 139  :         default:
; 140  :             PMLOGMSG(ZONE_WARN || ZONE_REGISTRY, 
; 141  :                 (_T("%s: RegEnumKeyEx() returned %d\r\n"), pszFname, dwStatus));

  0006a	f8d8 3440	 ldr         r3,[r8,#0x440]
  0006e	f013 0f02	 tst         r3,#2
  00072	d102		 bne         |$LN16@RegReadDev|
  00074	f413 7f00	 tst         r3,#0x200
  00078	d005		 beq         |$LN56@RegReadDev|
  0007a		 |$LN16@RegReadDev|
  0007a	4820		 ldr         r0,|$LN71@RegReadDev| ; =|??_C@_1EC@OKEADBNJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAE?$AAn?$AAu?$AAm?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@|
  0007c	462a		 mov         r2,r5
  0007e		 |$LN61@RegReadDev|
  0007e	491e		 ldr         r1,|$LN70@RegReadDev| ; =|??_C@_1DE@EONBJFMA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@|
  00080	f000 f800	 bl          CeLogMsg
  00084		 |$LN58@RegReadDev|
  00084	9800		 ldr         r0,[sp]
  00086		 |$LN56@RegReadDev|

; 142  :             break;
; 143  :         }
; 144  :         dwIndex++;

  00086	f10a 0a01	 add         r10,r10,#1

; 145  :     } while(dwStatus != ERROR_NO_MORE_ITEMS);

  0008a	42bd		 cmp         r5,r7
  0008c	d1c9		 bne         |$LL11@RegReadDev|

; 146  : 
; 147  :     // add values from the root key representing generic devices
; 148  :     pdpr = RegReadClassDeviceRestrictions(pRegKey, &idGenericPMDeviceClass, pdpr);

  0008e	4919		 ldr         r1,|$LN69@RegReadDev| ; =|idGenericPMDeviceClass|
  00090	4602		 mov         r2,r0
  00092	4648		 mov         r0,r9
  00094	f000 f800	 bl          |?RegReadClassDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@PBU_GUID@@PAU1@@Z|
  00098		 |$M66|

; 149  : 
; 150  :     return pdpr;
; 151  : }

  00098	f20d 2d20	 addw        sp,sp,#0x220
  0009c	f000 f800	 bl          __security_pop_cookie
  000a0	e8bd 8ff0	 pop         {r4-r11,pc}
  000a4		 |$LN6@RegReadDev|

; 120  :         case ERROR_SUCCESS:
; 121  :             // convert the key name to a class
; 122  :             if(ConvertStringToGuid(szKeyName, &gClass)) {

  000a4	a902		 add         r1,sp,#8
  000a6	a806		 add         r0,sp,#0x18
  000a8	f000 f800	 bl          ConvertStringToGuid
  000ac	2800		 cmp         r0,#0
  000ae	d0e9		 beq         |$LN58@RegReadDev|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 164  :         RegKey * pReturnKey =  m_pRegKeyList;

  000b0	f8d9 4018	 ldr         r4,[r9,#0x18]
  000b4	e005		 b           |$LN59@RegReadDev|
  000b6		 |$LL41@RegReadDev|

; 45   :     LPTSTR  GetName() { return m_lpRegName; };

  000b6	6860		 ldr         r0,[r4,#4]

; 166  :             if (_tcsicmp( pReturnKey->GetName(),lpKeyPath)==0)

  000b8	a906		 add         r1,sp,#0x18
  000ba	f000 f800	 bl          _wcsicmp
  000be	b118		 cbz         r0,|$LN42@RegReadDev|

; 167  :                 return pReturnKey;
; 168  :             else
; 169  :                 pReturnKey=(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();

  000c0	68e4		 ldr         r4,[r4,#0xC]
  000c2		 |$LN59@RegReadDev|

; 165  :         while (pReturnKey) {

  000c2	2c00		 cmp         r4,#0
  000c4	d1f7		 bne         |$LL41@RegReadDev|

; 170  :         }
; 171  :         return NULL;

  000c6	2400		 movs        r4,#0
  000c8		 |$LN42@RegReadDev|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

; 125  :                 if(pChildKey == NULL ) {

  000c8	b95c		 cbnz        r4,|$LN4@RegReadDev|

; 126  :                     dwStatus = ERROR_NO_MORE_ITEMS;

  000ca	f8d8 3440	 ldr         r3,[r8,#0x440]
  000ce	463d		 mov         r5,r7

; 127  :                     PMLOGMSG(ZONE_WARN || ZONE_REGISTRY,
; 128  :                         (_T("%s: RegOpenKeyEx('%s') failed %d\r\n"),
; 129  :                         pszFname, szKeyName));

  000d0	f013 0f02	 tst         r3,#2
  000d4	d102		 bne         |$LN14@RegReadDev|
  000d6	f413 7f00	 tst         r3,#0x200
  000da	d0d3		 beq         |$LN58@RegReadDev|
  000dc		 |$LN14@RegReadDev|
  000dc	4804		 ldr         r0,|$LN68@RegReadDev| ; =|??_C@_1EG@MIFCJAJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd@|
  000de	aa06		 add         r2,sp,#0x18

; 130  :                 } else {

  000e0	e7cd		 b           |$LN61@RegReadDev|
  000e2		 |$LN4@RegReadDev|

; 131  :                     // add the class's restriction data to the list
; 132  :                     pdpr = RegReadClassDeviceRestrictions(pChildKey, 
; 133  :                         &gClass, pdpr);

  000e2	9a00		 ldr         r2,[sp]
  000e4	a902		 add         r1,sp,#8
  000e6	4620		 mov         r0,r4
  000e8	f000 f800	 bl          |?RegReadClassDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@PBU_GUID@@PAU1@@Z|
  000ec	9000		 str         r0,[sp]
  000ee	e7ca		 b           |$LN56@RegReadDev|
  000f0		 |$LN67@RegReadDev|
  000f0		 |$LN68@RegReadDev|
  000f0	0000 0000	 DCD         |??_C@_1EG@MIFCJAJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd@|
  000f4		 |$LN69@RegReadDev|
  000f4	0000 0000	 DCD         |idGenericPMDeviceClass|
  000f8		 |$LN70@RegReadDev|
  000f8	0000 0000	 DCD         |??_C@_1DE@EONBJFMA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@|
  000fc		 |$LN71@RegReadDev|
  000fc	0000 0000	 DCD         |??_C@_1EC@OKEADBNJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAE?$AAn?$AAu?$AAm?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@|
  00100		 |$LN72@RegReadDev|
  00100	0000 0000	 DCD         |dpCurSettings|
  00104		 |$M64|

			 ENDP  ; |?RegReadDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@@Z|, RegReadDeviceRestrictions


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?Init@RegKey@@UAAHXZ| DCD imagerel |$LN6@Init|
	DCD	0x3f6025
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Init@RegKey@@UAAHXZ| PROC		; RegKey::Init

; 115  :     BOOL Init() {  

  00000		 |$LN6@Init|
  00000	e92d 4800	 push        {r11,lr}
  00004	46eb		 mov         r11,sp
  00006		 |$M4|

; 116  :         RefreshAll();

  00006	2100		 movs        r1,#0
  00008	f000 f800	 bl          |?RefreshAll@RegKey@@QAAHH@Z|

; 117  :         return TRUE; 

  0000c	2001		 movs        r0,#1
  0000e		 |$M7|

; 118  :     };

  0000e	e8bd 8800	 pop         {r11,pc}
  00012		 |$M5|

			 ENDP  ; |?Init@RegKey@@UAAHXZ|, RegKey::Init

	EXPORT	|?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ| ; SystemNotifyRegKey::UpdateAllValue
	IMPORT	|CeFindNextRegChange|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ| DCD imagerel |$LN13@UpdateAllV|
	DCD	0xfd306085
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ| PROC ; SystemNotifyRegKey::UpdateAllValue

; 331  :     BOOL UpdateAllValue() {

  00000		 |$LN13@UpdateAllV|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M11|
  00008	4604		 mov         r4,r0

; 332  :         if (m_hNotifyEvent!=INVALID_HANDLE_VALUE) {

  0000a	6ca3		 ldr         r3,[r4,#0x48]
  0000c	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00010	d014		 beq         |$LN3@UpdateAllV|
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  00012	3034		 adds        r0,r0,#0x34
  00014	f000 f800	 bl          EnterCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 334  :             CeFindNextRegChange( m_hNotifyEvent);

  00018	6ca0		 ldr         r0,[r4,#0x48]
  0001a	f000 f800	 bl          CeFindNextRegChange

; 335  :             m_fUpdated = FALSE;

  0001e	2300		 movs        r3,#0

; 336  :             if (RefreshAll(TRUE))

  00020	2101		 movs        r1,#1
  00022	4620		 mov         r0,r4
  00024	6523		 str         r3,[r4,#0x50]
  00026	f000 f800	 bl          |?RefreshAll@RegKey@@QAAHH@Z|
  0002a	b108		 cbz         r0,|$LN2@UpdateAllV|

; 337  :                  m_fUpdated = TRUE;

  0002c	2301		 movs        r3,#1
  0002e	6523		 str         r3,[r4,#0x50]
  00030		 |$LN2@UpdateAllV|
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  00030	f114 0034	 adds        r0,r4,#0x34
  00034	f000 f800	 bl          LeaveCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 339  :             return TRUE;

  00038	2001		 movs        r0,#1
  0003a	e000		 b           |$LN1@UpdateAllV|
  0003c		 |$LN3@UpdateAllV|

; 340  :         } else
; 341  :             return FALSE;

  0003c	2000		 movs        r0,#0
  0003e		 |$LN1@UpdateAllV|
  0003e		 |$M14|

; 342  :     }

  0003e	e8bd 8818	 pop         {r3,r4,r11,pc}
  00042		 |$M12|

			 ENDP  ; |?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ|, SystemNotifyRegKey::UpdateAllValue

	EXPORT	|?WaitThreadComplete@CMiniThread@@QAAHK@Z| ; CMiniThread::WaitThreadComplete
	IMPORT	|WaitForSingleObject|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?WaitThreadComplete@CMiniThread@@QAAHK@Z| DCD imagerel |$LN13@WaitThread|
	DCD	0xfd32607d
; Function compile flags: /Ogsp
; File c:\wince800\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?WaitThreadComplete@CMiniThread@@QAAHK@Z| PROC ; CMiniThread::WaitThreadComplete

; 92   :     {

  00000		 |$LN13@WaitThread|
  00000	e92d 4878	 push        {r3-r6,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M11|
  00008	4604		 mov         r4,r0

; 93   :         if( !m_hThreadHandle )

  0000a	68a0		 ldr         r0,[r4,#8]
  0000c	460d		 mov         r5,r1
  0000e	b198		 cbz         r0,|$LN1@WaitThread|

; 50   :         if( m_bSuspendFlag )

  00010	6923		 ldr         r3,[r4,#0x10]
  00012	2600		 movs        r6,#0
  00014	b12b		 cbz         r3,|$LN7@WaitThread|

; 51   :         {
; 52   :             if( ResumeThread( m_hThreadHandle ) == ( DWORD ) ( -1 ) )

  00016	f000 f800	 bl          ResumeThread
  0001a	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  0001e	d00b		 beq         |$LN1@WaitThread|

; 53   :             {
; 54   :                 // failure for resume somehow
; 55   :                 return FALSE;
; 56   :             };
; 57   :             m_bSuspendFlag = FALSE;

  00020	6126		 str         r6,[r4,#0x10]
  00022		 |$LN7@WaitThread|

; 94   :         {
; 95   :             return FALSE;
; 96   :         };
; 97   : 
; 98   :         if( ThreadStart() )
; 99   :         {
; 100  :             if( ::WaitForSingleObject( m_hThreadHandle, dwMilliSeconds ) ==
; 101  :                 WAIT_OBJECT_0 )

  00022	68a0		 ldr         r0,[r4,#8]
  00024	4629		 mov         r1,r5
  00026	f000 f800	 bl          WaitForSingleObject
  0002a	b928		 cbnz        r0,|$LN1@WaitThread|

; 102  :             {
; 103  :                 // thread dead
; 104  :                 ::CloseHandle( m_hThreadHandle );

  0002c	68a0		 ldr         r0,[r4,#8]
  0002e	f000 f800	 bl          CloseHandle

; 105  :                 m_hThreadHandle = NULL;

  00032	60a6		 str         r6,[r4,#8]

; 106  :                 return TRUE;

  00034	2001		 movs        r0,#1
  00036	e000		 b           |$LN4@WaitThread|
  00038		 |$LN1@WaitThread|

; 107  :             }
; 108  :         }
; 109  :         return FALSE;

  00038	2000		 movs        r0,#0
  0003a		 |$LN4@WaitThread|
  0003a		 |$M14|

; 110  :     }

  0003a	e8bd 8878	 pop         {r3-r6,r11,pc}
  0003e		 |$M12|

			 ENDP  ; |?WaitThreadComplete@CMiniThread@@QAAHK@Z|, CMiniThread::WaitThreadComplete

	EXPORT	|?EnterLock@SystemNotifyRegKey@@QAAXXZ|	; SystemNotifyRegKey::EnterLock

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?EnterLock@SystemNotifyRegKey@@QAAXXZ| DCD imagerel |$LN18@EnterLock|
	DCD	0xfd306091
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?EnterLock@SystemNotifyRegKey@@QAAXXZ| PROC ; SystemNotifyRegKey::EnterLock

; 325  :     void EnterLock() { 

  00000		 |$LN18@EnterLock|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M16|
  00008	4604		 mov         r4,r0
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  0000a	3034		 adds        r0,r0,#0x34
  0000c	f000 f800	 bl          EnterCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 327  :         if ( m_fUpdated == FALSE)

  00010	6d23		 ldr         r3,[r4,#0x50]
  00012	b9bb		 cbnz        r3,|$LN8@EnterLock|

; 330  :     void LeaveLock() { Unlock(); };
; 331  :     BOOL UpdateAllValue() {
; 332  :         if (m_hNotifyEvent!=INVALID_HANDLE_VALUE) {

  00014	6ca3		 ldr         r3,[r4,#0x48]
  00016	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  0001a	d013		 beq         |$LN8@EnterLock|
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  0001c	f114 0034	 adds        r0,r4,#0x34
  00020	f000 f800	 bl          EnterCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 334  :             CeFindNextRegChange( m_hNotifyEvent);

  00024	6ca0		 ldr         r0,[r4,#0x48]
  00026	f000 f800	 bl          CeFindNextRegChange

; 335  :             m_fUpdated = FALSE;

  0002a	2300		 movs        r3,#0

; 336  :             if (RefreshAll(TRUE))

  0002c	2101		 movs        r1,#1
  0002e	4620		 mov         r0,r4
  00030	6523		 str         r3,[r4,#0x50]
  00032	f000 f800	 bl          |?RefreshAll@RegKey@@QAAHH@Z|
  00036	b108		 cbz         r0,|$LN7@EnterLock|

; 337  :                  m_fUpdated = TRUE;

  00038	2301		 movs        r3,#1
  0003a	6523		 str         r3,[r4,#0x50]
  0003c		 |$LN7@EnterLock|
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  0003c	f114 0034	 adds        r0,r4,#0x34
  00040	f000 f800	 bl          LeaveCriticalSection
  00044		 |$LN8@EnterLock|
  00044		 |$M19|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 329  :     };

  00044	e8bd 8818	 pop         {r3,r4,r11,pc}
  00048		 |$M17|

			 ENDP  ; |?EnterLock@SystemNotifyRegKey@@QAAXXZ|, SystemNotifyRegKey::EnterLock


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?Init@SystemNotifyRegKey@@UAAHXZ| DCD imagerel |$LN22@Init|
	DCD	0xfd3260bd
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\cmthread.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?Init@SystemNotifyRegKey@@UAAHXZ| PROC ; SystemNotifyRegKey::Init

; 304  :     BOOL Init() { 

  00000		 |$LN22@Init|
  00000	e92d 4878	 push        {r3-r6,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M20|
  00008	4604		 mov         r4,r0

; 305  :         if (m_RegKey!=NULL && m_hTerminated!=NULL && UpdateAllValue()) {

  0000a	6923		 ldr         r3,[r4,#0x10]
  0000c	b323		 cbz         r3,|$LN2@Init|
  0000e	6ce3		 ldr         r3,[r4,#0x4C]
  00010	b313		 cbz         r3,|$LN2@Init|

; 312  :     virtual ~SystemNotifyRegKey() {
; 313  :         m_bTerminated = TRUE;
; 314  :         ThreadStart();
; 315  :         if (m_hTerminated)
; 316  :             SetEvent(m_hTerminated);
; 317  :         WaitThreadComplete(INFINITE);
; 318  :         if (m_hTerminated)
; 319  :             CloseHandle(m_hTerminated);
; 320  :         if (m_hNotifyEvent != INVALID_HANDLE_VALUE) {
; 321  :             CeFindCloseRegChange(m_hNotifyEvent) ;
; 322  :             m_hNotifyEvent = INVALID_HANDLE_VALUE;
; 323  :         }
; 324  :     }
; 325  :     void EnterLock() { 
; 326  :         Lock(); 
; 327  :         if ( m_fUpdated == FALSE)
; 328  :             UpdateAllValue();
; 329  :     };
; 330  :     void LeaveLock() { Unlock(); };
; 331  :     BOOL UpdateAllValue() {
; 332  :         if (m_hNotifyEvent!=INVALID_HANDLE_VALUE) {

  00012	6ca3		 ldr         r3,[r4,#0x48]
  00014	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00018	d01e		 beq         |$LN2@Init|
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  0001a	3034		 adds        r0,r0,#0x34
  0001c	f000 f800	 bl          EnterCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 334  :             CeFindNextRegChange( m_hNotifyEvent);

  00020	6ca0		 ldr         r0,[r4,#0x48]
  00022	f000 f800	 bl          CeFindNextRegChange

; 335  :             m_fUpdated = FALSE;

  00026	2600		 movs        r6,#0

; 336  :             if (RefreshAll(TRUE))

  00028	2101		 movs        r1,#1
  0002a	4620		 mov         r0,r4
  0002c	6526		 str         r6,[r4,#0x50]
  0002e	f000 f800	 bl          |?RefreshAll@RegKey@@QAAHH@Z|
  00032	2501		 movs        r5,#1
  00034	b100		 cbz         r0,|$LN6@Init|

; 337  :                  m_fUpdated = TRUE;

  00036	6525		 str         r5,[r4,#0x50]
  00038		 |$LN6@Init|
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  00038	f114 0034	 adds        r0,r4,#0x34
  0003c	f000 f800	 bl          LeaveCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 306  :             m_fUpdated = TRUE;

  00040	6525		 str         r5,[r4,#0x50]
; File c:\wince800\public\common\oak\inc\cmthread.h

; 50   :         if( m_bSuspendFlag )

  00042	6ae3		 ldr         r3,[r4,#0x2C]
  00044	b133		 cbz         r3,|$LN15@Init|

; 51   :         {
; 52   :             if( ResumeThread( m_hThreadHandle ) == ( DWORD ) ( -1 ) )

  00046	6a60		 ldr         r0,[r4,#0x24]
  00048	f000 f800	 bl          ResumeThread
  0004c	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00050	d000		 beq         |$LN15@Init|

; 53   :             {
; 54   :                 // failure for resume somehow
; 55   :                 return FALSE;
; 56   :             };
; 57   :             m_bSuspendFlag = FALSE;

  00052	62e6		 str         r6,[r4,#0x2C]
  00054		 |$LN15@Init|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 308  :             return TRUE;

  00054	2001		 movs        r0,#1
  00056	e000		 b           |$LN1@Init|
  00058		 |$LN2@Init|

; 309  :         } else
; 310  :             return FALSE;

  00058	2000		 movs        r0,#0
  0005a		 |$LN1@Init|
  0005a		 |$M23|

; 311  :     };

  0005a	e8bd 8878	 pop         {r3-r6,r11,pc}
  0005e		 |$M21|

			 ENDP  ; |?Init@SystemNotifyRegKey@@UAAHXZ|, SystemNotifyRegKey::Init

	IMPORT	|WaitForMultipleObjects|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?ThreadRun@SystemNotifyRegKey@@EAAKXZ| DCD imagerel |$LN25@ThreadRun|
	DCD	0xfdb260e1
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?ThreadRun@SystemNotifyRegKey@@EAAKXZ| PROC ; SystemNotifyRegKey::ThreadRun

; 355  :     virtual DWORD       ThreadRun() {

  00000		 |$LN25@ThreadRun|
  00000	e92d 487e	 push        {r1-r6,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M23|
  00008	4604		 mov         r4,r0

; 356  :         while ( !IsTerminated() && m_hNotifyEvent!=INVALID_HANDLE_VALUE && m_hTerminated!=NULL ) {

  0000a	6863		 ldr         r3,[r4,#4]
  0000c	bb6b		 cbnz        r3,|$LN21@ThreadRun|
  0000e	2600		 movs        r6,#0
  00010	2501		 movs        r5,#1
  00012		 |$LL3@ThreadRun|
  00012	6ae3		 ldr         r3,[r4,#0x2C]
  00014	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00018	d027		 beq         |$LN21@ThreadRun|
  0001a	6b22		 ldr         r2,[r4,#0x30]
  0001c	b32a		 cbz         r2,|$LN21@ThreadRun|

; 357  :             HANDLE h[2] = {m_hNotifyEvent,m_hTerminated};

  0001e	9300		 str         r3,[sp]
  00020	9201		 str         r2,[sp,#4]

; 358  :             if (WaitForMultipleObjects( 2, h, FALSE, INFINITE) == WAIT_OBJECT_0 && !IsTerminated()) { // Signaled

  00022	f06f 0300	 mvn         r3,#0
  00026	2200		 movs        r2,#0
  00028	4669		 mov         r1,sp
  0002a	2002		 movs        r0,#2
  0002c	f000 f800	 bl          WaitForMultipleObjects
  00030	b9c0		 cbnz        r0,|$LN12@ThreadRun|
  00032	6863		 ldr         r3,[r4,#4]
  00034	b9cb		 cbnz        r3,|$LN21@ThreadRun|

; 332  :         if (m_hNotifyEvent!=INVALID_HANDLE_VALUE) {

  00036	6ae3		 ldr         r3,[r4,#0x2C]
  00038	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  0003c	d012		 beq         |$LN12@ThreadRun|
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  0003e	f114 0018	 adds        r0,r4,#0x18
  00042	f000 f800	 bl          EnterCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 334  :             CeFindNextRegChange( m_hNotifyEvent);

  00046	6ae0		 ldr         r0,[r4,#0x2C]
  00048	f000 f800	 bl          CeFindNextRegChange

; 335  :             m_fUpdated = FALSE;
; 336  :             if (RefreshAll(TRUE))

  0004c	2101		 movs        r1,#1
  0004e	f1b4 001c	 subs        r0,r4,#0x1C
  00052	6366		 str         r6,[r4,#0x34]
  00054	f000 f800	 bl          |?RefreshAll@RegKey@@QAAHH@Z|
  00058	b100		 cbz         r0,|$LN11@ThreadRun|

; 337  :                  m_fUpdated = TRUE;

  0005a	6365		 str         r5,[r4,#0x34]
  0005c		 |$LN11@ThreadRun|
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  0005c	f114 0018	 adds        r0,r4,#0x18
  00060	f000 f800	 bl          LeaveCriticalSection
  00064		 |$LN12@ThreadRun|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 356  :         while ( !IsTerminated() && m_hNotifyEvent!=INVALID_HANDLE_VALUE && m_hTerminated!=NULL ) {

  00064	6863		 ldr         r3,[r4,#4]
  00066	2b00		 cmp         r3,#0
  00068	d0d3		 beq         |$LL3@ThreadRun|
  0006a		 |$LN21@ThreadRun|

; 359  :                 UpdateAllValue();
; 360  :             }
; 361  :         }
; 362  :         return 0;

  0006a	2000		 movs        r0,#0
  0006c		 |$M26|

; 363  :     }

  0006c	e8bd 887e	 pop         {r1-r6,r11,pc}
  00070		 |$M24|

			 ENDP  ; |?ThreadRun@SystemNotifyRegKey@@EAAKXZ|, SystemNotifyRegKey::ThreadRun

	EXPORT	|?UpdateRegistryChange@SystemNotifyRegKey@@QAAHXZ| ; SystemNotifyRegKey::UpdateRegistryChange

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$?UpdateRegistryChange@SystemNotifyRegKey@@QAAHXZ| DCD imagerel |$LN17@UpdateRegi|
	DCD	0xfd3060a9
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |?UpdateRegistryChange@SystemNotifyRegKey@@QAAHXZ| PROC ; SystemNotifyRegKey::UpdateRegistryChange

; 343  :     BOOL UpdateRegistryChange() {

  00000		 |$LN17@UpdateRegi|
  00000	e92d 4818	 push        {r3,r4,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M15|
  00008	4604		 mov         r4,r0

; 344  :         if (m_hNotifyEvent!=INVALID_HANDLE_VALUE && 
; 345  :                 WaitForSingleObject( m_hNotifyEvent, 0) == WAIT_OBJECT_0 ) { // Change has happen.

  0000a	6ca0		 ldr         r0,[r4,#0x48]
  0000c	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00010	d01d		 beq         |$LN2@UpdateRegi|
  00012	2100		 movs        r1,#0
  00014	f000 f800	 bl          WaitForSingleObject
  00018	b9c8		 cbnz        r0,|$LN2@UpdateRegi|

; 332  :         if (m_hNotifyEvent!=INVALID_HANDLE_VALUE) {

  0001a	6ca3		 ldr         r3,[r4,#0x48]
  0001c	f1b3 3fff	 cmp         r3,#0xFFFFFFFF
  00020	d015		 beq         |$LN2@UpdateRegi|
; File c:\wince800\public\common\oak\inc\csync.h

; 46   :         EnterCriticalSection( &m_CSection );

  00022	f114 0034	 adds        r0,r4,#0x34
  00026	f000 f800	 bl          EnterCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 334  :             CeFindNextRegChange( m_hNotifyEvent);

  0002a	6ca0		 ldr         r0,[r4,#0x48]
  0002c	f000 f800	 bl          CeFindNextRegChange

; 335  :             m_fUpdated = FALSE;

  00030	2300		 movs        r3,#0

; 336  :             if (RefreshAll(TRUE))

  00032	2101		 movs        r1,#1
  00034	4620		 mov         r0,r4
  00036	6523		 str         r3,[r4,#0x50]
  00038	f000 f800	 bl          |?RefreshAll@RegKey@@QAAHH@Z|
  0003c	b108		 cbz         r0,|$LN6@UpdateRegi|

; 337  :                  m_fUpdated = TRUE;

  0003e	2301		 movs        r3,#1
  00040	6523		 str         r3,[r4,#0x50]
  00042		 |$LN6@UpdateRegi|
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  00042	f114 0034	 adds        r0,r4,#0x34
  00046	f000 f800	 bl          LeaveCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 339  :             return TRUE;

  0004a	2001		 movs        r0,#1
  0004c	e000		 b           |$LN1@UpdateRegi|
  0004e		 |$LN2@UpdateRegi|

; 346  :             return UpdateAllValue();
; 347  :         }
; 348  :         else
; 349  :             return FALSE;

  0004e	2000		 movs        r0,#0
  00050		 |$LN1@UpdateRegi|
  00050		 |$M18|

; 350  :     }

  00050	e8bd 8818	 pop         {r3,r4,r11,pc}
  00054		 |$M16|

			 ENDP  ; |?UpdateRegistryChange@SystemNotifyRegKey@@QAAHXZ|, SystemNotifyRegKey::UpdateRegistryChange

	EXPORT	|??1SystemNotifyRegKey@@UAA@XZ|		; SystemNotifyRegKey::~SystemNotifyRegKey
	IMPORT	|CeFindCloseRegChange|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??1SystemNotifyRegKey@@UAA@XZ| DCD imagerel |$LN31@SystemNoti|
	DCD	0xfd32613d
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\cmthread.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\cmthread.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\public\common\oak\inc\cmthread.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\cmthread.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??1SystemNotifyRegKey@@UAA@XZ| PROC	; SystemNotifyRegKey::~SystemNotifyRegKey

; 312  :     virtual ~SystemNotifyRegKey() {

  00000		 |$LN31@SystemNoti|
  00000	e92d 4878	 push        {r3-r6,r11,lr}
  00004	f20d 0b10	 addw        r11,sp,#0x10
  00008		 |$M29|
  00008	4b27		 ldr         r3,|$LN36@SystemNoti| ; =|??_7SystemNotifyRegKey@@6BRegKey@@@|
  0000a	4604		 mov         r4,r0
; File c:\wince800\public\common\oak\inc\cmthread.h

; 50   :         if( m_bSuspendFlag )

  0000c	2500		 movs        r5,#0
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 312  :     virtual ~SystemNotifyRegKey() {

  0000e	6023		 str         r3,[r4]
  00010	4b24		 ldr         r3,|$LN35@SystemNoti| ; =|??_7SystemNotifyRegKey@@6BCMiniThread@@@|
  00012	61e3		 str         r3,[r4,#0x1C]

; 313  :         m_bTerminated = TRUE;

  00014	2301		 movs        r3,#1
  00016	6223		 str         r3,[r4,#0x20]
; File c:\wince800\public\common\oak\inc\cmthread.h

; 50   :         if( m_bSuspendFlag )

  00018	6ae3		 ldr         r3,[r4,#0x2C]
  0001a	b133		 cbz         r3,|$LN7@SystemNoti|

; 51   :         {
; 52   :             if( ResumeThread( m_hThreadHandle ) == ( DWORD ) ( -1 ) )

  0001c	6a60		 ldr         r0,[r4,#0x24]
  0001e	f000 f800	 bl          ResumeThread
  00022	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00026	d000		 beq         |$LN7@SystemNoti|

; 53   :             {
; 54   :                 // failure for resume somehow
; 55   :                 return FALSE;
; 56   :             };
; 57   :             m_bSuspendFlag = FALSE;

  00028	62e5		 str         r5,[r4,#0x2C]
  0002a		 |$LN7@SystemNoti|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 315  :         if (m_hTerminated)

  0002a	6ce0		 ldr         r0,[r4,#0x4C]
  0002c	b110		 cbz         r0,|$LN10@SystemNoti|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  0002e	2103		 movs        r1,#3
  00030	f000 f800	 bl          EventModify
  00034		 |$LN10@SystemNoti|
; File c:\wince800\public\common\oak\inc\cmthread.h

; 93   :         if( !m_hThreadHandle )

  00034	6a60		 ldr         r0,[r4,#0x24]
  00036	f06f 0600	 mvn         r6,#0
  0003a	b180		 cbz         r0,|$LN12@SystemNoti|

; 50   :         if( m_bSuspendFlag )

  0003c	6ae3		 ldr         r3,[r4,#0x2C]
  0003e	b12b		 cbz         r3,|$LN18@SystemNoti|

; 51   :         {
; 52   :             if( ResumeThread( m_hThreadHandle ) == ( DWORD ) ( -1 ) )

  00040	f000 f800	 bl          ResumeThread
  00044	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  00048	d009		 beq         |$LN12@SystemNoti|

; 53   :             {
; 54   :                 // failure for resume somehow
; 55   :                 return FALSE;
; 56   :             };
; 57   :             m_bSuspendFlag = FALSE;

  0004a	62e5		 str         r5,[r4,#0x2C]
  0004c		 |$LN18@SystemNoti|

; 94   :         {
; 95   :             return FALSE;
; 96   :         };
; 97   : 
; 98   :         if( ThreadStart() )
; 99   :         {
; 100  :             if( ::WaitForSingleObject( m_hThreadHandle, dwMilliSeconds ) ==
; 101  :                 WAIT_OBJECT_0 )

  0004c	6a60		 ldr         r0,[r4,#0x24]
  0004e	4631		 mov         r1,r6
  00050	f000 f800	 bl          WaitForSingleObject
  00054	b918		 cbnz        r0,|$LN12@SystemNoti|

; 102  :             {
; 103  :                 // thread dead
; 104  :                 ::CloseHandle( m_hThreadHandle );

  00056	6a60		 ldr         r0,[r4,#0x24]
  00058	f000 f800	 bl          CloseHandle

; 105  :                 m_hThreadHandle = NULL;

  0005c	6265		 str         r5,[r4,#0x24]
  0005e		 |$LN12@SystemNoti|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 318  :         if (m_hTerminated)

  0005e	6ce0		 ldr         r0,[r4,#0x4C]
  00060	b108		 cbz         r0,|$LN2@SystemNoti|

; 319  :             CloseHandle(m_hTerminated);

  00062	f000 f800	 bl          CloseHandle
  00066		 |$LN2@SystemNoti|

; 320  :         if (m_hNotifyEvent != INVALID_HANDLE_VALUE) {

  00066	6ca0		 ldr         r0,[r4,#0x48]
  00068	f1b0 3fff	 cmp         r0,#0xFFFFFFFF
  0006c	d002		 beq         |$LN1@SystemNoti|

; 321  :             CeFindCloseRegChange(m_hNotifyEvent) ;

  0006e	f000 f800	 bl          CeFindCloseRegChange

; 322  :             m_hNotifyEvent = INVALID_HANDLE_VALUE;

  00072	64a6		 str         r6,[r4,#0x48]
  00074		 |$LN1@SystemNoti|
; File c:\wince800\public\common\oak\inc\cmthread.h

; 44   :     {

  00074	4b0a		 ldr         r3,|$LN34@SystemNoti| ; =|??_7CMiniThread@@6B@|

; 106  :                 return TRUE;
; 107  :             }
; 108  :         }
; 109  :         return FALSE;
; 110  :     }
; 111  : 
; 112  :     BOOL    ForceTerminated()
; 113  :     {
; 114  :         if( m_hThreadHandle )

  00076	6a60		 ldr         r0,[r4,#0x24]

; 44   :     {

  00078	61e3		 str         r3,[r4,#0x1C]

; 106  :                 return TRUE;
; 107  :             }
; 108  :         }
; 109  :         return FALSE;
; 110  :     }
; 111  : 
; 112  :     BOOL    ForceTerminated()
; 113  :     {
; 114  :         if( m_hThreadHandle )

  0007a	b138		 cbz         r0,|$LN23@SystemNoti|

; 115  :         {
; 116  : #pragma prefast(suppress: 6258, "Using TerminateThread does not allow proper thread clean up")
; 117  :             BOOL bReturn = ::TerminateThread( m_hThreadHandle, ( DWORD ) - 1 ); // terminate abnormal

  0007c	4631		 mov         r1,r6
  0007e	f000 f800	 bl          TerminateThread

; 118  :             m_dwExitCode = (DWORD)-1;
; 119  :             ::CloseHandle( m_hThreadHandle );

  00082	6a60		 ldr         r0,[r4,#0x24]
  00084	6326		 str         r6,[r4,#0x30]
  00086	f000 f800	 bl          CloseHandle

; 120  :             m_hThreadHandle = NULL;

  0008a	6265		 str         r5,[r4,#0x24]
  0008c		 |$LN23@SystemNoti|
; File c:\wince800\public\common\oak\inc\csync.h

; 42   :         DeleteCriticalSection( &m_CSection );

  0008c	f114 0034	 adds        r0,r4,#0x34
  00090	f000 f800	 bl          DeleteCriticalSection
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 324  :     }

  00094	4620		 mov         r0,r4
  00096	f000 f800	 bl          |??1RegKey@@UAA@XZ|
  0009a		 |$M32|
  0009a	e8bd 8878	 pop         {r3-r6,r11,pc}
  0009e		 |$LN37@SystemNoti|
  0009e		 |$M38|
  0009e	defe		 __debugbreak
  000a0		 |$LN33@SystemNoti|
  000a0		 |$LN34@SystemNoti|
  000a0	0000 0000	 DCD         |??_7CMiniThread@@6B@|
  000a4		 |$LN35@SystemNoti|
  000a4	0000 0000	 DCD         |??_7SystemNotifyRegKey@@6BCMiniThread@@@|
  000a8		 |$LN36@SystemNoti|
  000a8	0000 0000	 DCD         |??_7SystemNotifyRegKey@@6BRegKey@@@|
  000ac		 |$M30|

			 ENDP  ; |??1SystemNotifyRegKey@@UAA@XZ|, SystemNotifyRegKey::~SystemNotifyRegKey

	EXPORT	|??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@LAGHHMEN@?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@ILLMOGLL@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@EKIAOPAC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@GHOECOCL@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@OAKMIONE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAD?$AAx?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@OMMOIGHI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAx?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?3?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@DAOJCFFI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@MMHELMJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?5?$AAm?$AAa?$AAx?$AA?5?$AAi?$AAs?$AA?5?$AAD?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|RegReadSystemPowerState|
	IMPORT	|OpenEventW|
	IMPORT	|?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A| ; g_pSysRegistryAccess
	IMPORT	|StringCbPrintfW|
	IMPORT	|SystemPowerStateCreate|

  00000			 AREA	 |.bss|, NOINIT
|?fBootPhase2Reopen@?1??RegReadSystemPowerState@@9@4HA| % 0x4 ; `RegReadSystemPowerState'::`2'::fBootPhase2Reopen

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$RegReadSystemPowerState| DCD imagerel |$LN112@RegReadSys|
	DCD	imagerel |$unwind2$RegReadSystemPowerState|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$RegReadSystemPowerState| DCD 0x3430015f
	DCD	0xe88ce8c7
	DCD	0xffdffc01
	DCD	0xffdf01e8
	DCD	imagerel |__GSHandlerCheck_SEH|
	DCD	0x1
	DCD	imagerel |$LN46@RegReadSys|
	DCD	imagerel |$LN47@RegReadSys|
	DCD	0x1
	DCD	imagerel |$LN43@RegReadSys|
	DCD	0xffffffd9

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@MMHELMJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?5?$AAm?$AAa?$AAx?$AA?5?$AAi?$AAs?$AA?5?$AAD?$AA?$CF@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "m", 0x0, "a"
	DCB	0x0, "x", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "D"
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "f", 0x0, "l"
	DCB	0x0, "a", 0x0, "g", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@DAOJCFFI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "f", 0x0, "l", 0x0, "a", 0x0, "g"
	DCB	0x0, "s", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m"
	DCB	0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@OMMOIGHI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAx?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?3?$AA?5?$AA?$CF@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "D"
	DCB	0x0, "x", 0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u"
	DCB	0x0, "e", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@OAKMIONE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAD?$AAx?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "a"
	DCB	0x0, "u", 0x0, "l", 0x0, "t", 0x0, " ", 0x0, "D", 0x0, "x"
	DCB	0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m", 0x0, " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, ",", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@GHOECOCL@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@| DCB "D", 0x0
	DCB	"e", 0x0, "f", 0x0, "a", 0x0, "u", 0x0, "l", 0x0, "t", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@EKIAOPAC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "O", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "K", 0x0, "e"
	DCB	0x0, "y", 0x0, "E", 0x0, "x", 0x0, "(", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@ILLMOGLL@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@LAGHHMEN@?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| DCB "S", 0x0, "t", 0x0
	DCB	"a", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "\\"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "\\"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "\\", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@| DCB "%", 0x0
	DCB	"s", 0x0, "\\", 0x0, "%", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "/"
	DCB	0x0, "B", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, "P", 0x0, "h"
	DCB	0x0, "a", 0x0, "s", 0x0, "e", 0x0, "2", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h
; File c:\wince800\public\common\oak\inc\csync.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |RegReadSystemPowerState| PROC

; 167  : {

  00000		 |$LN112@RegReadSys|
  00000	e92d 4ff0	 push        {r4-r11,lr}
  00004	f20d 0b1c	 addw        r11,sp,#0x1C
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d30	 subw        sp,sp,#0x230
  00010	466f		 mov         r7,sp
  00012	b082		 sub         sp,sp,#8
  00014		 |$LN110@RegReadSys|
  00014	613a		 str         r2,[r7,#0x10]
  00016	61b9		 str         r1,[r7,#0x18]
  00018	4604		 mov         r4,r0
  0001a	607c		 str         r4,[r7,#4]
  0001c	623c		 str         r4,[r7,#0x20]
  0001e	6279		 str         r1,[r7,#0x24]
  00020	61fa		 str         r2,[r7,#0x1C]

; 168  :     DWORD dwRetStatus = ERROR_SUCCESS;

  00022	2500		 movs        r5,#0

; 169  :     DWORD dwStatus, dwLen = MAX_PATH;
; 170  :     static BOOL fBootPhase2Reopen = FALSE;
; 171  :     RegKey *keyHandle;
; 172  :     TCHAR szPath[MAX_PATH];
; 173  :     SETFNAME(_T("RegReadSystemPowerState"));
; 174  : 
; 175  :     PMLOCK();

  00024	f000 f800	 bl          PmLock

; 176  :     if (!fBootPhase2Reopen) { // We need reopen the key if we migrate to Phase 2.

  00028	f8df 82d4	 ldr         r8,|$LN132@RegReadSys| ; =|?fBootPhase2Reopen@?1??RegReadSystemPowerState@@9@4HA|
  0002c	f8d8 3000	 ldr         r3,[r8]
  00030	bb03		 cbnz        r3,|$LN99@RegReadSys|

; 177  :         HANDLE hevBootPhase2 = OpenEvent(EVENT_ALL_ACCESS, FALSE, _T("SYSTEM/BootPhase2"));

  00032	4ab2		 ldr         r2,|$LN131@RegReadSys| ; =|??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@|
  00034	48b0		 ldr         r0,|$LN130@RegReadSys| ; =0x1f0003
  00036	2100		 movs        r1,#0
  00038	f000 f800	 bl          OpenEventW
  0003c	4604		 mov         r4,r0

; 178  :         if (hevBootPhase2) {

  0003e	b1ac		 cbz         r4,|$LN19@RegReadSys|

; 179  :             if( WaitForSingleObject(hevBootPhase2, 0) == WAIT_OBJECT_0) { // If Phase2 Signaled.

  00040	2100		 movs        r1,#0
  00042	f000 f800	 bl          WaitForSingleObject

; 180  :                 if (g_pSysRegistryAccess != NULL) {

  00046	4ea6		 ldr         r6,|$LN124@RegReadSys| ; =|?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A|

; 179  :             if( WaitForSingleObject(hevBootPhase2, 0) == WAIT_OBJECT_0) { // If Phase2 Signaled.

  00048	b958		 cbnz        r0,|$LN18@RegReadSys|

; 180  :                 if (g_pSysRegistryAccess != NULL) {

  0004a	6833		 ldr         r3,[r6]
  0004c	b133		 cbz         r3,|$LN17@RegReadSys|

; 181  :                     delete g_pSysRegistryAccess;

  0004e	2101		 movs        r1,#1
  00050	4618		 mov         r0,r3
  00052	681b		 ldr         r3,[r3]
  00054	685b		 ldr         r3,[r3,#4]
  00056	4798		 blx         r3

; 182  :                     g_pSysRegistryAccess = NULL;

  00058	2300		 movs        r3,#0
  0005a	6033		 str         r3,[r6]
  0005c		 |$LN17@RegReadSys|

; 183  :                 }
; 184  :                 fBootPhase2Reopen = TRUE;

  0005c	2301		 movs        r3,#1
  0005e	f8c8 3000	 str         r3,[r8]
  00062		 |$LN18@RegReadSys|

; 185  :             }
; 186  :             CloseHandle(hevBootPhase2);

  00062	4620		 mov         r0,r4
  00064	f000 f800	 bl          CloseHandle

; 187  :         }
; 188  :         else

  00068	687c		 ldr         r4,[r7,#4]
  0006a	e004		 b           |$LN16@RegReadSys|
  0006c		 |$LN19@RegReadSys|

; 189  :             fBootPhase2Reopen = TRUE; // If OpenEvent Failed, It meaning there is no Phase2 state. So We set it to by pass the checking.

  0006c	2301		 movs        r3,#1
  0006e	f8c8 3000	 str         r3,[r8]
  00072	687c		 ldr         r4,[r7,#4]
  00074		 |$LN99@RegReadSys|
  00074	4e9a		 ldr         r6,|$LN124@RegReadSys| ; =|?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A|
  00076		 |$LN16@RegReadSys|

; 190  :     }
; 191  :     if (g_pSysRegistryAccess==NULL) {

  00076	6833		 ldr         r3,[r6]
  00078	bb3b		 cbnz        r3,|$LN14@RegReadSys|

; 192  :         // format the key name
; 193  :         VERIFY(SUCCEEDED(StringCbPrintf(szPath, sizeof(szPath), _T("%s\\%s"), PWRMGR_REG_KEY, _T("State"))));

  0007a	4b9e		 ldr         r3,|$LN129@RegReadSys| ; =|??_C@_1M@LAGHHMEN@?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  0007c	9300		 str         r3,[sp]
  0007e	4b9c		 ldr         r3,|$LN128@RegReadSys| ; =|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  00080	4a9a		 ldr         r2,|$LN127@RegReadSys| ; =|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@|
  00082	f44f 7102	 mov         r1,#0x208
  00086	f117 0028	 adds        r0,r7,#0x28
  0008a	f000 f800	 bl          StringCbPrintfW

; 194  :         dwLen = (_countof(szPath) - 1) - _tcslen(szPath);
; 195  :         g_pSysRegistryAccess = new SystemNotifyRegKey (HKEY_LOCAL_MACHINE,szPath);

  0008e	2054		 movs        r0,#0x54
  00090	f000 f800	 bl          |??2@YAPAXI@Z|
  00094	b140		 cbz         r0,|$LN25@RegReadSys|
  00096	f117 0228	 adds        r2,r7,#0x28
  0009a	2301		 movs        r3,#1
  0009c	07db		 lsls        r3,r3,#0x1F
  0009e	1c99		 adds        r1,r3,#2
  000a0	f000 f800	 bl          |??0SystemNotifyRegKey@@QAA@PAUHKEY__@@PBG@Z|
  000a4	4603		 mov         r3,r0
  000a6	e000		 b           |$LN106@RegReadSys|
  000a8		 |$LN25@RegReadSys|
  000a8	2300		 movs        r3,#0
  000aa		 |$LN106@RegReadSys|
  000aa	6033		 str         r3,[r6]

; 196  :         if (g_pSysRegistryAccess && g_pSysRegistryAccess->Init()== FALSE) {

  000ac	b16b		 cbz         r3,|$LN14@RegReadSys|
  000ae	4618		 mov         r0,r3
  000b0	681b		 ldr         r3,[r3]
  000b2	681b		 ldr         r3,[r3]
  000b4	4798		 blx         r3
  000b6	b940		 cbnz        r0,|$LN14@RegReadSys|

; 197  :             delete g_pSysRegistryAccess;

  000b8	6833		 ldr         r3,[r6]
  000ba	b123		 cbz         r3,|$LN27@RegReadSys|
  000bc	2101		 movs        r1,#1
  000be	4618		 mov         r0,r3
  000c0	681b		 ldr         r3,[r3]
  000c2	685b		 ldr         r3,[r3,#4]
  000c4	4798		 blx         r3
  000c6		 |$LN27@RegReadSys|

; 198  :             g_pSysRegistryAccess = NULL;

  000c6	2300		 movs        r3,#0
  000c8	6033		 str         r3,[r6]
  000ca		 |$LN14@RegReadSys|

; 199  :         }
; 200  :     }
; 201  :     PMUNLOCK();

  000ca	f000 f800	 bl          PmUnlock

; 202  :     if (g_pSysRegistryAccess== NULL ) { // false to initialize the structure.

  000ce	6830		 ldr         r0,[r6]
  000d0	b908		 cbnz        r0,|$LN13@RegReadSys|

; 203  :         return ERROR_INVALID_PARAMETER;

  000d2	2557		 movs        r5,#0x57
  000d4	e0ec		 b           |$LN21@RegReadSys|
  000d6		 |$LN13@RegReadSys|

; 204  :     }
; 205  :     g_pSysRegistryAccess->EnterLock();

  000d6	f000 f800	 bl          |?EnterLock@SystemNotifyRegKey@@QAAXXZ|
  000da		 |$LN46@RegReadSys|

; 206  :     __try {
; 207  :         // copy the name and make sure it's null terminated
; 208  :         VERIFY(SUCCEEDED(StringCchCopy(szPath, _countof(szPath), pszName)));

  000da	f44f 7182	 mov         r1,#0x104
  000de	f117 0028	 adds        r0,r7,#0x28
  000e2	4622		 mov         r2,r4
  000e4	f000 f800	 bl          StringCchCopyW
  000e8		 |$LN47@RegReadSys|

; 209  :     }

  000e8	f8df a1fc	 ldr         r10,|$LN126@RegReadSys| ; =|dpCurSettings|
  000ec	e012		 b           |$LN48@RegReadSys|
  000ee		 |$LN43@RegReadSys|

; 210  :     __except(EXCEPTION_EXECUTE_HANDLER) {
; 211  :         PMLOGMSG(ZONE_WARN, (_T("%s: exception copying state name\r\n"), pszFname));

  000ee	f8df a1f8	 ldr         r10,|$LN126@RegReadSys| ; =|dpCurSettings|

; 209  :     }

  000f2	f8da 3440	 ldr         r3,[r10,#0x440]

; 210  :     __except(EXCEPTION_EXECUTE_HANDLER) {
; 211  :         PMLOGMSG(ZONE_WARN, (_T("%s: exception copying state name\r\n"), pszFname));

  000f6	f013 0f02	 tst         r3,#2
  000fa	d003		 beq         |$LN100@RegReadSys|
  000fc	4879		 ldr         r0,|$LN125@RegReadSys| ; =|??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  000fe	4970		 ldr         r1,|$LN116@RegReadSys| ; =|??_C@_1DA@ILLMOGLL@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00100	f000 f800	 bl          CeLogMsg
  00104		 |$LN100@RegReadSys|

; 212  :         dwRetStatus = ERROR_INVALID_PARAMETER;

  00104	2557		 movs        r5,#0x57
  00106	4e76		 ldr         r6,|$LN124@RegReadSys| ; =|?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A|
  00108	6a3b		 ldr         r3,[r7,#0x20]
  0010a	607b		 str         r3,[r7,#4]
  0010c	69fb		 ldr         r3,[r7,#0x1C]
  0010e	613b		 str         r3,[r7,#0x10]
  00110	6a7b		 ldr         r3,[r7,#0x24]
  00112	61bb		 str         r3,[r7,#0x18]
  00114		 |$LN48@RegReadSys|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 164  :         RegKey * pReturnKey =  m_pRegKeyList;

  00114	6833		 ldr         r3,[r6]
  00116	f8d3 8018	 ldr         r8,[r3,#0x18]
  0011a	e008		 b           |$LN107@RegReadSys|
  0011c		 |$LL52@RegReadSys|

; 45   :     LPTSTR  GetName() { return m_lpRegName; };

  0011c	f8d8 0004	 ldr         r0,[r8,#4]

; 166  :             if (_tcsicmp( pReturnKey->GetName(),lpKeyPath)==0)

  00120	f117 0128	 adds        r1,r7,#0x28
  00124	f000 f800	 bl          _wcsicmp
  00128	b130		 cbz         r0,|$LN53@RegReadSys|

; 167  :                 return pReturnKey;
; 168  :             else
; 169  :                 pReturnKey=(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();

  0012a	f8d8 800c	 ldr         r8,[r8,#0xC]
  0012e		 |$LN107@RegReadSys|

; 165  :         while (pReturnKey) {

  0012e	f1b8 0f00	 cmp         r8,#0
  00132	d1f3		 bne         |$LL52@RegReadSys|

; 170  :         }
; 171  :         return NULL;

  00134	f04f 0800	 mov         r8,#0
  00138		 |$LN53@RegReadSys|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

; 216  :     if(keyHandle == NULL ) {

  00138	f1b8 0f00	 cmp         r8,#0
  0013c	d10e		 bne         |$LN11@RegReadSys|

; 217  :         PMLOGMSG(ZONE_WARN | ZONE_REGISTRY, 
; 218  :             (_T("%s: RegOpenKeyEx('%s') failed\r\n"), pszFname, szPath));

  0013e	f240 2202	 mov         r2,#0x202

; 209  :     }

  00142	f8da 3440	 ldr         r3,[r10,#0x440]

; 217  :         PMLOGMSG(ZONE_WARN | ZONE_REGISTRY, 
; 218  :             (_T("%s: RegOpenKeyEx('%s') failed\r\n"), pszFname, szPath));

  00146	4213		 tst         r3,r2
  00148	d005		 beq         |$LN31@RegReadSys|
  0014a	f117 0228	 adds        r2,r7,#0x28
  0014e	4863		 ldr         r0,|$LN123@RegReadSys| ; =|??_C@_1EA@EKIAOPAC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00150	495b		 ldr         r1,|$LN116@RegReadSys| ; =|??_C@_1DA@ILLMOGLL@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00152	f000 f800	 bl          CeLogMsg
  00156		 |$LN31@RegReadSys|

; 219  :         dwRetStatus = ERROR_NO_MORE_ITEMS ;

  00156	f240 1503	 mov         r5,#0x103

; 220  :     } else {

  0015a	e0a4		 b           |$LN1@RegReadSys|
  0015c		 |$LN11@RegReadSys|

; 221  :         DWORD dwDefaultDx, dwFlags = 0, dwSize, dwType;

  0015c	2100		 movs        r1,#0
  0015e	6039		 str         r1,[r7]

; 222  : 
; 223  :         // read the default power state and the flags -- both values
; 224  :         // must be present
; 225  :         dwSize = sizeof(dwDefaultDx);

  00160	2304		 movs        r3,#4
  00162	60fb		 str         r3,[r7,#0xC]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 174  :         RegValue * pCurValue =  m_pRegValueList;

  00164	f8d8 4014	 ldr         r4,[r8,#0x14]

; 175  :         while (pCurValue) {

  00168	b1cc		 cbz         r4,|$LN61@RegReadSys|
  0016a		 |$LL62@RegReadSys|

; 45   :     LPTSTR  GetName() { return m_lpRegName; };

  0016a	6860		 ldr         r0,[r4,#4]

; 176  :             if (_tcsicmp( pCurValue->GetName(),lpValueName)==0) {

  0016c	495a		 ldr         r1,|$LN122@RegReadSys| ; =|??_C@_1BA@GHOECOCL@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@|
  0016e	f000 f800	 bl          _wcsicmp
  00172	b120		 cbz         r0,|$LN93@RegReadSys|

; 178  :             }
; 179  :             else
; 180  :                 pCurValue=(RegValue *)pCurValue->GetNextRegKeyOrValuePtr();

  00174	68e4		 ldr         r4,[r4,#0xC]

; 175  :         while (pCurValue) {

  00176	2c00		 cmp         r4,#0
  00178	d1f7		 bne         |$LL62@RegReadSys|

; 176  :             if (_tcsicmp( pCurValue->GetName(),lpValueName)==0) {

  0017a	6839		 ldr         r1,[r7]
  0017c	e00f		 b           |$LN61@RegReadSys|
  0017e		 |$LN93@RegReadSys|

; 177  :                 return (pCurValue->GetRegValue(pvData,pdwSize,pdwType)?ERROR_SUCCESS :ERROR_INVALID_PARAMETER);

  0017e	f117 0314	 adds        r3,r7,#0x14
  00182	f117 020c	 adds        r2,r7,#0xC
  00186	f117 0108	 adds        r1,r7,#8
  0018a	4620		 mov         r0,r4
  0018c	6824		 ldr         r4,[r4]
  0018e	68a4		 ldr         r4,[r4,#8]
  00190	47a0		 blx         r4
  00192	f240 1903	 mov         r9,#0x103
  00196	6839		 ldr         r1,[r7]
  00198	b998		 cbnz        r0,|$LN9@RegReadSys|
  0019a	2457		 movs        r4,#0x57
  0019c	e002		 b           |$LN63@RegReadSys|
  0019e		 |$LN61@RegReadSys|

; 181  :         }
; 182  :         return ERROR_NO_MORE_ITEMS;

  0019e	f240 1903	 mov         r9,#0x103
  001a2	464c		 mov         r4,r9
  001a4		 |$LN63@RegReadSys|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

; 227  :         if(dwStatus != ERROR_SUCCESS) {

  001a4	b16c		 cbz         r4,|$LN9@RegReadSys|

; 209  :     }

  001a6	f8da 3440	 ldr         r3,[r10,#0x440]

; 228  :             PMLOGMSG(ZONE_WARN, 
; 229  :                 (_T("%s: can't read default Dx from '%s', status is %d\r\n"),
; 230  :                 pszFname, szPath, dwStatus));

  001aa	f013 0f02	 tst         r3,#2
  001ae	d007		 beq         |$LN33@RegReadSys|
  001b0	f117 0228	 adds        r2,r7,#0x28
  001b4	4847		 ldr         r0,|$LN121@RegReadSys| ; =|??_C@_1GI@OAKMIONE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAD?$AAx?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8@|
  001b6	4623		 mov         r3,r4
  001b8	4941		 ldr         r1,|$LN116@RegReadSys| ; =|??_C@_1DA@ILLMOGLL@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  001ba	f000 f800	 bl          CeLogMsg
  001be	6839		 ldr         r1,[r7]
  001c0		 |$LN33@RegReadSys|

; 231  :             dwRetStatus = dwStatus;

  001c0	4625		 mov         r5,r4
  001c2		 |$LN9@RegReadSys|

; 232  :         }
; 233  :         if(dwDefaultDx < D0 || dwDefaultDx > D4) {

  001c2	f8d7 e008	 ldr         lr,[r7,#8]
  001c6	f1be 0f04	 cmp         lr,#4
  001ca	d90e		 bls         |$LN8@RegReadSys|

; 209  :     }

  001cc	f8da 2440	 ldr         r2,[r10,#0x440]

; 234  :             PMLOGMSG(ZONE_WARN,
; 235  :                 (_T("%s: invalid Dx value for '%s': %d\r\n"), pszFname,
; 236  :                 pszName, dwDefaultDx));

  001d0	f012 0f02	 tst         r2,#2
  001d4	d008		 beq         |$LN35@RegReadSys|
  001d6	483e		 ldr         r0,|$LN120@RegReadSys| ; =|??_C@_1EI@OMMOIGHI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAx?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?3?$AA?5?$AA?$CF@|
  001d8	4673		 mov         r3,lr
  001da	687a		 ldr         r2,[r7,#4]
  001dc	4938		 ldr         r1,|$LN116@RegReadSys| ; =|??_C@_1DA@ILLMOGLL@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  001de	f000 f800	 bl          CeLogMsg
  001e2	6839		 ldr         r1,[r7]
  001e4	f8d7 e008	 ldr         lr,[r7,#8]
  001e8		 |$LN35@RegReadSys|

; 237  :             dwRetStatus = ERROR_INVALID_DATA;

  001e8	250d		 movs        r5,#0xD
  001ea		 |$LN8@RegReadSys|

; 238  :         }
; 239  : 
; 240  :         if(dwRetStatus == ERROR_SUCCESS) {

  001ea	2d00		 cmp         r5,#0
  001ec	d141		 bne         |$LN105@RegReadSys|

; 241  :             dwSize = sizeof(dwFlags);

  001ee	2304		 movs        r3,#4
  001f0	60fb		 str         r3,[r7,#0xC]
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 174  :         RegValue * pCurValue =  m_pRegValueList;

  001f2	f8d8 4014	 ldr         r4,[r8,#0x14]

; 175  :         while (pCurValue) {

  001f6	b1d4		 cbz         r4,|$LN73@RegReadSys|
  001f8		 |$LL74@RegReadSys|

; 45   :     LPTSTR  GetName() { return m_lpRegName; };

  001f8	6860		 ldr         r0,[r4,#4]

; 176  :             if (_tcsicmp( pCurValue->GetName(),lpValueName)==0) {

  001fa	4934		 ldr         r1,|$LN119@RegReadSys| ; =|??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@|
  001fc	f000 f800	 bl          _wcsicmp
  00200	b130		 cbz         r0,|$LN94@RegReadSys|

; 178  :             }
; 179  :             else
; 180  :                 pCurValue=(RegValue *)pCurValue->GetNextRegKeyOrValuePtr();

  00202	68e4		 ldr         r4,[r4,#0xC]

; 175  :         while (pCurValue) {

  00204	2c00		 cmp         r4,#0
  00206	d1f7		 bne         |$LL74@RegReadSys|

; 176  :             if (_tcsicmp( pCurValue->GetName(),lpValueName)==0) {

  00208	6839		 ldr         r1,[r7]
  0020a	f8d7 e008	 ldr         lr,[r7,#8]
  0020e	e00e		 b           |$LN73@RegReadSys|
  00210		 |$LN94@RegReadSys|

; 177  :                 return (pCurValue->GetRegValue(pvData,pdwSize,pdwType)?ERROR_SUCCESS :ERROR_INVALID_PARAMETER);

  00210	f117 0314	 adds        r3,r7,#0x14
  00214	f117 020c	 adds        r2,r7,#0xC
  00218	4639		 mov         r1,r7
  0021a	4620		 mov         r0,r4
  0021c	6824		 ldr         r4,[r4]
  0021e	68a4		 ldr         r4,[r4,#8]
  00220	47a0		 blx         r4
  00222	6839		 ldr         r1,[r7]
  00224	f8d7 e008	 ldr         lr,[r7,#8]
  00228	b9a0		 cbnz        r0,|$LN5@RegReadSys|
  0022a	f04f 0957	 mov         r9,#0x57
  0022e		 |$LN73@RegReadSys|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

; 243  :             if(dwStatus != ERROR_SUCCESS) {

  0022e	f1b9 0f00	 cmp         r9,#0
  00232	d00f		 beq         |$LN5@RegReadSys|

; 209  :     }

  00234	f8da 3440	 ldr         r3,[r10,#0x440]

; 244  :                 PMLOGMSG(ZONE_WARN, 
; 245  :                     (_T("%s: can't read flags from '%s', status is %d\r\n"),
; 246  :                     pszFname, szPath, dwStatus));

  00238	f013 0f02	 tst         r3,#2
  0023c	d009		 beq         |$LN37@RegReadSys|
  0023e	f117 0228	 adds        r2,r7,#0x28
  00242	4821		 ldr         r0,|$LN118@RegReadSys| ; =|??_C@_1FO@DAOJCFFI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5@|
  00244	464b		 mov         r3,r9
  00246	491e		 ldr         r1,|$LN116@RegReadSys| ; =|??_C@_1DA@ILLMOGLL@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00248	f000 f800	 bl          CeLogMsg
  0024c	6839		 ldr         r1,[r7]
  0024e	f8d7 e008	 ldr         lr,[r7,#8]
  00252		 |$LN37@RegReadSys|

; 247  :                 dwRetStatus = dwStatus;

  00252	464d		 mov         r5,r9
  00254		 |$LN5@RegReadSys|

; 248  :             }
; 249  :         }
; 250  : 
; 251  :         PMLOGMSG(dwRetStatus == ERROR_SUCCESS && ZONE_REGISTRY,
; 252  :             (_T("%s: state '%s' devices max is D%d, flags 0x%08x\r\n"),
; 253  :             pszFname, pszName, dwDefaultDx, dwFlags));

  00254	b96d		 cbnz        r5,|$LN105@RegReadSys|

; 209  :     }

  00256	f8da 3440	 ldr         r3,[r10,#0x440]

; 248  :             }
; 249  :         }
; 250  : 
; 251  :         PMLOGMSG(dwRetStatus == ERROR_SUCCESS && ZONE_REGISTRY,
; 252  :             (_T("%s: state '%s' devices max is D%d, flags 0x%08x\r\n"),
; 253  :             pszFname, pszName, dwDefaultDx, dwFlags));

  0025a	f413 7f00	 tst         r3,#0x200
  0025e	687c		 ldr         r4,[r7,#4]
  00260	d008		 beq         |$LN39@RegReadSys|
  00262	9100		 str         r1,[sp]
  00264	4817		 ldr         r0,|$LN117@RegReadSys| ; =|??_C@_1GE@MMHELMJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?5?$AAm?$AAa?$AAx?$AA?5?$AAi?$AAs?$AA?5?$AAD?$AA?$CF@|
  00266	4673		 mov         r3,lr
  00268	4622		 mov         r2,r4
  0026a	4915		 ldr         r1,|$LN116@RegReadSys| ; =|??_C@_1DA@ILLMOGLL@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  0026c	f000 f800	 bl          CeLogMsg
  00270	e000		 b           |$LN39@RegReadSys|
  00272		 |$LN105@RegReadSys|
  00272	687c		 ldr         r4,[r7,#4]
  00274		 |$LN39@RegReadSys|

; 254  :         if(dwRetStatus == ERROR_SUCCESS && ppsps != NULL) {

  00274	b9bd		 cbnz        r5,|$LN1@RegReadSys|
  00276	f8d7 9018	 ldr         r9,[r7,#0x18]
  0027a	f1b9 0f00	 cmp         r9,#0
  0027e	d00b		 beq         |$LN2@RegReadSys|

; 255  :             // allocate and initialize a system power state
; 256  :             PSYSTEM_POWER_STATE psps = SystemPowerStateCreate(pszName);

  00280	4620		 mov         r0,r4
  00282	f000 f800	 bl          SystemPowerStateCreate

; 257  :             if(psps == NULL) {

  00286	b908		 cbnz        r0,|$LN3@RegReadSys|

; 258  :                 dwRetStatus = ERROR_OUTOFMEMORY;

  00288	250e		 movs        r5,#0xE

; 259  :             } else {

  0028a	e00c		 b           |$LN1@RegReadSys|
  0028c		 |$LN3@RegReadSys|

; 260  :                 // initialize the structure
; 261  :                 psps->defaultCeilingDx = (CEDEVICE_POWER_STATE) dwDefaultDx;

  0028c	68bb		 ldr         r3,[r7,#8]
  0028e	6043		 str         r3,[r0,#4]

; 262  :                 psps->dwFlags = dwFlags;

  00290	683b		 ldr         r3,[r7]
  00292	6083		 str         r3,[r0,#8]

; 263  :                 *ppsps = psps;

  00294	f8c9 0000	 str         r0,[r9]
  00298		 |$LN2@RegReadSys|

; 264  :             }
; 265  :         }
; 266  :     }
; 267  : 
; 268  :     // read device power modifiers for all associated devices
; 269  :     if(dwRetStatus == ERROR_SUCCESS && ppdpr != NULL) {

  00298	b92d		 cbnz        r5,|$LN1@RegReadSys|
  0029a	693c		 ldr         r4,[r7,#0x10]
  0029c	b11c		 cbz         r4,|$LN1@RegReadSys|

; 270  :         PDEVICE_POWER_RESTRICTION pdpr = RegReadDeviceRestrictions(keyHandle);

  0029e	4640		 mov         r0,r8
  002a0	f000 f800	 bl          |?RegReadDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@@Z|

; 271  :         *ppdpr = pdpr;

  002a4	6020		 str         r0,[r4]
  002a6		 |$LN1@RegReadSys|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysreg.h

; 164  :         RegKey * pReturnKey =  m_pRegKeyList;

  002a6	6833		 ldr         r3,[r6]
; File c:\wince800\public\common\oak\inc\csync.h

; 50   :         LeaveCriticalSection( &m_CSection );

  002a8	f113 0034	 adds        r0,r3,#0x34
  002ac	f000 f800	 bl          LeaveCriticalSection
  002b0		 |$LN21@RegReadSys|
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

; 277  : }

  002b0	4628		 mov         r0,r5
  002b2		 |$M114|
  002b2	f20d 2d38	 addw        sp,sp,#0x238
  002b6	f000 f800	 bl          __security_pop_cookie
  002ba	e8bd 8ff0	 pop         {r4-r11,pc}
  002be		 |$LN133@RegReadSys|
  002be		 |$M134|
  002be	defe		 __debugbreak
  002c0		 |$LN115@RegReadSys|
  002c0		 |$LN116@RegReadSys|
  002c0	0000 0000	 DCD         |??_C@_1DA@ILLMOGLL@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  002c4		 |$LN117@RegReadSys|
  002c4	0000 0000	 DCD         |??_C@_1GE@MMHELMJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?5?$AAm?$AAa?$AAx?$AA?5?$AAi?$AAs?$AA?5?$AAD?$AA?$CF@|
  002c8		 |$LN118@RegReadSys|
  002c8	0000 0000	 DCD         |??_C@_1FO@DAOJCFFI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5@|
  002cc		 |$LN119@RegReadSys|
  002cc	0000 0000	 DCD         |??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@|
  002d0		 |$LN120@RegReadSys|
  002d0	0000 0000	 DCD         |??_C@_1EI@OMMOIGHI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAx?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?3?$AA?5?$AA?$CF@|
  002d4		 |$LN121@RegReadSys|
  002d4	0000 0000	 DCD         |??_C@_1GI@OAKMIONE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAD?$AAx?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8@|
  002d8		 |$LN122@RegReadSys|
  002d8	0000 0000	 DCD         |??_C@_1BA@GHOECOCL@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@|
  002dc		 |$LN123@RegReadSys|
  002dc	0000 0000	 DCD         |??_C@_1EA@EKIAOPAC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  002e0		 |$LN124@RegReadSys|
  002e0	0000 0000	 DCD         |?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A|
  002e4		 |$LN125@RegReadSys|
  002e4	0000 0000	 DCD         |??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  002e8		 |$LN126@RegReadSys|
  002e8	0000 0000	 DCD         |dpCurSettings|
  002ec		 |$LN127@RegReadSys|
  002ec	0000 0000	 DCD         |??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@|
  002f0		 |$LN128@RegReadSys|
  002f0	0000 0000	 DCD         |??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  002f4		 |$LN129@RegReadSys|
  002f4	0000 0000	 DCD         |??_C@_1M@LAGHHMEN@?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  002f8		 |$LN130@RegReadSys|
  002f8	0003 001f	 DCD         0x1f0003
  002fc		 |$LN131@RegReadSys|
  002fc	0000 0000	 DCD         |??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@|
  00300		 |$LN132@RegReadSys|
  00300	0000 0000	 DCD         |?fBootPhase2Reopen@?1??RegReadSystemPowerState@@9@4HA|

			 ENDP  ; |RegReadSystemPowerState|

  00304		 |$LN111@RegReadSys|
	EXPORT	|PmUpdateSystemPowerStatesIfChanged|
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmsysstate.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PmUpdateSystemPowerStatesIfChanged| PROC

; 154  :     return (g_pSysRegistryAccess!=NULL?g_pSysRegistryAccess->UpdateRegistryChange():FALSE);

  00000	4b03		 ldr         r3,|$LN9@PmUpdateSy| ; =|?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A|
  00002	6818		 ldr         r0,[r3]
  00004	b108		 cbz         r0,|$LN3@PmUpdateSy|
  00006		 |$M6|
  00006	f000 9000	 b           |?UpdateRegistryChange@SystemNotifyRegKey@@QAAHXZ|
  0000a		 |$LN3@PmUpdateSy|
  0000a	2000		 movs        r0,#0
  0000c		 |$M7|

; 155  : }

  0000c	4770		 bx          lr
  0000e		 |$LN10@PmUpdateSy|
  0000e		 |$M11|
  0000e	defe		 __debugbreak
  00010		 |$LN8@PmUpdateSy|
  00010		 |$LN9@PmUpdateSy|
  00010	0000 0000	 DCD         |?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A|

			 ENDP  ; |PmUpdateSystemPowerStatesIfChanged|


  00000			 AREA	 |.pdata|, PDATA
|$pdata1$??_GSystemNotifyRegKey@@UAAPAXI@Z| DCD imagerel |$LN7@scalar|
	DCD	0x316045
; Function compile flags: /Ogsp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |??_GSystemNotifyRegKey@@UAAPAXI@Z| PROC ; SystemNotifyRegKey::`scalar deleting destructor'
  00000		 |$LN7@scalar|
  00000	e92d 4830	 push        {r4,r5,r11,lr}
  00004	f20d 0b08	 addw        r11,sp,#8
  00008		 |$M5|
  00008	460c		 mov         r4,r1
  0000a	4605		 mov         r5,r0
  0000c	f000 f800	 bl          |??1SystemNotifyRegKey@@UAA@XZ|
  00010	f014 0f01	 tst         r4,#1
  00014	d002		 beq         |$LN1@scalar|
  00016	4628		 mov         r0,r5
  00018	f000 f800	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN1@scalar|
  0001c	4628		 mov         r0,r5
  0001e		 |$M8|
  0001e	e8bd 8830	 pop         {r4,r5,r11,pc}
  00022		 |$M6|

			 ENDP  ; |??_GSystemNotifyRegKey@@UAAPAXI@Z|, SystemNotifyRegKey::`scalar deleting destructor'

	END
