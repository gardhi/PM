; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.114 

	TTL	C:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmresume.cpp
	THUMB

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |SetEvent| PROC

; 244  :     return EventModify(h,EVENT_SET);

  00000	2103		 movs        r1,#3
  00002		 |$M4|
  00002	f000 9000	 b           EventModify

			 ENDP  ; |SetEvent|

	EXPORT	|GetCurrentThread|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |GetCurrentThread| PROC

; 358  :     return ((HANDLE)(SH_CURTHREAD+SYS_HANDLE_BASE));

  00000	2041		 movs        r0,#0x41
  00002		 |$M4|

; 359  : }

  00002	4770		 bx          lr

			 ENDP  ; |GetCurrentThread|

	EXPORT	|GetCurrentThreadId|
	IMPORT	|__GetUserKData|
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |GetCurrentThreadId| PROC

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00000	2008		 movs        r0,#8
  00002		 |$M4|
  00002	f000 9000	 b           __GetUserKData

			 ENDP  ; |GetCurrentThreadId|

	IMPORT	|__security_push_cookie|
	IMPORT	|__security_pop_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|StringCchLengthW|
	IMPORT	|CeLogData|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$CeLogMsg| DCD imagerel |$LN8@CeLogMsg|
	DCD	imagerel |$unwind2$CeLogMsg|

  00000			 AREA	 |.xdata|, DATA
|$unwind2$CeLogMsg| DCD 0x44b00032
	DCD	0x1e889e8
	DCD	0x400a8fb
	DCD	0x8801e8ff
	DCD	0xff05ef00
	DCD	imagerel |__GSHandlerCheck|
	DCD	0xffffffe5
; Function compile flags: /Ogsp
; File c:\wince800\public\common\sdk\inc\celog.h

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |CeLogMsg| PROC

; 1208 : {

  00000		 |$LN8@CeLogMsg|
  00000	b40f		 push        {r0-r3}
  00002	e92d 4800	 push        {r11,lr}
  00006	46eb		 mov         r11,sp
  00008	f000 f800	 bl          __security_push_cookie
  0000c	f2ad 2d24	 subw        sp,sp,#0x224
  00010		 |$M6|
  00010	4602		 mov         r2,r0

; 1209 :     va_list arglist;
; 1210 :     WCHAR   szTemp[MAX_PATH];
; 1211 :     size_t  cchLen;
; 1212 :     HRESULT hr;
; 1213 : 
; 1214 :     // Compose a single string using the input args
; 1215 :     va_start(arglist, szFormat);
; 1216 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00012	a806		 add         r0,sp,#0x18
  00014	ab8d		 add         r3,sp,#0x234
  00016	f44f 7182	 mov         r1,#0x104
  0001a	928c		 str         r2,[sp,#0x230]
  0001c	f000 f800	 bl          StringCchVPrintfW

; 1217 :     if (SUCCEEDED(hr)) {

  00020	2800		 cmp         r0,#0
  00022	db17		 blt         |$LN1@CeLogMsg|

; 1218 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00024	aa04		 add         r2,sp,#0x10
  00026	a806		 add         r0,sp,#0x18
  00028	f44f 7182	 mov         r1,#0x104
  0002c	f000 f800	 bl          StringCchLengthW

; 1219 :         if (SUCCEEDED(hr)) {

  00030	2800		 cmp         r0,#0
  00032	db0f		 blt         |$LN1@CeLogMsg|

; 1220 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1221 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  00034	f04f 4380	 mov         r3,#0x40000000
  00038	9301		 str         r3,[sp,#4]
  0003a	9b04		 ldr         r3,[sp,#0x10]
  0003c	2200		 movs        r2,#0
  0003e	9203		 str         r2,[sp,#0xC]
  00040	3301		 adds        r3,#1
  00042	005b		 lsls        r3,r3,#1
  00044	9202		 str         r2,[sp,#8]
  00046	9200		 str         r2,[sp]
  00048	aa06		 add         r2,sp,#0x18
  0004a	214a		 movs        r1,#0x4A
  0004c	b29b		 uxth        r3,r3
  0004e	2001		 movs        r0,#1
  00050	f000 f800	 bl          CeLogData
  00054		 |$LN1@CeLogMsg|
  00054		 |$M9|

; 1222 :         }
; 1223 :     }
; 1224 : }

  00054	f20d 2d24	 addw        sp,sp,#0x224
  00058	f000 f800	 bl          __security_pop_cookie
  0005c	f85d bb04	 pop         {r11}
  00060	f85d fb14	 ldr         pc,[sp],#0x14
  00064		 |$M7|

			 ENDP  ; |CeLogMsg|

	EXPORT	|PmPowerHandler|
	IMPORT	|ghevResume|
	IMPORT	|CeSetPowerOnEvent|
	IMPORT	|ghevTimerResume|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$PmPowerHandler| DCD imagerel |$LN9@PmPowerHan|
	DCD	0x3f6041
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmresume.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |PmPowerHandler| PROC

; 83   : {

  00000		 |$LN9@PmPowerHan|
  00000	e92d 4800	 push        {r11,lr}
  00004	46eb		 mov         r11,sp
  00006		 |$M7|

; 84   :     if(!bOff) {

  00006	b948		 cbnz        r0,|$LN1@PmPowerHan|

; 85   :         // we are resuming, signal the resume thread
; 86   :         if(ghevResume != NULL) CeSetPowerOnEvent(ghevResume);

  00008	4b06		 ldr         r3,|$LN13@PmPowerHan| ; =|ghevResume|
  0000a	6818		 ldr         r0,[r3]
  0000c	b108		 cbz         r0,|$LN2@PmPowerHan|
  0000e	f000 f800	 bl          CeSetPowerOnEvent
  00012		 |$LN2@PmPowerHan|

; 87   : 
; 88   :         // signal the timer thread too
; 89   :         if(ghevTimerResume != NULL) CeSetPowerOnEvent(ghevTimerResume);

  00012	4b03		 ldr         r3,|$LN12@PmPowerHan| ; =|ghevTimerResume|
  00014	6818		 ldr         r0,[r3]
  00016	b108		 cbz         r0,|$LN1@PmPowerHan|
  00018	f000 f800	 bl          CeSetPowerOnEvent
  0001c		 |$LN1@PmPowerHan|
  0001c		 |$M10|

; 90   :     }
; 91   : }

  0001c	e8bd 8800	 pop         {r11,pc}
  00020		 |$LN11@PmPowerHan|
  00020		 |$LN12@PmPowerHan|
  00020	0000 0000	 DCD         |ghevTimerResume|
  00024		 |$LN13@PmPowerHan|
  00024	0000 0000	 DCD         |ghevResume|
  00028		 |$M8|

			 ENDP  ; |PmPowerHandler|

	EXPORT	|??_C@_1CK@KPKINJCK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@FNPJBGCC@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@JOMDCLAD@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@EJCLFLII@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@LPAHHGNK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@FJNGMGD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@HFODHNIK@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|ResumeThreadProc|
	IMPORT	|dpCurSettings|
	IMPORT	|GetPMThreadPriority|
	IMPORT	|CeSetThreadPriority|
	IMPORT	|ghevPmShutdown|
	IMPORT	|WaitForMultipleObjects|
	IMPORT	|PlatformResumeSystem|
	IMPORT	|GetLastError|

  00000			 AREA	 |.pdata|, PDATA
|$pdata1$ResumeThreadProc| DCD imagerel |$LN35@ResumeThre|
	DCD	0xfdf10181

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@HFODHNIK@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@FJNGMGD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "u"
	DCB	0x0, "t", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, " "
	DCB	0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@LPAHHGNK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "W", 0x0, "a", 0x0, "i"
	DCB	0x0, "t", 0x0, "F", 0x0, "o", 0x0, "r", 0x0, "M", 0x0, "u"
	DCB	0x0, "l", 0x0, "t", 0x0, "i", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "O", 0x0, "b", 0x0, "j", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@EJCLFLII@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "u", 0x0, "m", 0x0, "e", 0x0, " ", 0x0, "e", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "s", 0x0, "i"
	DCB	0x0, "g", 0x0, "n", 0x0, "a", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@JOMDCLAD@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, "P"
	DCB	0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "2", 0x0, "5", 0x0, "6", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@FNPJBGCC@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, "T"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@KPKINJCK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogsp
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmresume.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmresume.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmresume.cpp
; File c:\wince800\public\common\sdk\inc\kfuncs.h
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmresume.cpp

  00000			 AREA	 |.text|, CODE, THUMB

  00000		 |ResumeThreadProc| PROC

; 34   : {

  00000		 |$LN35@ResumeThre|
  00000	e92d 483f	 push        {r0-r5,r11,lr}
  00004	f20d 0b18	 addw        r11,sp,#0x18
  00008		 |$M33|

; 42   :     PMLOGMSG(ZONE_INIT, (_T("+%s: thread 0x%08x\r\n"), pszFname, GetCurrentThreadId()));

  00008	4c36		 ldr         r4,|$LN47@ResumeThre| ; =|dpCurSettings|
  0000a	4605		 mov         r5,r0
  0000c	f8d4 3440	 ldr         r3,[r4,#0x440]
  00010	f013 0f04	 tst         r3,#4
  00014	d007		 beq         |$LN11@ResumeThre|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00016	2008		 movs        r0,#8
  00018	f000 f800	 bl          __GetUserKData
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmresume.cpp

; 42   :     PMLOGMSG(ZONE_INIT, (_T("+%s: thread 0x%08x\r\n"), pszFname, GetCurrentThreadId()));

  0001c	4928		 ldr         r1,|$LN38@ResumeThre| ; =|??_C@_1CC@FNPJBGCC@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 372  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  0001e	4602		 mov         r2,r0
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmresume.cpp

; 42   :     PMLOGMSG(ZONE_INIT, (_T("+%s: thread 0x%08x\r\n"), pszFname, GetCurrentThreadId()));

  00020	482f		 ldr         r0,|$LN46@ResumeThre| ; =|??_C@_1CK@KPKINJCK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00022	f000 f800	 bl          CeLogMsg
  00026		 |$LN11@ResumeThre|

; 43   : 
; 44   :     // set the thread priority
; 45   :     if(!GetPMThreadPriority(_T("ResumePriority256"), &iPriority)) {

  00026	482d		 ldr         r0,|$LN45@ResumeThre| ; =|??_C@_1CE@JOMDCLAD@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
  00028	4669		 mov         r1,sp
  0002a	f000 f800	 bl          GetPMThreadPriority
  0002e	b910		 cbnz        r0,|$LN31@ResumeThre|

; 46   :         iPriority = DEF_RESUME_THREAD_PRIORITY;

  00030	2163		 movs        r1,#0x63
  00032	9100		 str         r1,[sp]
  00034	e000		 b           |$LN8@ResumeThre|
  00036		 |$LN31@ResumeThre|
  00036	9900		 ldr         r1,[sp]
  00038		 |$LN8@ResumeThre|

; 47   :     }
; 48   :     CeSetThreadPriority(GetCurrentThread(), iPriority);

  00038	2041		 movs        r0,#0x41
  0003a	f000 f800	 bl          CeSetThreadPriority
; File c:\wince800\public\common\sdk\inc\kfuncs.h

; 244  :     return EventModify(h,EVENT_SET);

  0003e	2103		 movs        r1,#3
  00040	4628		 mov         r0,r5
  00042	f000 f800	 bl          EventModify
; File c:\wince800\platform\rrm_ppc_windows\src\drivers\pm\mdd\pmresume.cpp

; 54   :     hEvents[0] = ghevResume;

  00046	4b24		 ldr         r3,|$LN44@ResumeThre| ; =|ghevResume|
  00048	681b		 ldr         r3,[r3]
  0004a	9302		 str         r3,[sp,#8]

; 55   :     hEvents[1] = ghevPmShutdown;

  0004c	4b21		 ldr         r3,|$LN43@ResumeThre| ; =|ghevPmShutdown|
  0004e	681b		 ldr         r3,[r3]
  00050	9303		 str         r3,[sp,#0xC]
  00052		 |$LL7@ResumeThre|

; 57   :         dwStatus = WaitForMultipleObjects(_countof(hEvents), hEvents, FALSE, INFINITE);

  00052	f06f 0300	 mvn         r3,#0
  00056	2200		 movs        r2,#0
  00058	a902		 add         r1,sp,#8
  0005a	2002		 movs        r0,#2
  0005c	f000 f800	 bl          WaitForMultipleObjects
  00060	4605		 mov         r5,r0

; 59   :         case (WAIT_OBJECT_0 + 0):
; 60   :             PMLOGMSG(ZONE_RESUME, (_T("%s: resume event signaled\r\n"), pszFname));

  00062	f8d4 3440	 ldr         r3,[r4,#0x440]
  00066	b94d		 cbnz        r5,|$LN30@ResumeThre|
  00068	f013 0f08	 tst         r3,#8
  0006c	d003		 beq         |$LN13@ResumeThre|
  0006e	4914		 ldr         r1,|$LN38@ResumeThre| ; =|??_C@_1CC@FNPJBGCC@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  00070	4817		 ldr         r0,|$LN42@ResumeThre| ; =|??_C@_1DI@EJCLFLII@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00072	f000 f800	 bl          CeLogMsg
  00076		 |$LN13@ResumeThre|

; 61   :             PlatformResumeSystem();

  00076	f000 f800	 bl          PlatformResumeSystem

; 56   :     while(!fDone) {

  0007a	e7ea		 b           |$LL7@ResumeThre|
  0007c		 |$LN30@ResumeThre|

; 58   :         switch(dwStatus) {

  0007c	2d01		 cmp         r5,#1
  0007e	d00b		 beq         |$LN2@ResumeThre|

; 65   :             fDone = TRUE;
; 66   :             break;
; 67   :         default:
; 68   :             PMLOGMSG(ZONE_WARN, (_T("%s: WaitForMultipleObjects() returned %d, status is %d\r\n"),
; 69   :                 pszFname, dwStatus, GetLastError())); 

  00080	f013 0f02	 tst         r3,#2
  00084	d00f		 beq         |$LN15@ResumeThre|
  00086	f000 f800	 bl          GetLastError
  0008a	490d		 ldr         r1,|$LN38@ResumeThre| ; =|??_C@_1CC@FNPJBGCC@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  0008c	4603		 mov         r3,r0
  0008e	480f		 ldr         r0,|$LN41@ResumeThre| ; =|??_C@_1HC@LPAHHGNK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@|
  00090	462a		 mov         r2,r5
  00092	f000 f800	 bl          CeLogMsg

; 70   :             fDone = TRUE;
; 71   :             break;

  00096	e006		 b           |$LN15@ResumeThre|
  00098		 |$LN2@ResumeThre|

; 62   :             break;
; 63   :         case (WAIT_OBJECT_0 + 1):
; 64   :             PMLOGMSG(ZONE_WARN, (_T("%s: shutdown event set\r\n"), pszFname));

  00098	f013 0f02	 tst         r3,#2
  0009c	d003		 beq         |$LN15@ResumeThre|
  0009e	480a		 ldr         r0,|$LN40@ResumeThre| ; =|??_C@_1DC@FJNGMGD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  000a0	4907		 ldr         r1,|$LN38@ResumeThre| ; =|??_C@_1CC@FNPJBGCC@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  000a2	f000 f800	 bl          CeLogMsg
  000a6		 |$LN15@ResumeThre|

; 65   :             fDone = TRUE;
; 66   :             break;
; 67   :         default:
; 68   :             PMLOGMSG(ZONE_WARN, (_T("%s: WaitForMultipleObjects() returned %d, status is %d\r\n"),
; 69   :                 pszFname, dwStatus, GetLastError())); 

  000a6	f8d4 3440	 ldr         r3,[r4,#0x440]

; 72   :         }
; 73   :     }
; 74   : 
; 75   :     PMLOGMSG(ZONE_INIT | ZONE_WARN, (_T("-%s: exiting\r\n"), pszFname));

  000aa	f013 0f06	 tst         r3,#6
  000ae	d003		 beq         |$LN19@ResumeThre|
  000b0	4804		 ldr         r0,|$LN39@ResumeThre| ; =|??_C@_1BO@HFODHNIK@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  000b2	4903		 ldr         r1,|$LN38@ResumeThre| ; =|??_C@_1CC@FNPJBGCC@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  000b4	f000 f800	 bl          CeLogMsg
  000b8		 |$LN19@ResumeThre|

; 76   :     return 0;

  000b8	2000		 movs        r0,#0
  000ba		 |$M36|

; 77   : }

  000ba	b004		 add         sp,sp,#0x10
  000bc	e8bd 8830	 pop         {r4,r5,r11,pc}
  000c0		 |$LN37@ResumeThre|
  000c0		 |$LN38@ResumeThre|
  000c0	0000 0000	 DCD         |??_C@_1CC@FNPJBGCC@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAo?$AAc?$AA?$AA@|
  000c4		 |$LN39@ResumeThre|
  000c4	0000 0000	 DCD         |??_C@_1BO@HFODHNIK@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  000c8		 |$LN40@ResumeThre|
  000c8	0000 0000	 DCD         |??_C@_1DC@FJNGMGD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  000cc		 |$LN41@ResumeThre|
  000cc	0000 0000	 DCD         |??_C@_1HC@LPAHHGNK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@|
  000d0		 |$LN42@ResumeThre|
  000d0	0000 0000	 DCD         |??_C@_1DI@EJCLFLII@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  000d4		 |$LN43@ResumeThre|
  000d4	0000 0000	 DCD         |ghevPmShutdown|
  000d8		 |$LN44@ResumeThre|
  000d8	0000 0000	 DCD         |ghevResume|
  000dc		 |$LN45@ResumeThre|
  000dc	0000 0000	 DCD         |??_C@_1CE@JOMDCLAD@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
  000e0		 |$LN46@ResumeThre|
  000e0	0000 0000	 DCD         |??_C@_1CK@KPKINJCK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000e4		 |$LN47@ResumeThre|
  000e4	0000 0000	 DCD         |dpCurSettings|
  000e8		 |$M34|

			 ENDP  ; |ResumeThreadProc|

	END
